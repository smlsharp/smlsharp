@sml_check_flag=external local_unnamed_addr global i32
@_SMLZN11DynamicKind7topKindE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes7int32TyE=external local_unnamed_addr global i8*
@_SMLZN12TypedCalcCon10TPPATERRORE=external local_unnamed_addr global i8*
@_SMLZN12TypedCalcCon7TPERRORE=external local_unnamed_addr global i8*
@_SMLZN12TypedCalcCon8TPPATVARE=external local_unnamed_addr global i8*
@_SMLZN12TypedCalcCon8emptyEnvE=external local_unnamed_addr global i8*
@_SMLZN14BoundTypeVarID3Map5emptyE=external local_unnamed_addr global i8*
@_SMLZN14BoundTypeVarID3Set5emptyE=external local_unnamed_addr global i8*
@_SMLZN3Bug3BugE=external local_unnamed_addr global i8*
@_SMLZN5Types8univKindE=external local_unnamed_addr global i8*
@_SMLZN7Control17verbosePolyTyElimE=external local_unnamed_addr global i8*
@_SMLZN8ListPair14UnequalLengthsE=external local_unnamed_addr global i8*
@_SMLZ5Match=external unnamed_addr constant i8*
@a=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map9domainSetE_689 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map9domainSetE_1694 to void(...)*),i32 -2147483647}>,align 8
@b=private unnamed_addr constant<{[4x i8],i32,[84x i8]}><{[4x i8]zeroinitializer,i32 -2147483564,[84x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:145.4(4122)\00"}>,align 8
@c=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination9UnionFind4findE_724 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9UnionFind4findE_1711 to void(...)*),i32 -2147483647}>,align 8
@d=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination5touchE_730 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination5touchE_1714 to void(...)*),i32 -2147483647}>,align 8
@e=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"findNode\00"}>,align 8
@f=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@e,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@g=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination7equalIdE_742 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7equalIdE_1719 to void(...)*),i32 -2147483647}>,align 8
@h=private unnamed_addr constant<{[4x i8],i32,[31x i8]}><{[4x i8]zeroinitializer,i32 -2147483617,[31x i8]c"analyzeExp: TPTAPP: not POLYty\00"}>,align 8
@i=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[31x i8]}>,<{[4x i8],i32,[31x i8]}>*@h,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@j=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"tyvars\00"}>,align 8
@k=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@j,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@l=private unnamed_addr constant<{[4x i8],i32,[12x i8]}><{[4x i8]zeroinitializer,i32 -2147483636,[12x i8]c"instantiate\00"}>,align 8
@m=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[12x i8]}>,<{[4x i8],i32,[12x i8]}>*@l,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@n=private unnamed_addr constant<{[4x i8],i32,[27x i8]}><{[4x i8]zeroinitializer,i32 -2147483621,[27x i8]c"PolyTyElimination.NotEqual\00"}>,align 8
@o=private unnamed_addr constant<{[4x i8],i32,i8*,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[27x i8]}>,<{[4x i8],i32,[27x i8]}>*@n,i32 0,i32 0,i32 0),i32 8),i32 0,[4x i8]zeroinitializer,i32 1}>,align 8
@_SMLDL770=private constant<{[4x i8],i32,i8*}><{[4x i8]zeroinitializer,i32 -1879048184,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i32,[4x i8],i32}>,<{[4x i8],i32,i8*,i32,[4x i8],i32}>*@o,i32 0,i32 0,i32 0),i32 8)}>,align 8
@p=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:239.70(7120)\00"}>,align 8
@q=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@p,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@r=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17PolyTyElimination10equalUnionE_773 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10equalUnionE_1727 to void(...)*),i32 -2147483647}>,align 8
@s=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination10equalUnionE_775 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10equalUnionE_1728 to void(...)*),i32 -2147483647}>,align 8
@t=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:247.48(7373)\00"}>,align 8
@u=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@t,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@v=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:251.48(7553)\00"}>,align 8
@w=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@v,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@x=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:250.48(7496)\00"}>,align 8
@y=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@x,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@z=private unnamed_addr constant<{[4x i8],i32,[84x i8]}><{[4x i8]zeroinitializer,i32 -2147483564,[84x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:254.4(7636)\00"}>,align 8
@A=private unnamed_addr constant<{[4x i8],i32,[84x i8]}><{[4x i8]zeroinitializer,i32 -2147483564,[84x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:260.8(7907)\00"}>,align 8
@B=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:332.40(11382)\00"}>,align 8
@C=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@B,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@D=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:333.36(11427)\00"}>,align 8
@E=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@D,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@F=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:334.36(11472)\00"}>,align 8
@G=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@F,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@H=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:335.39(11520)\00"}>,align 8
@I=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@H,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@J=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:336.35(11564)\00"}>,align 8
@K=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@J,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@L=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:337.37(11610)\00"}>,align 8
@M=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@L,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@N=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:338.40(11659)\00"}>,align 8
@O=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@N,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@P=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:339.35(11703)\00"}>,align 8
@Q=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@P,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@R=private unnamed_addr constant<{[4x i8],i32,[31x i8]}><{[4x i8]zeroinitializer,i32 -2147483617,[31x i8]c"equalTy: BACKENDty never occur\00"}>,align 8
@S=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[31x i8]}>,<{[4x i8],i32,[31x i8]}>*@R,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@T=private unnamed_addr constant<{[4x i8],i32,[29x i8]}><{[4x i8]zeroinitializer,i32 -2147483619,[29x i8]c"equalTy: ERRORty never occur\00"}>,align 8
@U=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[29x i8]}>,<{[4x i8],i32,[29x i8]}>*@T,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@V=private unnamed_addr constant<{[4x i8],i32,[26x i8]}><{[4x i8]zeroinitializer,i32 -2147483622,[26x i8]c"equalTy: TVAR never occur\00"}>,align 8
@W=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[26x i8]}>,<{[4x i8],i32,[26x i8]}>*@V,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@X=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:282.21(9074)\00"}>,align 8
@Y=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@X,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@Z=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:286.21(9231)\00"}>,align 8
@aa=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@Z,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ab=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination7equalTyE_954 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7equalTyE_1733 to void(...)*),i32 -2147483647}>,align 8
@ac=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:297.30(9761)\00"}>,align 8
@ad=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@ac,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ae=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:303.21(10007)\00"}>,align 8
@af=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@ae,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ag=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination7equalTyE_962 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7equalTyE_1734 to void(...)*),i32 -2147483647}>,align 8
@ah=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL6subst1_965 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6subst1_1735 to void(...)*),i32 -2147483647}>,align 8
@ai=private unnamed_addr constant<{[4x i8],i32,[84x i8]}><{[4x i8]zeroinitializer,i32 -2147483564,[84x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:266.8(8175)\00"}>,align 8
@aj=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:354.39(12424)\00"}>,align 8
@ak=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aj,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@al=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:355.36(12469)\00"}>,align 8
@am=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@al,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@an=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:356.34(12512)\00"}>,align 8
@ao=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@an,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ap=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:357.35(12556)\00"}>,align 8
@aq=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@ap,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ar=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:358.36(12601)\00"}>,align 8
@as=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@ar,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@at=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:348.8(12020)\00"}>,align 8
@au=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:365.19(12866)\00"}>,align 8
@av=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@au,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aw=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:384.21(13754)\00"}>,align 8
@ax=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aw,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ay=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination18equalOverloadMatchE_986 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18equalOverloadMatchE_1738 to void(...)*),i32 -2147483647}>,align 8
@az=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:385.43(13806)\00"}>,align 8
@aA=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@az,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aB=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:390.21(14053)\00"}>,align 8
@aC=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aB,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination18equalOverloadMatchE_993 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18equalOverloadMatchE_1739 to void(...)*),i32 -2147483647}>,align 8
@aE=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:391.42(14104)\00"}>,align 8
@aF=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aE,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aG=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:375.43(13288)\00"}>,align 8
@aH=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aG,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aI=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:376.43(13340)\00"}>,align 8
@aJ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aI,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination18equalOverloadMatchE_1002 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18equalOverloadMatchE_1740 to void(...)*),i32 -2147483647}>,align 8
@aL=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:379.42(13480)\00"}>,align 8
@aM=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aL,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aN=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:368.8(12932)\00"}>,align 8
@aO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination15equalConstraintE_1008 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15equalConstraintE_1741 to void(...)*),i32 -2147483647}>,align 8
@aP=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:404.19(14602)\00"}>,align 8
@aQ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aP,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination13equalTvarKindE_1013 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13equalTvarKindE_1742 to void(...)*),i32 -2147483647}>,align 8
@aS=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:419.39(15292)\00"}>,align 8
@aT=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aS,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination13equalTvarKindE_1018 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13equalTvarKindE_1743 to void(...)*),i32 -2147483647}>,align 8
@aV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination13equalTvarKindE_1021 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13equalTvarKindE_1744 to void(...)*),i32 -2147483647}>,align 8
@aW=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:420.38(15339)\00"}>,align 8
@aX=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aW,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aY=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:421.31(15379)\00"}>,align 8
@aZ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aY,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination13equalTvarKindE_1028 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13equalTvarKindE_1745 to void(...)*),i32 -2147483647}>,align 8
@a1=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:422.32(15420)\00"}>,align 8
@a2=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@a1,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a3=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:407.8(14669)\00"}>,align 8
@a4=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:436.50(15999)\00"}>,align 8
@a5=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@a4,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a6=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"equal\00"}>,align 8
@a7=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@a6,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a8=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"equalList\00"}>,align 8
@a9=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@a8,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ba=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17PolyTyElimination7equalTyE_1052 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7equalTyE_1759 to void(...)*),i32 -2147483647}>,align 8
@bb=private unnamed_addr constant<{[4x i8],i32,[12x i8]}><{[4x i8]zeroinitializer,i32 -2147483636,[12x i8]c"getIdsUnion\00"}>,align 8
@bc=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[12x i8]}>,<{[4x i8],i32,[12x i8]}>*@bb,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination11getIdsUnionE_1059 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination11getIdsUnionE_1761 to void(...)*),i32 -2147483647}>,align 8
@be=private unnamed_addr constant<{[4x i8],i32,[30x i8]}><{[4x i8]zeroinitializer,i32 -2147483618,[30x i8]c"getIdsTy: ERRORty never occur\00"}>,align 8
@bf=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[30x i8]}>,<{[4x i8],i32,[30x i8]}>*@be,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bg=private unnamed_addr constant<{[4x i8],i32,[27x i8]}><{[4x i8]zeroinitializer,i32 -2147483621,[27x i8]c"getIdsTy: TVAR never occur\00"}>,align 8
@bh=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[27x i8]}>,<{[4x i8],i32,[27x i8]}>*@bg,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bi=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:473.8(16994)\00"}>,align 8
@bj=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:496.8(17981)\00"}>,align 8
@bk=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:555.42(20431)\00"}>,align 8
@bl=private unnamed_addr constant<{[4x i8],i32,[13x i8]}><{[4x i8]zeroinitializer,i32 -2147483635,[13x i8]c"getIdsBtvEnv\00"}>,align 8
@bm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination12getIdsBtvEnvE_1097 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12getIdsBtvEnvE_1763 to void(...)*),i32 -2147483647}>,align 8
@bn=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:563.8(20638)\00"}>,align 8
@bo=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:536.8(19679)\00"}>,align 8
@bp=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:525.8(19324)\00"}>,align 8
@bq=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:580.6(21160)\00"}>,align 8
@br=private unnamed_addr constant<{[4x i8],i32,[23x i8]}><{[4x i8]zeroinitializer,i32 -2147483625,[23x i8]c"analyzeExnCon: TPEXEXN\00"}>,align 8
@bs=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[23x i8]}>,<{[4x i8],i32,[23x i8]}>*@br,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bt=private unnamed_addr constant<{[4x i8],i32,[21x i8]}><{[4x i8]zeroinitializer,i32 -2147483627,[21x i8]c"analyzeExnCon: TPEXN\00"}>,align 8
@bu=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[21x i8]}>,<{[4x i8],i32,[21x i8]}>*@bt,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bv=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:634.6(22620)\00"}>,align 8
@bw=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:661.6(23473)\00"}>,align 8
@bx=private unnamed_addr constant<{[4x i8],i32,[32x i8]}><{[4x i8]zeroinitializer,i32 -2147483616,[32x i8]c"analyzePat: TPPATRECORD (tvar?)\00"}>,align 8
@by=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[32x i8]}>,<{[4x i8],i32,[32x i8]}>*@bx,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bz=private unnamed_addr constant<{[4x i8],i32,[30x i8]}><{[4x i8]zeroinitializer,i32 -2147483618,[30x i8]c"analyzePat: TPPATRECORD (btv)\00"}>,align 8
@bA=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[30x i8]}>,<{[4x i8],i32,[30x i8]}>*@bz,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination10analyzePatE_1163 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzePatE_1767 to void(...)*),i32 -2147483647}>,align 8
@bC=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:693.6(24481)\00"}>,align 8
@bD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1175 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1768 to void(...)*),i32 -2147483647}>,align 8
@bE=private unnamed_addr constant<{[4x i8],i32,[30x i8]}><{[4x i8]zeroinitializer,i32 -2147483618,[30x i8]c"analyzeExp: TPAPPM: not funty\00"}>,align 8
@bF=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[30x i8]}>,<{[4x i8],i32,[30x i8]}>*@bE,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1182 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1769 to void(...)*),i32 -2147483647}>,align 8
@bH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1189 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1772 to void(...)*),i32 -2147483647}>,align 8
@bI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1193 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1773 to void(...)*),i32 -2147483647}>,align 8
@bJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1195 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1774 to void(...)*),i32 -2147483647}>,align 8
@bK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1199 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1775 to void(...)*),i32 -2147483647}>,align 8
@bL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1201 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1776 to void(...)*),i32 -2147483647}>,align 8
@bM=private unnamed_addr constant<{[4x i8],i32,[21x i8]}><{[4x i8]zeroinitializer,i32 -2147483627,[21x i8]c"analyzeExp: TPEXNTAG\00"}>,align 8
@bN=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[21x i8]}>,<{[4x i8],i32,[21x i8]}>*@bM,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bO=private unnamed_addr constant<{[4x i8],i32,[23x i8]}><{[4x i8]zeroinitializer,i32 -2147483625,[23x i8]c"analyzeExp: TPEXEXNTAG\00"}>,align 8
@bP=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[23x i8]}>,<{[4x i8],i32,[23x i8]}>*@bO,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bQ=private unnamed_addr constant<{[4x i8],i32,[20x i8]}><{[4x i8]zeroinitializer,i32 -2147483628,[20x i8]c"analyzeExp: TPEXVAR\00"}>,align 8
@bR=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@bQ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bS=private unnamed_addr constant<{[4x i8],i32,[24x i8]}><{[4x i8]zeroinitializer,i32 -2147483624,[24x i8]c"analyzeExp: TPRECFUNVAR\00"}>,align 8
@bT=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[24x i8]}>,<{[4x i8],i32,[24x i8]}>*@bS,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bU=private unnamed_addr constant<{[4x i8],i32,[18x i8]}><{[4x i8]zeroinitializer,i32 -2147483630,[18x i8]c"analyzeExp: TPVAR\00"}>,align 8
@bV=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@bU,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bW=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:759.6(27009)\00"}>,align 8
@bX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL8matchTys_1237 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL8matchTys_1777 to void(...)*),i32 -2147483647}>,align 8
@bY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL8matchTys_1239 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL8matchTys_1778 to void(...)*),i32 -2147483647}>,align 8
@bZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination16analyzeMatchListE_1241 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16analyzeMatchListE_1779 to void(...)*),i32 -2147483647}>,align 8
@b0=private unnamed_addr constant<{[4x i8],i32,[17x i8]}><{[4x i8]zeroinitializer,i32 -2147483631,[17x i8]c"analyzeMatchList\00"}>,align 8
@b1=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[17x i8]}>,<{[4x i8],i32,[17x i8]}>*@b0,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b2=private unnamed_addr constant<{[4x i8],i32,[23x i8]}><{[4x i8]zeroinitializer,i32 -2147483625,[23x i8]c"analyzeDecl: TPEXNTAGD\00"}>,align 8
@b3=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[23x i8]}>,<{[4x i8],i32,[23x i8]}>*@b2,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b4=private unnamed_addr constant<{[4x i8],i32,[25x i8]}><{[4x i8]zeroinitializer,i32 -2147483623,[25x i8]c"analyzeDecl: TPEXPORTEXN\00"}>,align 8
@b5=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[25x i8]}>,<{[4x i8],i32,[25x i8]}>*@b4,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b6=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1181.6(42573)\00"}>,align 8
@b7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL3env_1258 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3env_1780 to void(...)*),i32 -2147483647}>,align 8
@b8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL3env_1262 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3env_1781 to void(...)*),i32 -2147483647}>,align 8
@b9=private unnamed_addr constant<{[4x i8],i32,[24x i8]}><{[4x i8]zeroinitializer,i32 -2147483624,[24x i8]c"PolyTyElimination.Cycle\00"}>,align 8
@ca=private unnamed_addr constant<{[4x i8],i32,i8*,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[24x i8]}>,<{[4x i8],i32,[24x i8]}>*@b9,i32 0,i32 0,i32 0),i32 8),i32 0,[4x i8]zeroinitializer,i32 1}>,align 8
@_SMLDL1267=private constant<{[4x i8],i32,i8*}><{[4x i8]zeroinitializer,i32 -1879048184,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i32,[4x i8],i32}>,<{[4x i8],i32,i8*,i32,[4x i8],i32}>*@ca,i32 0,i32 0,i32 0),i32 8)}>,align 8
@cb=private unnamed_addr constant<{[4x i8],i32,[27x i8]}><{[4x i8]zeroinitializer,i32 -2147483621,[27x i8]c"PolyTyElimination.NotFound\00"}>,align 8
@cc=private unnamed_addr constant<{[4x i8],i32,i8*,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[27x i8]}>,<{[4x i8],i32,[27x i8]}>*@cb,i32 0,i32 0,i32 0),i32 8),i32 0,[4x i8]zeroinitializer,i32 1}>,align 8
@_SMLDL1270=private constant<{[4x i8],i32,i8*}><{[4x i8]zeroinitializer,i32 -1879048184,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i32,[4x i8],i32}>,<{[4x i8],i32,i8*,i32,[4x i8],i32}>*@cc,i32 0,i32 0,i32 0),i32 8)}>,align 8
@cd=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1314.44(46898)\00"}>,align 8
@ce=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL1267,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@cd,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cf=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL3get_1276 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3get_1782 to void(...)*),i32 -2147483647}>,align 8
@cg=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cf,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@ch=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1311.8(46736)\00"}>,align 8
@ci=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1320.28(47188)\00"}>,align 8
@cj=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL1270,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@ci,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ck=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*null,i8*null,i32 3}>,align 8
@cl=private unnamed_addr constant<{[4x i8],i32,[25x i8]}><{[4x i8]zeroinitializer,i32 -2147483623,[25x i8]c"inst not found in btvEnv\00"}>,align 8
@cm=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[25x i8]}>,<{[4x i8],i32,[25x i8]}>*@cl,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cn=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1399.2(49859)\00"}>,align 8
@co=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL8btvKinds_1308 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL8btvKinds_1791 to void(...)*),i32 -2147483647}>,align 8
@cp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL5subst_1310 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5subst_1792 to void(...)*),i32 -2147483647}>,align 8
@cq=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1416.2(50386)\00"}>,align 8
@cr=private unnamed_addr constant[2x i8]c"0\00"
@cs=private unnamed_addr constant<{[4x i8],i32,[31x i8]}><{[4x i8]zeroinitializer,i32 -2147483617,[31x i8]c"compileTy: ERRORty never occur\00"}>,align 8
@ct=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[31x i8]}>,<{[4x i8],i32,[31x i8]}>*@cs,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cu=private unnamed_addr constant<{[4x i8],i32,[28x i8]}><{[4x i8]zeroinitializer,i32 -2147483620,[28x i8]c"compileTy: TVAR never occur\00"}>,align 8
@cv=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[28x i8]}>,<{[4x i8],i32,[28x i8]}>*@cu,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cw=private unnamed_addr constant<{[4x i8],i32,[22x i8]}><{[4x i8]zeroinitializer,i32 -2147483626,[22x i8]c"compileTy: BOUNDVARty\00"}>,align 8
@cx=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[22x i8]}>,<{[4x i8],i32,[22x i8]}>*@cw,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cy=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1479.6(52335)\00"}>,align 8
@cz=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"compileBtvEnv\00"}>,align 8
@cA=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@cz,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL5subst_1418 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5subst_1795 to void(...)*),i32 -2147483647}>,align 8
@cC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL6envTmp_1420 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6envTmp_1796 to void(...)*),i32 -2147483647}>,align 8
@cD=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1536.15(54554)\00"}>,align 8
@cE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL3env_1424 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3env_1797 to void(...)*),i32 -2147483647}>,align 8
@cF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17PolyTyElimination13compileBtvEnvE_1426 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13compileBtvEnvE_1798 to void(...)*),i32 -2147483647}>,align 8
@cG=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1653.6(59015)\00"}>,align 8
@cH=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1631.6(58235)\00"}>,align 8
@cI=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 9,[4x i8]zeroinitializer,i32 0}>,align 8
@cJ=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 10,[4x i8]zeroinitializer,i32 0}>,align 8
@cK=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 8,[4x i8]zeroinitializer,i32 0}>,align 8
@cL=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 7,[4x i8]zeroinitializer,i32 0}>,align 8
@cM=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1564.6(55625)\00"}>,align 8
@cN=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1616.6(57669)\00"}>,align 8
@cO=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1670.28(59765)\00"}>,align 8
@cP=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"dynamicKindOf\00"}>,align 8
@cQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL13dynamicKindOf_1452 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL13dynamicKindOf_1809 to void(...)*),i32 -2147483647}>,align 8
@cR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination9benchmarkE_1454 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9benchmarkE_1810 to void(...)*),i32 -2147483647}>,align 8
@cS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination9benchmarkE_1456 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9benchmarkE_1811 to void(...)*),i32 -2147483647}>,align 8
@cT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(void(i8*)*@_SMLLN17PolyTyElimination9benchmarkE_1458 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9benchmarkE_1812 to void(...)*),i32 -2147483647}>,align 8
@cU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination5multiE_1462 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination5multiE_1814 to void(...)*),i32 -2147483647}>,align 8
@cV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination5multiE_1464 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination5multiE_1815 to void(...)*),i32 -2147483647}>,align 8
@cW=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1710.6(61307)\00"}>,align 8
@cX=private unnamed_addr constant<{[4x i8],i32,[23x i8]}><{[4x i8]zeroinitializer,i32 -2147483625,[23x i8]c"compileExnCon: TPEXEXN\00"}>,align 8
@cY=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[23x i8]}>,<{[4x i8],i32,[23x i8]}>*@cX,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cZ=private unnamed_addr constant<{[4x i8],i32,[21x i8]}><{[4x i8]zeroinitializer,i32 -2147483627,[21x i8]c"compileExnCon: TPEXN\00"}>,align 8
@c0=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[21x i8]}>,<{[4x i8],i32,[21x i8]}>*@cZ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c1=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1732.6(62086)\00"}>,align 8
@c2=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1743.6(62557)\00"}>,align 8
@c3=private unnamed_addr constant<{[4x i8],i32,[13x i8]}><{[4x i8]zeroinitializer,i32 -2147483635,[13x i8]c"compileVar: \00"}>,align 8
@c4=private unnamed_addr constant<{[4x i8],i32,[21x i8]}><{[4x i8]zeroinitializer,i32 -2147483627,[21x i8]c"compileExp: TPEXNTAG\00"}>,align 8
@c5=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[21x i8]}>,<{[4x i8],i32,[21x i8]}>*@c4,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c6=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"TPEXVAR\0A\00"}>,align 8
@c7=private unnamed_addr constant<{[4x i8],i32,[20x i8]}><{[4x i8]zeroinitializer,i32 -2147483628,[20x i8]c"compileExp: TPEXVAR\00"}>,align 8
@c8=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@c7,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL10oldInstMap_1633 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10oldInstMap_1821 to void(...)*),i32 -2147483647}>,align 8
@da=private unnamed_addr constant<{[4x i8],i32,[19x i8]}><{[4x i8]zeroinitializer,i32 -2147483629,[19x i8]c"compileExp: TPTAPP\00"}>,align 8
@db=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[19x i8]}>,<{[4x i8],i32,[19x i8]}>*@da,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dc=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1783.6(64081)\00"}>,align 8
@dd=private unnamed_addr constant<{[4x i8],i32,[83x i8]}><{[4x i8]zeroinitializer,i32 -2147483565,[83x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:17.14(302)\00"}>,align 8
@de=private unnamed_addr constant<{[4x i8],i32,[20x i8]}><{[4x i8]zeroinitializer,i32 -2147483628,[20x i8]c"PolyTyElimination: \00"}>,align 8
@df=private unnamed_addr constant<{[4x i8],i32,[23x i8]}><{[4x i8]zeroinitializer,i32 -2147483625,[23x i8]c"compileDecl: TPEXNTAGD\00"}>,align 8
@dg=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[23x i8]}>,<{[4x i8],i32,[23x i8]}>*@df,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dh=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:2139.6(77627)\00"}>,align 8
@di=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL3env_1650 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3env_1822 to void(...)*),i32 -2147483647}>,align 8
@dj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL3env_1654 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3env_1823 to void(...)*),i32 -2147483647}>,align 8
@dk=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"\0A\00"}>,align 8
@dl=private unnamed_addr constant<{[4x i8],i32,[37x i8]}><{[4x i8]zeroinitializer,i32 -2147483611,[37x i8]c"===== PolyTyElim Source begin =====\0A\00"}>,align 8
@dm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(void(i8*)*@_SMLLN17PolyTyElimination7compileE_1662 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7compileE_1832 to void(...)*),i32 -2147483647}>,align 8
@dn=private unnamed_addr constant<{[4x i8],i32,[35x i8]}><{[4x i8]zeroinitializer,i32 -2147483613,[35x i8]c"===== PolyTyElim Source end =====\0A\00"}>,align 8
@do=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"===== Instance Universes begin =====\0A\00"}>,align 8
@dp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17PolyTyElimination7compileE_1667 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7compileE_1834 to void(...)*),i32 -2147483647}>,align 8
@dq=private unnamed_addr constant<{[4x i8],i32,[37x i8]}><{[4x i8]zeroinitializer,i32 -2147483611,[37x i8]c"\0A===== Instance Universes end =====\0A\00"}>,align 8
@dr=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"===== Least Upper Bounds begin =====\0A\00"}>,align 8
@ds=private unnamed_addr constant<{[4x i8],i32,[37x i8]}><{[4x i8]zeroinitializer,i32 -2147483611,[37x i8]c"\0A===== Least Upper Bounds end =====\0A\00"}>,align 8
@dt=private unnamed_addr constant<{[4x i8],i32,[26x i8]}><{[4x i8]zeroinitializer,i32 -2147483622,[26x i8]c"===== Summary begin =====\00"}>,align 8
@du=private unnamed_addr constant<{[4x i8],i32,[32x i8]}><{[4x i8]zeroinitializer,i32 -2147483616,[32x i8]c"\0Anum of bound tyvars original: \00"}>,align 8
@dv=private unnamed_addr constant<{[4x i8],i32,[15x i8]}><{[4x i8]zeroinitializer,i32 -2147483633,[15x i8]c"\0Asubstituted: \00"}>,align 8
@dw=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"\0Aboxed kind: \00"}>,align 8
@dx=private unnamed_addr constant<{[4x i8],i32,[16x i8]}><{[4x i8]zeroinitializer,i32 -2147483632,[16x i8]c"\0Aunboxed kind: \00"}>,align 8
@dy=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"\0Asize 1: \00"}>,align 8
@dz=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"\0Asize 2: \00"}>,align 8
@dA=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"\0Asize 4: \00"}>,align 8
@dB=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"\0Asize 8: \00"}>,align 8
@dC=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"\0Arecord: \00"}>,align 8
@dD=private unnamed_addr constant<{[4x i8],i32,[13x i8]}><{[4x i8]zeroinitializer,i32 -2147483635,[13x i8]c"\0Adead code: \00"}>,align 8
@dE=private unnamed_addr constant<{[4x i8],i32,[17x i8]}><{[4x i8]zeroinitializer,i32 -2147483631,[17x i8]c"\0Akeep original: \00"}>,align 8
@dF=private unnamed_addr constant<{[4x i8],i32,[26x i8]}><{[4x i8]zeroinitializer,i32 -2147483622,[26x i8]c"\0A===== Summary end =====\0A\00"}>,align 8
@_SML_gvar8d6fee0b386d4ead_PolyTyElimination=private global<{[4x i8],i32,[1x i8*]}><{[4x i8]zeroinitializer,i32 -1342177272,[1x i8*]zeroinitializer}>,align 8
@dG=private unnamed_addr global[2x i64][i64 1,i64 sub(i64 ptrtoint(i8**getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar8d6fee0b386d4ead_PolyTyElimination,i32 0,i32 2,i32 0)to i64),i64 ptrtoint([2x i64]*@dG to i64))]
@_SML_ftab8d6fee0b386d4ead_PolyTyElimination=external global i8
@dH=private unnamed_addr global i8 0
@dI=internal unnamed_addr global i32 0,align 8
@dJ=internal unnamed_addr global i32 0,align 8
@dK=internal unnamed_addr global i32 0,align 8
@dL=internal unnamed_addr global i32 0,align 8
@dM=internal unnamed_addr global i32 0,align 8
@dN=internal unnamed_addr global i32 0,align 8
@dO=internal unnamed_addr global i32 0,align 8
@dP=internal unnamed_addr global i32 0,align 8
@dQ=internal unnamed_addr global i32 0,align 8
@dR=internal unnamed_addr global i32 0,align 8
@dS=internal unnamed_addr global i32 0,align 8
@_SMLZN17PolyTyElimination7compileE=alias i8*,getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar8d6fee0b386d4ead_PolyTyElimination,i32 0,i32 2,i32 0)
declare void@llvm.gcroot(i8**,i8*)#0
declare i8*@sml_alloc(i32 inreg)local_unnamed_addr#0
declare void@sml_check(i32 inreg)local_unnamed_addr
declare void@sml_end()local_unnamed_addr#0
declare void@sml_gcroot(i8*,void()*,i8*,i8*)local_unnamed_addr#0
declare i8*@sml_load_intinf(i8*inreg)local_unnamed_addr#0
declare void@sml_matchcomp_bug()local_unnamed_addr
declare i32@sml_obj_equal(i8*inreg,i8*inreg)local_unnamed_addr#0
declare i32@sml_personality(...)#0
declare void@sml_raise(i8*inreg)local_unnamed_addr#1
declare i8*@sml_save()local_unnamed_addr#0
declare void@sml_save_exn(i8*inreg)local_unnamed_addr#0
declare void@sml_start(i8*inreg)local_unnamed_addr#0
declare void@sml_unsave()local_unnamed_addr#0
declare void@sml_write(i8*inreg,i8**inreg,i8*inreg)local_unnamed_addr#0
declare i8*@_SMLFN11RecordLabel3Map13intersectWithE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map5foldlE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map9listItemsE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map9mergeWithE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11TypesBasics10substBTvarE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11TypesBasics5EFBTVE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11TypesBasics7tpappTyE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN12RuntimeTypes7getSizeE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon10TPCONSTANTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon10TPEXEXNTAGE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon11TPDYNAMICISE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon11TPEXPORTEXNE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon11TPEXPORTVARE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon11TPEXTERNEXNE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon11TPEXTERNVARE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon11TPPATRECORDE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon11TPPRIMAPPLYE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon11TPRECFUNVARE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon12TPBUILTINEXNE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon12TPCALLBACKFNE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon12TPDYNAMICTOPE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon12TPOPRIMAPPLYE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon12TPPATLAYEREDE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon12TPVALPOLYRECE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon13TPDYNAMICCASEE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon13TPDYNAMICNULLE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon13TPDYNAMICVIEWE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon13TPPATCONSTANTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon13TPPOLYFUNDECLE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon14TPEXNCONSTRUCTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon14TPFOREIGNAPPLYE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon15TPDATACONSTRUCTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon15TPFFIIMPORT__EXTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon15TPFFIIMPORT__FUNE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon15TPFOREIGNSYMBOLE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon16TPSWITCH__CONCASEE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon16TPSWITCH__EXNCASEE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon17TPPATEXNCONSTRUCTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon18TPDYNAMICEXISTTAPPE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon18TPPATDATACONSTRUCTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon18TPSWITCH__CONSTCASEE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon5TPEXDE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon5TPFNME(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon5TPLETE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon5TPVALE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon5TPVARE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon6TPAPPME(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon6TPCASTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon6TPJOINE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon6TPPOLYE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon6TPTAPPE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon6btvEnvE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon6varEnvE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon7TPCASEME(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon7TPCATCHE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon7TPEXVARE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon7TPRAISEE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon7TPTHROWE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon7patVarsE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon8TPEXNTAGE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon8TPHANDLEE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon8TPMODIFYE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon8TPPATVARE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon8TPRECORDE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon8TPSELECTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon8TPSIZEOFE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon8TPVALRECE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon9TPDYNAMICE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon9TPEXNTAGDE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon9TPFUNDECLE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon9TPMONOLETE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon9TPPATWILDE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon9TPREIFYTYE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN13LongsymbolEnv4findE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN13TyAlphaRename14copyConstraintE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN13TyAlphaRename6copyTyE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN13TyAlphaRename9newBtvEnvE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN14BoundTypeVarID2eqE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map10listItemsiE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map10mapPartialE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map11mapPartialiE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map3appE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map4appiE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map4mapiE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map5foldlE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map6foldliE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map6insertE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map7filteriE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map7isEmptyE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map8inDomainE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map8listKeysE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map9listItemsE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map9mergeWithE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map9singletonE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Set3addE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Set3mapE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Set5foldlE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Set5unionE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Set6existsE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN14BoundTypeVarID3Set8isSubsetE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14PolyTyInstance14format__instMapE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14PolyTyInstance19format__instancesMapE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN16DynamicKindUtils16kindOfStaticKindE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN16DynamicKindUtils6eqKindE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN16DynamicKindUtils7lubKindE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN16DynamicKindUtils8kindOfTyE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN3Bug11prettyPrintE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN4Bool3notE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List1_VE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List3appE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List5foldlE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5ExnID3Map4findE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5Int328toStringE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5TypID3Map3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5TypID3Map5foldlE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5TypID3Map9mergeWithE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5Types15equalPropertiesE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID3Map4findE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID8toStringE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Option3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Option6isSomeE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6String1_ZE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN6Symbol12eqLongsymbolE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Symbol18longsymbolToStringE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare void@_SMLFN6TextIO5printE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN8ListPair5appEqE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN8ListPair7foldlEqE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN9DummyTyID8generateE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN9TypedCalc21formatWithType__tpdeclE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main5148a836b3728be9_Int32()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maindaa180c1799f3810_Bool()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main03d87556ec7f64b2_List()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main7aa263535439ee1c_ListPair()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main3a60343781315c1e_Option()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main1ef93e13728790b1_String()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main3446b7b079949ccf_text_io()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main7374574ddb619c6a_LocalID()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main44ca35c4c731682b_Symbol()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main60e750412e2bb4fe_RecordLabel()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maina8c984cf5ab1458f_Control()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maineaa0aca8fbe4101a_Bug()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainc88dec21a8800496_RuntimeTypes_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainf05fe994141c896f_DummyTyID()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main78dd31ed3d8f51c2_DynamicKind_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main606b245a3d2b48d6_Types_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main0426d5e63d1bd065_TypedCalc_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main1d09938e346dcc6f_TypedCalcCon()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main1375829c09084bfc_DynamicKindUtils()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main2aaf2b808f82ee2e_TypesBasics()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maine133fb70fb05a962_TyAlphaRename()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maincf60e58028aea790_BuiltinTypes()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainf9f5ec24e73d9098_PolyTyInstance_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_load5148a836b3728be9_Int32(i8*)local_unnamed_addr
declare void@_SML_loaddaa180c1799f3810_Bool(i8*)local_unnamed_addr
declare void@_SML_load03d87556ec7f64b2_List(i8*)local_unnamed_addr
declare void@_SML_load7aa263535439ee1c_ListPair(i8*)local_unnamed_addr
declare void@_SML_load3a60343781315c1e_Option(i8*)local_unnamed_addr
declare void@_SML_load1ef93e13728790b1_String(i8*)local_unnamed_addr
declare void@_SML_load3446b7b079949ccf_text_io(i8*)local_unnamed_addr
declare void@_SML_load7374574ddb619c6a_LocalID(i8*)local_unnamed_addr
declare void@_SML_load44ca35c4c731682b_Symbol(i8*)local_unnamed_addr
declare void@_SML_load60e750412e2bb4fe_RecordLabel(i8*)local_unnamed_addr
declare void@_SML_loada8c984cf5ab1458f_Control(i8*)local_unnamed_addr
declare void@_SML_loadeaa0aca8fbe4101a_Bug(i8*)local_unnamed_addr
declare void@_SML_loadc88dec21a8800496_RuntimeTypes_ppg(i8*)local_unnamed_addr
declare void@_SML_loadf05fe994141c896f_DummyTyID(i8*)local_unnamed_addr
declare void@_SML_load78dd31ed3d8f51c2_DynamicKind_ppg(i8*)local_unnamed_addr
declare void@_SML_load606b245a3d2b48d6_Types_ppg(i8*)local_unnamed_addr
declare void@_SML_load0426d5e63d1bd065_TypedCalc_ppg(i8*)local_unnamed_addr
declare void@_SML_load1d09938e346dcc6f_TypedCalcCon(i8*)local_unnamed_addr
declare void@_SML_load1375829c09084bfc_DynamicKindUtils(i8*)local_unnamed_addr
declare void@_SML_load2aaf2b808f82ee2e_TypesBasics(i8*)local_unnamed_addr
declare void@_SML_loade133fb70fb05a962_TyAlphaRename(i8*)local_unnamed_addr
declare void@_SML_loadcf60e58028aea790_BuiltinTypes(i8*)local_unnamed_addr
declare void@_SML_loadf9f5ec24e73d9098_PolyTyInstance_ppg(i8*)local_unnamed_addr
define private void@_SML_tabb8d6fee0b386d4ead_PolyTyElimination()#3{
unreachable
}
define void@_SML_load8d6fee0b386d4ead_PolyTyElimination(i8*%a)local_unnamed_addr#0{
%b=load i8,i8*@dH,align 1
%c=icmp eq i8%b,0
br i1%c,label%e,label%d
d:
ret void
e:
store i8 1,i8*@dH,align 1
tail call void@_SML_load5148a836b3728be9_Int32(i8*%a)#0
tail call void@_SML_loaddaa180c1799f3810_Bool(i8*%a)#0
tail call void@_SML_load03d87556ec7f64b2_List(i8*%a)#0
tail call void@_SML_load7aa263535439ee1c_ListPair(i8*%a)#0
tail call void@_SML_load3a60343781315c1e_Option(i8*%a)#0
tail call void@_SML_load1ef93e13728790b1_String(i8*%a)#0
tail call void@_SML_load3446b7b079949ccf_text_io(i8*%a)#0
tail call void@_SML_load7374574ddb619c6a_LocalID(i8*%a)#0
tail call void@_SML_load44ca35c4c731682b_Symbol(i8*%a)#0
tail call void@_SML_load60e750412e2bb4fe_RecordLabel(i8*%a)#0
tail call void@_SML_loada8c984cf5ab1458f_Control(i8*%a)#0
tail call void@_SML_loadeaa0aca8fbe4101a_Bug(i8*%a)#0
tail call void@_SML_loadc88dec21a8800496_RuntimeTypes_ppg(i8*%a)#0
tail call void@_SML_loadf05fe994141c896f_DummyTyID(i8*%a)#0
tail call void@_SML_load78dd31ed3d8f51c2_DynamicKind_ppg(i8*%a)#0
tail call void@_SML_load606b245a3d2b48d6_Types_ppg(i8*%a)#0
tail call void@_SML_load0426d5e63d1bd065_TypedCalc_ppg(i8*%a)#0
tail call void@_SML_load1d09938e346dcc6f_TypedCalcCon(i8*%a)#0
tail call void@_SML_load1375829c09084bfc_DynamicKindUtils(i8*%a)#0
tail call void@_SML_load2aaf2b808f82ee2e_TypesBasics(i8*%a)#0
tail call void@_SML_loade133fb70fb05a962_TyAlphaRename(i8*%a)#0
tail call void@_SML_loadcf60e58028aea790_BuiltinTypes(i8*%a)#0
tail call void@_SML_loadf9f5ec24e73d9098_PolyTyInstance_ppg(i8*%a)#0
tail call void@sml_gcroot(i8*%a,void()*@_SML_tabb8d6fee0b386d4ead_PolyTyElimination,i8*@_SML_ftab8d6fee0b386d4ead_PolyTyElimination,i8*bitcast([2x i64]*@dG to i8*))#0
ret void
}
define void@_SML_main8d6fee0b386d4ead_PolyTyElimination()local_unnamed_addr#2 gc"smlsharp"personality i32(...)*@sml_personality{
%a=alloca[3x i8*],align 8
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=load i8,i8*@dH,align 1
%p=and i8%o,2
%q=icmp eq i8%p,0
br i1%q,label%s,label%r
r:
ret void
s:
store i8 3,i8*@dH,align 1
tail call void@_SML_main5148a836b3728be9_Int32()#2
tail call void@_SML_maindaa180c1799f3810_Bool()#2
tail call void@_SML_main03d87556ec7f64b2_List()#2
tail call void@_SML_main7aa263535439ee1c_ListPair()#2
tail call void@_SML_main3a60343781315c1e_Option()#2
tail call void@_SML_main1ef93e13728790b1_String()#2
tail call void@_SML_main3446b7b079949ccf_text_io()#2
tail call void@_SML_main7374574ddb619c6a_LocalID()#2
tail call void@_SML_main44ca35c4c731682b_Symbol()#2
tail call void@_SML_main60e750412e2bb4fe_RecordLabel()#2
tail call void@_SML_maina8c984cf5ab1458f_Control()#2
tail call void@_SML_maineaa0aca8fbe4101a_Bug()#2
tail call void@_SML_mainc88dec21a8800496_RuntimeTypes_ppg()#2
tail call void@_SML_mainf05fe994141c896f_DummyTyID()#2
tail call void@_SML_main78dd31ed3d8f51c2_DynamicKind_ppg()#2
tail call void@_SML_main606b245a3d2b48d6_Types_ppg()#2
tail call void@_SML_main0426d5e63d1bd065_TypedCalc_ppg()#2
tail call void@_SML_main1d09938e346dcc6f_TypedCalcCon()#2
tail call void@_SML_main1375829c09084bfc_DynamicKindUtils()#2
tail call void@_SML_main2aaf2b808f82ee2e_TypesBasics()#2
tail call void@_SML_maine133fb70fb05a962_TyAlphaRename()#2
tail call void@_SML_maincf60e58028aea790_BuiltinTypes()#2
tail call void@_SML_mainf9f5ec24e73d9098_PolyTyInstance_ppg()#2
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
%t=bitcast[3x i8*]*%a to i8*
call void@sml_start(i8*inreg%t)#0
%u=load atomic i32,i32*@sml_check_flag unordered,align 4
%v=icmp eq i32%u,0
br i1%v,label%x,label%w
w:
invoke void@sml_check(i32 inreg%u)
to label%x unwind label%iZ
x:
%y=load i8*,i8**@_SMLZN14BoundTypeVarID3Set5emptyE,align 8
store i8*%y,i8**%b,align 8
%z=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
to label%A unwind label%iZ
A:
store i8*%z,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 12)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177288,i32*%D,align 4
store i8*%B,i8**%d,align 8
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 28)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177304,i32*%K,align 4
%L=load i8*,i8**%d,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN17PolyTyElimination7equalTyE_1054 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7equalTyE_1760 to void(...)*),void(...)**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 24
%S=bitcast i8*%R to i32*
store i32 -2147483647,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 12)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177288,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%c,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to i32*
store i32 1,i32*%Z,align 4
%aa=call i8*@sml_alloc(i32 inreg 28)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177304,i32*%ac,align 4
%ad=load i8*,i8**%e,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%aa,i64 8
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10getIdsListE_1065 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%aa,i64 16
%ai=bitcast i8*%ah to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10getIdsListE_1065 to void(...)*),void(...)**%ai,align 8
%aj=getelementptr inbounds i8,i8*%aa,i64 24
%ak=bitcast i8*%aj to i32*
store i32 -2147483647,i32*%ak,align 4
%al=call i8*@sml_alloc(i32 inreg 20)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177296,i32*%an,align 4
store i8*%al,i8**%f,align 8
%ao=load i8*,i8**%c,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=load i8*,i8**%e,align 8
%ar=getelementptr inbounds i8,i8*%al,i64 8
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%al,i64 16
%au=bitcast i8*%at to i32*
store i32 3,i32*%au,align 4
%av=call i8*@sml_alloc(i32 inreg 28)#0
%aw=getelementptr inbounds i8,i8*%av,i64 -4
%ax=bitcast i8*%aw to i32*
store i32 1342177304,i32*%ax,align 4
%ay=load i8*,i8**%f,align 8
%az=bitcast i8*%av to i8**
store i8*%ay,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%av,i64 8
%aB=bitcast i8*%aA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8getIdsTyE_1066 to void(...)*),void(...)**%aB,align 8
%aC=getelementptr inbounds i8,i8*%av,i64 16
%aD=bitcast i8*%aC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8getIdsTyE_1066 to void(...)*),void(...)**%aD,align 8
%aE=getelementptr inbounds i8,i8*%av,i64 24
%aF=bitcast i8*%aE to i32*
store i32 -2147483647,i32*%aF,align 4
%aG=call i8*@sml_alloc(i32 inreg 28)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177304,i32*%aI,align 4
%aJ=load i8*,i8**%f,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aG,i64 8
%aM=bitcast i8*%aL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15getIdsBackendTyE_1067 to void(...)*),void(...)**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aG,i64 16
%aO=bitcast i8*%aN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15getIdsBackendTyE_1067 to void(...)*),void(...)**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aG,i64 24
%aQ=bitcast i8*%aP to i32*
store i32 -2147483647,i32*%aQ,align 4
%aR=call i8*@sml_alloc(i32 inreg 28)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177304,i32*%aT,align 4
%aU=load i8*,i8**%f,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aR,i64 8
%aX=bitcast i8*%aW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination17getIdsCodeEntryTyE_1068 to void(...)*),void(...)**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aR,i64 16
%aZ=bitcast i8*%aY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination17getIdsCodeEntryTyE_1068 to void(...)*),void(...)**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aR,i64 24
%a1=bitcast i8*%a0 to i32*
store i32 -2147483647,i32*%a1,align 4
%a2=call i8*@sml_alloc(i32 inreg 28)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177304,i32*%a4,align 4
%a5=load i8*,i8**%f,align 8
%a6=bitcast i8*%a2 to i8**
store i8*%a5,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%a2,i64 8
%a8=bitcast i8*%a7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12getIdsBtvEnvE_1069 to void(...)*),void(...)**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a2,i64 16
%ba=bitcast i8*%a9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12getIdsBtvEnvE_1069 to void(...)*),void(...)**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a2,i64 24
%bc=bitcast i8*%bb to i32*
store i32 -2147483647,i32*%bc,align 4
%bd=call i8*@sml_alloc(i32 inreg 28)#0
%be=getelementptr inbounds i8,i8*%bd,i64 -4
%bf=bitcast i8*%be to i32*
store i32 1342177304,i32*%bf,align 4
%bg=load i8*,i8**%f,align 8
%bh=bitcast i8*%bd to i8**
store i8*%bg,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%bd,i64 8
%bj=bitcast i8*%bi to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10getIdsKindE_1070 to void(...)*),void(...)**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bd,i64 16
%bl=bitcast i8*%bk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10getIdsKindE_1070 to void(...)*),void(...)**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bd,i64 24
%bn=bitcast i8*%bm to i32*
store i32 -2147483647,i32*%bn,align 4
%bo=call i8*@sml_alloc(i32 inreg 28)#0
%bp=getelementptr inbounds i8,i8*%bo,i64 -4
%bq=bitcast i8*%bp to i32*
store i32 1342177304,i32*%bq,align 4
%br=load i8*,i8**%f,align 8
%bs=bitcast i8*%bo to i8**
store i8*%br,i8**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bo,i64 8
%bu=bitcast i8*%bt to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14getIdsTvarKindE_1071 to void(...)*),void(...)**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bo,i64 16
%bw=bitcast i8*%bv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14getIdsTvarKindE_1071 to void(...)*),void(...)**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bo,i64 24
%by=bitcast i8*%bx to i32*
store i32 -2147483647,i32*%by,align 4
%bz=call i8*@sml_alloc(i32 inreg 28)#0
%bA=getelementptr inbounds i8,i8*%bz,i64 -4
%bB=bitcast i8*%bA to i32*
store i32 1342177304,i32*%bB,align 4
%bC=load i8*,i8**%f,align 8
%bD=bitcast i8*%bz to i8**
store i8*%bC,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bz,i64 8
%bF=bitcast i8*%bE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination19getIdsOprimSelectorE_1072 to void(...)*),void(...)**%bF,align 8
%bG=getelementptr inbounds i8,i8*%bz,i64 16
%bH=bitcast i8*%bG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination19getIdsOprimSelectorE_1072 to void(...)*),void(...)**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bz,i64 24
%bJ=bitcast i8*%bI to i32*
store i32 -2147483647,i32*%bJ,align 4
%bK=call i8*@sml_alloc(i32 inreg 28)#0
%bL=getelementptr inbounds i8,i8*%bK,i64 -4
%bM=bitcast i8*%bL to i32*
store i32 1342177304,i32*%bM,align 4
%bN=load i8*,i8**%f,align 8
%bO=bitcast i8*%bK to i8**
store i8*%bN,i8**%bO,align 8
%bP=getelementptr inbounds i8,i8*%bK,i64 8
%bQ=bitcast i8*%bP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination19getIdsOverloadMatchE_1073 to void(...)*),void(...)**%bQ,align 8
%bR=getelementptr inbounds i8,i8*%bK,i64 16
%bS=bitcast i8*%bR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination19getIdsOverloadMatchE_1073 to void(...)*),void(...)**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bK,i64 24
%bU=bitcast i8*%bT to i32*
store i32 -2147483647,i32*%bU,align 4
%bV=call i8*@sml_alloc(i32 inreg 28)#0
%bW=getelementptr inbounds i8,i8*%bV,i64 -4
%bX=bitcast i8*%bW to i32*
store i32 1342177304,i32*%bX,align 4
%bY=load i8*,i8**%f,align 8
%bZ=bitcast i8*%bV to i8**
store i8*%bY,i8**%bZ,align 8
%b0=getelementptr inbounds i8,i8*%bV,i64 8
%b1=bitcast i8*%b0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination17getIdsSingletonTyE_1074 to void(...)*),void(...)**%b1,align 8
%b2=getelementptr inbounds i8,i8*%bV,i64 16
%b3=bitcast i8*%b2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination17getIdsSingletonTyE_1074 to void(...)*),void(...)**%b3,align 8
%b4=getelementptr inbounds i8,i8*%bV,i64 24
%b5=bitcast i8*%b4 to i32*
store i32 -2147483647,i32*%b5,align 4
%b6=call i8*@sml_alloc(i32 inreg 28)#0
%b7=getelementptr inbounds i8,i8*%b6,i64 -4
%b8=bitcast i8*%b7 to i32*
store i32 1342177304,i32*%b8,align 4
%b9=load i8*,i8**%f,align 8
%ca=bitcast i8*%b6 to i8**
store i8*%b9,i8**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b6,i64 8
%cc=bitcast i8*%cb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16getIdsConstraintE_1075 to void(...)*),void(...)**%cc,align 8
%cd=getelementptr inbounds i8,i8*%b6,i64 16
%ce=bitcast i8*%cd to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16getIdsConstraintE_1075 to void(...)*),void(...)**%ce,align 8
%cf=getelementptr inbounds i8,i8*%b6,i64 24
%cg=bitcast i8*%cf to i32*
store i32 -2147483647,i32*%cg,align 4
%ch=call i8*@sml_alloc(i32 inreg 20)#0
%ci=getelementptr inbounds i8,i8*%ch,i64 -4
%cj=bitcast i8*%ci to i32*
store i32 1342177296,i32*%cj,align 4
store i8*%ch,i8**%g,align 8
%ck=load i8*,i8**%b,align 8
%cl=bitcast i8*%ch to i8**
store i8*%ck,i8**%cl,align 8
%cm=load i8*,i8**%f,align 8
%cn=getelementptr inbounds i8,i8*%ch,i64 8
%co=bitcast i8*%cn to i8**
store i8*%cm,i8**%co,align 8
%cp=getelementptr inbounds i8,i8*%ch,i64 16
%cq=bitcast i8*%cp to i32*
store i32 3,i32*%cq,align 4
%cr=call i8*@sml_alloc(i32 inreg 28)#0
%cs=getelementptr inbounds i8,i8*%cr,i64 -4
%ct=bitcast i8*%cs to i32*
store i32 1342177304,i32*%ct,align 4
%cu=load i8*,i8**%g,align 8
%cv=bitcast i8*%cr to i8**
store i8*%cu,i8**%cv,align 8
%cw=getelementptr inbounds i8,i8*%cr,i64 8
%cx=bitcast i8*%cw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14getIdsInstanceE_1111 to void(...)*),void(...)**%cx,align 8
%cy=getelementptr inbounds i8,i8*%cr,i64 16
%cz=bitcast i8*%cy to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14getIdsInstanceE_1111 to void(...)*),void(...)**%cz,align 8
%cA=getelementptr inbounds i8,i8*%cr,i64 24
%cB=bitcast i8*%cA to i32*
store i32 -2147483647,i32*%cB,align 4
%cC=call i8*@sml_alloc(i32 inreg 20)#0
%cD=getelementptr inbounds i8,i8*%cC,i64 -4
%cE=bitcast i8*%cD to i32*
store i32 1342177296,i32*%cE,align 4
store i8*%cC,i8**%h,align 8
%cF=load i8*,i8**%b,align 8
%cG=bitcast i8*%cC to i8**
store i8*%cF,i8**%cG,align 8
%cH=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cI=getelementptr inbounds i8,i8*%cC,i64 8
%cJ=bitcast i8*%cI to i8**
store i8*%cH,i8**%cJ,align 8
%cK=getelementptr inbounds i8,i8*%cC,i64 16
%cL=bitcast i8*%cK to i32*
store i32 3,i32*%cL,align 4
%cM=call i8*@sml_alloc(i32 inreg 28)#0
%cN=getelementptr inbounds i8,i8*%cM,i64 -4
%cO=bitcast i8*%cN to i32*
store i32 1342177304,i32*%cO,align 4
%cP=load i8*,i8**%h,align 8
%cQ=bitcast i8*%cM to i8**
store i8*%cP,i8**%cQ,align 8
%cR=getelementptr inbounds i8,i8*%cM,i64 8
%cS=bitcast i8*%cR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15getIdsInstancesE_1113 to void(...)*),void(...)**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cM,i64 16
%cU=bitcast i8*%cT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15getIdsInstancesE_1113 to void(...)*),void(...)**%cU,align 8
%cV=getelementptr inbounds i8,i8*%cM,i64 24
%cW=bitcast i8*%cV to i32*
store i32 -2147483647,i32*%cW,align 4
%cX=call i8*@sml_alloc(i32 inreg 12)#0
%cY=getelementptr inbounds i8,i8*%cX,i64 -4
%cZ=bitcast i8*%cY to i32*
store i32 1342177288,i32*%cZ,align 4
store i8*%cX,i8**%g,align 8
%c0=load i8*,i8**%f,align 8
%c1=bitcast i8*%cX to i8**
store i8*%c0,i8**%c1,align 8
%c2=getelementptr inbounds i8,i8*%cX,i64 8
%c3=bitcast i8*%c2 to i32*
store i32 1,i32*%c3,align 4
%c4=call i8*@sml_alloc(i32 inreg 28)#0
%c5=getelementptr inbounds i8,i8*%c4,i64 -4
%c6=bitcast i8*%c5 to i32*
store i32 1342177304,i32*%c6,align 4
%c7=load i8*,i8**%g,align 8
%c8=bitcast i8*%c4 to i8**
store i8*%c7,i8**%c8,align 8
%c9=getelementptr inbounds i8,i8*%c4,i64 8
%da=bitcast i8*%c9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination6exportE_1116 to void(...)*),void(...)**%da,align 8
%db=getelementptr inbounds i8,i8*%c4,i64 16
%dc=bitcast i8*%db to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination6exportE_1116 to void(...)*),void(...)**%dc,align 8
%dd=getelementptr inbounds i8,i8*%c4,i64 24
%de=bitcast i8*%dd to i32*
store i32 -2147483647,i32*%de,align 4
%df=call i8*@sml_alloc(i32 inreg 12)#0
%dg=getelementptr inbounds i8,i8*%df,i64 -4
%dh=bitcast i8*%dg to i32*
store i32 1342177288,i32*%dh,align 4
store i8*%df,i8**%i,align 8
%di=load i8*,i8**%f,align 8
%dj=bitcast i8*%df to i8**
store i8*%di,i8**%dj,align 8
%dk=getelementptr inbounds i8,i8*%df,i64 8
%dl=bitcast i8*%dk to i32*
store i32 1,i32*%dl,align 4
%dm=call i8*@sml_alloc(i32 inreg 28)#0
%dn=getelementptr inbounds i8,i8*%dm,i64 -4
%do=bitcast i8*%dn to i32*
store i32 1342177304,i32*%do,align 4
%dp=load i8*,i8**%i,align 8
%dq=bitcast i8*%dm to i8**
store i8*%dp,i8**%dq,align 8
%dr=getelementptr inbounds i8,i8*%dm,i64 8
%ds=bitcast i8*%dr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9analyzeTyE_1119 to void(...)*),void(...)**%ds,align 8
%dt=getelementptr inbounds i8,i8*%dm,i64 16
%du=bitcast i8*%dt to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9analyzeTyE_1119 to void(...)*),void(...)**%du,align 8
%dv=getelementptr inbounds i8,i8*%dm,i64 24
%dw=bitcast i8*%dv to i32*
store i32 -2147483647,i32*%dw,align 4
%dx=call i8*@sml_alloc(i32 inreg 20)#0
%dy=getelementptr inbounds i8,i8*%dx,i64 -4
%dz=bitcast i8*%dy to i32*
store i32 1342177296,i32*%dz,align 4
store i8*%dx,i8**%j,align 8
%dA=load i8*,i8**%g,align 8
%dB=bitcast i8*%dx to i8**
store i8*%dA,i8**%dB,align 8
%dC=load i8*,i8**%i,align 8
%dD=getelementptr inbounds i8,i8*%dx,i64 8
%dE=bitcast i8*%dD to i8**
store i8*%dC,i8**%dE,align 8
%dF=getelementptr inbounds i8,i8*%dx,i64 16
%dG=bitcast i8*%dF to i32*
store i32 3,i32*%dG,align 4
%dH=call i8*@sml_alloc(i32 inreg 28)#0
%dI=getelementptr inbounds i8,i8*%dH,i64 -4
%dJ=bitcast i8*%dI to i32*
store i32 1342177304,i32*%dJ,align 4
%dK=load i8*,i8**%j,align 8
%dL=bitcast i8*%dH to i8**
store i8*%dK,i8**%dL,align 8
%dM=getelementptr inbounds i8,i8*%dH,i64 8
%dN=bitcast i8*%dM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15analyzePrimInfoE_1134 to void(...)*),void(...)**%dN,align 8
%dO=getelementptr inbounds i8,i8*%dH,i64 16
%dP=bitcast i8*%dO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15analyzePrimInfoE_1134 to void(...)*),void(...)**%dP,align 8
%dQ=getelementptr inbounds i8,i8*%dH,i64 24
%dR=bitcast i8*%dQ to i32*
store i32 -2147483647,i32*%dR,align 4
%dS=call i8*@sml_alloc(i32 inreg 20)#0
%dT=getelementptr inbounds i8,i8*%dS,i64 -4
%dU=bitcast i8*%dT to i32*
store i32 1342177296,i32*%dU,align 4
store i8*%dS,i8**%k,align 8
%dV=load i8*,i8**%g,align 8
%dW=bitcast i8*%dS to i8**
store i8*%dV,i8**%dW,align 8
%dX=load i8*,i8**%i,align 8
%dY=getelementptr inbounds i8,i8*%dS,i64 8
%dZ=bitcast i8*%dY to i8**
store i8*%dX,i8**%dZ,align 8
%d0=getelementptr inbounds i8,i8*%dS,i64 16
%d1=bitcast i8*%d0 to i32*
store i32 3,i32*%d1,align 4
%d2=call i8*@sml_alloc(i32 inreg 28)#0
%d3=getelementptr inbounds i8,i8*%d2,i64 -4
%d4=bitcast i8*%d3 to i32*
store i32 1342177304,i32*%d4,align 4
%d5=load i8*,i8**%k,align 8
%d6=bitcast i8*%d2 to i8**
store i8*%d5,i8**%d6,align 8
%d7=getelementptr inbounds i8,i8*%d2,i64 8
%d8=bitcast i8*%d7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16analyzeOPrimInfoE_1137 to void(...)*),void(...)**%d8,align 8
%d9=getelementptr inbounds i8,i8*%d2,i64 16
%ea=bitcast i8*%d9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16analyzeOPrimInfoE_1137 to void(...)*),void(...)**%ea,align 8
%eb=getelementptr inbounds i8,i8*%d2,i64 24
%ec=bitcast i8*%eb to i32*
store i32 -2147483647,i32*%ec,align 4
%ed=call i8*@sml_alloc(i32 inreg 12)#0
%ee=getelementptr inbounds i8,i8*%ed,i64 -4
%ef=bitcast i8*%ee to i32*
store i32 1342177288,i32*%ef,align 4
store i8*%ed,i8**%l,align 8
%eg=load i8*,i8**%i,align 8
%eh=bitcast i8*%ed to i8**
store i8*%eg,i8**%eh,align 8
%ei=getelementptr inbounds i8,i8*%ed,i64 8
%ej=bitcast i8*%ei to i32*
store i32 1,i32*%ej,align 4
%ek=call i8*@sml_alloc(i32 inreg 28)#0
%el=getelementptr inbounds i8,i8*%ek,i64 -4
%em=bitcast i8*%el to i32*
store i32 1342177304,i32*%em,align 4
%en=load i8*,i8**%l,align 8
%eo=bitcast i8*%ek to i8**
store i8*%en,i8**%eo,align 8
%ep=getelementptr inbounds i8,i8*%ek,i64 8
%eq=bitcast i8*%ep to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination12analyzeFFItyE_1138 to void(...)*),void(...)**%eq,align 8
%er=getelementptr inbounds i8,i8*%ek,i64 16
%es=bitcast i8*%er to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination12analyzeFFItyE_1138 to void(...)*),void(...)**%es,align 8
%et=getelementptr inbounds i8,i8*%ek,i64 24
%eu=bitcast i8*%et to i32*
store i32 -2147483647,i32*%eu,align 4
%ev=call i8*@sml_alloc(i32 inreg 20)#0
%ew=getelementptr inbounds i8,i8*%ev,i64 -4
%ex=bitcast i8*%ew to i32*
store i32 1342177296,i32*%ex,align 4
store i8*%ev,i8**%m,align 8
%ey=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ez=bitcast i8*%ev to i8**
store i8*%ey,i8**%ez,align 8
%eA=load i8*,i8**%f,align 8
%eB=getelementptr inbounds i8,i8*%ev,i64 8
%eC=bitcast i8*%eB to i8**
store i8*%eA,i8**%eC,align 8
%eD=getelementptr inbounds i8,i8*%ev,i64 16
%eE=bitcast i8*%eD to i32*
store i32 3,i32*%eE,align 4
%eF=call i8*@sml_alloc(i32 inreg 28)#0
%eG=getelementptr inbounds i8,i8*%eF,i64 -4
%eH=bitcast i8*%eG to i32*
store i32 1342177304,i32*%eH,align 4
%eI=load i8*,i8**%m,align 8
%eJ=bitcast i8*%eF to i8**
store i8*%eI,i8**%eJ,align 8
%eK=getelementptr inbounds i8,i8*%eF,i64 8
%eL=bitcast i8*%eK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18analyzeConstraintsE_1147 to void(...)*),void(...)**%eL,align 8
%eM=getelementptr inbounds i8,i8*%eF,i64 16
%eN=bitcast i8*%eM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18analyzeConstraintsE_1147 to void(...)*),void(...)**%eN,align 8
%eO=getelementptr inbounds i8,i8*%eF,i64 24
%eP=bitcast i8*%eO to i32*
store i32 -2147483647,i32*%eP,align 4
%eQ=call i8*@sml_alloc(i32 inreg 12)#0
%eR=getelementptr inbounds i8,i8*%eQ,i64 -4
%eS=bitcast i8*%eR to i32*
store i32 1342177288,i32*%eS,align 4
store i8*%eQ,i8**%e,align 8
%eT=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eU=bitcast i8*%eQ to i8**
store i8*%eT,i8**%eU,align 8
%eV=getelementptr inbounds i8,i8*%eQ,i64 8
%eW=bitcast i8*%eV to i32*
store i32 1,i32*%eW,align 4
%eX=call i8*@sml_alloc(i32 inreg 28)#0
%eY=getelementptr inbounds i8,i8*%eX,i64 -4
%eZ=bitcast i8*%eY to i32*
store i32 1342177304,i32*%eZ,align 4
%e0=load i8*,i8**%e,align 8
%e1=bitcast i8*%eX to i8**
store i8*%e0,i8**%e1,align 8
%e2=getelementptr inbounds i8,i8*%eX,i64 8
%e3=bitcast i8*%e2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13analyzeBtvEnvE_1150 to void(...)*),void(...)**%e3,align 8
%e4=getelementptr inbounds i8,i8*%eX,i64 16
%e5=bitcast i8*%e4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13analyzeBtvEnvE_1150 to void(...)*),void(...)**%e5,align 8
%e6=getelementptr inbounds i8,i8*%eX,i64 24
%e7=bitcast i8*%e6 to i32*
store i32 -2147483647,i32*%e7,align 4
%e8=call i8*@sml_alloc(i32 inreg 20)#0
%e9=getelementptr inbounds i8,i8*%e8,i64 -4
%fa=bitcast i8*%e9 to i32*
store i32 1342177296,i32*%fa,align 4
store i8*%e8,i8**%f,align 8
%fb=load i8*,i8**%g,align 8
%fc=bitcast i8*%e8 to i8**
store i8*%fb,i8**%fc,align 8
%fd=load i8*,i8**%i,align 8
%fe=getelementptr inbounds i8,i8*%e8,i64 8
%ff=bitcast i8*%fe to i8**
store i8*%fd,i8**%ff,align 8
%fg=getelementptr inbounds i8,i8*%e8,i64 16
%fh=bitcast i8*%fg to i32*
store i32 3,i32*%fh,align 4
%fi=call i8*@sml_alloc(i32 inreg 28)#0
%fj=getelementptr inbounds i8,i8*%fi,i64 -4
%fk=bitcast i8*%fj to i32*
store i32 1342177304,i32*%fk,align 4
%fl=load i8*,i8**%f,align 8
%fm=bitcast i8*%fi to i8**
store i8*%fl,i8**%fm,align 8
%fn=getelementptr inbounds i8,i8*%fi,i64 8
%fo=bitcast i8*%fn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination10analyzePatE_1151 to void(...)*),void(...)**%fo,align 8
%fp=getelementptr inbounds i8,i8*%fi,i64 16
%fq=bitcast i8*%fp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination10analyzePatE_1151 to void(...)*),void(...)**%fq,align 8
%fr=getelementptr inbounds i8,i8*%fi,i64 24
%fs=bitcast i8*%fr to i32*
store i32 -2147483647,i32*%fs,align 4
%ft=call i8*@sml_alloc(i32 inreg 68)#0
%fu=getelementptr inbounds i8,i8*%ft,i64 -4
%fv=bitcast i8*%fu to i32*
store i32 1342177344,i32*%fv,align 4
store i8*%ft,i8**%n,align 8
%fw=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fx=bitcast i8*%ft to i8**
store i8*%fw,i8**%fx,align 8
%fy=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%fz=getelementptr inbounds i8,i8*%ft,i64 8
%fA=bitcast i8*%fz to i8**
store i8*%fy,i8**%fA,align 8
%fB=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%fC=getelementptr inbounds i8,i8*%ft,i64 16
%fD=bitcast i8*%fC to i8**
store i8*%fB,i8**%fD,align 8
%fE=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%fF=getelementptr inbounds i8,i8*%ft,i64 24
%fG=bitcast i8*%fF to i8**
store i8*%fE,i8**%fG,align 8
%fH=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%fI=getelementptr inbounds i8,i8*%ft,i64 32
%fJ=bitcast i8*%fI to i8**
store i8*%fH,i8**%fJ,align 8
%fK=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%fL=getelementptr inbounds i8,i8*%ft,i64 40
%fM=bitcast i8*%fL to i8**
store i8*%fK,i8**%fM,align 8
%fN=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fO=getelementptr inbounds i8,i8*%ft,i64 48
%fP=bitcast i8*%fO to i8**
store i8*%fN,i8**%fP,align 8
%fQ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fR=getelementptr inbounds i8,i8*%ft,i64 56
%fS=bitcast i8*%fR to i8**
store i8*%fQ,i8**%fS,align 8
%fT=getelementptr inbounds i8,i8*%ft,i64 64
%fU=bitcast i8*%fT to i32*
store i32 255,i32*%fU,align 4
%fV=call i8*@sml_alloc(i32 inreg 28)#0
%fW=getelementptr inbounds i8,i8*%fV,i64 -4
%fX=bitcast i8*%fW to i32*
store i32 1342177304,i32*%fX,align 4
%fY=load i8*,i8**%n,align 8
%fZ=bitcast i8*%fV to i8**
store i8*%fY,i8**%fZ,align 8
%f0=getelementptr inbounds i8,i8*%fV,i64 8
%f1=bitcast i8*%f0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1166 to void(...)*),void(...)**%f1,align 8
%f2=getelementptr inbounds i8,i8*%fV,i64 16
%f3=bitcast i8*%f2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1166 to void(...)*),void(...)**%f3,align 8
%f4=getelementptr inbounds i8,i8*%fV,i64 24
%f5=bitcast i8*%f4 to i32*
store i32 -2147483647,i32*%f5,align 4
%f6=call i8*@sml_alloc(i32 inreg 28)#0
%f7=getelementptr inbounds i8,i8*%f6,i64 -4
%f8=bitcast i8*%f7 to i32*
store i32 1342177304,i32*%f8,align 4
%f9=load i8*,i8**%n,align 8
%ga=bitcast i8*%f6 to i8**
store i8*%f9,i8**%ga,align 8
%gb=getelementptr inbounds i8,i8*%f6,i64 8
%gc=bitcast i8*%gb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination16analyzeMatchListE_1167 to void(...)*),void(...)**%gc,align 8
%gd=getelementptr inbounds i8,i8*%f6,i64 16
%ge=bitcast i8*%gd to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination16analyzeMatchListE_1167 to void(...)*),void(...)**%ge,align 8
%gf=getelementptr inbounds i8,i8*%f6,i64 24
%gg=bitcast i8*%gf to i32*
store i32 -2147483647,i32*%gg,align 4
%gh=call i8*@sml_alloc(i32 inreg 28)#0
%gi=getelementptr inbounds i8,i8*%gh,i64 -4
%gj=bitcast i8*%gi to i32*
store i32 1342177304,i32*%gj,align 4
%gk=load i8*,i8**%n,align 8
%gl=bitcast i8*%gh to i8**
store i8*%gk,i8**%gl,align 8
%gm=getelementptr inbounds i8,i8*%gh,i64 8
%gn=bitcast i8*%gm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination12analyzeMatchE_1168 to void(...)*),void(...)**%gn,align 8
%go=getelementptr inbounds i8,i8*%gh,i64 16
%gp=bitcast i8*%go to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination12analyzeMatchE_1168 to void(...)*),void(...)**%gp,align 8
%gq=getelementptr inbounds i8,i8*%gh,i64 24
%gr=bitcast i8*%gq to i32*
store i32 -2147483647,i32*%gr,align 4
%gs=call i8*@sml_alloc(i32 inreg 28)#0
%gt=getelementptr inbounds i8,i8*%gs,i64 -4
%gu=bitcast i8*%gt to i32*
store i32 1342177304,i32*%gu,align 4
%gv=load i8*,i8**%n,align 8
%gw=bitcast i8*%gs to i8**
store i8*%gv,i8**%gw,align 8
%gx=getelementptr inbounds i8,i8*%gs,i64 8
%gy=bitcast i8*%gx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination14analyzeMonoLetE_1169 to void(...)*),void(...)**%gy,align 8
%gz=getelementptr inbounds i8,i8*%gs,i64 16
%gA=bitcast i8*%gz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination14analyzeMonoLetE_1169 to void(...)*),void(...)**%gA,align 8
%gB=getelementptr inbounds i8,i8*%gs,i64 24
%gC=bitcast i8*%gB to i32*
store i32 -2147483647,i32*%gC,align 4
%gD=call i8*@sml_alloc(i32 inreg 28)#0
%gE=getelementptr inbounds i8,i8*%gD,i64 -4
%gF=bitcast i8*%gE to i32*
store i32 1342177304,i32*%gF,align 4
%gG=load i8*,i8**%n,align 8
%gH=bitcast i8*%gD to i8**
store i8*%gG,i8**%gH,align 8
%gI=getelementptr inbounds i8,i8*%gD,i64 8
%gJ=bitcast i8*%gI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination15analyzeDeclListE_1170 to void(...)*),void(...)**%gJ,align 8
%gK=getelementptr inbounds i8,i8*%gD,i64 16
%gL=bitcast i8*%gK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination15analyzeDeclListE_1170 to void(...)*),void(...)**%gL,align 8
%gM=getelementptr inbounds i8,i8*%gD,i64 24
%gN=bitcast i8*%gM to i32*
store i32 -2147483647,i32*%gN,align 4
%gO=call i8*@sml_alloc(i32 inreg 28)#0
%gP=getelementptr inbounds i8,i8*%gO,i64 -4
%gQ=bitcast i8*%gP to i32*
store i32 1342177304,i32*%gQ,align 4
%gR=load i8*,i8**%n,align 8
%gS=bitcast i8*%gO to i8**
store i8*%gR,i8**%gS,align 8
%gT=getelementptr inbounds i8,i8*%gO,i64 8
%gU=bitcast i8*%gT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination11analyzeDeclE_1171 to void(...)*),void(...)**%gU,align 8
%gV=getelementptr inbounds i8,i8*%gO,i64 16
%gW=bitcast i8*%gV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination11analyzeDeclE_1171 to void(...)*),void(...)**%gW,align 8
%gX=getelementptr inbounds i8,i8*%gO,i64 24
%gY=bitcast i8*%gX to i32*
store i32 -2147483647,i32*%gY,align 4
%gZ=call i8*@sml_alloc(i32 inreg 28)#0
%g0=getelementptr inbounds i8,i8*%gZ,i64 -4
%g1=bitcast i8*%g0 to i32*
store i32 1342177304,i32*%g1,align 4
%g2=load i8*,i8**%n,align 8
%g3=bitcast i8*%gZ to i8**
store i8*%g2,i8**%g3,align 8
%g4=getelementptr inbounds i8,i8*%gZ,i64 8
%g5=bitcast i8*%g4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination15analyzeRecbindsE_1172 to void(...)*),void(...)**%g5,align 8
%g6=getelementptr inbounds i8,i8*%gZ,i64 16
%g7=bitcast i8*%g6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination15analyzeRecbindsE_1172 to void(...)*),void(...)**%g7,align 8
%g8=getelementptr inbounds i8,i8*%gZ,i64 24
%g9=bitcast i8*%g8 to i32*
store i32 -2147483647,i32*%g9,align 4
%ha=call i8*@sml_alloc(i32 inreg 28)#0
%hb=getelementptr inbounds i8,i8*%ha,i64 -4
%hc=bitcast i8*%hb to i32*
store i32 1342177304,i32*%hc,align 4
%hd=load i8*,i8**%n,align 8
%he=bitcast i8*%ha to i8**
store i8*%hd,i8**%he,align 8
%hf=getelementptr inbounds i8,i8*%ha,i64 8
%hg=bitcast i8*%hf to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination18analyzeFunRecbindsE_1173 to void(...)*),void(...)**%hg,align 8
%hh=getelementptr inbounds i8,i8*%ha,i64 16
%hi=bitcast i8*%hh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN17PolyTyElimination18analyzeFunRecbindsE_1173 to void(...)*),void(...)**%hi,align 8
%hj=getelementptr inbounds i8,i8*%ha,i64 24
%hk=bitcast i8*%hj to i32*
store i32 -2147483647,i32*%hk,align 4
%hl=call i8*@sml_alloc(i32 inreg 20)#0
%hm=getelementptr inbounds i8,i8*%hl,i64 -4
%hn=bitcast i8*%hm to i32*
store i32 1342177296,i32*%hn,align 4
store i8*%hl,i8**%e,align 8
%ho=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%hp=bitcast i8*%hl to i8**
store i8*%ho,i8**%hp,align 8
%hq=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hr=getelementptr inbounds i8,i8*%hl,i64 8
%hs=bitcast i8*%hr to i8**
store i8*%hq,i8**%hs,align 8
%ht=getelementptr inbounds i8,i8*%hl,i64 16
%hu=bitcast i8*%ht to i32*
store i32 3,i32*%hu,align 4
%hv=call i8*@sml_alloc(i32 inreg 28)#0
%hw=getelementptr inbounds i8,i8*%hv,i64 -4
%hx=bitcast i8*%hw to i32*
store i32 1342177304,i32*%hx,align 4
%hy=load i8*,i8**%e,align 8
%hz=bitcast i8*%hv to i8**
store i8*%hy,i8**%hz,align 8
%hA=getelementptr inbounds i8,i8*%hv,i64 8
%hB=bitcast i8*%hA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination5checkE_1293 to void(...)*),void(...)**%hB,align 8
%hC=getelementptr inbounds i8,i8*%hv,i64 16
%hD=bitcast i8*%hC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination5checkE_1293 to void(...)*),void(...)**%hD,align 8
%hE=getelementptr inbounds i8,i8*%hv,i64 24
%hF=bitcast i8*%hE to i32*
store i32 -2147483647,i32*%hF,align 4
%hG=call i8*@sml_alloc(i32 inreg 12)#0
%hH=getelementptr inbounds i8,i8*%hG,i64 -4
%hI=bitcast i8*%hH to i32*
store i32 1342177288,i32*%hI,align 4
store i8*%hG,i8**%b,align 8
%hJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hK=bitcast i8*%hG to i8**
store i8*%hJ,i8**%hK,align 8
%hL=getelementptr inbounds i8,i8*%hG,i64 8
%hM=bitcast i8*%hL to i32*
store i32 1,i32*%hM,align 4
%hN=call i8*@sml_alloc(i32 inreg 28)#0
%hO=getelementptr inbounds i8,i8*%hN,i64 -4
%hP=bitcast i8*%hO to i32*
store i32 1342177304,i32*%hP,align 4
%hQ=load i8*,i8**%b,align 8
%hR=bitcast i8*%hN to i8**
store i8*%hQ,i8**%hR,align 8
%hS=getelementptr inbounds i8,i8*%hN,i64 8
%hT=bitcast i8*%hS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7lubInstE_1302 to void(...)*),void(...)**%hT,align 8
%hU=getelementptr inbounds i8,i8*%hN,i64 16
%hV=bitcast i8*%hU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7lubInstE_1302 to void(...)*),void(...)**%hV,align 8
%hW=getelementptr inbounds i8,i8*%hN,i64 24
%hX=bitcast i8*%hW to i32*
store i32 -2147483647,i32*%hX,align 4
%hY=call i8*@sml_alloc(i32 inreg 12)#0
%hZ=getelementptr inbounds i8,i8*%hY,i64 -4
%h0=bitcast i8*%hZ to i32*
store i32 1342177288,i32*%h0,align 4
store i8*%hY,i8**%d,align 8
%h1=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h2=bitcast i8*%hY to i8**
store i8*%h1,i8**%h2,align 8
%h3=getelementptr inbounds i8,i8*%hY,i64 8
%h4=bitcast i8*%h3 to i32*
store i32 1,i32*%h4,align 4
%h5=call i8*@sml_alloc(i32 inreg 28)#0
%h6=getelementptr inbounds i8,i8*%h5,i64 -4
%h7=bitcast i8*%h6 to i32*
store i32 1342177304,i32*%h7,align 4
%h8=load i8*,i8**%d,align 8
%h9=bitcast i8*%h5 to i8**
store i8*%h8,i8**%h9,align 8
%ia=getelementptr inbounds i8,i8*%h5,i64 8
%ib=bitcast i8*%ia to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7lubListE_1306 to void(...)*),void(...)**%ib,align 8
%ic=getelementptr inbounds i8,i8*%h5,i64 16
%id=bitcast i8*%ic to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7lubListE_1306 to void(...)*),void(...)**%id,align 8
%ie=getelementptr inbounds i8,i8*%h5,i64 24
%if=bitcast i8*%ie to i32*
store i32 -2147483647,i32*%if,align 4
%ig=call i8*@sml_alloc(i32 inreg 12)#0
%ih=getelementptr inbounds i8,i8*%ig,i64 -4
%ii=bitcast i8*%ih to i32*
store i32 1342177288,i32*%ii,align 4
store i8*%ig,i8**%b,align 8
%ij=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ik=bitcast i8*%ig to i8**
store i8*%ij,i8**%ik,align 8
%il=getelementptr inbounds i8,i8*%ig,i64 8
%im=bitcast i8*%il to i32*
store i32 1,i32*%im,align 4
%in=call i8*@sml_alloc(i32 inreg 28)#0
%io=getelementptr inbounds i8,i8*%in,i64 -4
%ip=bitcast i8*%io to i32*
store i32 1342177304,i32*%ip,align 4
%iq=load i8*,i8**%b,align 8
%ir=bitcast i8*%in to i8**
store i8*%iq,i8**%ir,align 8
%is=getelementptr inbounds i8,i8*%in,i64 8
%it=bitcast i8*%is to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8calcInstE_1317 to void(...)*),void(...)**%it,align 8
%iu=getelementptr inbounds i8,i8*%in,i64 16
%iv=bitcast i8*%iu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8calcInstE_1317 to void(...)*),void(...)**%iv,align 8
%iw=getelementptr inbounds i8,i8*%in,i64 24
%ix=bitcast i8*%iw to i32*
store i32 -2147483647,i32*%ix,align 4
%iy=call i8*@sml_alloc(i32 inreg 36)#0
%iz=getelementptr inbounds i8,i8*%iy,i64 -4
%iA=bitcast i8*%iz to i32*
store i32 1342177312,i32*%iA,align 4
store i8*%iy,i8**%d,align 8
%iB=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%iC=bitcast i8*%iy to i8**
store i8*%iB,i8**%iC,align 8
%iD=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%iE=getelementptr inbounds i8,i8*%iy,i64 8
%iF=bitcast i8*%iE to i8**
store i8*%iD,i8**%iF,align 8
%iG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%iH=getelementptr inbounds i8,i8*%iy,i64 16
%iI=bitcast i8*%iH to i8**
store i8*%iG,i8**%iI,align 8
%iJ=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%iK=getelementptr inbounds i8,i8*%iy,i64 24
%iL=bitcast i8*%iK to i8**
store i8*%iJ,i8**%iL,align 8
%iM=getelementptr inbounds i8,i8*%iy,i64 32
%iN=bitcast i8*%iM to i32*
store i32 15,i32*%iN,align 4
%iO=call i8*@sml_alloc(i32 inreg 28)#0
%iP=getelementptr inbounds i8,i8*%iO,i64 -4
%iQ=bitcast i8*%iP to i32*
store i32 1342177304,i32*%iQ,align 4
%iR=load i8*,i8**%d,align 8
%iS=bitcast i8*%iO to i8**
store i8*%iR,i8**%iS,align 8
%iT=getelementptr inbounds i8,i8*%iO,i64 8
%iU=bitcast i8*%iT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7compileE_1685 to void(...)*),void(...)**%iU,align 8
%iV=getelementptr inbounds i8,i8*%iO,i64 16
%iW=bitcast i8*%iV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7compileE_1685 to void(...)*),void(...)**%iW,align 8
%iX=getelementptr inbounds i8,i8*%iO,i64 24
%iY=bitcast i8*%iX to i32*
store i32 -2147483647,i32*%iY,align 4
call void@sml_write(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar8d6fee0b386d4ead_PolyTyElimination,i64 0,i32 2,i64 0)to i8*),i8**inreg getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar8d6fee0b386d4ead_PolyTyElimination,i64 0,i32 2,i64 0),i8*inreg%iO)#0
call void@sml_end()#0
ret void
iZ:
%i0=landingpad{i8*,i8*}
cleanup
%i1=extractvalue{i8*,i8*}%i0,1
call void@sml_save_exn(i8*inreg%i1)#0
call void@sml_end()#0
resume{i8*,i8*}%i0
}
define internal fastcc i32@_SMLLN17PolyTyElimination14BoundTypeVarID3Map3allE_677(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
store i8*null,i8**%d,align 8
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=icmp eq i32%n,0
br i1%o,label%E,label%p
p:
%q=bitcast i8**%c to i8***
%r=load i8**,i8***%q,align 8
%s=load i8*,i8**%r,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
store i8*null,i8**%c,align 8
%w=bitcast i8**%r to i8***
%x=load i8**,i8***%w,align 8
%y=load i8*,i8**%x,align 8
%z=bitcast i8*%j to i8**
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*%v(i8*inreg%y,i8*inreg%A)
%C=bitcast i8*%B to i32*
%D=load i32,i32*%C,align 4
ret i32%D
E:
ret i32 0
}
define internal fastcc i32@_SMLLN17PolyTyElimination14BoundTypeVarID3Map3allE_678(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=bitcast i8**%c to i8***
%r=load i8**,i8***%q,align 8
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map3allE_677 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map3allE_1687 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=call fastcc i8*%n(i8*inreg%L,i8*inreg%A)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%c,align 8
%S=call i8*@sml_alloc(i32 inreg 4)#0
%T=bitcast i8*%S to i32*
%U=getelementptr inbounds i8,i8*%S,i64 -4
%V=bitcast i8*%U to i32*
store i32 4,i32*%V,align 4
store i32 1,i32*%T,align 4
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=call fastcc i8*%P(i8*inreg%W,i8*inreg%S)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ae=call fastcc i8*%aa(i8*inreg%ac,i8*inreg%ad)
%af=bitcast i8*%ae to i32*
%ag=load i32,i32*%af,align 4
ret i32%ag
}
define internal fastcc i32@_SMLLN17PolyTyElimination14BoundTypeVarID3Map4alliE_681(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
store i8*null,i8**%d,align 8
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=icmp eq i32%n,0
br i1%o,label%P,label%p
p:
%q=getelementptr inbounds i8,i8*%j,i64 4
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=bitcast i8*%j to i32*
%u=load i32,i32*%t,align 4
%v=bitcast i8**%c to i8***
%w=load i8**,i8***%v,align 8
%x=load i8*,i8**%w,align 8
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%c,align 8
%D=call i8*@sml_alloc(i32 inreg 12)#0
%E=bitcast i8*%D to i32*
%F=getelementptr inbounds i8,i8*%D,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177288,i32*%G,align 4
store i32%u,i32*%E,align 4
%H=getelementptr inbounds i8,i8*%D,i64 4
%I=bitcast i8*%H to i32*
store i32%s,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%D,i64 8
%K=bitcast i8*%J to i32*
store i32 0,i32*%K,align 4
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=call fastcc i8*%A(i8*inreg%L,i8*inreg%D)
%N=bitcast i8*%M to i32*
%O=load i32,i32*%N,align 4
ret i32%O
P:
ret i32 0
}
define internal fastcc i32@_SMLLN17PolyTyElimination14BoundTypeVarID3Map4alliE_682(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN14BoundTypeVarID3Map6foldliE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=bitcast i8**%c to i8***
%r=load i8**,i8***%q,align 8
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map4alliE_681 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map4alliE_1690 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=call fastcc i8*%n(i8*inreg%L,i8*inreg%A)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%c,align 8
%S=call i8*@sml_alloc(i32 inreg 4)#0
%T=bitcast i8*%S to i32*
%U=getelementptr inbounds i8,i8*%S,i64 -4
%V=bitcast i8*%U to i32*
store i32 4,i32*%V,align 4
store i32 1,i32*%T,align 4
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=call fastcc i8*%P(i8*inreg%W,i8*inreg%S)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ae=call fastcc i8*%aa(i8*inreg%ac,i8*inreg%ad)
%af=bitcast i8*%ae to i32*
%ag=load i32,i32*%af,align 4
ret i32%ag
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map7fromSetE_685(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=call fastcc i8*@_SMLFN14BoundTypeVarID3Map6insertE(i32 inreg 1,i32 inreg 8)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%e,align 8
%x=bitcast i8**%c to i8***
%y=load i8**,i8***%x,align 8
%z=load i8*,i8**%y,align 8
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%c,align 8
%F=call i8*@sml_alloc(i32 inreg 4)#0
%G=bitcast i8*%F to i32*
%H=getelementptr inbounds i8,i8*%F,i64 -4
%I=bitcast i8*%H to i32*
store i32 4,i32*%I,align 4
store i32%n,i32*%G,align 4
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=call fastcc i8*%C(i8*inreg%J,i8*inreg%F)
store i8*%K,i8**%c,align 8
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=getelementptr inbounds i8,i8*%L,i64 12
%P=bitcast i8*%O to i32*
store i32 0,i32*%P,align 1
%Q=load i8*,i8**%d,align 8
%R=bitcast i8*%L to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 8
%T=bitcast i8*%S to i32*
store i32%n,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=getelementptr inbounds i8,i8*%L,i64 16
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%L,i64 24
%Y=bitcast i8*%X to i32*
store i32 5,i32*%Y,align 4
%Z=load i8*,i8**%e,align 8
%aa=tail call fastcc i8*%u(i8*inreg%Z,i8*inreg%L)
ret i8*%aa
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map7fromSetE_686(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN14BoundTypeVarID3Set5foldlE(i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=bitcast i8**%c to i8***
%r=load i8**,i8***%q,align 8
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map7fromSetE_685 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map7fromSetE_685 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=call fastcc i8*%n(i8*inreg%L,i8*inreg%A)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%c,align 8
%S=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=call fastcc i8*%P(i8*inreg%T,i8*inreg%S)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%d,align 8
%ab=tail call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
ret i8*%ab
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map9domainSetE_689(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 16
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177296,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%o,i64 12
%s=bitcast i8*%r to i32*
store i32 0,i32*%s,align 1
%t=load i8*,i8**%b,align 8
%u=bitcast i8*%o to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i32*
store i32%k,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 1,i32*%y,align 4
%z=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Set3addE(i8*inreg%o)
ret i8*%z
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map9domainSetE_691(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN14BoundTypeVarID3Map6foldliE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**@_SMLZN14BoundTypeVarID3Set5emptyE,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=load i8*,i8**%b,align 8
%A=tail call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
ret i8*%A
}
define internal fastcc i8*@_SMLLN17PolyTyElimination6MetaID3Map4findE_701(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLN17PolyTyElimination6MetaID3Map3mapE_709(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN14BoundTypeVarID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9UnionFind5find_GE_717(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
store i8*%j,i8**%c,align 8
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
switch i32%o,label%p[
i32 1,label%au
i32 0,label%H
]
p:
store i8*null,i8**%c,align 8
call void@sml_matchcomp_bug()
%q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%q,i8**%b,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%c,align 8
%u=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[84x i8]}>,<{[4x i8],i32,[84x i8]}>*@b,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=load i8*,i8**%c,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
H:
%I=getelementptr inbounds i8,i8*%m,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%b,align 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=bitcast i8*%M to i32*
%O=load i32,i32*%N,align 4
%P=icmp eq i32%O,1
br i1%P,label%ag,label%Q
Q:
store i8*null,i8**%b,align 8
%R=call fastcc i8*@_SMLLN17PolyTyElimination9UnionFind5find_GE_717(i8*inreg%K)
store i8*%R,i8**%b,align 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%d,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=bitcast i8*%U to i64*
store i64 0,i64*%X,align 4
%Y=load i8*,i8**%d,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to i32*
store i32 2,i32*%ac,align 4
%ad=load i8*,i8**%c,align 8
%ae=bitcast i8*%ad to i8**
call void@sml_write(i8*inreg%ad,i8**inreg%ae,i8*inreg%U)#0
%af=load i8*,i8**%b,align 8
ret i8*%af
ag:
%ah=getelementptr inbounds i8,i8*%M,i64 8
%ai=bitcast i8*%ah to i8**
%aj=load i8*,i8**%ai,align 8
store i8*%aj,i8**%c,align 8
%ak=call i8*@sml_alloc(i32 inreg 20)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177296,i32*%am,align 4
%an=load i8*,i8**%b,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=load i8*,i8**%c,align 8
%aq=getelementptr inbounds i8,i8*%ak,i64 8
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%ak,i64 16
%at=bitcast i8*%as to i32*
store i32 3,i32*%at,align 4
ret i8*%ak
au:
%av=getelementptr inbounds i8,i8*%m,i64 8
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%b,align 8
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
%aB=load i8*,i8**%c,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=load i8*,i8**%b,align 8
%aE=getelementptr inbounds i8,i8*%ay,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ay,i64 16
%aH=bitcast i8*%aG to i32*
store i32 3,i32*%aH,align 4
ret i8*%ay
}
define internal fastcc void@_SMLLN17PolyTyElimination9UnionFind5unionE_721(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
store i8*null,i8**%c,align 8
store i8*%m,i8**%e,align 8
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLN17PolyTyElimination9UnionFind5find_GE_717(i8*inreg%p)
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%q,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
%y=getelementptr inbounds i8,i8*%v,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%B,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*@_SMLLN17PolyTyElimination9UnionFind5find_GE_717(i8*inreg%E)
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%e,align 8
%I=getelementptr inbounds i8,i8*%F,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
%L=bitcast i8*%K to i32*
%M=load i32,i32*%L,align 4
%N=getelementptr inbounds i8,i8*%K,i64 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%f,align 8
%Q=load i8*,i8**%c,align 8
%R=call i32@sml_obj_equal(i8*inreg%Q,i8*inreg%H)#0
%S=icmp eq i32%R,0
br i1%S,label%U,label%T
T:
ret void
U:
%V=icmp ugt i32%x,%M
br i1%V,label%W,label%a0
W:
%X=bitcast i8**%g to i8***
%Y=load i8**,i8***%X,align 8
%Z=load i8*,i8**%Y,align 8
%aa=getelementptr inbounds i8,i8*%Z,i64 16
%ab=bitcast i8*%aa to i8*(i8*,i8*)**
%ac=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ab,align 8
%ad=bitcast i8*%Z to i8**
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%g,align 8
%af=call i8*@sml_alloc(i32 inreg 20)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177296,i32*%ah,align 4
%ai=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%al=getelementptr inbounds i8,i8*%af,i64 8
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%af,i64 16
%ao=bitcast i8*%an to i32*
store i32 3,i32*%ao,align 4
%ap=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aq=call fastcc i8*%ac(i8*inreg%ap,i8*inreg%af)
store i8*%aq,i8**%d,align 8
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=getelementptr inbounds i8,i8*%ar,i64 4
%av=bitcast i8*%au to i32*
store i32 0,i32*%av,align 1
%aw=bitcast i8*%ar to i32*
store i32%x,i32*%aw,align 4
%ax=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 8
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%ar,i64 16
%aB=bitcast i8*%aA to i32*
store i32 2,i32*%aB,align 4
%aC=call i8*@sml_alloc(i32 inreg 20)#0
%aD=bitcast i8*%aC to i32*
%aE=getelementptr inbounds i8,i8*%aC,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
%aG=getelementptr inbounds i8,i8*%aC,i64 4
%aH=bitcast i8*%aG to i32*
store i32 0,i32*%aH,align 1
store i32 1,i32*%aD,align 4
%aI=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aJ=getelementptr inbounds i8,i8*%aC,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aC,i64 16
%aM=bitcast i8*%aL to i32*
store i32 2,i32*%aM,align 4
%aN=load i8*,i8**%c,align 8
%aO=bitcast i8*%aN to i8**
call void@sml_write(i8*inreg%aN,i8**inreg%aO,i8*inreg%aC)#0
%aP=call i8*@sml_alloc(i32 inreg 20)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177296,i32*%aR,align 4
%aS=bitcast i8*%aP to i64*
store i64 0,i64*%aS,align 4
%aT=load i8*,i8**%c,align 8
%aU=getelementptr inbounds i8,i8*%aP,i64 8
%aV=bitcast i8*%aU to i8**
store i8*%aT,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aP,i64 16
%aX=bitcast i8*%aW to i32*
store i32 2,i32*%aX,align 4
%aY=load i8*,i8**%e,align 8
%aZ=bitcast i8*%aY to i8**
call void@sml_write(i8*inreg%aY,i8**inreg%aZ,i8*inreg%aP)#0
ret void
a0:
%a1=icmp ult i32%x,%M
br i1%a1,label%a2,label%bX
a2:
%a3=call i8*@sml_alloc(i32 inreg 20)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177296,i32*%a5,align 4
%a6=bitcast i8*%a3 to i64*
store i64 0,i64*%a6,align 4
%a7=load i8*,i8**%e,align 8
%a8=getelementptr inbounds i8,i8*%a3,i64 8
%a9=bitcast i8*%a8 to i8**
store i8*%a7,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 16
%bb=bitcast i8*%ba to i32*
store i32 2,i32*%bb,align 4
%bc=load i8*,i8**%c,align 8
%bd=bitcast i8*%bc to i8**
call void@sml_write(i8*inreg%bc,i8**inreg%bd,i8*inreg%a3)#0
%be=bitcast i8**%g to i8***
%bf=load i8**,i8***%be,align 8
%bg=load i8*,i8**%bf,align 8
%bh=getelementptr inbounds i8,i8*%bg,i64 16
%bi=bitcast i8*%bh to i8*(i8*,i8*)**
%bj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bi,align 8
store i8*null,i8**%g,align 8
%bk=bitcast i8**%bf to i8***
%bl=load i8**,i8***%bk,align 8
%bm=load i8*,i8**%bl,align 8
store i8*%bm,i8**%c,align 8
%bn=call i8*@sml_alloc(i32 inreg 20)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177296,i32*%bp,align 4
%bq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%br=bitcast i8*%bn to i8**
store i8*%bq,i8**%br,align 8
%bs=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bt=getelementptr inbounds i8,i8*%bn,i64 8
%bu=bitcast i8*%bt to i8**
store i8*%bs,i8**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bn,i64 16
%bw=bitcast i8*%bv to i32*
store i32 3,i32*%bw,align 4
%bx=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%by=call fastcc i8*%bj(i8*inreg%bx,i8*inreg%bn)
store i8*%by,i8**%c,align 8
%bz=call i8*@sml_alloc(i32 inreg 20)#0
%bA=getelementptr inbounds i8,i8*%bz,i64 -4
%bB=bitcast i8*%bA to i32*
store i32 1342177296,i32*%bB,align 4
store i8*%bz,i8**%d,align 8
%bC=getelementptr inbounds i8,i8*%bz,i64 4
%bD=bitcast i8*%bC to i32*
store i32 0,i32*%bD,align 1
%bE=bitcast i8*%bz to i32*
store i32%M,i32*%bE,align 4
%bF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bG=getelementptr inbounds i8,i8*%bz,i64 8
%bH=bitcast i8*%bG to i8**
store i8*%bF,i8**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bz,i64 16
%bJ=bitcast i8*%bI to i32*
store i32 2,i32*%bJ,align 4
%bK=call i8*@sml_alloc(i32 inreg 20)#0
%bL=bitcast i8*%bK to i32*
%bM=getelementptr inbounds i8,i8*%bK,i64 -4
%bN=bitcast i8*%bM to i32*
store i32 1342177296,i32*%bN,align 4
%bO=getelementptr inbounds i8,i8*%bK,i64 4
%bP=bitcast i8*%bO to i32*
store i32 0,i32*%bP,align 1
store i32 1,i32*%bL,align 4
%bQ=load i8*,i8**%d,align 8
%bR=getelementptr inbounds i8,i8*%bK,i64 8
%bS=bitcast i8*%bR to i8**
store i8*%bQ,i8**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bK,i64 16
%bU=bitcast i8*%bT to i32*
store i32 2,i32*%bU,align 4
%bV=load i8*,i8**%e,align 8
%bW=bitcast i8*%bV to i8**
call void@sml_write(i8*inreg%bV,i8**inreg%bW,i8*inreg%bK)#0
ret void
bX:
%bY=add i32%x,1
%bZ=bitcast i8**%g to i8***
%b0=load i8**,i8***%bZ,align 8
%b1=load i8*,i8**%b0,align 8
%b2=getelementptr inbounds i8,i8*%b1,i64 16
%b3=bitcast i8*%b2 to i8*(i8*,i8*)**
%b4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b3,align 8
%b5=bitcast i8*%b1 to i8**
%b6=load i8*,i8**%b5,align 8
store i8*%b6,i8**%g,align 8
%b7=call i8*@sml_alloc(i32 inreg 20)#0
%b8=getelementptr inbounds i8,i8*%b7,i64 -4
%b9=bitcast i8*%b8 to i32*
store i32 1342177296,i32*%b9,align 4
%ca=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cb=bitcast i8*%b7 to i8**
store i8*%ca,i8**%cb,align 8
%cc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cd=getelementptr inbounds i8,i8*%b7,i64 8
%ce=bitcast i8*%cd to i8**
store i8*%cc,i8**%ce,align 8
%cf=getelementptr inbounds i8,i8*%b7,i64 16
%cg=bitcast i8*%cf to i32*
store i32 3,i32*%cg,align 4
%ch=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ci=call fastcc i8*%b4(i8*inreg%ch,i8*inreg%b7)
store i8*%ci,i8**%d,align 8
%cj=call i8*@sml_alloc(i32 inreg 20)#0
%ck=getelementptr inbounds i8,i8*%cj,i64 -4
%cl=bitcast i8*%ck to i32*
store i32 1342177296,i32*%cl,align 4
store i8*%cj,i8**%f,align 8
%cm=getelementptr inbounds i8,i8*%cj,i64 4
%cn=bitcast i8*%cm to i32*
store i32 0,i32*%cn,align 1
%co=bitcast i8*%cj to i32*
store i32%bY,i32*%co,align 4
%cp=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cq=getelementptr inbounds i8,i8*%cj,i64 8
%cr=bitcast i8*%cq to i8**
store i8*%cp,i8**%cr,align 8
%cs=getelementptr inbounds i8,i8*%cj,i64 16
%ct=bitcast i8*%cs to i32*
store i32 2,i32*%ct,align 4
%cu=call i8*@sml_alloc(i32 inreg 20)#0
%cv=bitcast i8*%cu to i32*
%cw=getelementptr inbounds i8,i8*%cu,i64 -4
%cx=bitcast i8*%cw to i32*
store i32 1342177296,i32*%cx,align 4
%cy=getelementptr inbounds i8,i8*%cu,i64 4
%cz=bitcast i8*%cy to i32*
store i32 0,i32*%cz,align 1
store i32 1,i32*%cv,align 4
%cA=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cB=getelementptr inbounds i8,i8*%cu,i64 8
%cC=bitcast i8*%cB to i8**
store i8*%cA,i8**%cC,align 8
%cD=getelementptr inbounds i8,i8*%cu,i64 16
%cE=bitcast i8*%cD to i32*
store i32 2,i32*%cE,align 4
%cF=load i8*,i8**%c,align 8
%cG=bitcast i8*%cF to i8**
call void@sml_write(i8*inreg%cF,i8**inreg%cG,i8*inreg%cu)#0
%cH=call i8*@sml_alloc(i32 inreg 20)#0
%cI=getelementptr inbounds i8,i8*%cH,i64 -4
%cJ=bitcast i8*%cI to i32*
store i32 1342177296,i32*%cJ,align 4
%cK=bitcast i8*%cH to i64*
store i64 0,i64*%cK,align 4
%cL=load i8*,i8**%c,align 8
%cM=getelementptr inbounds i8,i8*%cH,i64 8
%cN=bitcast i8*%cM to i8**
store i8*%cL,i8**%cN,align 8
%cO=getelementptr inbounds i8,i8*%cH,i64 16
%cP=bitcast i8*%cO to i32*
store i32 2,i32*%cP,align 4
%cQ=load i8*,i8**%e,align 8
%cR=bitcast i8*%cQ to i8**
call void@sml_write(i8*inreg%cQ,i8**inreg%cR,i8*inreg%cH)#0
ret void
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9UnionFind4findE_724(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i8*@_SMLLN17PolyTyElimination9UnionFind5find_GE_717(i8*inreg%h)
%k=getelementptr inbounds i8,i8*%j,i64 8
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
%n=getelementptr inbounds i8,i8*%m,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
ret i8*%p
}
define internal fastcc i8*@_SMLLN17PolyTyElimination5touchE_730(i8*inreg%a)#2 gc"smlsharp"{
n:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%f,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
store i8*null,i8**%f,align 8
%o=bitcast i8*%m to i32*
%p=load i32,i32*%o,align 4
%q=getelementptr inbounds i8,i8*%m,i64 16
%r=bitcast i8*%q to i8***
%s=load i8**,i8***%r,align 8
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%g,align 8
%u=getelementptr inbounds i8*,i8**%s,i64 1
%v=bitcast i8**%u to i32*
%w=load i32,i32*%v,align 4
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%x,i64 12
%B=bitcast i8*%A to i32*
store i32 0,i32*%B,align 1
%C=load i8*,i8**%g,align 8
%D=bitcast i8*%x to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 8
%F=bitcast i8*%E to i32*
store i32%p,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%x,i64 16
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=call fastcc i8*@_SMLLN17PolyTyElimination6MetaID3Map4findE_701(i8*inreg%x)
%J=icmp eq i8*%I,null
br i1%J,label%K,label%bh
K:
%L=call i8*@sml_alloc(i32 inreg 8)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 805306376,i32*%N,align 4
store i8*%L,i8**%f,align 8
%O=bitcast i8*%L to i64*
store i64 0,i64*%O,align 1
%P=bitcast i8*%L to i8**
call void@sml_write(i8*inreg%L,i8**inreg%P,i8*inreg null)#0
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=bitcast i8*%Q to i32*
%S=getelementptr inbounds i8,i8*%Q,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
%U=getelementptr inbounds i8,i8*%Q,i64 4
%V=bitcast i8*%U to i32*
store i32 0,i32*%V,align 1
store i32%p,i32*%R,align 4
%W=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 16
%aa=bitcast i8*%Z to i32*
store i32 2,i32*%aa,align 4
%ab=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ab)
%ac=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ac)
%ad=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ad)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%Q,i8**%c,align 8
%ae=call i8*@sml_alloc(i32 inreg 8)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 805306376,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=bitcast i8*%ae to i64*
store i64 0,i64*%ah,align 1
%ai=call i8*@sml_alloc(i32 inreg 20)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177296,i32*%ak,align 4
store i8*%ai,i8**%d,align 8
%al=bitcast i8*%ai to i64*
store i64 0,i64*%al,align 4
%am=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ai,i64 8
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ai,i64 16
%aq=bitcast i8*%ap to i32*
store i32 2,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=bitcast i8*%ar to i32*
%at=getelementptr inbounds i8,i8*%ar,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177296,i32*%au,align 4
%av=getelementptr inbounds i8,i8*%ar,i64 4
%aw=bitcast i8*%av to i32*
store i32 0,i32*%aw,align 1
store i32 1,i32*%as,align 4
%ax=load i8*,i8**%d,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 8
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%ar,i64 16
%aB=bitcast i8*%aA to i32*
store i32 2,i32*%aB,align 4
%aC=load i8*,i8**%e,align 8
%aD=bitcast i8*%aC to i8**
call void@sml_write(i8*inreg%aC,i8**inreg%aD,i8*inreg%ar)#0
%aE=load i8*,i8**%e,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ab)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ac)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ad)
store i8*%aE,i8**%f,align 8
%aF=call i8*@sml_alloc(i32 inreg 28)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177304,i32*%aH,align 4
%aI=getelementptr inbounds i8,i8*%aF,i64 12
%aJ=bitcast i8*%aI to i32*
store i32 0,i32*%aJ,align 1
%aK=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aL=bitcast i8*%aF to i8**
store i8*%aK,i8**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aF,i64 8
%aN=bitcast i8*%aM to i32*
store i32%p,i32*%aN,align 4
%aO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aP=getelementptr inbounds i8,i8*%aF,i64 16
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aF,i64 24
%aS=bitcast i8*%aR to i32*
store i32 5,i32*%aS,align 4
%aT=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aT)
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%aF,i8**%b,align 8
%aU=load atomic i32,i32*@sml_check_flag unordered,align 4
%aV=icmp eq i32%aU,0
br i1%aV,label%aX,label%aW
aW:
call void@sml_check(i32 inreg%aU)
br label%aX
aX:
%aY=call fastcc i8*@_SMLFN14BoundTypeVarID3Map6insertE(i32 inreg 1,i32 inreg 8)
%aZ=getelementptr inbounds i8,i8*%aY,i64 16
%a0=bitcast i8*%aZ to i8*(i8*,i8*)**
%a1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a0,align 8
%a2=bitcast i8*%aY to i8**
%a3=load i8*,i8**%a2,align 8
%a4=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%a5=call fastcc i8*%a1(i8*inreg%a3,i8*inreg%a4)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aT)
store i8*%a5,i8**%f,align 8
%a6=call i8*@sml_alloc(i32 inreg 20)#0
%a7=getelementptr inbounds i8,i8*%a6,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32 1342177296,i32*%a8,align 4
%a9=getelementptr inbounds i8,i8*%a6,i64 12
%ba=bitcast i8*%a9 to i32*
store i32 0,i32*%ba,align 1
%bb=load i8*,i8**%f,align 8
%bc=bitcast i8*%a6 to i8**
store i8*%bb,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a6,i64 8
%be=bitcast i8*%bd to i32*
store i32 0,i32*%be,align 4
%bf=getelementptr inbounds i8,i8*%a6,i64 16
%bg=bitcast i8*%bf to i32*
store i32 1,i32*%bg,align 4
ret i8*%a6
bh:
%bi=call i8*@sml_alloc(i32 inreg 20)#0
%bj=getelementptr inbounds i8,i8*%bi,i64 -4
%bk=bitcast i8*%bj to i32*
store i32 1342177296,i32*%bk,align 4
%bl=getelementptr inbounds i8,i8*%bi,i64 12
%bm=bitcast i8*%bl to i32*
store i32 0,i32*%bm,align 1
%bn=load i8*,i8**%g,align 8
%bo=bitcast i8*%bi to i8**
store i8*%bn,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bi,i64 8
%bq=bitcast i8*%bp to i32*
store i32%w,i32*%bq,align 4
%br=getelementptr inbounds i8,i8*%bi,i64 16
%bs=bitcast i8*%br to i32*
store i32 1,i32*%bs,align 4
ret i8*%bi
}
define internal fastcc void@_SMLLN17PolyTyElimination5touchE_732(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%f,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8***
br label%o
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%e to i8****
%n=load i8***,i8****%m,align 8
br label%o
o:
%p=phi i8***[%n,%l],[%k,%j]
%q=load i8**,i8***%p,align 8
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%s)
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d,i64 0,i32 2)to i8*),i8**%c,align 8
%t=load atomic i32,i32*@sml_check_flag unordered,align 4
%u=icmp eq i32%t,0
br i1%u,label%w,label%v
v:
call void@sml_check(i32 inreg%t)
br label%w
w:
%x=call fastcc i8*@_SMLFN14BoundTypeVarID3Map6foldliE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=call fastcc i8*%A(i8*inreg%C,i8*inreg%D)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%s)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%g,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
%N=getelementptr inbounds i8,i8*%K,i64 12
%O=bitcast i8*%N to i32*
store i32 0,i32*%O,align 1
%P=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Q=bitcast i8*%K to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 8
%S=bitcast i8*%R to i32*
store i32 1,i32*%S,align 4
%T=getelementptr inbounds i8,i8*%K,i64 16
%U=bitcast i8*%T to i32*
store i32 1,i32*%U,align 4
%V=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%W=call fastcc i8*%H(i8*inreg%V,i8*inreg%K)
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
%ae=getelementptr inbounds i8,i8*%ad,i64 8
%af=bitcast i8*%ae to i32*
%ag=load i32,i32*%af,align 4
%ah=icmp eq i32%ag,0
br i1%ah,label%aj,label%ai
ai:
ret void
aj:
%ak=bitcast i8*%ad to i8**
%al=load i8*,i8**%ak,align 8
%am=bitcast i8**%e to i8***
%an=load i8**,i8***%am,align 8
%ao=load i8*,i8**%an,align 8
%ap=bitcast i8*%ao to i8**
call void@sml_write(i8*inreg%ao,i8**inreg%ap,i8*inreg%al)#0
ret void
}
define internal fastcc i8*@_SMLLN17PolyTyElimination5touchE_733(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17PolyTyElimination5touchE_732 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination5touchE_1715 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination8findNodeE_739(i8*inreg%a,i32 inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8***
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%c to i8****
%l=load i8***,i8****%k,align 8
br label%m
m:
%n=phi i8***[%l,%j],[%i,%h]
%o=load i8**,i8***%n,align 8
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%q,i64 12
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=bitcast i8*%q to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 8
%y=bitcast i8*%x to i32*
store i32%b,i32*%y,align 4
%z=getelementptr inbounds i8,i8*%q,i64 16
%A=bitcast i8*%z to i32*
store i32 1,i32*%A,align 4
%B=call fastcc i8*@_SMLLN17PolyTyElimination6MetaID3Map4findE_701(i8*inreg%q)
%C=icmp eq i8*%B,null
br i1%C,label%D,label%Z
D:
%E=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%E,i8**%c,align 8
%F=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@f,i64 0,i32 2)to i8*))
store i8*%F,i8**%d,align 8
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
store i8*%G,i8**%e,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%M,align 8
%N=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%O=getelementptr inbounds i8,i8*%G,i64 16
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%G,i64 24
%R=bitcast i8*%Q to i32*
store i32 7,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 60)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177336,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%S,i64 56
%W=bitcast i8*%V to i32*
store i32 1,i32*%W,align 4
%X=load i8*,i8**%e,align 8
%Y=bitcast i8*%S to i8**
store i8*%X,i8**%Y,align 8
call void@sml_raise(i8*inreg%S)#1
unreachable
Z:
%aa=bitcast i8*%B to i8**
%ab=load i8*,i8**%aa,align 8
ret i8*%ab
}
define internal fastcc i8*@_SMLLN17PolyTyElimination8findNodeE_740(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i32)*@_SMLLN17PolyTyElimination8findNodeE_739 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8findNodeE_1717 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7equalIdE_742(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 8
%n=bitcast i8*%m to i32**
%o=load i32*,i32**%n,align 8
%p=load i32,i32*%o,align 4
%q=call i8*@sml_alloc(i32 inreg 8)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 805306376,i32*%s,align 4
store i8*%q,i8**%e,align 8
%t=bitcast i8*%q to i64*
store i64 0,i64*%t,align 1
%u=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%d,align 8
%A=bitcast i8**%b to i8***
%B=load i8**,i8***%A,align 8
%C=load i8*,i8**%B,align 8
%D=getelementptr inbounds i8,i8*%C,i64 8
%E=bitcast i8*%D to i8***
%F=load i8**,i8***%E,align 8
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%c,align 8
%H=getelementptr inbounds i8*,i8**%B,i64 1
%I=load i8*,i8**%H,align 8
%J=getelementptr inbounds i8,i8*%I,i64 8
%K=bitcast i8*%J to i8***
%L=load i8**,i8***%K,align 8
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%b,align 8
%N=call i8*@sml_alloc(i32 inreg 20)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%T=getelementptr inbounds i8,i8*%N,i64 8
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%N,i64 16
%W=bitcast i8*%V to i32*
store i32 3,i32*%W,align 4
%X=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Y=call fastcc i8*%x(i8*inreg%X,i8*inreg%N)
%Z=load i8*,i8**%e,align 8
%aa=bitcast i8*%Z to i8**
call void@sml_write(i8*inreg%Z,i8**inreg%aa,i8*inreg%Y)#0
%ab=call i8*@sml_alloc(i32 inreg 20)#0
%ac=bitcast i8*%ab to i32*
%ad=getelementptr inbounds i8,i8*%ab,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
%af=getelementptr inbounds i8,i8*%ab,i64 4
%ag=bitcast i8*%af to i32*
store i32 0,i32*%ag,align 1
store i32%p,i32*%ac,align 4
%ah=load i8*,i8**%e,align 8
%ai=getelementptr inbounds i8,i8*%ab,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 16
%al=bitcast i8*%ak to i32*
store i32 2,i32*%al,align 4
ret i8*%ab
}
define internal fastcc void@_SMLLN17PolyTyElimination7equalIdE_744(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%f,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%f,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%b,%o]
store i8*null,i8**%f,align 8
%p=bitcast i8*%n to i32*
%q=load i32,i32*%p,align 4
%r=getelementptr inbounds i8,i8*%n,i64 4
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
%u=icmp eq i32%q,%t
br i1%u,label%v,label%w
v:
ret void
w:
%x=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%x)
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g,i64 0,i32 2)to i8*),i8**%e,align 8
%y=load atomic i32,i32*@sml_check_flag unordered,align 4
%z=icmp eq i32%y,0
br i1%z,label%C,label%A
A:
call void@sml_check(i32 inreg%y)
%B=load i8*,i8**%e,align 8
br label%C
C:
%D=phi i8*[%B,%A],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g,i64 0,i32 2)to i8*),%w]
store i8*null,i8**%e,align 8
%E=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%E)
%F=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%F)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%D,i8**%c,align 8
%G=call i8*@sml_alloc(i32 inreg 12)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177288,i32*%I,align 4
store i8*%G,i8**%d,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i32*
store i32 1,i32*%M,align 4
%N=call i8*@sml_alloc(i32 inreg 28)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177304,i32*%P,align 4
%Q=load i8*,i8**%d,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17PolyTyElimination9UnionFind5unionE_721 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%N,i64 16
%V=bitcast i8*%U to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9UnionFind5unionE_1709 to void(...)*),void(...)**%V,align 8
%W=getelementptr inbounds i8,i8*%N,i64 24
%X=bitcast i8*%W to i32*
store i32 -2147483647,i32*%X,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%E)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%F)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%x)
store i8*%Q,i8**%h,align 8
%Y=bitcast i8**%g to i8***
%Z=load i8**,i8***%Y,align 8
%aa=load i8*,i8**%Z,align 8
%ab=call fastcc i8*@_SMLLN17PolyTyElimination8findNodeE_740(i8*inreg%aa)
%ac=getelementptr inbounds i8,i8*%ab,i64 16
%ad=bitcast i8*%ac to i8*(i8*,i8*)**
%ae=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ad,align 8
%af=bitcast i8*%ab to i8**
%ag=load i8*,i8**%af,align 8
store i8*%ag,i8**%f,align 8
%ah=call i8*@sml_alloc(i32 inreg 4)#0
%ai=bitcast i8*%ah to i32*
%aj=getelementptr inbounds i8,i8*%ah,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 4,i32*%ak,align 4
store i32%q,i32*%ai,align 4
%al=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%am=call fastcc i8*%ae(i8*inreg%al,i8*inreg%ah)
store i8*%am,i8**%f,align 8
%an=load i8**,i8***%Y,align 8
store i8*null,i8**%g,align 8
%ao=load i8*,i8**%an,align 8
%ap=call fastcc i8*@_SMLLN17PolyTyElimination8findNodeE_740(i8*inreg%ao)
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%g,align 8
%av=call i8*@sml_alloc(i32 inreg 4)#0
%aw=bitcast i8*%av to i32*
%ax=getelementptr inbounds i8,i8*%av,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 4,i32*%ay,align 4
store i32%t,i32*%aw,align 4
%az=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aA=call fastcc i8*%as(i8*inreg%az,i8*inreg%av)
store i8*%aA,i8**%g,align 8
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
%aE=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aB,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 3,i32*%aK,align 4
%aL=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aM=call fastcc i8*@_SMLLN17PolyTyElimination9UnionFind5unionE_1709(i8*inreg%aL,i8*inreg%aB)
ret void
}
define internal fastcc void@_SMLLN17PolyTyElimination10instanceOfE_747(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%k
h:
%i=bitcast i8*%a to i8**
%j=bitcast i8*%b to i8**
br label%p
k:
call void@sml_check(i32 inreg%f)
%l=bitcast i8**%c to i8***
%m=load i8**,i8***%l,align 8
%n=bitcast i8**%d to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%k],[%i,%h]
%r=phi i8**[%m,%k],[%j,%h]
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%e,align 8
store i8*null,i8**%d,align 8
%t=load i8*,i8**%q,align 8
%u=call fastcc i8*@_SMLLN17PolyTyElimination8findNodeE_740(i8*inreg%t)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%d,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%A,i64 8
%C=bitcast i8*%B to i32*
%D=load i32,i32*%C,align 4
%E=call i8*@sml_alloc(i32 inreg 4)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 4,i32*%H,align 4
store i32%D,i32*%F,align 4
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=call fastcc i8*%x(i8*inreg%I,i8*inreg%E)
%K=call fastcc i8*@_SMLLN17PolyTyElimination9UnionFind4findE_724(i8*inreg%J)
%L=getelementptr inbounds i8,i8*%K,i64 8
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%c,align 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%d,align 8
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
%T=load i8*,i8**%e,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=load i8*,i8**%d,align 8
%W=getelementptr inbounds i8,i8*%Q,i64 8
%X=bitcast i8*%W to i8**
store i8*%V,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%Q,i64 16
%Z=bitcast i8*%Y to i32*
store i32 3,i32*%Z,align 4
%aa=load i8*,i8**%c,align 8
%ab=bitcast i8*%aa to i8**
call void@sml_write(i8*inreg%aa,i8**inreg%ab,i8*inreg%Q)#0
ret void
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10instanceOfE_748(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17PolyTyElimination10instanceOfE_747 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10instanceOfE_1722 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLL6tyvars_758(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
store i8*null,i8**%c,align 8
%m=call fastcc i8*@_SMLFN11TypesBasics5EFBTVE(i8*inreg%k)
store i8*%m,i8**%c,align 8
%n=bitcast i8**%d to i8***
%o=load i8**,i8***%n,align 8
store i8*null,i8**%d,align 8
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map9domainSetE_691(i8*inreg%p)
store i8*%q,i8**%d,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=load i8*,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%r,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%r,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call fastcc i32@_SMLFN14BoundTypeVarID3Set8isSubsetE(i8*inreg%r)
%C=icmp eq i32%B,0
br i1%C,label%F,label%D
D:
%E=load i8*,i8**%c,align 8
ret i8*%E
F:
%G=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%G,i8**%c,align 8
%H=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@k,i64 0,i32 2)to i8*))
store i8*%H,i8**%d,align 8
%I=call i8*@sml_alloc(i32 inreg 28)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177304,i32*%K,align 4
store i8*%I,i8**%e,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%O,align 8
%P=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Q=getelementptr inbounds i8,i8*%I,i64 16
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%I,i64 24
%T=bitcast i8*%S to i32*
store i32 7,i32*%T,align 4
%U=call i8*@sml_alloc(i32 inreg 60)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177336,i32*%W,align 4
%X=getelementptr inbounds i8,i8*%U,i64 56
%Y=bitcast i8*%X to i32*
store i32 1,i32*%Y,align 4
%Z=load i8*,i8**%e,align 8
%aa=bitcast i8*%U to i8**
store i8*%Z,i8**%aa,align 8
call void@sml_raise(i8*inreg%U)#1
unreachable
}
define internal fastcc void@_SMLLN17PolyTyElimination11instantiateE_759(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=load i8*,i8**%c,align 8
%n=bitcast i8**%d to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%l],[%k,%j]
%r=phi i8*[%m,%l],[%b,%j]
%s=getelementptr inbounds i8,i8*%r,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=load i8*,i8**%q,align 8
%w=call fastcc i8*@_SMLLN17PolyTyElimination10instanceOfE_748(i8*inreg%v)
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%g,align 8
%C=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%C,i64 8
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%e,align 8
%H=call fastcc i8*@_SMLL6tyvars_758(i8*inreg%F,i8*inreg%G)
store i8*%H,i8**%d,align 8
%I=call i8*@sml_alloc(i32 inreg 20)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177296,i32*%K,align 4
store i8*%I,i8**%f,align 8
%L=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=getelementptr inbounds i8,i8*%I,i64 8
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%I,i64 16
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
store i8*%S,i8**%d,align 8
%V=getelementptr inbounds i8,i8*%S,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
%X=bitcast i8*%S to i32*
store i32 1,i32*%X,align 4
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%S,i64 16
%ac=bitcast i8*%ab to i32*
store i32 2,i32*%ac,align 4
%ad=bitcast i8**%c to i32**
%ae=load i32*,i32**%ad,align 8
store i8*null,i8**%c,align 8
%af=load i32,i32*%ae,align 4
%ag=call i8*@sml_alloc(i32 inreg 20)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
%aj=getelementptr inbounds i8,i8*%ag,i64 12
%ak=bitcast i8*%aj to i32*
store i32 0,i32*%ak,align 1
%al=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%am=bitcast i8*%ag to i8**
store i8*%al,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ag,i64 8
%ao=bitcast i8*%an to i32*
store i32%af,i32*%ao,align 4
%ap=getelementptr inbounds i8,i8*%ag,i64 16
%aq=bitcast i8*%ap to i32*
store i32 1,i32*%aq,align 4
%ar=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%as=call fastcc i8*%z(i8*inreg%ar,i8*inreg%ag)
ret void
}
define internal fastcc void@_SMLLN17PolyTyElimination11instantiateE_764(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"personality i32(...)*@sml_personality{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%c,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%b,%o]
store i8*null,i8**%c,align 8
%p=getelementptr inbounds i8,i8*%n,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=icmp eq i8*%r,null
br i1%s,label%t,label%u
t:
ret void
u:
%v=bitcast i8*%n to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg%w)
%y=icmp eq i8*%x,null
br i1%y,label%D,label%z
z:
%A=bitcast i8*%x to i32*
%B=load i32,i32*%A,align 4
%C=icmp eq i32%B,7
br i1%C,label%Z,label%D
D:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%E=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%E,i8**%c,align 8
%F=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@i,i64 0,i32 2)to i8*))
store i8*%F,i8**%d,align 8
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
store i8*%G,i8**%e,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%M,align 8
%N=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%O=getelementptr inbounds i8,i8*%G,i64 16
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%G,i64 24
%R=bitcast i8*%Q to i32*
store i32 7,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 60)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177336,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%S,i64 56
%W=bitcast i8*%V to i32*
store i32 1,i32*%W,align 4
%X=load i8*,i8**%e,align 8
%Y=bitcast i8*%S to i8**
store i8*%X,i8**%Y,align 8
call void@sml_raise(i8*inreg%S)#1
unreachable
Z:
%aa=getelementptr inbounds i8,i8*%x,i64 8
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%c,align 8
%ad=load i8*,i8**%e,align 8
%ae=getelementptr inbounds i8,i8*%ad,i64 8
%af=bitcast i8*%ae to i8**
%ag=load i8*,i8**%af,align 8
store i8*%ag,i8**%f,align 8
%ah=call i8*@sml_alloc(i32 inreg 12)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177288,i32*%aj,align 4
store i8*%ah,i8**%g,align 8
%ak=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ah,i64 8
%an=bitcast i8*%am to i32*
store i32 1,i32*%an,align 4
%ao=call i8*@sml_alloc(i32 inreg 28)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177304,i32*%aq,align 4
%ar=load i8*,i8**%g,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%ao,i64 8
%au=bitcast i8*%at to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6tyvars_758 to void(...)*),void(...)**%au,align 8
%av=getelementptr inbounds i8,i8*%ao,i64 16
%aw=bitcast i8*%av to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6tyvars_758 to void(...)*),void(...)**%aw,align 8
%ax=getelementptr inbounds i8,i8*%ao,i64 24
%ay=bitcast i8*%ax to i32*
store i32 -2147483647,i32*%ay,align 4
%az=invoke fastcc i8*@_SMLFN8ListPair5appEqE(i32 inreg 0,i32 inreg 4,i32 inreg 1,i32 inreg 8)
to label%aA unwind label%bB
aA:
%aB=getelementptr inbounds i8,i8*%az,i64 16
%aC=bitcast i8*%aB to i8*(i8*,i8*)**
%aD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aC,align 8
%aE=bitcast i8*%az to i8**
%aF=load i8*,i8**%aE,align 8
store i8*%aF,i8**%f,align 8
%aG=bitcast i8**%e to i8***
%aH=load i8**,i8***%aG,align 8
%aI=load i8*,i8**%aH,align 8
store i8*%aI,i8**%e,align 8
%aJ=call i8*@sml_alloc(i32 inreg 20)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177296,i32*%aL,align 4
store i8*%aJ,i8**%h,align 8
%aM=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aP=getelementptr inbounds i8,i8*%aJ,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aJ,i64 16
%aS=bitcast i8*%aR to i32*
store i32 3,i32*%aS,align 4
%aT=call i8*@sml_alloc(i32 inreg 28)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177304,i32*%aV,align 4
%aW=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aT,i64 8
%aZ=bitcast i8*%aY to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17PolyTyElimination11instantiateE_759 to void(...)*),void(...)**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aT,i64 16
%a1=bitcast i8*%a0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination11instantiateE_1724 to void(...)*),void(...)**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aT,i64 24
%a3=bitcast i8*%a2 to i32*
store i32 -2147483647,i32*%a3,align 4
%a4=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a5=invoke fastcc i8*%aD(i8*inreg%a4,i8*inreg%aT)
to label%a6 unwind label%bB
a6:
%a7=getelementptr inbounds i8,i8*%a5,i64 16
%a8=bitcast i8*%a7 to i8*(i8*,i8*)**
%a9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a8,align 8
%ba=bitcast i8*%a5 to i8**
%bb=load i8*,i8**%ba,align 8
store i8*%bb,i8**%e,align 8
%bc=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map8listKeysE(i32 inreg 1,i32 inreg 8)
to label%bd unwind label%bB
bd:
%be=getelementptr inbounds i8,i8*%bc,i64 16
%bf=bitcast i8*%be to i8*(i8*,i8*)**
%bg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bf,align 8
%bh=bitcast i8*%bc to i8**
%bi=load i8*,i8**%bh,align 8
%bj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bk=getelementptr inbounds i8,i8*%bj,i64 8
%bl=bitcast i8*%bk to i8**
%bm=load i8*,i8**%bl,align 8
%bn=invoke fastcc i8*%bg(i8*inreg%bi,i8*inreg%bm)
to label%bo unwind label%bB
bo:
store i8*%bn,i8**%c,align 8
%bp=call i8*@sml_alloc(i32 inreg 20)#0
%bq=getelementptr inbounds i8,i8*%bp,i64 -4
%br=bitcast i8*%bq to i32*
store i32 1342177296,i32*%br,align 4
%bs=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bt=bitcast i8*%bp to i8**
store i8*%bs,i8**%bt,align 8
%bu=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bv=getelementptr inbounds i8,i8*%bp,i64 8
%bw=bitcast i8*%bv to i8**
store i8*%bu,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bp,i64 16
%by=bitcast i8*%bx to i32*
store i32 3,i32*%by,align 4
%bz=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bA=invoke fastcc i8*%a9(i8*inreg%bz,i8*inreg%bp)
to label%t unwind label%bB
bB:
%bC=landingpad{i8*,i8*}
catch i8*null
%bD=extractvalue{i8*,i8*}%bC,1
%bE=bitcast i8*%bD to i8**
%bF=load i8*,i8**%bE,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
store i8*%bF,i8**%c,align 8
%bG=bitcast i8*%bF to i8**
%bH=load i8*,i8**%bG,align 8
%bI=load i8*,i8**@_SMLZN8ListPair14UnequalLengthsE,align 8
%bJ=icmp eq i8*%bH,%bI
br i1%bJ,label%bK,label%b6
bK:
%bL=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%bL,i8**%c,align 8
%bM=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@m,i64 0,i32 2)to i8*))
store i8*%bM,i8**%d,align 8
%bN=call i8*@sml_alloc(i32 inreg 28)#0
%bO=getelementptr inbounds i8,i8*%bN,i64 -4
%bP=bitcast i8*%bO to i32*
store i32 1342177304,i32*%bP,align 4
store i8*%bN,i8**%e,align 8
%bQ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bR=bitcast i8*%bN to i8**
store i8*%bQ,i8**%bR,align 8
%bS=getelementptr inbounds i8,i8*%bN,i64 8
%bT=bitcast i8*%bS to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%bT,align 8
%bU=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bV=getelementptr inbounds i8,i8*%bN,i64 16
%bW=bitcast i8*%bV to i8**
store i8*%bU,i8**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bN,i64 24
%bY=bitcast i8*%bX to i32*
store i32 7,i32*%bY,align 4
%bZ=call i8*@sml_alloc(i32 inreg 60)#0
%b0=getelementptr inbounds i8,i8*%bZ,i64 -4
%b1=bitcast i8*%b0 to i32*
store i32 1342177336,i32*%b1,align 4
%b2=getelementptr inbounds i8,i8*%bZ,i64 56
%b3=bitcast i8*%b2 to i32*
store i32 1,i32*%b3,align 4
%b4=load i8*,i8**%e,align 8
%b5=bitcast i8*%bZ to i8**
store i8*%b4,i8**%b5,align 8
call void@sml_raise(i8*inreg%bZ)#1
unreachable
b6:
%b7=call i8*@sml_alloc(i32 inreg 60)#0
%b8=getelementptr inbounds i8,i8*%b7,i64 -4
%b9=bitcast i8*%b8 to i32*
store i32 1342177336,i32*%b9,align 4
%ca=getelementptr inbounds i8,i8*%b7,i64 56
%cb=bitcast i8*%ca to i32*
store i32 1,i32*%cb,align 4
%cc=load i8*,i8**%c,align 8
%cd=bitcast i8*%b7 to i8**
store i8*%cc,i8**%cd,align 8
call void@sml_raise(i8*inreg%b7)#1
unreachable
}
define internal fastcc i8*@_SMLLN17PolyTyElimination11instantiateE_765(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17PolyTyElimination11instantiateE_764 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination11instantiateE_1725 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i32@_SMLLN17PolyTyElimination10equalUnionE_773(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN14BoundTypeVarID2eqE(i8*inreg%o)
%x=icmp eq i32%w,0
br i1%x,label%z,label%y
y:
ret i32%k
z:
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=bitcast i8*%A to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@q,i64 0,i32 2)to i8*),i8**%F,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10equalUnionE_775(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 0,i32 inreg 4)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%t(i8*inreg%v,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@r,i64 0,i32 2)to i8*))
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%d,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=load i8*,i8**%b,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=load i8*,i8**%d,align 8
%N=tail call fastcc i8*%z(i8*inreg%M,i8*inreg%C)
ret i8*%N
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9equalListE_777(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%f,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=getelementptr inbounds i8,i8*%o,i64 16
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%e,align 8
%x=bitcast i8*%m to i8**
%y=load i8*,i8**%x,align 8
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*null,i8**%f,align 8
%E=getelementptr inbounds i8,i8*%m,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
%H=call fastcc i8*%B(i8*inreg%D,i8*inreg%G)
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8*(i8*,i8*)**
%K=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%J,align 8
%L=bitcast i8*%H to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%f,align 8
%N=call i8*@sml_alloc(i32 inreg 20)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%T=getelementptr inbounds i8,i8*%N,i64 8
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%N,i64 16
%W=bitcast i8*%V to i32*
store i32 3,i32*%W,align 4
%X=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Y=call fastcc i8*%K(i8*inreg%X,i8*inreg%N)
store i8*%Y,i8**%c,align 8
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%c,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=tail call fastcc i8*@_SMLLN17PolyTyElimination10equalUnionE_775(i8*inreg%Z)
ret i8*%aj
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9equalListE_780(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"personality i32(...)*@sml_personality{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%c,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%b,%o]
%p=bitcast i8*%n to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%n,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=invoke fastcc i8*@_SMLFN8ListPair7foldlEqE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
to label%v unwind label%aF
v:
%w=getelementptr inbounds i8,i8*%u,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%u to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%g,align 8
%B=bitcast i8**%e to i8***
%C=load i8**,i8***%B,align 8
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%f,align 8
%E=getelementptr inbounds i8*,i8**%C,i64 1
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%e,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%h,align 8
%J=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%G,i64 16
%P=bitcast i8*%O to i32*
store i32 3,i32*%P,align 4
%Q=call i8*@sml_alloc(i32 inreg 28)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177304,i32*%S,align 4
%T=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9equalListE_777 to void(...)*),void(...)**%W,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 16
%Y=bitcast i8*%X to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9equalListE_777 to void(...)*),void(...)**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 24
%aa=bitcast i8*%Z to i32*
store i32 -2147483647,i32*%aa,align 4
%ab=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ac=invoke fastcc i8*%y(i8*inreg%ab,i8*inreg%Q)
to label%ad unwind label%aF
ad:
%ae=getelementptr inbounds i8,i8*%ac,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ac to i8**
%ai=load i8*,i8**%ah,align 8
store i8*%ai,i8**%e,align 8
%aj=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 0,i32 inreg 4)
to label%ak unwind label%aF
ak:
%al=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%am=invoke fastcc i8*%ag(i8*inreg%al,i8*inreg%aj)
to label%an unwind label%aF
an:
%ao=getelementptr inbounds i8,i8*%am,i64 16
%ap=bitcast i8*%ao to i8*(i8*,i8*)**
%aq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ap,align 8
%ar=bitcast i8*%am to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%e,align 8
%at=call i8*@sml_alloc(i32 inreg 20)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177296,i32*%av,align 4
%aw=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ax=bitcast i8*%at to i8**
store i8*%aw,i8**%ax,align 8
%ay=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%az=getelementptr inbounds i8,i8*%at,i64 8
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%at,i64 16
%aC=bitcast i8*%aB to i32*
store i32 3,i32*%aC,align 4
%aD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aE=invoke fastcc i8*%aq(i8*inreg%aD,i8*inreg%at)
to label%a3 unwind label%aF
aF:
%aG=landingpad{i8*,i8*}
catch i8*null
%aH=extractvalue{i8*,i8*}%aG,1
%aI=bitcast i8*%aH to i8**
%aJ=load i8*,i8**%aI,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*%aJ,i8**%c,align 8
%aK=bitcast i8*%aJ to i8**
%aL=load i8*,i8**%aK,align 8
%aM=load i8*,i8**@_SMLZN8ListPair14UnequalLengthsE,align 8
%aN=icmp eq i8*%aL,%aM
br i1%aN,label%aO,label%aV
aO:
store i8*null,i8**%c,align 8
%aP=call i8*@sml_alloc(i32 inreg 60)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177336,i32*%aR,align 4
%aS=getelementptr inbounds i8,i8*%aP,i64 56
%aT=bitcast i8*%aS to i32*
store i32 1,i32*%aT,align 4
%aU=bitcast i8*%aP to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@u,i64 0,i32 2)to i8*),i8**%aU,align 8
call void@sml_raise(i8*inreg%aP)#1
unreachable
aV:
%aW=call i8*@sml_alloc(i32 inreg 60)#0
%aX=getelementptr inbounds i8,i8*%aW,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177336,i32*%aY,align 4
%aZ=getelementptr inbounds i8,i8*%aW,i64 56
%a0=bitcast i8*%aZ to i32*
store i32 1,i32*%a0,align 4
%a1=load i8*,i8**%c,align 8
%a2=bitcast i8*%aW to i8**
store i8*%a1,i8**%a2,align 8
call void@sml_raise(i8*inreg%aW)#1
unreachable
a3:
ret i8*%aE
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9equalListE_781(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9equalListE_780 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9equalListE_780 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9equalListE_782(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9equalListE_781 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9equalListE_781 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12equalListOptE_788(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
%o=icmp eq i8*%n,null
br i1%o,label%p,label%D
p:
store i8*null,i8**%e,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%u,label%w
u:
%v=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 0,i32 inreg 4)
ret i8*%v
w:
%x=call i8*@sml_alloc(i32 inreg 60)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177336,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%x,i64 56
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=bitcast i8*%x to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@y,i64 0,i32 2)to i8*),i8**%C,align 8
call void@sml_raise(i8*inreg%x)#1
unreachable
D:
%E=bitcast i8*%n to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%c,align 8
%G=getelementptr inbounds i8,i8*%k,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
%J=icmp eq i8*%I,null
br i1%J,label%K,label%R
K:
store i8*null,i8**%c,align 8
store i8*null,i8**%e,align 8
%L=call i8*@sml_alloc(i32 inreg 60)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177336,i32*%N,align 4
%O=getelementptr inbounds i8,i8*%L,i64 56
%P=bitcast i8*%O to i32*
store i32 1,i32*%P,align 4
%Q=bitcast i8*%L to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@w,i64 0,i32 2)to i8*),i8**%Q,align 8
call void@sml_raise(i8*inreg%L)#1
unreachable
R:
%S=bitcast i8*%I to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%d,align 8
%U=bitcast i8**%e to i8***
%V=load i8**,i8***%U,align 8
%W=load i8*,i8**%V,align 8
%X=call fastcc i8*@_SMLLN17PolyTyElimination9equalListE_782(i8*inreg%W)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ae=getelementptr inbounds i8,i8*%ad,i64 8
%af=bitcast i8*%ae to i8**
%ag=load i8*,i8**%af,align 8
%ah=call fastcc i8*%aa(i8*inreg%ac,i8*inreg%ag)
%ai=getelementptr inbounds i8,i8*%ah,i64 16
%aj=bitcast i8*%ai to i8*(i8*,i8*)**
%ak=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aj,align 8
%al=bitcast i8*%ah to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%e,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
%aq=load i8*,i8**%c,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%d,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=load i8*,i8**%e,align 8
%ay=tail call fastcc i8*%ak(i8*inreg%ax,i8*inreg%an)
ret i8*%ay
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12equalListOptE_789(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12equalListOptE_788 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12equalListOptE_788 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12equalListOptE_790(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12equalListOptE_789 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12equalListOptE_789 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15revealOpaqueRepE_793(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
switch i32%o,label%p[
i32 1,label%ac
i32 0,label%H
]
p:
call void@sml_matchcomp_bug()
%q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%q,i8**%b,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%c,align 8
%u=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[84x i8]}>,<{[4x i8],i32,[84x i8]}>*@z,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=load i8*,i8**%c,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
H:
%I=getelementptr inbounds i8,i8*%m,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
%L=getelementptr inbounds i8,i8*%K,i64 8
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%b,align 8
%O=getelementptr inbounds i8,i8*%j,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%c,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
%U=load i8*,i8**%b,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=load i8*,i8**%c,align 8
%X=getelementptr inbounds i8,i8*%R,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%R,i64 16
%aa=bitcast i8*%Z to i32*
store i32 3,i32*%aa,align 4
%ab=tail call fastcc i8*@_SMLFN11TypesBasics7tpappTyE(i8*inreg%R)
ret i8*%ab
ac:
%ad=getelementptr inbounds i8,i8*%m,i64 8
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%b,align 8
%ag=getelementptr inbounds i8,i8*%j,i64 8
%ah=bitcast i8*%ag to i8**
%ai=load i8*,i8**%ah,align 8
store i8*%ai,i8**%c,align 8
%aj=call i8*@sml_alloc(i32 inreg 20)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177296,i32*%al,align 4
store i8*%aj,i8**%d,align 8
%am=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ap=getelementptr inbounds i8,i8*%aj,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%aj,i64 16
%as=bitcast i8*%ar to i32*
store i32 3,i32*%as,align 4
%at=call i8*@sml_alloc(i32 inreg 20)#0
%au=bitcast i8*%at to i32*
%av=getelementptr inbounds i8,i8*%at,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177296,i32*%aw,align 4
%ax=getelementptr inbounds i8,i8*%at,i64 4
%ay=bitcast i8*%ax to i32*
store i32 0,i32*%ay,align 1
store i32 2,i32*%au,align 4
%az=load i8*,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%at,i64 8
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%at,i64 16
%aD=bitcast i8*%aC to i32*
store i32 2,i32*%aD,align 4
ret i8*%at
}
define internal fastcc i8*@_SMLLN17PolyTyElimination11revealTyConE_796(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%p,i64 24
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
switch i32%u,label%v[
i32 0,label%as
i32 2,label%ac
i32 1,label%N
]
v:
store i8*null,i8**%c,align 8
call void@sml_matchcomp_bug()
%w=load i8*,i8**@_SMLZ5Match,align 8
store i8*%w,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%c,align 8
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[84x i8]}>,<{[4x i8],i32,[84x i8]}>*@A,i64 0,i32 2,i64 0),i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 60)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177336,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%G,i64 56
%K=bitcast i8*%J to i32*
store i32 1,i32*%K,align 4
%L=load i8*,i8**%c,align 8
%M=bitcast i8*%G to i8**
store i8*%L,i8**%M,align 8
call void@sml_raise(i8*inreg%G)#1
unreachable
N:
%O=getelementptr inbounds i8,i8*%s,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%c,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=load i8*,i8**%b,align 8
%X=getelementptr inbounds i8,i8*%R,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%R,i64 16
%aa=bitcast i8*%Z to i32*
store i32 3,i32*%aa,align 4
%ab=tail call fastcc i8*@_SMLLN17PolyTyElimination15revealOpaqueRepE_793(i8*inreg%R)
ret i8*%ab
ac:
%ad=getelementptr inbounds i8,i8*%s,i64 8
%ae=bitcast i8*%ad to i8***
%af=load i8**,i8***%ae,align 8
%ag=load i8*,i8**%af,align 8
store i8*%ag,i8**%c,align 8
%ah=call i8*@sml_alloc(i32 inreg 20)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177296,i32*%aj,align 4
%ak=load i8*,i8**%c,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=load i8*,i8**%b,align 8
%an=getelementptr inbounds i8,i8*%ah,i64 8
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ah,i64 16
%aq=bitcast i8*%ap to i32*
store i32 3,i32*%aq,align 4
%ar=tail call fastcc i8*@_SMLLN17PolyTyElimination15revealOpaqueRepE_793(i8*inreg%ah)
ret i8*%ar
as:
%at=call i8*@sml_alloc(i32 inreg 20)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177296,i32*%av,align 4
store i8*%at,i8**%d,align 8
%aw=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ax=bitcast i8*%at to i8**
store i8*%aw,i8**%ax,align 8
%ay=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%az=getelementptr inbounds i8,i8*%at,i64 8
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%at,i64 16
%aC=bitcast i8*%aB to i32*
store i32 3,i32*%aC,align 4
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=bitcast i8*%aD to i32*
%aF=getelementptr inbounds i8,i8*%aD,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177296,i32*%aG,align 4
%aH=getelementptr inbounds i8,i8*%aD,i64 4
%aI=bitcast i8*%aH to i32*
store i32 0,i32*%aI,align 1
store i32 2,i32*%aE,align 4
%aJ=load i8*,i8**%d,align 8
%aK=getelementptr inbounds i8,i8*%aD,i64 8
%aL=bitcast i8*%aK to i8**
store i8*%aJ,i8**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aD,i64 16
%aN=bitcast i8*%aM to i32*
store i32 2,i32*%aN,align 4
ret i8*%aD
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_953(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_954(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7equalTyE_953 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7equalTyE_953 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_958(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
%o=icmp eq i8*%n,null
br i1%o,label%W,label%p
p:
%q=bitcast i8*%n to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=getelementptr inbounds i8,i8*%k,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
store i8*null,i8**%c,align 8
br label%W
x:
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%d,align 8
%A=bitcast i8**%e to i8***
%B=load i8**,i8***%A,align 8
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%e,align 8
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%D,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%D,i64 16
%M=bitcast i8*%L to i32*
store i32 3,i32*%M,align 4
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%N,i8*inreg%D)
store i8*%O,i8**%c,align 8
%P=call i8*@sml_alloc(i32 inreg 12)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177288,i32*%R,align 4
%S=load i8*,i8**%c,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%P,i64 8
%V=bitcast i8*%U to i32*
store i32 1,i32*%V,align 4
ret i8*%P
W:
store i8*null,i8**%e,align 8
%X=call i8*@sml_alloc(i32 inreg 60)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177336,i32*%Z,align 4
%aa=getelementptr inbounds i8,i8*%X,i64 56
%ab=bitcast i8*%aa to i32*
store i32 1,i32*%ab,align 4
%ac=bitcast i8*%X to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ad,i64 0,i32 2)to i8*),i8**%ac,align 8
call void@sml_raise(i8*inreg%X)#1
unreachable
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_961(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_962(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7equalTyE_961 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7equalTyE_961 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLL6subst1_964(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%a,i8**%k,align 8
store i8*%b,i8**%l,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%o,label%q
o:
%p=bitcast i8*%a to i8**
br label%u
q:
call void@sml_check(i32 inreg%m)
%r=load i8*,i8**%l,align 8
%s=bitcast i8**%k to i8***
%t=load i8**,i8***%s,align 8
br label%u
u:
%v=phi i8**[%t,%q],[%p,%o]
%w=phi i8*[%r,%q],[%b,%o]
%x=load i8*,i8**%v,align 8
%y=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%y)
%z=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%z)
%A=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%A)
%B=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%B)
%C=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%C)
%D=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%D)
%E=bitcast i8**%i to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%E)
%F=bitcast i8**%j to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%F)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%x,i8**%c,align 8
store i8*%w,i8**%d,align 8
%G=load atomic i32,i32*@sml_check_flag unordered,align 4
%H=icmp eq i32%G,0
br i1%H,label%K,label%I
I:
call void@sml_check(i32 inreg%G)
%J=load i8*,i8**%d,align 8
br label%K
K:
%L=phi i8*[%J,%I],[%w,%u]
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
%O=bitcast i8*%N to i8**
%P=bitcast i8*%N to i8***
%Q=load i8**,i8***%P,align 8
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%d,align 8
%S=load i8*,i8**%O,align 8
%T=getelementptr inbounds i8,i8*%S,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%e,align 8
%W=getelementptr inbounds i8,i8*%N,i64 16
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%f,align 8
%Z=getelementptr inbounds i8,i8*%L,i64 8
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
%ac=bitcast i8*%ab to i8**
%ad=bitcast i8*%ab to i8***
%ae=load i8**,i8***%ad,align 8
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%g,align 8
%ag=load i8*,i8**%ac,align 8
%ah=getelementptr inbounds i8,i8*%ag,i64 8
%ai=bitcast i8*%ah to i8**
%aj=load i8*,i8**%ai,align 8
store i8*%aj,i8**%h,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 16
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%i,align 8
%an=call fastcc i8*@_SMLLN17PolyTyElimination9equalListE_782(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aO,i64 0,i32 2)to i8*))
%ao=getelementptr inbounds i8,i8*%an,i64 16
%ap=bitcast i8*%ao to i8*(i8*,i8*)**
%aq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ap,align 8
%ar=bitcast i8*%an to i8**
%as=load i8*,i8**%ar,align 8
%at=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%au=call fastcc i8*%aq(i8*inreg%as,i8*inreg%at)
%av=getelementptr inbounds i8,i8*%au,i64 16
%aw=bitcast i8*%av to i8*(i8*,i8*)**
%ax=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aw,align 8
%ay=bitcast i8*%au to i8**
%az=load i8*,i8**%ay,align 8
store i8*%az,i8**%c,align 8
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%j,align 8
%aD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%aA,i64 8
%aG=bitcast i8*%aF to i8**
store i8*null,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aA,i64 16
%aI=bitcast i8*%aH to i32*
store i32 3,i32*%aI,align 4
%aJ=call i8*@sml_alloc(i32 inreg 20)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177296,i32*%aL,align 4
store i8*%aJ,i8**%e,align 8
%aM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aP=getelementptr inbounds i8,i8*%aJ,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aJ,i64 16
%aS=bitcast i8*%aR to i32*
store i32 3,i32*%aS,align 4
%aT=call i8*@sml_alloc(i32 inreg 20)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
store i8*%aT,i8**%d,align 8
%aW=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aT,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
%a3=call i8*@sml_alloc(i32 inreg 20)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177296,i32*%a5,align 4
store i8*%a3,i8**%e,align 8
%a6=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%a3,i64 8
%a9=bitcast i8*%a8 to i8**
store i8*null,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 16
%bb=bitcast i8*%ba to i32*
store i32 3,i32*%bb,align 4
%bc=call i8*@sml_alloc(i32 inreg 20)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177296,i32*%be,align 4
store i8*%bc,i8**%f,align 8
%bf=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bg=bitcast i8*%bc to i8**
store i8*%bf,i8**%bg,align 8
%bh=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bi=getelementptr inbounds i8,i8*%bc,i64 8
%bj=bitcast i8*%bi to i8**
store i8*%bh,i8**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bc,i64 16
%bl=bitcast i8*%bk to i32*
store i32 3,i32*%bl,align 4
%bm=call i8*@sml_alloc(i32 inreg 20)#0
%bn=getelementptr inbounds i8,i8*%bm,i64 -4
%bo=bitcast i8*%bn to i32*
store i32 1342177296,i32*%bo,align 4
store i8*%bm,i8**%e,align 8
%bp=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bq=bitcast i8*%bm to i8**
store i8*%bp,i8**%bq,align 8
%br=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bs=getelementptr inbounds i8,i8*%bm,i64 8
%bt=bitcast i8*%bs to i8**
store i8*%br,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bm,i64 16
%bv=bitcast i8*%bu to i32*
store i32 3,i32*%bv,align 4
%bw=call i8*@sml_alloc(i32 inreg 20)#0
%bx=getelementptr inbounds i8,i8*%bw,i64 -4
%by=bitcast i8*%bx to i32*
store i32 1342177296,i32*%by,align 4
%bz=load i8*,i8**%d,align 8
%bA=bitcast i8*%bw to i8**
store i8*%bz,i8**%bA,align 8
%bB=load i8*,i8**%e,align 8
%bC=getelementptr inbounds i8,i8*%bw,i64 8
%bD=bitcast i8*%bC to i8**
store i8*%bB,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bw,i64 16
%bF=bitcast i8*%bE to i32*
store i32 3,i32*%bF,align 4
%bG=load i8*,i8**%c,align 8
%bH=tail call fastcc i8*%ax(i8*inreg%bG,i8*inreg%bw)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%y)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%z)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%A)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%B)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%C)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%D)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%E)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%F)
ret i8*%bH
}
define internal fastcc i8*@_SMLL6subst1_965(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6subst1_964 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6subst1_964 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc void@_SMLLN17PolyTyElimination7equalTyE_967(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%e,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%b to i32*
br label%p
m:
call void@sml_check(i32 inreg%i)
%n=bitcast i8**%e to i32**
%o=load i32*,i32**%n,align 8
br label%p
p:
%q=phi i32*[%o,%m],[%l,%k]
%r=load i32,i32*%q,align 4
%s=call fastcc i8*@_SMLFN14BoundTypeVarID3Map8inDomainE(i32 inreg 1,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%h,align 8
%y=load i8*,i8**%f,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%g,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 12
%G=bitcast i8*%F to i32*
store i32 0,i32*%G,align 1
%H=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%I=bitcast i8*%C to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i32*
store i32%r,i32*%K,align 4
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 1,i32*%M,align 4
%N=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%O=call fastcc i8*%v(i8*inreg%N,i8*inreg%C)
%P=bitcast i8*%O to i32*
%Q=load i32,i32*%P,align 4
%R=icmp eq i32%Q,0
br i1%R,label%aE,label%S
S:
%T=bitcast i8**%f to i8***
%U=load i8**,i8***%T,align 8
store i8*null,i8**%f,align 8
%V=load i8*,i8**%U,align 8
%W=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%W)
%X=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%X)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%V,i8**%c,align 8
%Y=call i8*@sml_alloc(i32 inreg 12)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177288,i32*%aa,align 4
store i8*%Y,i8**%d,align 8
%ab=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
%af=call i8*@sml_alloc(i32 inreg 28)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177304,i32*%ah,align 4
%ai=load i8*,i8**%d,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17PolyTyElimination7equalIdE_744 to void(...)*),void(...)**%al,align 8
%am=getelementptr inbounds i8,i8*%af,i64 16
%an=bitcast i8*%am to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7equalIdE_1720 to void(...)*),void(...)**%an,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 24
%ap=bitcast i8*%ao to i32*
store i32 -2147483647,i32*%ap,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%W)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%X)
store i8*%ai,i8**%f,align 8
%aq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ar=getelementptr inbounds i8,i8*%aq,i64 4
%as=bitcast i8*%ar to i32*
%at=load i32,i32*%as,align 4
%au=call i8*@sml_alloc(i32 inreg 12)#0
%av=bitcast i8*%au to i32*
%aw=getelementptr inbounds i8,i8*%au,i64 -4
%ax=bitcast i8*%aw to i32*
store i32 1342177288,i32*%ax,align 4
store i32%r,i32*%av,align 4
%ay=getelementptr inbounds i8,i8*%au,i64 4
%az=bitcast i8*%ay to i32*
store i32%at,i32*%az,align 4
%aA=getelementptr inbounds i8,i8*%au,i64 8
%aB=bitcast i8*%aA to i32*
store i32 0,i32*%aB,align 4
%aC=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aD=call fastcc i8*@_SMLLN17PolyTyElimination7equalIdE_1720(i8*inreg%aC,i8*inreg%au)
ret void
aE:
ret void
}
define internal fastcc i32@_SMLLN17PolyTyElimination7equalTyE_968(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%b to i32*
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i32**
%k=load i32*,i32**%j,align 8
br label%l
l:
%m=phi i32*[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i32,i32*%m,align 4
%o=call fastcc i8*@_SMLFN14BoundTypeVarID3Map8inDomainE(i32 inreg 1,i32 inreg 8)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=bitcast i8**%c to i8***
%v=load i8**,i8***%u,align 8
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%x,i64 12
%B=bitcast i8*%A to i32*
store i32 0,i32*%B,align 1
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%x to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 8
%F=bitcast i8*%E to i32*
store i32%n,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%x,i64 16
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=call fastcc i8*%r(i8*inreg%I,i8*inreg%x)
%K=bitcast i8*%J to i32*
%L=load i32,i32*%K,align 4
%M=tail call fastcc i32@_SMLFN4Bool3notE(i32 inreg%L)
ret i32%M
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18equalOverloadMatchE_985(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18equalOverloadMatchE_986(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18equalOverloadMatchE_985 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18equalOverloadMatchE_985 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18equalOverloadMatchE_992(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18equalOverloadMatchE_993(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18equalOverloadMatchE_992 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18equalOverloadMatchE_992 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18equalOverloadMatchE_997(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%o
k:
call void@sml_check(i32 inreg%g)
%l=load i8*,i8**%c,align 8
%m=bitcast i8**%f to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%k],[%j,%i]
%q=phi i8*[%l,%k],[%b,%i]
%r=bitcast i8*%q to i8**
%s=bitcast i8*%q to i8***
%t=load i8**,i8***%s,align 8
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
%v=load i8*,i8**%r,align 8
%w=getelementptr inbounds i8,i8*%v,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%d,align 8
%z=getelementptr inbounds i8,i8*%q,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%e,align 8
%C=load i8*,i8**%p,align 8
store i8*%C,i8**%f,align 8
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%D,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%D,i64 16
%M=bitcast i8*%L to i32*
store i32 3,i32*%M,align 4
%N=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%O=call fastcc i8*@_SMLLN17PolyTyElimination18equalOverloadMatchE_801(i8*inreg%N,i8*inreg%D)
store i8*%O,i8**%c,align 8
%P=call i8*@sml_alloc(i32 inreg 20)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
%S=load i8*,i8**%c,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=load i8*,i8**%e,align 8
%V=getelementptr inbounds i8,i8*%P,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%P,i64 16
%Y=bitcast i8*%X to i32*
store i32 3,i32*%Y,align 4
%Z=tail call fastcc i8*@_SMLLN17PolyTyElimination10equalUnionE_775(i8*inreg%P)
ret i8*%Z
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18equalOverloadMatchE_1002(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
%g=icmp eq i8*%f,null
br i1%g,label%h,label%u
h:
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%m,label%n
m:
ret i8*null
n:
%o=call i8*@sml_alloc(i32 inreg 60)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177336,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%o,i64 56
%s=bitcast i8*%r to i32*
store i32 1,i32*%s,align 4
%t=bitcast i8*%o to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aJ,i64 0,i32 2)to i8*),i8**%t,align 8
call void@sml_raise(i8*inreg%o)#1
unreachable
u:
%v=bitcast i8*%f to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%b,align 8
%x=getelementptr inbounds i8,i8*%a,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=icmp eq i8*%z,null
br i1%A,label%B,label%I
B:
store i8*null,i8**%b,align 8
%C=call i8*@sml_alloc(i32 inreg 60)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177336,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 56
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=bitcast i8*%C to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aH,i64 0,i32 2)to i8*),i8**%H,align 8
call void@sml_raise(i8*inreg%C)#1
unreachable
I:
%J=bitcast i8*%z to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%c,align 8
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
store i8*%L,i8**%d,align 8
%O=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%L,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 12)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177288,i32*%X,align 4
%Y=load i8*,i8**%d,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i32*
store i32 1,i32*%ab,align 4
ret i8*%V
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15equalConstraintE_1007(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15equalConstraintE_1008(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15equalConstraintE_1007 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15equalConstraintE_1007 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13equalTvarKindE_1012(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13equalTvarKindE_1013(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13equalTvarKindE_1012 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13equalTvarKindE_1012 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13equalTvarKindE_1017(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13equalTvarKindE_1018(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13equalTvarKindE_1017 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13equalTvarKindE_1017 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13equalTvarKindE_1020(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination18equalOprimSelectorE_800(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13equalTvarKindE_1021(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13equalTvarKindE_1020 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13equalTvarKindE_1020 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13equalTvarKindE_1027(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13equalTvarKindE_1028(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13equalTvarKindE_1027 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13equalTvarKindE_1027 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination11equalBtvEnvE_1033(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
store i8*null,i8**%c,align 8
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=getelementptr inbounds i8,i8*%p,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%d,align 8
%v=getelementptr inbounds i8,i8*%m,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=bitcast i8*%x to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%x,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%e,align 8
%D=getelementptr inbounds i8,i8*%m,i64 16
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%f,align 8
%G=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9singletonE(i32 inreg 0,i32 inreg 4)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%c,align 8
%M=call i8*@sml_alloc(i32 inreg 12)#0
%N=bitcast i8*%M to i32*
%O=getelementptr inbounds i8,i8*%M,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177288,i32*%P,align 4
store i32%r,i32*%N,align 4
%Q=getelementptr inbounds i8,i8*%M,i64 4
%R=bitcast i8*%Q to i32*
store i32%z,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%M,i64 8
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 4
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=call fastcc i8*%J(i8*inreg%U,i8*inreg%M)
store i8*%V,i8**%c,align 8
%W=bitcast i8**%g to i8***
%X=load i8**,i8***%W,align 8
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%g,align 8
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ak=call fastcc i8*@_SMLLN17PolyTyElimination9equalKindE_803(i8*inreg%aj,i8*inreg%Z)
store i8*%ak,i8**%d,align 8
%al=call i8*@sml_alloc(i32 inreg 20)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177296,i32*%an,align 4
%ao=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ar=getelementptr inbounds i8,i8*%al,i64 8
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%al,i64 16
%au=bitcast i8*%at to i32*
store i32 3,i32*%au,align 4
%av=call fastcc i8*@_SMLLN17PolyTyElimination10equalUnionE_775(i8*inreg%al)
store i8*%av,i8**%c,align 8
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177296,i32*%ay,align 4
%az=load i8*,i8**%c,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=load i8*,i8**%f,align 8
%aC=getelementptr inbounds i8,i8*%aw,i64 8
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%aw,i64 16
%aF=bitcast i8*%aE to i32*
store i32 3,i32*%aF,align 4
%aG=tail call fastcc i8*@_SMLLN17PolyTyElimination10equalUnionE_775(i8*inreg%aw)
ret i8*%aG
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"personality i32(...)*@sml_personality{
t:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
%q=alloca i8*,align 8
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
call void@llvm.gcroot(i8**%q,i8*null)#0
store i8*%a,i8**%j,align 8
store i8*%b,i8**%k,align 8
br label%r
r:
%s=phi i8*[%a,%t],[%wD,%wC]
%u=phi i8*[%b,%t],[%wE,%wC]
%v=load atomic i32,i32*@sml_check_flag unordered,align 4
%w=icmp eq i32%v,0
br i1%w,label%A,label%x
x:
call void@sml_check(i32 inreg%v)
%y=load i8*,i8**%k,align 8
%z=load i8*,i8**%j,align 8
br label%A
A:
%B=phi i8*[%z,%x],[%s,%r]
%C=phi i8*[%y,%x],[%u,%r]
store i8*%B,i8**%m,align 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
%F=getelementptr inbounds i8,i8*%C,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
%I=icmp eq i8*%E,null
br i1%I,label%pq,label%J
J:
%K=bitcast i8*%E to i32*
%L=load i32,i32*%K,align 4
switch i32%L,label%M[
i32 9,label%qu
i32 0,label%pX
i32 4,label%pq
i32 3,label%oh
i32 5,label%m8
i32 10,label%lO
i32 1,label%kU
i32 6,label%jn
i32 8,label%hG
i32 2,label%fc
i32 7,label%ae
]
M:
store i8*null,i8**%m,align 8
call void@sml_matchcomp_bug()
%N=load i8*,i8**@_SMLZ5Match,align 8
store i8*%N,i8**%j,align 8
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
store i8*%O,i8**%k,align 8
%R=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[84x i8]}>,<{[4x i8],i32,[84x i8]}>*@ai,i64 0,i32 2,i64 0),i8**%U,align 8
%V=getelementptr inbounds i8,i8*%O,i64 16
%W=bitcast i8*%V to i32*
store i32 3,i32*%W,align 4
%X=call i8*@sml_alloc(i32 inreg 60)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177336,i32*%Z,align 4
%aa=getelementptr inbounds i8,i8*%X,i64 56
%ab=bitcast i8*%aa to i32*
store i32 1,i32*%ab,align 4
%ac=load i8*,i8**%k,align 8
%ad=bitcast i8*%X to i8**
store i8*%ac,i8**%ad,align 8
call void@sml_raise(i8*inreg%X)#1
unreachable
ae:
%af=getelementptr inbounds i8,i8*%E,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
%ai=bitcast i8*%ah to i8**
%aj=load i8*,i8**%ai,align 8
store i8*%aj,i8**%k,align 8
%ak=getelementptr inbounds i8,i8*%ah,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%n,align 8
%an=getelementptr inbounds i8,i8*%ah,i64 16
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%j,align 8
%aq=icmp eq i8*%H,null
br i1%aq,label%au,label%ar
ar:
%as=bitcast i8*%H to i32*
%at=load i32,i32*%as,align 4
switch i32%at,label%au[
i32 10,label%eZ
i32 2,label%eL
i32 7,label%av
]
au:
store i8*null,i8**%m,align 8
store i8*null,i8**%k,align 8
store i8*null,i8**%n,align 8
store i8*null,i8**%j,align 8
br label%vu
av:
%aw=getelementptr inbounds i8,i8*%H,i64 8
%ax=bitcast i8*%aw to i8**
%ay=load i8*,i8**%ax,align 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%l,align 8
%aB=getelementptr inbounds i8,i8*%ay,i64 8
%aC=bitcast i8*%aB to i8**
%aD=load i8*,i8**%aC,align 8
store i8*%aD,i8**%o,align 8
%aE=getelementptr inbounds i8,i8*%ay,i64 16
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
store i8*%aG,i8**%p,align 8
%aH=call fastcc i8*@_SMLLN17PolyTyElimination9equalListE_782(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ah,i64 0,i32 2)to i8*))
%aI=getelementptr inbounds i8,i8*%aH,i64 16
%aJ=bitcast i8*%aI to i8*(i8*,i8*)**
%aK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aJ,align 8
%aL=bitcast i8*%aH to i8**
%aM=load i8*,i8**%aL,align 8
%aN=load i8*,i8**%m,align 8
%aO=call fastcc i8*%aK(i8*inreg%aM,i8*inreg%aN)
%aP=getelementptr inbounds i8,i8*%aO,i64 16
%aQ=bitcast i8*%aP to i8*(i8*,i8*)**
%aR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aQ,align 8
%aS=bitcast i8*%aO to i8**
%aT=load i8*,i8**%aS,align 8
store i8*%aT,i8**%q,align 8
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
%aX=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aY=bitcast i8*%aU to i8**
store i8*%aX,i8**%aY,align 8
%aZ=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%a0=getelementptr inbounds i8,i8*%aU,i64 8
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aU,i64 16
%a3=bitcast i8*%a2 to i32*
store i32 3,i32*%a3,align 4
%a4=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%a5=call fastcc i8*%aR(i8*inreg%a4,i8*inreg%aU)
store i8*%a5,i8**%j,align 8
%a6=call i8*@sml_alloc(i32 inreg 20)#0
%a7=getelementptr inbounds i8,i8*%a6,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32 1342177296,i32*%a8,align 4
%a9=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ba=bitcast i8*%a6 to i8**
store i8*%a9,i8**%ba,align 8
%bb=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%bc=getelementptr inbounds i8,i8*%a6,i64 8
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a6,i64 16
%bf=bitcast i8*%be to i32*
store i32 3,i32*%bf,align 4
%bg=load i8*,i8**%m,align 8
%bh=call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%bg,i8*inreg%a6)
store i8*%bh,i8**%k,align 8
%bi=call i8*@sml_alloc(i32 inreg 20)#0
%bj=getelementptr inbounds i8,i8*%bi,i64 -4
%bk=bitcast i8*%bj to i32*
store i32 1342177296,i32*%bk,align 4
%bl=load i8*,i8**%n,align 8
%bm=bitcast i8*%bi to i8**
store i8*%bl,i8**%bm,align 8
%bn=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%bo=getelementptr inbounds i8,i8*%bi,i64 8
%bp=bitcast i8*%bo to i8**
store i8*%bn,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bi,i64 16
%br=bitcast i8*%bq to i32*
store i32 3,i32*%br,align 4
%bs=load i8*,i8**%m,align 8
%bt=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bt)
%bu=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bu)
%bv=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bv)
%bw=bitcast i8**%i to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bw)
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%bs,i8**%f,align 8
store i8*%bi,i8**%g,align 8
%bx=load atomic i32,i32*@sml_check_flag unordered,align 4
%by=icmp eq i32%bx,0
br i1%by,label%bA,label%bz
bz:
call void@sml_check(i32 inreg%bx)
br label%bA
bA:
%bB=invoke fastcc i8*@_SMLFN8ListPair7foldlEqE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
to label%bC unwind label%cT
bC:
%bD=getelementptr inbounds i8,i8*%bB,i64 16
%bE=bitcast i8*%bD to i8*(i8*,i8*)**
%bF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bE,align 8
%bG=bitcast i8*%bB to i8**
%bH=load i8*,i8**%bG,align 8
store i8*%bH,i8**%h,align 8
%bI=call i8*@sml_alloc(i32 inreg 12)#0
%bJ=getelementptr inbounds i8,i8*%bI,i64 -4
%bK=bitcast i8*%bJ to i32*
store i32 1342177288,i32*%bK,align 4
store i8*%bI,i8**%i,align 8
%bL=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bM=bitcast i8*%bI to i8**
store i8*%bL,i8**%bM,align 8
%bN=getelementptr inbounds i8,i8*%bI,i64 8
%bO=bitcast i8*%bN to i32*
store i32 1,i32*%bO,align 4
%bP=call i8*@sml_alloc(i32 inreg 28)#0
%bQ=getelementptr inbounds i8,i8*%bP,i64 -4
%bR=bitcast i8*%bQ to i32*
store i32 1342177304,i32*%bR,align 4
%bS=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bT=bitcast i8*%bP to i8**
store i8*%bS,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bP,i64 8
%bV=bitcast i8*%bU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination11equalBtvEnvE_1033 to void(...)*),void(...)**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bP,i64 16
%bX=bitcast i8*%bW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination11equalBtvEnvE_1033 to void(...)*),void(...)**%bX,align 8
%bY=getelementptr inbounds i8,i8*%bP,i64 24
%bZ=bitcast i8*%bY to i32*
store i32 -2147483647,i32*%bZ,align 4
%b0=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%b1=invoke fastcc i8*%bF(i8*inreg%b0,i8*inreg%bP)
to label%b2 unwind label%cT
b2:
%b3=getelementptr inbounds i8,i8*%b1,i64 16
%b4=bitcast i8*%b3 to i8*(i8*,i8*)**
%b5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b4,align 8
%b6=bitcast i8*%b1 to i8**
%b7=load i8*,i8**%b6,align 8
store i8*%b7,i8**%f,align 8
%b8=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 0,i32 inreg 4)
to label%b9 unwind label%cT
b9:
%ca=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cb=invoke fastcc i8*%b5(i8*inreg%ca,i8*inreg%b8)
to label%cc unwind label%cT
cc:
%cd=getelementptr inbounds i8,i8*%cb,i64 16
%ce=bitcast i8*%cd to i8*(i8*,i8*)**
%cf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ce,align 8
%cg=bitcast i8*%cb to i8**
%ch=load i8*,i8**%cg,align 8
store i8*%ch,i8**%h,align 8
%ci=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map10listItemsiE(i32 inreg 1,i32 inreg 8)
to label%cj unwind label%cT
cj:
%ck=getelementptr inbounds i8,i8*%ci,i64 16
%cl=bitcast i8*%ck to i8*(i8*,i8*)**
%cm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cl,align 8
%cn=bitcast i8*%ci to i8**
%co=load i8*,i8**%cn,align 8
%cp=bitcast i8**%g to i8***
%cq=load i8**,i8***%cp,align 8
%cr=load i8*,i8**%cq,align 8
%cs=invoke fastcc i8*%cm(i8*inreg%co,i8*inreg%cr)
to label%ct unwind label%cT
ct:
store i8*%cs,i8**%f,align 8
%cu=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map10listItemsiE(i32 inreg 1,i32 inreg 8)
to label%cv unwind label%cT
cv:
%cw=getelementptr inbounds i8,i8*%cu,i64 16
%cx=bitcast i8*%cw to i8*(i8*,i8*)**
%cy=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cx,align 8
%cz=bitcast i8*%cu to i8**
%cA=load i8*,i8**%cz,align 8
%cB=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cC=getelementptr inbounds i8,i8*%cB,i64 8
%cD=bitcast i8*%cC to i8**
%cE=load i8*,i8**%cD,align 8
%cF=invoke fastcc i8*%cy(i8*inreg%cA,i8*inreg%cE)
to label%cG unwind label%cT
cG:
store i8*%cF,i8**%g,align 8
%cH=call i8*@sml_alloc(i32 inreg 20)#0
%cI=getelementptr inbounds i8,i8*%cH,i64 -4
%cJ=bitcast i8*%cI to i32*
store i32 1342177296,i32*%cJ,align 4
%cK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cL=bitcast i8*%cH to i8**
store i8*%cK,i8**%cL,align 8
%cM=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cN=getelementptr inbounds i8,i8*%cH,i64 8
%cO=bitcast i8*%cN to i8**
store i8*%cM,i8**%cO,align 8
%cP=getelementptr inbounds i8,i8*%cH,i64 16
%cQ=bitcast i8*%cP to i32*
store i32 3,i32*%cQ,align 4
%cR=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cS=invoke fastcc i8*%cf(i8*inreg%cR,i8*inreg%cH)
to label%dh unwind label%cT
cT:
%cU=landingpad{i8*,i8*}
catch i8*null
%cV=extractvalue{i8*,i8*}%cU,1
%cW=bitcast i8*%cV to i8**
%cX=load i8*,i8**%cW,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*%cX,i8**%f,align 8
%cY=bitcast i8*%cX to i8**
%cZ=load i8*,i8**%cY,align 8
%c0=load i8*,i8**@_SMLZN8ListPair14UnequalLengthsE,align 8
%c1=icmp eq i8*%cZ,%c0
br i1%c1,label%c2,label%c9
c2:
store i8*null,i8**%f,align 8
%c3=call i8*@sml_alloc(i32 inreg 60)#0
%c4=getelementptr inbounds i8,i8*%c3,i64 -4
%c5=bitcast i8*%c4 to i32*
store i32 1342177336,i32*%c5,align 4
%c6=getelementptr inbounds i8,i8*%c3,i64 56
%c7=bitcast i8*%c6 to i32*
store i32 1,i32*%c7,align 4
%c8=bitcast i8*%c3 to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a5,i64 0,i32 2)to i8*),i8**%c8,align 8
call void@sml_raise(i8*inreg%c3)#1
unreachable
c9:
%da=call i8*@sml_alloc(i32 inreg 60)#0
%db=getelementptr inbounds i8,i8*%da,i64 -4
%dc=bitcast i8*%db to i32*
store i32 1342177336,i32*%dc,align 4
%dd=getelementptr inbounds i8,i8*%da,i64 56
%de=bitcast i8*%dd to i32*
store i32 1,i32*%de,align 4
%df=load i8*,i8**%f,align 8
%dg=bitcast i8*%da to i8**
store i8*%df,i8**%dg,align 8
call void@sml_raise(i8*inreg%da)#1
unreachable
dh:
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bt)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bu)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bv)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bw)
store i8*%cS,i8**%l,align 8
%di=call i8*@sml_alloc(i32 inreg 20)#0
%dj=getelementptr inbounds i8,i8*%di,i64 -4
%dk=bitcast i8*%dj to i32*
store i32 1342177296,i32*%dk,align 4
%dl=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dm=bitcast i8*%di to i8**
store i8*%dl,i8**%dm,align 8
%dn=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%do=getelementptr inbounds i8,i8*%di,i64 8
%dp=bitcast i8*%do to i8**
store i8*%dn,i8**%dp,align 8
%dq=getelementptr inbounds i8,i8*%di,i64 16
%dr=bitcast i8*%dq to i32*
store i32 3,i32*%dr,align 4
%ds=call fastcc i8*@_SMLLN17PolyTyElimination10equalUnionE_775(i8*inreg%di)
store i8*%ds,i8**%j,align 8
%dt=call i8*@sml_alloc(i32 inreg 20)#0
%du=getelementptr inbounds i8,i8*%dt,i64 -4
%dv=bitcast i8*%du to i32*
store i32 1342177296,i32*%dv,align 4
%dw=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dx=bitcast i8*%dt to i8**
store i8*%dw,i8**%dx,align 8
%dy=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%dz=getelementptr inbounds i8,i8*%dt,i64 8
%dA=bitcast i8*%dz to i8**
store i8*%dy,i8**%dA,align 8
%dB=getelementptr inbounds i8,i8*%dt,i64 16
%dC=bitcast i8*%dB to i32*
store i32 3,i32*%dC,align 4
%dD=call fastcc i8*@_SMLLN17PolyTyElimination10equalUnionE_775(i8*inreg%dt)
store i8*%dD,i8**%j,align 8
%dE=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4appiE(i32 inreg 0,i32 inreg 4)
%dF=getelementptr inbounds i8,i8*%dE,i64 16
%dG=bitcast i8*%dF to i8*(i8*,i8*)**
%dH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dG,align 8
%dI=bitcast i8*%dE to i8**
%dJ=load i8*,i8**%dI,align 8
store i8*%dJ,i8**%k,align 8
%dK=call i8*@sml_alloc(i32 inreg 20)#0
%dL=getelementptr inbounds i8,i8*%dK,i64 -4
%dM=bitcast i8*%dL to i32*
store i32 1342177296,i32*%dM,align 4
store i8*%dK,i8**%l,align 8
%dN=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%dO=bitcast i8*%dK to i8**
store i8*%dN,i8**%dO,align 8
%dP=load i8*,i8**%n,align 8
%dQ=getelementptr inbounds i8,i8*%dK,i64 8
%dR=bitcast i8*%dQ to i8**
store i8*%dP,i8**%dR,align 8
%dS=getelementptr inbounds i8,i8*%dK,i64 16
%dT=bitcast i8*%dS to i32*
store i32 3,i32*%dT,align 4
%dU=call i8*@sml_alloc(i32 inreg 28)#0
%dV=getelementptr inbounds i8,i8*%dU,i64 -4
%dW=bitcast i8*%dV to i32*
store i32 1342177304,i32*%dW,align 4
%dX=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%dY=bitcast i8*%dU to i8**
store i8*%dX,i8**%dY,align 8
%dZ=getelementptr inbounds i8,i8*%dU,i64 8
%d0=bitcast i8*%dZ to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17PolyTyElimination7equalTyE_967 to void(...)*),void(...)**%d0,align 8
%d1=getelementptr inbounds i8,i8*%dU,i64 16
%d2=bitcast i8*%d1 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7equalTyE_1736 to void(...)*),void(...)**%d2,align 8
%d3=getelementptr inbounds i8,i8*%dU,i64 24
%d4=bitcast i8*%d3 to i32*
store i32 -2147483647,i32*%d4,align 4
%d5=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%d6=call fastcc i8*%dH(i8*inreg%d5,i8*inreg%dU)
%d7=getelementptr inbounds i8,i8*%d6,i64 16
%d8=bitcast i8*%d7 to i8*(i8*,i8*)**
%d9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d8,align 8
%ea=bitcast i8*%d6 to i8**
%eb=load i8*,i8**%ea,align 8
%ec=load i8*,i8**%j,align 8
%ed=call fastcc i8*%d9(i8*inreg%eb,i8*inreg%ec)
%ee=call fastcc i8*@_SMLFN14BoundTypeVarID3Map7filteriE(i32 inreg 0,i32 inreg 4)
%ef=getelementptr inbounds i8,i8*%ee,i64 16
%eg=bitcast i8*%ef to i8*(i8*,i8*)**
%eh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eg,align 8
%ei=bitcast i8*%ee to i8**
%ej=load i8*,i8**%ei,align 8
store i8*%ej,i8**%k,align 8
%ek=call i8*@sml_alloc(i32 inreg 12)#0
%el=getelementptr inbounds i8,i8*%ek,i64 -4
%em=bitcast i8*%el to i32*
store i32 1342177288,i32*%em,align 4
store i8*%ek,i8**%l,align 8
%en=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%eo=bitcast i8*%ek to i8**
store i8*%en,i8**%eo,align 8
%ep=getelementptr inbounds i8,i8*%ek,i64 8
%eq=bitcast i8*%ep to i32*
store i32 1,i32*%eq,align 4
%er=call i8*@sml_alloc(i32 inreg 28)#0
%es=getelementptr inbounds i8,i8*%er,i64 -4
%et=bitcast i8*%es to i32*
store i32 1342177304,i32*%et,align 4
%eu=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%ev=bitcast i8*%er to i8**
store i8*%eu,i8**%ev,align 8
%ew=getelementptr inbounds i8,i8*%er,i64 8
%ex=bitcast i8*%ew to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN17PolyTyElimination7equalTyE_968 to void(...)*),void(...)**%ex,align 8
%ey=getelementptr inbounds i8,i8*%er,i64 16
%ez=bitcast i8*%ey to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7equalTyE_1737 to void(...)*),void(...)**%ez,align 8
%eA=getelementptr inbounds i8,i8*%er,i64 24
%eB=bitcast i8*%eA to i32*
store i32 -2147483647,i32*%eB,align 4
%eC=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%eD=call fastcc i8*%eh(i8*inreg%eC,i8*inreg%er)
%eE=getelementptr inbounds i8,i8*%eD,i64 16
%eF=bitcast i8*%eE to i8*(i8*,i8*)**
%eG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eF,align 8
%eH=bitcast i8*%eD to i8**
%eI=load i8*,i8**%eH,align 8
%eJ=load i8*,i8**%j,align 8
%eK=tail call fastcc i8*%eG(i8*inreg%eI,i8*inreg%eJ)
ret i8*%eK
eL:
store i8*null,i8**%k,align 8
store i8*null,i8**%n,align 8
%eM=getelementptr inbounds i8,i8*%H,i64 8
%eN=bitcast i8*%eM to i8**
%eO=load i8*,i8**%eN,align 8
%eP=getelementptr inbounds i8,i8*%eO,i64 8
%eQ=bitcast i8*%eP to i8**
%eR=load i8*,i8**%eQ,align 8
%eS=getelementptr inbounds i8,i8*%eR,i64 24
%eT=bitcast i8*%eS to i32**
%eU=load i32*,i32**%eT,align 8
%eV=load i32,i32*%eU,align 4
switch i32%eV,label%eW[
i32 2,label%eY
i32 1,label%eX
]
eW:
store i8*null,i8**%m,align 8
br label%vu
eX:
store i8*%E,i8**%j,align 8
br label%wo
eY:
store i8*%E,i8**%j,align 8
br label%wF
eZ:
store i8*null,i8**%n,align 8
%e0=getelementptr inbounds i8,i8*%H,i64 8
%e1=bitcast i8*%e0 to i8***
%e2=load i8**,i8***%e1,align 8
%e3=load i8*,i8**%e2,align 8
%e4=bitcast i8*%e3 to i32*
%e5=load i32,i32*%e4,align 4
%e6=icmp eq i32%e5,0
br i1%e6,label%e8,label%e7
e7:
store i8*null,i8**%m,align 8
br label%vu
e8:
%e9=getelementptr inbounds i8,i8*%e3,i64 8
%fa=bitcast i8*%e9 to i8**
%fb=load i8*,i8**%fa,align 8
store i8*%E,i8**%j,align 8
store i8*%fb,i8**%k,align 8
br label%xj
fc:
%fd=getelementptr inbounds i8,i8*%E,i64 8
%fe=bitcast i8*%fd to i8**
%ff=load i8*,i8**%fe,align 8
%fg=bitcast i8*%ff to i8**
%fh=load i8*,i8**%fg,align 8
store i8*%fh,i8**%j,align 8
%fi=getelementptr inbounds i8,i8*%ff,i64 8
%fj=bitcast i8*%fi to i8**
%fk=load i8*,i8**%fj,align 8
%fl=getelementptr inbounds i8,i8*%fk,i64 24
%fm=bitcast i8*%fl to i32**
%fn=load i32*,i32**%fm,align 8
%fo=load i32,i32*%fn,align 4
switch i32%fo,label%fp[
i32 2,label%g9
i32 1,label%gC
]
fp:
%fq=icmp eq i8*%H,null
br i1%fq,label%fu,label%fr
fr:
%fs=bitcast i8*%H to i32*
%ft=load i32,i32*%fs,align 4
switch i32%ft,label%fu[
i32 10,label%gp
i32 2,label%fv
]
fu:
store i8*null,i8**%m,align 8
store i8*null,i8**%j,align 8
br label%vB
fv:
%fw=getelementptr inbounds i8,i8*%H,i64 8
%fx=bitcast i8*%fw to i8**
%fy=load i8*,i8**%fx,align 8
%fz=bitcast i8*%fy to i8**
%fA=load i8*,i8**%fz,align 8
store i8*%fA,i8**%k,align 8
%fB=getelementptr inbounds i8,i8*%fy,i64 8
%fC=bitcast i8*%fB to i8**
%fD=load i8*,i8**%fC,align 8
%fE=getelementptr inbounds i8,i8*%fD,i64 24
%fF=bitcast i8*%fE to i32**
%fG=load i32*,i32**%fF,align 8
%fH=load i32,i32*%fG,align 4
switch i32%fH,label%fI[
i32 2,label%go
i32 1,label%gn
]
fI:
%fJ=getelementptr inbounds i8,i8*%fk,i64 40
%fK=bitcast i8*%fJ to i32*
%fL=load i32,i32*%fK,align 4
%fM=getelementptr inbounds i8,i8*%fD,i64 40
%fN=bitcast i8*%fM to i32*
%fO=load i32,i32*%fN,align 4
%fP=icmp eq i32%fL,%fO
br i1%fP,label%fQ,label%gg
fQ:
%fR=call fastcc i8*@_SMLLN17PolyTyElimination9equalListE_782(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ag,i64 0,i32 2)to i8*))
%fS=getelementptr inbounds i8,i8*%fR,i64 16
%fT=bitcast i8*%fS to i8*(i8*,i8*)**
%fU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fT,align 8
%fV=bitcast i8*%fR to i8**
%fW=load i8*,i8**%fV,align 8
%fX=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%fY=call fastcc i8*%fU(i8*inreg%fW,i8*inreg%fX)
%fZ=getelementptr inbounds i8,i8*%fY,i64 16
%f0=bitcast i8*%fZ to i8*(i8*,i8*)**
%f1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%f0,align 8
%f2=bitcast i8*%fY to i8**
%f3=load i8*,i8**%f2,align 8
store i8*%f3,i8**%l,align 8
%f4=call i8*@sml_alloc(i32 inreg 20)#0
%f5=getelementptr inbounds i8,i8*%f4,i64 -4
%f6=bitcast i8*%f5 to i32*
store i32 1342177296,i32*%f6,align 4
%f7=load i8*,i8**%j,align 8
%f8=bitcast i8*%f4 to i8**
store i8*%f7,i8**%f8,align 8
%f9=load i8*,i8**%k,align 8
%ga=getelementptr inbounds i8,i8*%f4,i64 8
%gb=bitcast i8*%ga to i8**
store i8*%f9,i8**%gb,align 8
%gc=getelementptr inbounds i8,i8*%f4,i64 16
%gd=bitcast i8*%gc to i32*
store i32 3,i32*%gd,align 4
%ge=load i8*,i8**%l,align 8
%gf=tail call fastcc i8*%f1(i8*inreg%ge,i8*inreg%f4)
ret i8*%gf
gg:
store i8*null,i8**%m,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
%gh=call i8*@sml_alloc(i32 inreg 60)#0
%gi=getelementptr inbounds i8,i8*%gh,i64 -4
%gj=bitcast i8*%gi to i32*
store i32 1342177336,i32*%gj,align 4
%gk=getelementptr inbounds i8,i8*%gh,i64 56
%gl=bitcast i8*%gk to i32*
store i32 1,i32*%gl,align 4
%gm=bitcast i8*%gh to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@af,i64 0,i32 2)to i8*),i8**%gm,align 8
call void@sml_raise(i8*inreg%gh)#1
unreachable
gn:
store i8*null,i8**%k,align 8
store i8*%E,i8**%j,align 8
br label%wo
go:
store i8*null,i8**%k,align 8
store i8*%E,i8**%j,align 8
br label%wF
gp:
%gq=getelementptr inbounds i8,i8*%H,i64 8
%gr=bitcast i8*%gq to i8***
%gs=load i8**,i8***%gr,align 8
%gt=load i8*,i8**%gs,align 8
%gu=bitcast i8*%gt to i32*
%gv=load i32,i32*%gu,align 4
%gw=icmp eq i32%gv,0
br i1%gw,label%gy,label%gx
gx:
store i8*null,i8**%m,align 8
br label%vB
gy:
%gz=getelementptr inbounds i8,i8*%gt,i64 8
%gA=bitcast i8*%gz to i8**
%gB=load i8*,i8**%gA,align 8
store i8*%E,i8**%j,align 8
store i8*%gB,i8**%k,align 8
br label%xj
gC:
%gD=icmp eq i8*%H,null
br i1%gD,label%gH,label%gE
gE:
%gF=bitcast i8*%H to i32*
%gG=load i32,i32*%gF,align 4
switch i32%gG,label%gH[
i32 10,label%gW
i32 2,label%gI
]
gH:
store i8*%H,i8**%j,align 8
br label%wT
gI:
%gJ=getelementptr inbounds i8,i8*%H,i64 8
%gK=bitcast i8*%gJ to i8**
%gL=load i8*,i8**%gK,align 8
%gM=getelementptr inbounds i8,i8*%gL,i64 8
%gN=bitcast i8*%gM to i8**
%gO=load i8*,i8**%gN,align 8
%gP=getelementptr inbounds i8,i8*%gO,i64 24
%gQ=bitcast i8*%gP to i32**
%gR=load i32*,i32**%gQ,align 8
%gS=load i32,i32*%gR,align 4
switch i32%gS,label%gT[
i32 2,label%gV
i32 1,label%gU
]
gT:
store i8*%H,i8**%j,align 8
br label%wT
gU:
store i8*%H,i8**%j,align 8
br label%wT
gV:
store i8*%H,i8**%j,align 8
br label%wT
gW:
%gX=getelementptr inbounds i8,i8*%H,i64 8
%gY=bitcast i8*%gX to i8***
%gZ=load i8**,i8***%gY,align 8
%g0=load i8*,i8**%gZ,align 8
%g1=bitcast i8*%g0 to i32*
%g2=load i32,i32*%g1,align 4
%g3=icmp eq i32%g2,0
br i1%g3,label%g5,label%g4
g4:
store i8*%H,i8**%j,align 8
br label%wT
g5:
%g6=getelementptr inbounds i8,i8*%g0,i64 8
%g7=bitcast i8*%g6 to i8**
%g8=load i8*,i8**%g7,align 8
store i8*%E,i8**%j,align 8
store i8*%g8,i8**%k,align 8
br label%xj
g9:
%ha=icmp eq i8*%H,null
br i1%ha,label%he,label%hb
hb:
%hc=bitcast i8*%H to i32*
%hd=load i32,i32*%hc,align 4
switch i32%hd,label%he[
i32 10,label%ht
i32 2,label%hf
]
he:
store i8*%H,i8**%j,align 8
br label%w6
hf:
%hg=getelementptr inbounds i8,i8*%H,i64 8
%hh=bitcast i8*%hg to i8**
%hi=load i8*,i8**%hh,align 8
%hj=getelementptr inbounds i8,i8*%hi,i64 8
%hk=bitcast i8*%hj to i8**
%hl=load i8*,i8**%hk,align 8
%hm=getelementptr inbounds i8,i8*%hl,i64 24
%hn=bitcast i8*%hm to i32**
%ho=load i32*,i32**%hn,align 8
%hp=load i32,i32*%ho,align 4
switch i32%hp,label%hq[
i32 2,label%hs
i32 1,label%hr
]
hq:
store i8*%H,i8**%j,align 8
br label%w6
hr:
store i8*%H,i8**%j,align 8
br label%w6
hs:
store i8*%H,i8**%j,align 8
br label%w6
ht:
%hu=getelementptr inbounds i8,i8*%H,i64 8
%hv=bitcast i8*%hu to i8***
%hw=load i8**,i8***%hv,align 8
%hx=load i8*,i8**%hw,align 8
%hy=bitcast i8*%hx to i32*
%hz=load i32,i32*%hy,align 4
%hA=icmp eq i32%hz,0
br i1%hA,label%hC,label%hB
hB:
store i8*%H,i8**%j,align 8
br label%w6
hC:
%hD=getelementptr inbounds i8,i8*%hx,i64 8
%hE=bitcast i8*%hD to i8**
%hF=load i8*,i8**%hE,align 8
store i8*%E,i8**%j,align 8
store i8*%hF,i8**%k,align 8
br label%xj
hG:
%hH=getelementptr inbounds i8,i8*%E,i64 8
%hI=bitcast i8*%hH to i8**
%hJ=load i8*,i8**%hI,align 8
store i8*%hJ,i8**%j,align 8
%hK=icmp eq i8*%H,null
br i1%hK,label%hO,label%hL
hL:
%hM=bitcast i8*%H to i32*
%hN=load i32,i32*%hM,align 4
switch i32%hN,label%hO[
i32 10,label%ja
i32 8,label%h3
i32 2,label%hP
]
hO:
store i8*null,i8**%m,align 8
store i8*null,i8**%j,align 8
br label%vI
hP:
%hQ=getelementptr inbounds i8,i8*%H,i64 8
%hR=bitcast i8*%hQ to i8**
%hS=load i8*,i8**%hR,align 8
%hT=getelementptr inbounds i8,i8*%hS,i64 8
%hU=bitcast i8*%hT to i8**
%hV=load i8*,i8**%hU,align 8
%hW=getelementptr inbounds i8,i8*%hV,i64 24
%hX=bitcast i8*%hW to i32**
%hY=load i32*,i32**%hX,align 8
%hZ=load i32,i32*%hY,align 4
switch i32%hZ,label%h0[
i32 2,label%h2
i32 1,label%h1
]
h0:
store i8*null,i8**%m,align 8
br label%vI
h1:
store i8*%E,i8**%j,align 8
br label%wo
h2:
store i8*%E,i8**%j,align 8
br label%wF
h3:
%h4=getelementptr inbounds i8,i8*%H,i64 8
%h5=bitcast i8*%h4 to i8**
%h6=load i8*,i8**%h5,align 8
store i8*%h6,i8**%k,align 8
%h7=call fastcc i8*@_SMLFN11RecordLabel3Map5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h8=getelementptr inbounds i8,i8*%h7,i64 16
%h9=bitcast i8*%h8 to i8*(i8*,i8*)**
%ia=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%h9,align 8
%ib=bitcast i8*%h7 to i8**
%ic=load i8*,i8**%ib,align 8
%id=call fastcc i8*%ia(i8*inreg%ic,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@s,i64 0,i32 2)to i8*))
%ie=getelementptr inbounds i8,i8*%id,i64 16
%if=bitcast i8*%ie to i8*(i8*,i8*)**
%ig=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%if,align 8
%ih=bitcast i8*%id to i8**
%ii=load i8*,i8**%ih,align 8
store i8*%ii,i8**%l,align 8
%ij=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 0,i32 inreg 4)
%ik=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%il=call fastcc i8*%ig(i8*inreg%ik,i8*inreg%ij)
%im=getelementptr inbounds i8,i8*%il,i64 16
%in=bitcast i8*%im to i8*(i8*,i8*)**
%io=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%in,align 8
%ip=bitcast i8*%il to i8**
%iq=load i8*,i8**%ip,align 8
store i8*%iq,i8**%n,align 8
%ir=call fastcc i8*@_SMLFN11RecordLabel3Map9mergeWithE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%is=getelementptr inbounds i8,i8*%ir,i64 16
%it=bitcast i8*%is to i8*(i8*,i8*)**
%iu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%it,align 8
%iv=bitcast i8*%ir to i8**
%iw=load i8*,i8**%iv,align 8
store i8*%iw,i8**%l,align 8
%ix=call i8*@sml_alloc(i32 inreg 12)#0
%iy=getelementptr inbounds i8,i8*%ix,i64 -4
%iz=bitcast i8*%iy to i32*
store i32 1342177288,i32*%iz,align 4
store i8*%ix,i8**%o,align 8
%iA=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%iB=bitcast i8*%ix to i8**
store i8*%iA,i8**%iB,align 8
%iC=getelementptr inbounds i8,i8*%ix,i64 8
%iD=bitcast i8*%iC to i32*
store i32 1,i32*%iD,align 4
%iE=call i8*@sml_alloc(i32 inreg 28)#0
%iF=getelementptr inbounds i8,i8*%iE,i64 -4
%iG=bitcast i8*%iF to i32*
store i32 1342177304,i32*%iG,align 4
%iH=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%iI=bitcast i8*%iE to i8**
store i8*%iH,i8**%iI,align 8
%iJ=getelementptr inbounds i8,i8*%iE,i64 8
%iK=bitcast i8*%iJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7equalTyE_958 to void(...)*),void(...)**%iK,align 8
%iL=getelementptr inbounds i8,i8*%iE,i64 16
%iM=bitcast i8*%iL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7equalTyE_958 to void(...)*),void(...)**%iM,align 8
%iN=getelementptr inbounds i8,i8*%iE,i64 24
%iO=bitcast i8*%iN to i32*
store i32 -2147483647,i32*%iO,align 4
%iP=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%iQ=call fastcc i8*%iu(i8*inreg%iP,i8*inreg%iE)
%iR=getelementptr inbounds i8,i8*%iQ,i64 16
%iS=bitcast i8*%iR to i8*(i8*,i8*)**
%iT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%iS,align 8
%iU=bitcast i8*%iQ to i8**
%iV=load i8*,i8**%iU,align 8
store i8*%iV,i8**%l,align 8
%iW=call i8*@sml_alloc(i32 inreg 20)#0
%iX=getelementptr inbounds i8,i8*%iW,i64 -4
%iY=bitcast i8*%iX to i32*
store i32 1342177296,i32*%iY,align 4
%iZ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%i0=bitcast i8*%iW to i8**
store i8*%iZ,i8**%i0,align 8
%i1=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%i2=getelementptr inbounds i8,i8*%iW,i64 8
%i3=bitcast i8*%i2 to i8**
store i8*%i1,i8**%i3,align 8
%i4=getelementptr inbounds i8,i8*%iW,i64 16
%i5=bitcast i8*%i4 to i32*
store i32 3,i32*%i5,align 4
%i6=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%i7=call fastcc i8*%iT(i8*inreg%i6,i8*inreg%iW)
%i8=load i8*,i8**%n,align 8
%i9=tail call fastcc i8*%io(i8*inreg%i8,i8*inreg%i7)
ret i8*%i9
ja:
%jb=getelementptr inbounds i8,i8*%H,i64 8
%jc=bitcast i8*%jb to i8***
%jd=load i8**,i8***%jc,align 8
%je=load i8*,i8**%jd,align 8
%jf=bitcast i8*%je to i32*
%jg=load i32,i32*%jf,align 4
%jh=icmp eq i32%jg,0
br i1%jh,label%jj,label%ji
ji:
store i8*null,i8**%m,align 8
br label%vI
jj:
%jk=getelementptr inbounds i8,i8*%je,i64 8
%jl=bitcast i8*%jk to i8**
%jm=load i8*,i8**%jl,align 8
store i8*%E,i8**%j,align 8
store i8*%jm,i8**%k,align 8
br label%xj
jn:
%jo=getelementptr inbounds i8,i8*%E,i64 8
%jp=bitcast i8*%jo to i8**
%jq=load i8*,i8**%jp,align 8
%jr=bitcast i8*%jq to i8**
%js=load i8*,i8**%jr,align 8
store i8*%js,i8**%j,align 8
%jt=getelementptr inbounds i8,i8*%jq,i64 8
%ju=bitcast i8*%jt to i8**
%jv=load i8*,i8**%ju,align 8
store i8*%jv,i8**%k,align 8
%jw=icmp eq i8*%H,null
br i1%jw,label%jA,label%jx
jx:
%jy=bitcast i8*%H to i32*
%jz=load i32,i32*%jy,align 4
switch i32%jz,label%jA[
i32 10,label%kH
i32 6,label%jP
i32 2,label%jB
]
jA:
store i8*null,i8**%m,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
br label%vP
jB:
store i8*null,i8**%k,align 8
%jC=getelementptr inbounds i8,i8*%H,i64 8
%jD=bitcast i8*%jC to i8**
%jE=load i8*,i8**%jD,align 8
%jF=getelementptr inbounds i8,i8*%jE,i64 8
%jG=bitcast i8*%jF to i8**
%jH=load i8*,i8**%jG,align 8
%jI=getelementptr inbounds i8,i8*%jH,i64 24
%jJ=bitcast i8*%jI to i32**
%jK=load i32*,i32**%jJ,align 8
%jL=load i32,i32*%jK,align 4
switch i32%jL,label%jM[
i32 2,label%jO
i32 1,label%jN
]
jM:
store i8*null,i8**%m,align 8
br label%vP
jN:
store i8*%E,i8**%j,align 8
br label%wo
jO:
store i8*%E,i8**%j,align 8
br label%wF
jP:
%jQ=getelementptr inbounds i8,i8*%H,i64 8
%jR=bitcast i8*%jQ to i8**
%jS=load i8*,i8**%jR,align 8
%jT=bitcast i8*%jS to i8**
%jU=load i8*,i8**%jT,align 8
store i8*%jU,i8**%l,align 8
%jV=getelementptr inbounds i8,i8*%jS,i64 8
%jW=bitcast i8*%jV to i8**
%jX=load i8*,i8**%jW,align 8
store i8*%jX,i8**%n,align 8
%jY=call fastcc i8*@_SMLLN17PolyTyElimination9equalListE_782(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ab,i64 0,i32 2)to i8*))
%jZ=getelementptr inbounds i8,i8*%jY,i64 16
%j0=bitcast i8*%jZ to i8*(i8*,i8*)**
%j1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j0,align 8
%j2=bitcast i8*%jY to i8**
%j3=load i8*,i8**%j2,align 8
%j4=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%j5=call fastcc i8*%j1(i8*inreg%j3,i8*inreg%j4)
%j6=getelementptr inbounds i8,i8*%j5,i64 16
%j7=bitcast i8*%j6 to i8*(i8*,i8*)**
%j8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j7,align 8
%j9=bitcast i8*%j5 to i8**
%ka=load i8*,i8**%j9,align 8
store i8*%ka,i8**%m,align 8
%kb=call i8*@sml_alloc(i32 inreg 20)#0
%kc=getelementptr inbounds i8,i8*%kb,i64 -4
%kd=bitcast i8*%kc to i32*
store i32 1342177296,i32*%kd,align 4
store i8*%kb,i8**%o,align 8
%ke=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%kf=bitcast i8*%kb to i8**
store i8*%ke,i8**%kf,align 8
%kg=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%kh=getelementptr inbounds i8,i8*%kb,i64 8
%ki=bitcast i8*%kh to i8**
store i8*%kg,i8**%ki,align 8
%kj=getelementptr inbounds i8,i8*%kb,i64 16
%kk=bitcast i8*%kj to i32*
store i32 3,i32*%kk,align 4
%kl=call i8*@sml_alloc(i32 inreg 20)#0
%km=getelementptr inbounds i8,i8*%kl,i64 -4
%kn=bitcast i8*%km to i32*
store i32 1342177296,i32*%kn,align 4
store i8*%kl,i8**%j,align 8
%ko=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%kp=bitcast i8*%kl to i8**
store i8*%ko,i8**%kp,align 8
%kq=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%kr=getelementptr inbounds i8,i8*%kl,i64 8
%ks=bitcast i8*%kr to i8**
store i8*%kq,i8**%ks,align 8
%kt=getelementptr inbounds i8,i8*%kl,i64 16
%ku=bitcast i8*%kt to i32*
store i32 3,i32*%ku,align 4
%kv=call i8*@sml_alloc(i32 inreg 20)#0
%kw=getelementptr inbounds i8,i8*%kv,i64 -4
%kx=bitcast i8*%kw to i32*
store i32 1342177296,i32*%kx,align 4
%ky=load i8*,i8**%o,align 8
%kz=bitcast i8*%kv to i8**
store i8*%ky,i8**%kz,align 8
%kA=load i8*,i8**%j,align 8
%kB=getelementptr inbounds i8,i8*%kv,i64 8
%kC=bitcast i8*%kB to i8**
store i8*%kA,i8**%kC,align 8
%kD=getelementptr inbounds i8,i8*%kv,i64 16
%kE=bitcast i8*%kD to i32*
store i32 3,i32*%kE,align 4
%kF=load i8*,i8**%m,align 8
%kG=tail call fastcc i8*%j8(i8*inreg%kF,i8*inreg%kv)
ret i8*%kG
kH:
%kI=getelementptr inbounds i8,i8*%H,i64 8
%kJ=bitcast i8*%kI to i8***
%kK=load i8**,i8***%kJ,align 8
%kL=load i8*,i8**%kK,align 8
%kM=bitcast i8*%kL to i32*
%kN=load i32,i32*%kM,align 4
%kO=icmp eq i32%kN,0
br i1%kO,label%kQ,label%kP
kP:
store i8*null,i8**%m,align 8
br label%vP
kQ:
%kR=getelementptr inbounds i8,i8*%kL,i64 8
%kS=bitcast i8*%kR to i8**
%kT=load i8*,i8**%kS,align 8
store i8*%E,i8**%j,align 8
store i8*%kT,i8**%k,align 8
br label%xj
kU:
%kV=icmp eq i8*%H,null
br i1%kV,label%kZ,label%kW
kW:
%kX=bitcast i8*%H to i32*
%kY=load i32,i32*%kX,align 4
switch i32%kY,label%kZ[
i32 10,label%lB
i32 1,label%le
i32 2,label%k0
]
kZ:
store i8*null,i8**%m,align 8
br label%vW
k0:
%k1=getelementptr inbounds i8,i8*%H,i64 8
%k2=bitcast i8*%k1 to i8**
%k3=load i8*,i8**%k2,align 8
%k4=getelementptr inbounds i8,i8*%k3,i64 8
%k5=bitcast i8*%k4 to i8**
%k6=load i8*,i8**%k5,align 8
%k7=getelementptr inbounds i8,i8*%k6,i64 24
%k8=bitcast i8*%k7 to i32**
%k9=load i32*,i32**%k8,align 8
%la=load i32,i32*%k9,align 4
switch i32%la,label%lb[
i32 2,label%ld
i32 1,label%lc
]
lb:
store i8*null,i8**%m,align 8
br label%vW
lc:
store i8*%E,i8**%j,align 8
br label%wo
ld:
store i8*%E,i8**%j,align 8
br label%wF
le:
%lf=getelementptr inbounds i8,i8*%E,i64 4
%lg=bitcast i8*%lf to i32*
%lh=load i32,i32*%lg,align 4
store i8*null,i8**%m,align 8
%li=getelementptr inbounds i8,i8*%H,i64 4
%lj=bitcast i8*%li to i32*
%lk=load i32,i32*%lj,align 4
%ll=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9singletonE(i32 inreg 0,i32 inreg 4)
%lm=getelementptr inbounds i8,i8*%ll,i64 16
%ln=bitcast i8*%lm to i8*(i8*,i8*)**
%lo=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ln,align 8
%lp=bitcast i8*%ll to i8**
%lq=load i8*,i8**%lp,align 8
store i8*%lq,i8**%j,align 8
%lr=call i8*@sml_alloc(i32 inreg 12)#0
%ls=bitcast i8*%lr to i32*
%lt=getelementptr inbounds i8,i8*%lr,i64 -4
%lu=bitcast i8*%lt to i32*
store i32 1342177288,i32*%lu,align 4
store i32%lh,i32*%ls,align 4
%lv=getelementptr inbounds i8,i8*%lr,i64 4
%lw=bitcast i8*%lv to i32*
store i32%lk,i32*%lw,align 4
%lx=getelementptr inbounds i8,i8*%lr,i64 8
%ly=bitcast i8*%lx to i32*
store i32 0,i32*%ly,align 4
%lz=load i8*,i8**%j,align 8
%lA=tail call fastcc i8*%lo(i8*inreg%lz,i8*inreg%lr)
ret i8*%lA
lB:
%lC=getelementptr inbounds i8,i8*%H,i64 8
%lD=bitcast i8*%lC to i8***
%lE=load i8**,i8***%lD,align 8
%lF=load i8*,i8**%lE,align 8
%lG=bitcast i8*%lF to i32*
%lH=load i32,i32*%lG,align 4
%lI=icmp eq i32%lH,0
br i1%lI,label%lK,label%lJ
lJ:
store i8*null,i8**%m,align 8
br label%vW
lK:
%lL=getelementptr inbounds i8,i8*%lF,i64 8
%lM=bitcast i8*%lL to i8**
%lN=load i8*,i8**%lM,align 8
store i8*%E,i8**%j,align 8
store i8*%lN,i8**%k,align 8
br label%xj
lO:
%lP=getelementptr inbounds i8,i8*%E,i64 8
%lQ=bitcast i8*%lP to i8***
%lR=load i8**,i8***%lQ,align 8
%lS=load i8*,i8**%lR,align 8
%lT=bitcast i8*%lS to i32*
%lU=load i32,i32*%lT,align 4
switch i32%lU,label%lV[
i32 1,label%mB
i32 0,label%md
]
lV:
store i8*null,i8**%m,align 8
call void@sml_matchcomp_bug()
%lW=load i8*,i8**@_SMLZ5Match,align 8
store i8*%lW,i8**%j,align 8
%lX=call i8*@sml_alloc(i32 inreg 20)#0
%lY=getelementptr inbounds i8,i8*%lX,i64 -4
%lZ=bitcast i8*%lY to i32*
store i32 1342177296,i32*%lZ,align 4
store i8*%lX,i8**%k,align 8
%l0=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%l1=bitcast i8*%lX to i8**
store i8*%l0,i8**%l1,align 8
%l2=getelementptr inbounds i8,i8*%lX,i64 8
%l3=bitcast i8*%l2 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[84x i8]}>,<{[4x i8],i32,[84x i8]}>*@ai,i64 0,i32 2,i64 0),i8**%l3,align 8
%l4=getelementptr inbounds i8,i8*%lX,i64 16
%l5=bitcast i8*%l4 to i32*
store i32 3,i32*%l5,align 4
%l6=call i8*@sml_alloc(i32 inreg 60)#0
%l7=getelementptr inbounds i8,i8*%l6,i64 -4
%l8=bitcast i8*%l7 to i32*
store i32 1342177336,i32*%l8,align 4
%l9=getelementptr inbounds i8,i8*%l6,i64 56
%ma=bitcast i8*%l9 to i32*
store i32 1,i32*%ma,align 4
%mb=load i8*,i8**%k,align 8
%mc=bitcast i8*%l6 to i8**
store i8*%mb,i8**%mc,align 8
call void@sml_raise(i8*inreg%l6)#1
unreachable
md:
%me=getelementptr inbounds i8,i8*%lS,i64 8
%mf=bitcast i8*%me to i8**
%mg=load i8*,i8**%mf,align 8
%mh=icmp eq i8*%H,null
br i1%mh,label%ml,label%mi
mi:
%mj=bitcast i8*%H to i32*
%mk=load i32,i32*%mj,align 4
switch i32%mk,label%ml[
i32 10,label%mA
i32 2,label%mm
]
ml:
store i8*%mg,i8**%j,align 8
store i8*%H,i8**%k,align 8
br label%xv
mm:
%mn=getelementptr inbounds i8,i8*%H,i64 8
%mo=bitcast i8*%mn to i8**
%mp=load i8*,i8**%mo,align 8
%mq=getelementptr inbounds i8,i8*%mp,i64 8
%mr=bitcast i8*%mq to i8**
%ms=load i8*,i8**%mr,align 8
%mt=getelementptr inbounds i8,i8*%ms,i64 24
%mu=bitcast i8*%mt to i32**
%mv=load i32*,i32**%mu,align 8
%mw=load i32,i32*%mv,align 4
switch i32%mw,label%mx[
i32 2,label%mz
i32 1,label%my
]
mx:
store i8*%mg,i8**%j,align 8
store i8*%H,i8**%k,align 8
br label%xv
my:
store i8*%mg,i8**%j,align 8
store i8*%H,i8**%k,align 8
br label%xv
mz:
store i8*%mg,i8**%j,align 8
store i8*%H,i8**%k,align 8
br label%xv
mA:
store i8*%mg,i8**%j,align 8
store i8*%H,i8**%k,align 8
br label%xv
mB:
%mC=icmp eq i8*%H,null
br i1%mC,label%mG,label%mD
mD:
%mE=bitcast i8*%H to i32*
%mF=load i32,i32*%mE,align 4
switch i32%mF,label%mG[
i32 10,label%mV
i32 2,label%mH
]
mG:
store i8*null,i8**%m,align 8
br label%uq
mH:
%mI=getelementptr inbounds i8,i8*%H,i64 8
%mJ=bitcast i8*%mI to i8**
%mK=load i8*,i8**%mJ,align 8
%mL=getelementptr inbounds i8,i8*%mK,i64 8
%mM=bitcast i8*%mL to i8**
%mN=load i8*,i8**%mM,align 8
%mO=getelementptr inbounds i8,i8*%mN,i64 24
%mP=bitcast i8*%mO to i32**
%mQ=load i32*,i32**%mP,align 8
%mR=load i32,i32*%mQ,align 4
switch i32%mR,label%mS[
i32 2,label%mU
i32 1,label%mT
]
mS:
store i8*null,i8**%m,align 8
br label%uq
mT:
store i8*%E,i8**%j,align 8
br label%wo
mU:
store i8*%E,i8**%j,align 8
br label%wF
mV:
%mW=getelementptr inbounds i8,i8*%H,i64 8
%mX=bitcast i8*%mW to i8***
%mY=load i8**,i8***%mX,align 8
%mZ=load i8*,i8**%mY,align 8
%m0=bitcast i8*%mZ to i32*
%m1=load i32,i32*%m0,align 4
%m2=icmp eq i32%m1,0
br i1%m2,label%m4,label%m3
m3:
store i8*null,i8**%m,align 8
br label%uq
m4:
%m5=getelementptr inbounds i8,i8*%mZ,i64 8
%m6=bitcast i8*%m5 to i8**
%m7=load i8*,i8**%m6,align 8
store i8*%E,i8**%j,align 8
store i8*%m7,i8**%k,align 8
br label%xj
m8:
%m9=getelementptr inbounds i8,i8*%E,i64 8
%na=bitcast i8*%m9 to i8**
%nb=load i8*,i8**%na,align 8
%nc=bitcast i8*%nb to i32*
%nd=load i32,i32*%nc,align 4
%ne=getelementptr inbounds i8,i8*%nb,i64 8
%nf=bitcast i8*%ne to i8**
%ng=load i8*,i8**%nf,align 8
store i8*%ng,i8**%j,align 8
%nh=icmp eq i8*%H,null
br i1%nh,label%nl,label%ni
ni:
%nj=bitcast i8*%H to i32*
%nk=load i32,i32*%nj,align 4
switch i32%nk,label%nl[
i32 5,label%nN
i32 10,label%nA
i32 2,label%nm
]
nl:
store i8*null,i8**%m,align 8
store i8*null,i8**%j,align 8
br label%v3
nm:
%nn=getelementptr inbounds i8,i8*%H,i64 8
%no=bitcast i8*%nn to i8**
%np=load i8*,i8**%no,align 8
%nq=getelementptr inbounds i8,i8*%np,i64 8
%nr=bitcast i8*%nq to i8**
%ns=load i8*,i8**%nr,align 8
%nt=getelementptr inbounds i8,i8*%ns,i64 24
%nu=bitcast i8*%nt to i32**
%nv=load i32*,i32**%nu,align 8
%nw=load i32,i32*%nv,align 4
switch i32%nw,label%nx[
i32 2,label%nz
i32 1,label%ny
]
nx:
store i8*null,i8**%m,align 8
br label%v3
ny:
store i8*%E,i8**%j,align 8
br label%wo
nz:
store i8*%E,i8**%j,align 8
br label%wF
nA:
%nB=getelementptr inbounds i8,i8*%H,i64 8
%nC=bitcast i8*%nB to i8***
%nD=load i8**,i8***%nC,align 8
%nE=load i8*,i8**%nD,align 8
%nF=bitcast i8*%nE to i32*
%nG=load i32,i32*%nF,align 4
%nH=icmp eq i32%nG,0
br i1%nH,label%nJ,label%nI
nI:
store i8*null,i8**%m,align 8
br label%v3
nJ:
%nK=getelementptr inbounds i8,i8*%nE,i64 8
%nL=bitcast i8*%nK to i8**
%nM=load i8*,i8**%nL,align 8
store i8*%E,i8**%j,align 8
store i8*%nM,i8**%k,align 8
br label%xj
nN:
%nO=getelementptr inbounds i8,i8*%H,i64 8
%nP=bitcast i8*%nO to i8**
%nQ=load i8*,i8**%nP,align 8
%nR=bitcast i8*%nQ to i32*
%nS=load i32,i32*%nR,align 4
%nT=getelementptr inbounds i8,i8*%nQ,i64 8
%nU=bitcast i8*%nT to i8**
%nV=load i8*,i8**%nU,align 8
store i8*%nV,i8**%k,align 8
%nW=icmp eq i32%nd,%nS
br i1%nW,label%nX,label%oa
nX:
%nY=call i8*@sml_alloc(i32 inreg 20)#0
%nZ=getelementptr inbounds i8,i8*%nY,i64 -4
%n0=bitcast i8*%nZ to i32*
store i32 1342177296,i32*%n0,align 4
%n1=load i8*,i8**%j,align 8
%n2=bitcast i8*%nY to i8**
store i8*%n1,i8**%n2,align 8
%n3=load i8*,i8**%k,align 8
%n4=getelementptr inbounds i8,i8*%nY,i64 8
%n5=bitcast i8*%n4 to i8**
store i8*%n3,i8**%n5,align 8
%n6=getelementptr inbounds i8,i8*%nY,i64 16
%n7=bitcast i8*%n6 to i32*
store i32 3,i32*%n7,align 4
%n8=load i8*,i8**%m,align 8
%n9=tail call fastcc i8*@_SMLLN17PolyTyElimination9equalKindE_803(i8*inreg%n8,i8*inreg%nY)
ret i8*%n9
oa:
store i8*null,i8**%m,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
%ob=call i8*@sml_alloc(i32 inreg 60)#0
%oc=getelementptr inbounds i8,i8*%ob,i64 -4
%od=bitcast i8*%oc to i32*
store i32 1342177336,i32*%od,align 4
%oe=getelementptr inbounds i8,i8*%ob,i64 56
%of=bitcast i8*%oe to i32*
store i32 1,i32*%of,align 4
%og=bitcast i8*%ob to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aa,i64 0,i32 2)to i8*),i8**%og,align 8
call void@sml_raise(i8*inreg%ob)#1
unreachable
oh:
%oi=getelementptr inbounds i8,i8*%E,i64 8
%oj=bitcast i8*%oi to i8**
%ok=load i8*,i8**%oj,align 8
%ol=bitcast i8*%ok to i32*
%om=load i32,i32*%ol,align 4
%on=getelementptr inbounds i8,i8*%ok,i64 8
%oo=bitcast i8*%on to i8**
%op=load i8*,i8**%oo,align 8
store i8*%op,i8**%j,align 8
%oq=icmp eq i8*%H,null
br i1%oq,label%ou,label%or
or:
%os=bitcast i8*%H to i32*
%ot=load i32,i32*%os,align 4
switch i32%ot,label%ou[
i32 3,label%oW
i32 10,label%oJ
i32 2,label%ov
]
ou:
store i8*null,i8**%m,align 8
store i8*null,i8**%j,align 8
br label%wa
ov:
%ow=getelementptr inbounds i8,i8*%H,i64 8
%ox=bitcast i8*%ow to i8**
%oy=load i8*,i8**%ox,align 8
%oz=getelementptr inbounds i8,i8*%oy,i64 8
%oA=bitcast i8*%oz to i8**
%oB=load i8*,i8**%oA,align 8
%oC=getelementptr inbounds i8,i8*%oB,i64 24
%oD=bitcast i8*%oC to i32**
%oE=load i32*,i32**%oD,align 8
%oF=load i32,i32*%oE,align 4
switch i32%oF,label%oG[
i32 2,label%oI
i32 1,label%oH
]
oG:
store i8*null,i8**%m,align 8
br label%wa
oH:
store i8*%E,i8**%j,align 8
br label%wo
oI:
store i8*%E,i8**%j,align 8
br label%wF
oJ:
%oK=getelementptr inbounds i8,i8*%H,i64 8
%oL=bitcast i8*%oK to i8***
%oM=load i8**,i8***%oL,align 8
%oN=load i8*,i8**%oM,align 8
%oO=bitcast i8*%oN to i32*
%oP=load i32,i32*%oO,align 4
%oQ=icmp eq i32%oP,0
br i1%oQ,label%oS,label%oR
oR:
store i8*null,i8**%m,align 8
br label%wa
oS:
%oT=getelementptr inbounds i8,i8*%oN,i64 8
%oU=bitcast i8*%oT to i8**
%oV=load i8*,i8**%oU,align 8
store i8*%E,i8**%j,align 8
store i8*%oV,i8**%k,align 8
br label%xj
oW:
%oX=getelementptr inbounds i8,i8*%H,i64 8
%oY=bitcast i8*%oX to i8**
%oZ=load i8*,i8**%oY,align 8
%o0=bitcast i8*%oZ to i32*
%o1=load i32,i32*%o0,align 4
%o2=getelementptr inbounds i8,i8*%oZ,i64 8
%o3=bitcast i8*%o2 to i8**
%o4=load i8*,i8**%o3,align 8
store i8*%o4,i8**%k,align 8
%o5=icmp eq i32%om,%o1
br i1%o5,label%o6,label%pj
o6:
%o7=call i8*@sml_alloc(i32 inreg 20)#0
%o8=getelementptr inbounds i8,i8*%o7,i64 -4
%o9=bitcast i8*%o8 to i32*
store i32 1342177296,i32*%o9,align 4
%pa=load i8*,i8**%j,align 8
%pb=bitcast i8*%o7 to i8**
store i8*%pa,i8**%pb,align 8
%pc=load i8*,i8**%k,align 8
%pd=getelementptr inbounds i8,i8*%o7,i64 8
%pe=bitcast i8*%pd to i8**
store i8*%pc,i8**%pe,align 8
%pf=getelementptr inbounds i8,i8*%o7,i64 16
%pg=bitcast i8*%pf to i32*
store i32 3,i32*%pg,align 4
%ph=load i8*,i8**%m,align 8
%pi=tail call fastcc i8*@_SMLLN17PolyTyElimination9equalKindE_803(i8*inreg%ph,i8*inreg%o7)
ret i8*%pi
pj:
store i8*null,i8**%m,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
%pk=call i8*@sml_alloc(i32 inreg 60)#0
%pl=getelementptr inbounds i8,i8*%pk,i64 -4
%pm=bitcast i8*%pl to i32*
store i32 1342177336,i32*%pm,align 4
%pn=getelementptr inbounds i8,i8*%pk,i64 56
%po=bitcast i8*%pn to i32*
store i32 1,i32*%po,align 4
%pp=bitcast i8*%pk to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@Y,i64 0,i32 2)to i8*),i8**%pp,align 8
call void@sml_raise(i8*inreg%pk)#1
unreachable
pq:
%pr=icmp eq i8*%H,null
br i1%pr,label%pv,label%ps
ps:
%pt=bitcast i8*%H to i32*
%pu=load i32,i32*%pt,align 4
switch i32%pu,label%pv[
i32 10,label%pK
i32 2,label%pw
]
pv:
store i8*null,i8**%m,align 8
br label%uM
pw:
%px=getelementptr inbounds i8,i8*%H,i64 8
%py=bitcast i8*%px to i8**
%pz=load i8*,i8**%py,align 8
%pA=getelementptr inbounds i8,i8*%pz,i64 8
%pB=bitcast i8*%pA to i8**
%pC=load i8*,i8**%pB,align 8
%pD=getelementptr inbounds i8,i8*%pC,i64 24
%pE=bitcast i8*%pD to i32**
%pF=load i32*,i32**%pE,align 8
%pG=load i32,i32*%pF,align 4
switch i32%pG,label%pH[
i32 2,label%pJ
i32 1,label%pI
]
pH:
store i8*null,i8**%m,align 8
br label%uM
pI:
store i8*%E,i8**%j,align 8
br label%wo
pJ:
store i8*%E,i8**%j,align 8
br label%wF
pK:
%pL=getelementptr inbounds i8,i8*%H,i64 8
%pM=bitcast i8*%pL to i8***
%pN=load i8**,i8***%pM,align 8
%pO=load i8*,i8**%pN,align 8
%pP=bitcast i8*%pO to i32*
%pQ=load i32,i32*%pP,align 4
%pR=icmp eq i32%pQ,0
br i1%pR,label%pT,label%pS
pS:
store i8*null,i8**%m,align 8
br label%uM
pT:
%pU=getelementptr inbounds i8,i8*%pO,i64 8
%pV=bitcast i8*%pU to i8**
%pW=load i8*,i8**%pV,align 8
store i8*%E,i8**%j,align 8
store i8*%pW,i8**%k,align 8
br label%xj
pX:
%pY=icmp eq i8*%H,null
br i1%pY,label%p2,label%pZ
pZ:
%p0=bitcast i8*%H to i32*
%p1=load i32,i32*%p0,align 4
switch i32%p1,label%p2[
i32 10,label%qh
i32 2,label%p3
]
p2:
store i8*null,i8**%m,align 8
br label%u8
p3:
%p4=getelementptr inbounds i8,i8*%H,i64 8
%p5=bitcast i8*%p4 to i8**
%p6=load i8*,i8**%p5,align 8
%p7=getelementptr inbounds i8,i8*%p6,i64 8
%p8=bitcast i8*%p7 to i8**
%p9=load i8*,i8**%p8,align 8
%qa=getelementptr inbounds i8,i8*%p9,i64 24
%qb=bitcast i8*%qa to i32**
%qc=load i32*,i32**%qb,align 8
%qd=load i32,i32*%qc,align 4
switch i32%qd,label%qe[
i32 2,label%qg
i32 1,label%qf
]
qe:
store i8*null,i8**%m,align 8
br label%u8
qf:
store i8*%E,i8**%j,align 8
br label%wo
qg:
store i8*%E,i8**%j,align 8
br label%wF
qh:
%qi=getelementptr inbounds i8,i8*%H,i64 8
%qj=bitcast i8*%qi to i8***
%qk=load i8**,i8***%qj,align 8
%ql=load i8*,i8**%qk,align 8
%qm=bitcast i8*%ql to i32*
%qn=load i32,i32*%qm,align 4
%qo=icmp eq i32%qn,0
br i1%qo,label%qq,label%qp
qp:
store i8*null,i8**%m,align 8
br label%u8
qq:
%qr=getelementptr inbounds i8,i8*%ql,i64 8
%qs=bitcast i8*%qr to i8**
%qt=load i8*,i8**%qs,align 8
store i8*%E,i8**%j,align 8
store i8*%qt,i8**%k,align 8
br label%xj
qu:
%qv=getelementptr inbounds i8,i8*%E,i64 8
%qw=bitcast i8*%qv to i8**
%qx=load i8*,i8**%qw,align 8
store i8*%qx,i8**%j,align 8
%qy=icmp eq i8*%H,null
br i1%qy,label%qC,label%qz
qz:
%qA=bitcast i8*%H to i32*
%qB=load i32,i32*%qA,align 4
switch i32%qB,label%qC[
i32 9,label%q4
i32 10,label%qR
i32 2,label%qD
]
qC:
store i8*null,i8**%m,align 8
store i8*null,i8**%j,align 8
br label%wh
qD:
%qE=getelementptr inbounds i8,i8*%H,i64 8
%qF=bitcast i8*%qE to i8**
%qG=load i8*,i8**%qF,align 8
%qH=getelementptr inbounds i8,i8*%qG,i64 8
%qI=bitcast i8*%qH to i8**
%qJ=load i8*,i8**%qI,align 8
%qK=getelementptr inbounds i8,i8*%qJ,i64 24
%qL=bitcast i8*%qK to i32**
%qM=load i32*,i32**%qL,align 8
%qN=load i32,i32*%qM,align 4
switch i32%qN,label%qO[
i32 2,label%qQ
i32 1,label%qP
]
qO:
store i8*null,i8**%m,align 8
br label%wh
qP:
store i8*%E,i8**%j,align 8
br label%wo
qQ:
store i8*%E,i8**%j,align 8
br label%wF
qR:
%qS=getelementptr inbounds i8,i8*%H,i64 8
%qT=bitcast i8*%qS to i8***
%qU=load i8**,i8***%qT,align 8
%qV=load i8*,i8**%qU,align 8
%qW=bitcast i8*%qV to i32*
%qX=load i32,i32*%qW,align 4
%qY=icmp eq i32%qX,0
br i1%qY,label%q0,label%qZ
qZ:
store i8*null,i8**%m,align 8
br label%wh
q0:
%q1=getelementptr inbounds i8,i8*%qV,i64 8
%q2=bitcast i8*%q1 to i8**
%q3=load i8*,i8**%q2,align 8
store i8*%E,i8**%j,align 8
store i8*%q3,i8**%k,align 8
br label%xj
q4:
%q5=getelementptr inbounds i8,i8*%H,i64 8
%q6=bitcast i8*%q5 to i8**
%q7=load i8*,i8**%q6,align 8
store i8*%q7,i8**%k,align 8
%q8=call i8*@sml_alloc(i32 inreg 20)#0
%q9=getelementptr inbounds i8,i8*%q8,i64 -4
%ra=bitcast i8*%q9 to i32*
store i32 1342177296,i32*%ra,align 4
%rb=load i8*,i8**%j,align 8
%rc=bitcast i8*%q8 to i8**
store i8*%rb,i8**%rc,align 8
%rd=load i8*,i8**%k,align 8
%re=getelementptr inbounds i8,i8*%q8,i64 8
%rf=bitcast i8*%re to i8**
store i8*%rd,i8**%rf,align 8
%rg=getelementptr inbounds i8,i8*%q8,i64 16
%rh=bitcast i8*%rg to i32*
store i32 3,i32*%rh,align 4
%ri=load i8*,i8**%m,align 8
%rj=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%rj)
%rk=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%rk)
%rl=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%rl)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%ri,i8**%c,align 8
store i8*%q8,i8**%d,align 8
%rm=load atomic i32,i32*@sml_check_flag unordered,align 4
%rn=icmp eq i32%rm,0
br i1%rn,label%rv,label%ro
ro:
call void@sml_check(i32 inreg%rm)
%rp=load i8*,i8**%d,align 8
%rq=bitcast i8*%rp to i8**
%rr=load i8*,i8**%rq,align 8
%rs=getelementptr inbounds i8,i8*%rp,i64 8
%rt=bitcast i8*%rs to i8**
%ru=load i8*,i8**%rt,align 8
br label%rv
rv:
%rw=phi i8*[%ru,%ro],[%rd,%q4]
%rx=phi i8*[%rr,%ro],[%rb,%q4]
%ry=bitcast i8*%rx to i32*
%rz=load i32,i32*%ry,align 4
switch i32%rz,label%rA[
i32 1,label%tU
i32 0,label%tk
i32 4,label%sQ
i32 3,label%sm
i32 2,label%rS
]
rA:
call void@sml_matchcomp_bug()
%rB=load i8*,i8**@_SMLZ5Match,align 8
store i8*%rB,i8**%c,align 8
%rC=call i8*@sml_alloc(i32 inreg 20)#0
%rD=getelementptr inbounds i8,i8*%rC,i64 -4
%rE=bitcast i8*%rD to i32*
store i32 1342177296,i32*%rE,align 4
store i8*%rC,i8**%d,align 8
%rF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%rG=bitcast i8*%rC to i8**
store i8*%rF,i8**%rG,align 8
%rH=getelementptr inbounds i8,i8*%rC,i64 8
%rI=bitcast i8*%rH to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@at,i64 0,i32 2,i64 0),i8**%rI,align 8
%rJ=getelementptr inbounds i8,i8*%rC,i64 16
%rK=bitcast i8*%rJ to i32*
store i32 3,i32*%rK,align 4
%rL=call i8*@sml_alloc(i32 inreg 60)#0
%rM=getelementptr inbounds i8,i8*%rL,i64 -4
%rN=bitcast i8*%rM to i32*
store i32 1342177336,i32*%rN,align 4
%rO=getelementptr inbounds i8,i8*%rL,i64 56
%rP=bitcast i8*%rO to i32*
store i32 1,i32*%rP,align 4
%rQ=load i8*,i8**%d,align 8
%rR=bitcast i8*%rL to i8**
store i8*%rQ,i8**%rR,align 8
call void@sml_raise(i8*inreg%rL)#1
unreachable
rS:
%rT=getelementptr inbounds i8,i8*%rx,i64 8
%rU=bitcast i8*%rT to i8**
%rV=load i8*,i8**%rU,align 8
store i8*%rV,i8**%d,align 8
%rW=bitcast i8*%rw to i32*
%rX=load i32,i32*%rW,align 4
%rY=icmp eq i32%rX,2
br i1%rY,label%r6,label%rZ
rZ:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%r0=call i8*@sml_alloc(i32 inreg 60)#0
%r1=getelementptr inbounds i8,i8*%r0,i64 -4
%r2=bitcast i8*%r1 to i32*
store i32 1342177336,i32*%r2,align 4
%r3=getelementptr inbounds i8,i8*%r0,i64 56
%r4=bitcast i8*%r3 to i32*
store i32 1,i32*%r4,align 4
%r5=bitcast i8*%r0 to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@as,i64 0,i32 2)to i8*),i8**%r5,align 8
call void@sml_raise(i8*inreg%r0)#1
unreachable
r6:
%r7=getelementptr inbounds i8,i8*%rw,i64 8
%r8=bitcast i8*%r7 to i8**
%r9=load i8*,i8**%r8,align 8
store i8*%r9,i8**%e,align 8
%sa=call i8*@sml_alloc(i32 inreg 20)#0
%sb=getelementptr inbounds i8,i8*%sa,i64 -4
%sc=bitcast i8*%sb to i32*
store i32 1342177296,i32*%sc,align 4
%sd=load i8*,i8**%d,align 8
%se=bitcast i8*%sa to i8**
store i8*%sd,i8**%se,align 8
%sf=load i8*,i8**%e,align 8
%sg=getelementptr inbounds i8,i8*%sa,i64 8
%sh=bitcast i8*%sg to i8**
store i8*%sf,i8**%sh,align 8
%si=getelementptr inbounds i8,i8*%sa,i64 16
%sj=bitcast i8*%si to i32*
store i32 3,i32*%sj,align 4
%sk=load i8*,i8**%c,align 8
%sl=tail call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%sk,i8*inreg%sa)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%rj)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%rk)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%rl)
br label%uo
sm:
%sn=getelementptr inbounds i8,i8*%rx,i64 8
%so=bitcast i8*%sn to i8**
%sp=load i8*,i8**%so,align 8
store i8*%sp,i8**%d,align 8
%sq=bitcast i8*%rw to i32*
%sr=load i32,i32*%sq,align 4
%ss=icmp eq i32%sr,3
br i1%ss,label%sA,label%st
st:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%su=call i8*@sml_alloc(i32 inreg 60)#0
%sv=getelementptr inbounds i8,i8*%su,i64 -4
%sw=bitcast i8*%sv to i32*
store i32 1342177336,i32*%sw,align 4
%sx=getelementptr inbounds i8,i8*%su,i64 56
%sy=bitcast i8*%sx to i32*
store i32 1,i32*%sy,align 4
%sz=bitcast i8*%su to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aq,i64 0,i32 2)to i8*),i8**%sz,align 8
call void@sml_raise(i8*inreg%su)#1
unreachable
sA:
%sB=getelementptr inbounds i8,i8*%rw,i64 8
%sC=bitcast i8*%sB to i8**
%sD=load i8*,i8**%sC,align 8
store i8*%sD,i8**%e,align 8
%sE=call i8*@sml_alloc(i32 inreg 20)#0
%sF=getelementptr inbounds i8,i8*%sE,i64 -4
%sG=bitcast i8*%sF to i32*
store i32 1342177296,i32*%sG,align 4
%sH=load i8*,i8**%d,align 8
%sI=bitcast i8*%sE to i8**
store i8*%sH,i8**%sI,align 8
%sJ=load i8*,i8**%e,align 8
%sK=getelementptr inbounds i8,i8*%sE,i64 8
%sL=bitcast i8*%sK to i8**
store i8*%sJ,i8**%sL,align 8
%sM=getelementptr inbounds i8,i8*%sE,i64 16
%sN=bitcast i8*%sM to i32*
store i32 3,i32*%sN,align 4
%sO=load i8*,i8**%c,align 8
%sP=tail call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%sO,i8*inreg%sE)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%rj)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%rk)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%rl)
br label%uo
sQ:
%sR=getelementptr inbounds i8,i8*%rx,i64 8
%sS=bitcast i8*%sR to i8**
%sT=load i8*,i8**%sS,align 8
store i8*%sT,i8**%d,align 8
%sU=bitcast i8*%rw to i32*
%sV=load i32,i32*%sU,align 4
%sW=icmp eq i32%sV,4
br i1%sW,label%s4,label%sX
sX:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%sY=call i8*@sml_alloc(i32 inreg 60)#0
%sZ=getelementptr inbounds i8,i8*%sY,i64 -4
%s0=bitcast i8*%sZ to i32*
store i32 1342177336,i32*%s0,align 4
%s1=getelementptr inbounds i8,i8*%sY,i64 56
%s2=bitcast i8*%s1 to i32*
store i32 1,i32*%s2,align 4
%s3=bitcast i8*%sY to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ao,i64 0,i32 2)to i8*),i8**%s3,align 8
call void@sml_raise(i8*inreg%sY)#1
unreachable
s4:
%s5=getelementptr inbounds i8,i8*%rw,i64 8
%s6=bitcast i8*%s5 to i8**
%s7=load i8*,i8**%s6,align 8
store i8*%s7,i8**%e,align 8
%s8=call i8*@sml_alloc(i32 inreg 20)#0
%s9=getelementptr inbounds i8,i8*%s8,i64 -4
%ta=bitcast i8*%s9 to i32*
store i32 1342177296,i32*%ta,align 4
%tb=load i8*,i8**%d,align 8
%tc=bitcast i8*%s8 to i8**
store i8*%tb,i8**%tc,align 8
%td=load i8*,i8**%e,align 8
%te=getelementptr inbounds i8,i8*%s8,i64 8
%tf=bitcast i8*%te to i8**
store i8*%td,i8**%tf,align 8
%tg=getelementptr inbounds i8,i8*%s8,i64 16
%th=bitcast i8*%tg to i32*
store i32 3,i32*%th,align 4
%ti=load i8*,i8**%c,align 8
%tj=tail call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%ti,i8*inreg%s8)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%rj)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%rk)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%rl)
br label%uo
tk:
%tl=getelementptr inbounds i8,i8*%rx,i64 8
%tm=bitcast i8*%tl to i8**
%tn=load i8*,i8**%tm,align 8
%to=getelementptr inbounds i8,i8*%tn,i64 8
%tp=bitcast i8*%to to i8**
%tq=load i8*,i8**%tp,align 8
store i8*%tq,i8**%d,align 8
%tr=bitcast i8*%rw to i32*
%ts=load i32,i32*%tr,align 4
%tt=icmp eq i32%ts,0
br i1%tt,label%tB,label%tu
tu:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%tv=call i8*@sml_alloc(i32 inreg 60)#0
%tw=getelementptr inbounds i8,i8*%tv,i64 -4
%tx=bitcast i8*%tw to i32*
store i32 1342177336,i32*%tx,align 4
%ty=getelementptr inbounds i8,i8*%tv,i64 56
%tz=bitcast i8*%ty to i32*
store i32 1,i32*%tz,align 4
%tA=bitcast i8*%tv to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@am,i64 0,i32 2)to i8*),i8**%tA,align 8
call void@sml_raise(i8*inreg%tv)#1
unreachable
tB:
%tC=getelementptr inbounds i8,i8*%rw,i64 8
%tD=bitcast i8*%tC to i8**
%tE=load i8*,i8**%tD,align 8
%tF=getelementptr inbounds i8,i8*%tE,i64 8
%tG=bitcast i8*%tF to i8**
%tH=load i8*,i8**%tG,align 8
store i8*%tH,i8**%e,align 8
%tI=call i8*@sml_alloc(i32 inreg 20)#0
%tJ=getelementptr inbounds i8,i8*%tI,i64 -4
%tK=bitcast i8*%tJ to i32*
store i32 1342177296,i32*%tK,align 4
%tL=load i8*,i8**%d,align 8
%tM=bitcast i8*%tI to i8**
store i8*%tL,i8**%tM,align 8
%tN=load i8*,i8**%e,align 8
%tO=getelementptr inbounds i8,i8*%tI,i64 8
%tP=bitcast i8*%tO to i8**
store i8*%tN,i8**%tP,align 8
%tQ=getelementptr inbounds i8,i8*%tI,i64 16
%tR=bitcast i8*%tQ to i32*
store i32 3,i32*%tR,align 4
%tS=load i8*,i8**%c,align 8
%tT=tail call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%tS,i8*inreg%tI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%rj)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%rk)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%rl)
br label%uo
tU:
%tV=getelementptr inbounds i8,i8*%rx,i64 8
%tW=bitcast i8*%tV to i8**
%tX=load i8*,i8**%tW,align 8
store i8*%tX,i8**%d,align 8
%tY=bitcast i8*%rw to i32*
%tZ=load i32,i32*%tY,align 4
%t0=icmp eq i32%tZ,1
br i1%t0,label%t8,label%t1
t1:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%t2=call i8*@sml_alloc(i32 inreg 60)#0
%t3=getelementptr inbounds i8,i8*%t2,i64 -4
%t4=bitcast i8*%t3 to i32*
store i32 1342177336,i32*%t4,align 4
%t5=getelementptr inbounds i8,i8*%t2,i64 56
%t6=bitcast i8*%t5 to i32*
store i32 1,i32*%t6,align 4
%t7=bitcast i8*%t2 to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ak,i64 0,i32 2)to i8*),i8**%t7,align 8
call void@sml_raise(i8*inreg%t2)#1
unreachable
t8:
%t9=getelementptr inbounds i8,i8*%rw,i64 8
%ua=bitcast i8*%t9 to i8**
%ub=load i8*,i8**%ua,align 8
store i8*%ub,i8**%e,align 8
%uc=call i8*@sml_alloc(i32 inreg 20)#0
%ud=getelementptr inbounds i8,i8*%uc,i64 -4
%ue=bitcast i8*%ud to i32*
store i32 1342177296,i32*%ue,align 4
%uf=load i8*,i8**%d,align 8
%ug=bitcast i8*%uc to i8**
store i8*%uf,i8**%ug,align 8
%uh=load i8*,i8**%e,align 8
%ui=getelementptr inbounds i8,i8*%uc,i64 8
%uj=bitcast i8*%ui to i8**
store i8*%uh,i8**%uj,align 8
%uk=getelementptr inbounds i8,i8*%uc,i64 16
%ul=bitcast i8*%uk to i32*
store i32 3,i32*%ul,align 4
%um=load i8*,i8**%c,align 8
%un=tail call fastcc i8*@_SMLLN17PolyTyElimination18equalOprimSelectorE_800(i8*inreg%um,i8*inreg%uc)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%rj)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%rk)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%rl)
br label%uo
uo:
%up=phi i8*[%sl,%r6],[%sP,%sA],[%tj,%s4],[%tT,%tB],[%un,%t8]
ret i8*%up
uq:
%ur=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%ur,i8**%j,align 8
%us=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@W,i64 0,i32 2)to i8*))
store i8*%us,i8**%k,align 8
%ut=call i8*@sml_alloc(i32 inreg 28)#0
%uu=getelementptr inbounds i8,i8*%ut,i64 -4
%uv=bitcast i8*%uu to i32*
store i32 1342177304,i32*%uv,align 4
store i8*%ut,i8**%l,align 8
%uw=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ux=bitcast i8*%ut to i8**
store i8*%uw,i8**%ux,align 8
%uy=getelementptr inbounds i8,i8*%ut,i64 8
%uz=bitcast i8*%uy to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%uz,align 8
%uA=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%uB=getelementptr inbounds i8,i8*%ut,i64 16
%uC=bitcast i8*%uB to i8**
store i8*%uA,i8**%uC,align 8
%uD=getelementptr inbounds i8,i8*%ut,i64 24
%uE=bitcast i8*%uD to i32*
store i32 7,i32*%uE,align 4
%uF=call i8*@sml_alloc(i32 inreg 60)#0
%uG=getelementptr inbounds i8,i8*%uF,i64 -4
%uH=bitcast i8*%uG to i32*
store i32 1342177336,i32*%uH,align 4
%uI=getelementptr inbounds i8,i8*%uF,i64 56
%uJ=bitcast i8*%uI to i32*
store i32 1,i32*%uJ,align 4
%uK=load i8*,i8**%l,align 8
%uL=bitcast i8*%uF to i8**
store i8*%uK,i8**%uL,align 8
call void@sml_raise(i8*inreg%uF)#1
unreachable
uM:
%uN=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%uN,i8**%j,align 8
%uO=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@U,i64 0,i32 2)to i8*))
store i8*%uO,i8**%k,align 8
%uP=call i8*@sml_alloc(i32 inreg 28)#0
%uQ=getelementptr inbounds i8,i8*%uP,i64 -4
%uR=bitcast i8*%uQ to i32*
store i32 1342177304,i32*%uR,align 4
store i8*%uP,i8**%l,align 8
%uS=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%uT=bitcast i8*%uP to i8**
store i8*%uS,i8**%uT,align 8
%uU=getelementptr inbounds i8,i8*%uP,i64 8
%uV=bitcast i8*%uU to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%uV,align 8
%uW=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%uX=getelementptr inbounds i8,i8*%uP,i64 16
%uY=bitcast i8*%uX to i8**
store i8*%uW,i8**%uY,align 8
%uZ=getelementptr inbounds i8,i8*%uP,i64 24
%u0=bitcast i8*%uZ to i32*
store i32 7,i32*%u0,align 4
%u1=call i8*@sml_alloc(i32 inreg 60)#0
%u2=getelementptr inbounds i8,i8*%u1,i64 -4
%u3=bitcast i8*%u2 to i32*
store i32 1342177336,i32*%u3,align 4
%u4=getelementptr inbounds i8,i8*%u1,i64 56
%u5=bitcast i8*%u4 to i32*
store i32 1,i32*%u5,align 4
%u6=load i8*,i8**%l,align 8
%u7=bitcast i8*%u1 to i8**
store i8*%u6,i8**%u7,align 8
call void@sml_raise(i8*inreg%u1)#1
unreachable
u8:
%u9=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%u9,i8**%j,align 8
%va=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@S,i64 0,i32 2)to i8*))
store i8*%va,i8**%k,align 8
%vb=call i8*@sml_alloc(i32 inreg 28)#0
%vc=getelementptr inbounds i8,i8*%vb,i64 -4
%vd=bitcast i8*%vc to i32*
store i32 1342177304,i32*%vd,align 4
store i8*%vb,i8**%l,align 8
%ve=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%vf=bitcast i8*%vb to i8**
store i8*%ve,i8**%vf,align 8
%vg=getelementptr inbounds i8,i8*%vb,i64 8
%vh=bitcast i8*%vg to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%vh,align 8
%vi=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%vj=getelementptr inbounds i8,i8*%vb,i64 16
%vk=bitcast i8*%vj to i8**
store i8*%vi,i8**%vk,align 8
%vl=getelementptr inbounds i8,i8*%vb,i64 24
%vm=bitcast i8*%vl to i32*
store i32 7,i32*%vm,align 4
%vn=call i8*@sml_alloc(i32 inreg 60)#0
%vo=getelementptr inbounds i8,i8*%vn,i64 -4
%vp=bitcast i8*%vo to i32*
store i32 1342177336,i32*%vp,align 4
%vq=getelementptr inbounds i8,i8*%vn,i64 56
%vr=bitcast i8*%vq to i32*
store i32 1,i32*%vr,align 4
%vs=load i8*,i8**%l,align 8
%vt=bitcast i8*%vn to i8**
store i8*%vs,i8**%vt,align 8
call void@sml_raise(i8*inreg%vn)#1
unreachable
vu:
%vv=call i8*@sml_alloc(i32 inreg 60)#0
%vw=getelementptr inbounds i8,i8*%vv,i64 -4
%vx=bitcast i8*%vw to i32*
store i32 1342177336,i32*%vx,align 4
%vy=getelementptr inbounds i8,i8*%vv,i64 56
%vz=bitcast i8*%vy to i32*
store i32 1,i32*%vz,align 4
%vA=bitcast i8*%vv to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@Q,i64 0,i32 2)to i8*),i8**%vA,align 8
call void@sml_raise(i8*inreg%vv)#1
unreachable
vB:
%vC=call i8*@sml_alloc(i32 inreg 60)#0
%vD=getelementptr inbounds i8,i8*%vC,i64 -4
%vE=bitcast i8*%vD to i32*
store i32 1342177336,i32*%vE,align 4
%vF=getelementptr inbounds i8,i8*%vC,i64 56
%vG=bitcast i8*%vF to i32*
store i32 1,i32*%vG,align 4
%vH=bitcast i8*%vC to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@O,i64 0,i32 2)to i8*),i8**%vH,align 8
call void@sml_raise(i8*inreg%vC)#1
unreachable
vI:
%vJ=call i8*@sml_alloc(i32 inreg 60)#0
%vK=getelementptr inbounds i8,i8*%vJ,i64 -4
%vL=bitcast i8*%vK to i32*
store i32 1342177336,i32*%vL,align 4
%vM=getelementptr inbounds i8,i8*%vJ,i64 56
%vN=bitcast i8*%vM to i32*
store i32 1,i32*%vN,align 4
%vO=bitcast i8*%vJ to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@M,i64 0,i32 2)to i8*),i8**%vO,align 8
call void@sml_raise(i8*inreg%vJ)#1
unreachable
vP:
%vQ=call i8*@sml_alloc(i32 inreg 60)#0
%vR=getelementptr inbounds i8,i8*%vQ,i64 -4
%vS=bitcast i8*%vR to i32*
store i32 1342177336,i32*%vS,align 4
%vT=getelementptr inbounds i8,i8*%vQ,i64 56
%vU=bitcast i8*%vT to i32*
store i32 1,i32*%vU,align 4
%vV=bitcast i8*%vQ to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@K,i64 0,i32 2)to i8*),i8**%vV,align 8
call void@sml_raise(i8*inreg%vQ)#1
unreachable
vW:
%vX=call i8*@sml_alloc(i32 inreg 60)#0
%vY=getelementptr inbounds i8,i8*%vX,i64 -4
%vZ=bitcast i8*%vY to i32*
store i32 1342177336,i32*%vZ,align 4
%v0=getelementptr inbounds i8,i8*%vX,i64 56
%v1=bitcast i8*%v0 to i32*
store i32 1,i32*%v1,align 4
%v2=bitcast i8*%vX to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@I,i64 0,i32 2)to i8*),i8**%v2,align 8
call void@sml_raise(i8*inreg%vX)#1
unreachable
v3:
%v4=call i8*@sml_alloc(i32 inreg 60)#0
%v5=getelementptr inbounds i8,i8*%v4,i64 -4
%v6=bitcast i8*%v5 to i32*
store i32 1342177336,i32*%v6,align 4
%v7=getelementptr inbounds i8,i8*%v4,i64 56
%v8=bitcast i8*%v7 to i32*
store i32 1,i32*%v8,align 4
%v9=bitcast i8*%v4 to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@G,i64 0,i32 2)to i8*),i8**%v9,align 8
call void@sml_raise(i8*inreg%v4)#1
unreachable
wa:
%wb=call i8*@sml_alloc(i32 inreg 60)#0
%wc=getelementptr inbounds i8,i8*%wb,i64 -4
%wd=bitcast i8*%wc to i32*
store i32 1342177336,i32*%wd,align 4
%we=getelementptr inbounds i8,i8*%wb,i64 56
%wf=bitcast i8*%we to i32*
store i32 1,i32*%wf,align 4
%wg=bitcast i8*%wb to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@E,i64 0,i32 2)to i8*),i8**%wg,align 8
call void@sml_raise(i8*inreg%wb)#1
unreachable
wh:
%wi=call i8*@sml_alloc(i32 inreg 60)#0
%wj=getelementptr inbounds i8,i8*%wi,i64 -4
%wk=bitcast i8*%wj to i32*
store i32 1342177336,i32*%wk,align 4
%wl=getelementptr inbounds i8,i8*%wi,i64 56
%wm=bitcast i8*%wl to i32*
store i32 1,i32*%wm,align 4
%wn=bitcast i8*%wi to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@C,i64 0,i32 2)to i8*),i8**%wn,align 8
call void@sml_raise(i8*inreg%wi)#1
unreachable
wo:
%wp=phi i8*[%eO,%eX],[%fy,%gn],[%hS,%h1],[%jE,%jN],[%k3,%lc],[%mK,%mT],[%np,%ny],[%oy,%oH],[%pz,%pI],[%p6,%qf],[%qG,%qP]
%wq=call fastcc i8*@_SMLLN17PolyTyElimination11revealTyConE_796(i8*inreg%wp)
store i8*%wq,i8**%k,align 8
%wr=call i8*@sml_alloc(i32 inreg 20)#0
%ws=getelementptr inbounds i8,i8*%wr,i64 -4
%wt=bitcast i8*%ws to i32*
store i32 1342177296,i32*%wt,align 4
%wu=load i8*,i8**%j,align 8
%wv=bitcast i8*%wr to i8**
store i8*%wu,i8**%wv,align 8
%ww=load i8*,i8**%k,align 8
%wx=getelementptr inbounds i8,i8*%wr,i64 8
%wy=bitcast i8*%wx to i8**
store i8*%ww,i8**%wy,align 8
%wz=getelementptr inbounds i8,i8*%wr,i64 16
%wA=bitcast i8*%wz to i32*
store i32 3,i32*%wA,align 4
%wB=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
store i8*%wB,i8**%j,align 8
store i8*%wr,i8**%k,align 8
br label%wC
wC:
%wD=phi i8*[%wB,%wo],[%wS,%wF],[%w5,%wT],[%xi,%w6],[%xu,%xj],[%xG,%xv]
%wE=phi i8*[%wr,%wo],[%wI,%wF],[%wV,%wT],[%w8,%w6],[%xk,%xj],[%xw,%xv]
br label%r
wF:
%wG=phi i8*[%eO,%eY],[%fy,%go],[%hS,%h2],[%jE,%jO],[%k3,%ld],[%mK,%mU],[%np,%nz],[%oy,%oI],[%pz,%pJ],[%p6,%qg],[%qG,%qQ]
%wH=call fastcc i8*@_SMLLN17PolyTyElimination11revealTyConE_796(i8*inreg%wG)
store i8*%wH,i8**%k,align 8
%wI=call i8*@sml_alloc(i32 inreg 20)#0
%wJ=getelementptr inbounds i8,i8*%wI,i64 -4
%wK=bitcast i8*%wJ to i32*
store i32 1342177296,i32*%wK,align 4
%wL=load i8*,i8**%j,align 8
%wM=bitcast i8*%wI to i8**
store i8*%wL,i8**%wM,align 8
%wN=load i8*,i8**%k,align 8
%wO=getelementptr inbounds i8,i8*%wI,i64 8
%wP=bitcast i8*%wO to i8**
store i8*%wN,i8**%wP,align 8
%wQ=getelementptr inbounds i8,i8*%wI,i64 16
%wR=bitcast i8*%wQ to i32*
store i32 3,i32*%wR,align 4
%wS=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
store i8*%wS,i8**%j,align 8
store i8*%wI,i8**%k,align 8
br label%wC
wT:
%wU=call fastcc i8*@_SMLLN17PolyTyElimination11revealTyConE_796(i8*inreg%ff)
store i8*%wU,i8**%k,align 8
%wV=call i8*@sml_alloc(i32 inreg 20)#0
%wW=getelementptr inbounds i8,i8*%wV,i64 -4
%wX=bitcast i8*%wW to i32*
store i32 1342177296,i32*%wX,align 4
%wY=load i8*,i8**%k,align 8
%wZ=bitcast i8*%wV to i8**
store i8*%wY,i8**%wZ,align 8
%w0=load i8*,i8**%j,align 8
%w1=getelementptr inbounds i8,i8*%wV,i64 8
%w2=bitcast i8*%w1 to i8**
store i8*%w0,i8**%w2,align 8
%w3=getelementptr inbounds i8,i8*%wV,i64 16
%w4=bitcast i8*%w3 to i32*
store i32 3,i32*%w4,align 4
%w5=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
store i8*%w5,i8**%j,align 8
store i8*%wV,i8**%k,align 8
br label%wC
w6:
%w7=call fastcc i8*@_SMLLN17PolyTyElimination11revealTyConE_796(i8*inreg%ff)
store i8*%w7,i8**%k,align 8
%w8=call i8*@sml_alloc(i32 inreg 20)#0
%w9=getelementptr inbounds i8,i8*%w8,i64 -4
%xa=bitcast i8*%w9 to i32*
store i32 1342177296,i32*%xa,align 4
%xb=load i8*,i8**%k,align 8
%xc=bitcast i8*%w8 to i8**
store i8*%xb,i8**%xc,align 8
%xd=load i8*,i8**%j,align 8
%xe=getelementptr inbounds i8,i8*%w8,i64 8
%xf=bitcast i8*%xe to i8**
store i8*%xd,i8**%xf,align 8
%xg=getelementptr inbounds i8,i8*%w8,i64 16
%xh=bitcast i8*%xg to i32*
store i32 3,i32*%xh,align 4
%xi=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
store i8*%xi,i8**%j,align 8
store i8*%w8,i8**%k,align 8
br label%wC
xj:
%xk=call i8*@sml_alloc(i32 inreg 20)#0
%xl=getelementptr inbounds i8,i8*%xk,i64 -4
%xm=bitcast i8*%xl to i32*
store i32 1342177296,i32*%xm,align 4
%xn=load i8*,i8**%j,align 8
%xo=bitcast i8*%xk to i8**
store i8*%xn,i8**%xo,align 8
%xp=load i8*,i8**%k,align 8
%xq=getelementptr inbounds i8,i8*%xk,i64 8
%xr=bitcast i8*%xq to i8**
store i8*%xp,i8**%xr,align 8
%xs=getelementptr inbounds i8,i8*%xk,i64 16
%xt=bitcast i8*%xs to i32*
store i32 3,i32*%xt,align 4
%xu=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
store i8*%xu,i8**%j,align 8
store i8*%xk,i8**%k,align 8
br label%wC
xv:
%xw=call i8*@sml_alloc(i32 inreg 20)#0
%xx=getelementptr inbounds i8,i8*%xw,i64 -4
%xy=bitcast i8*%xx to i32*
store i32 1342177296,i32*%xy,align 4
%xz=load i8*,i8**%j,align 8
%xA=bitcast i8*%xw to i8**
store i8*%xz,i8**%xA,align 8
%xB=load i8*,i8**%k,align 8
%xC=getelementptr inbounds i8,i8*%xw,i64 8
%xD=bitcast i8*%xC to i8**
store i8*%xB,i8**%xD,align 8
%xE=getelementptr inbounds i8,i8*%xw,i64 16
%xF=bitcast i8*%xE to i32*
store i32 3,i32*%xF,align 4
%xG=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
store i8*%xG,i8**%j,align 8
store i8*%xw,i8**%k,align 8
br label%wC
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18equalOprimSelectorE_800(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i8**
%p=bitcast i8*%m to i8***
%q=load i8**,i8***%p,align 8
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=load i8*,i8**%o,align 8
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=load i8*,i8**%o,align 8
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%m,i64 8
%B=bitcast i8*%A to i8***
%C=load i8**,i8***%B,align 8
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%f,align 8
%E=getelementptr inbounds i8*,i8**%C,i64 1
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%g,align 8
%G=getelementptr inbounds i8*,i8**%C,i64 2
%H=bitcast i8**%G to i32*
%I=load i32,i32*%H,align 4
%J=icmp eq i32%z,%I
br i1%J,label%K,label%X
K:
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
%O=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%L,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=call fastcc i32@_SMLFN6Symbol12eqLongsymbolE(i8*inreg%L)
%W=icmp eq i32%V,0
br i1%W,label%al,label%Y
X:
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
br label%al
Y:
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%g,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=load i8*,i8**%c,align 8
%ak=tail call fastcc i8*@_SMLLN17PolyTyElimination18equalOverloadMatchE_801(i8*inreg%aj,i8*inreg%Z)
ret i8*%ak
al:
store i8*null,i8**%c,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
%am=call i8*@sml_alloc(i32 inreg 60)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177336,i32*%ao,align 4
%ap=getelementptr inbounds i8,i8*%am,i64 56
%aq=bitcast i8*%ap to i32*
store i32 1,i32*%aq,align 4
%ar=bitcast i8*%am to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@av,i64 0,i32 2)to i8*),i8**%ar,align 8
call void@sml_raise(i8*inreg%am)#1
unreachable
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18equalOverloadMatchE_801(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%d,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%b,%p]
%q=bitcast i8*%o to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%o,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%r to i32*
%w=load i32,i32*%v,align 4
switch i32%w,label%x[
i32 1,label%cI
i32 2,label%bF
i32 0,label%P
]
x:
call void@sml_matchcomp_bug()
%y=load i8*,i8**@_SMLZ5Match,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%d,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@aN,i64 0,i32 2,i64 0),i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 60)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177336,i32*%K,align 4
%L=getelementptr inbounds i8,i8*%I,i64 56
%M=bitcast i8*%L to i32*
store i32 1,i32*%M,align 4
%N=load i8*,i8**%d,align 8
%O=bitcast i8*%I to i8**
store i8*%N,i8**%O,align 8
call void@sml_raise(i8*inreg%I)#1
unreachable
P:
%Q=getelementptr inbounds i8,i8*%r,i64 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%d,align 8
%V=getelementptr inbounds i8,i8*%S,i64 8
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%e,align 8
%Y=bitcast i8*%u to i32*
%Z=load i32,i32*%Y,align 4
%aa=icmp eq i32%Z,0
br i1%aa,label%ai,label%ab
ab:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%ac=call i8*@sml_alloc(i32 inreg 60)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177336,i32*%ae,align 4
%af=getelementptr inbounds i8,i8*%ac,i64 56
%ag=bitcast i8*%af to i32*
store i32 1,i32*%ag,align 4
%ah=bitcast i8*%ac to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aM,i64 0,i32 2)to i8*),i8**%ah,align 8
call void@sml_raise(i8*inreg%ac)#1
unreachable
ai:
%aj=getelementptr inbounds i8,i8*%u,i64 8
%ak=bitcast i8*%aj to i8**
%al=load i8*,i8**%ak,align 8
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%f,align 8
%ao=getelementptr inbounds i8,i8*%al,i64 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%g,align 8
%ar=call fastcc i8*@_SMLFN5TypID3Map5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%as=getelementptr inbounds i8,i8*%ar,i64 16
%at=bitcast i8*%as to i8*(i8*,i8*)**
%au=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%at,align 8
%av=bitcast i8*%ar to i8**
%aw=load i8*,i8**%av,align 8
store i8*%aw,i8**%h,align 8
%ax=call i8*@sml_alloc(i32 inreg 12)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177288,i32*%az,align 4
store i8*%ax,i8**%i,align 8
%aA=load i8*,i8**%c,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%ax,i64 8
%aD=bitcast i8*%aC to i32*
store i32 1,i32*%aD,align 4
%aE=call i8*@sml_alloc(i32 inreg 28)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177304,i32*%aG,align 4
%aH=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aI=bitcast i8*%aE to i8**
store i8*%aH,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aE,i64 8
%aK=bitcast i8*%aJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18equalOverloadMatchE_997 to void(...)*),void(...)**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aE,i64 16
%aM=bitcast i8*%aL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18equalOverloadMatchE_997 to void(...)*),void(...)**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aE,i64 24
%aO=bitcast i8*%aN to i32*
store i32 -2147483647,i32*%aO,align 4
%aP=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aQ=call fastcc i8*%au(i8*inreg%aP,i8*inreg%aE)
%aR=getelementptr inbounds i8,i8*%aQ,i64 16
%aS=bitcast i8*%aR to i8*(i8*,i8*)**
%aT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aS,align 8
%aU=bitcast i8*%aQ to i8**
%aV=load i8*,i8**%aU,align 8
store i8*%aV,i8**%h,align 8
%aW=call i8*@sml_alloc(i32 inreg 20)#0
%aX=getelementptr inbounds i8,i8*%aW,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177296,i32*%aY,align 4
%aZ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a0=bitcast i8*%aW to i8**
store i8*%aZ,i8**%a0,align 8
%a1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a2=getelementptr inbounds i8,i8*%aW,i64 8
%a3=bitcast i8*%a2 to i8**
store i8*%a1,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aW,i64 16
%a5=bitcast i8*%a4 to i32*
store i32 3,i32*%a5,align 4
%a6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a7=call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%a6,i8*inreg%aW)
%a8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a9=call fastcc i8*%aT(i8*inreg%a8,i8*inreg%a7)
%ba=getelementptr inbounds i8,i8*%a9,i64 16
%bb=bitcast i8*%ba to i8*(i8*,i8*)**
%bc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bb,align 8
%bd=bitcast i8*%a9 to i8**
%be=load i8*,i8**%bd,align 8
store i8*%be,i8**%d,align 8
%bf=call fastcc i8*@_SMLFN5TypID3Map9mergeWithE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bg=getelementptr inbounds i8,i8*%bf,i64 16
%bh=bitcast i8*%bg to i8*(i8*,i8*)**
%bi=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bh,align 8
%bj=bitcast i8*%bf to i8**
%bk=load i8*,i8**%bj,align 8
%bl=call fastcc i8*%bi(i8*inreg%bk,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aK,i64 0,i32 2)to i8*))
%bm=getelementptr inbounds i8,i8*%bl,i64 16
%bn=bitcast i8*%bm to i8*(i8*,i8*)**
%bo=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bn,align 8
%bp=bitcast i8*%bl to i8**
%bq=load i8*,i8**%bp,align 8
store i8*%bq,i8**%c,align 8
%br=call i8*@sml_alloc(i32 inreg 20)#0
%bs=getelementptr inbounds i8,i8*%br,i64 -4
%bt=bitcast i8*%bs to i32*
store i32 1342177296,i32*%bt,align 4
%bu=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bv=bitcast i8*%br to i8**
store i8*%bu,i8**%bv,align 8
%bw=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bx=getelementptr inbounds i8,i8*%br,i64 8
%by=bitcast i8*%bx to i8**
store i8*%bw,i8**%by,align 8
%bz=getelementptr inbounds i8,i8*%br,i64 16
%bA=bitcast i8*%bz to i32*
store i32 3,i32*%bA,align 4
%bB=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bC=call fastcc i8*%bo(i8*inreg%bB,i8*inreg%br)
%bD=load i8*,i8**%d,align 8
%bE=tail call fastcc i8*%bc(i8*inreg%bD,i8*inreg%bC)
ret i8*%bE
bF:
%bG=getelementptr inbounds i8,i8*%r,i64 8
%bH=bitcast i8*%bG to i8**
%bI=load i8*,i8**%bH,align 8
%bJ=bitcast i8*%bI to i8**
%bK=load i8*,i8**%bJ,align 8
store i8*%bK,i8**%d,align 8
%bL=bitcast i8*%u to i32*
%bM=load i32,i32*%bL,align 4
%bN=icmp eq i32%bM,2
br i1%bN,label%bV,label%bO
bO:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%bP=call i8*@sml_alloc(i32 inreg 60)#0
%bQ=getelementptr inbounds i8,i8*%bP,i64 -4
%bR=bitcast i8*%bQ to i32*
store i32 1342177336,i32*%bR,align 4
%bS=getelementptr inbounds i8,i8*%bP,i64 56
%bT=bitcast i8*%bS to i32*
store i32 1,i32*%bT,align 4
%bU=bitcast i8*%bP to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aF,i64 0,i32 2)to i8*),i8**%bU,align 8
call void@sml_raise(i8*inreg%bP)#1
unreachable
bV:
%bW=getelementptr inbounds i8,i8*%bI,i64 8
%bX=bitcast i8*%bW to i8***
%bY=load i8**,i8***%bX,align 8
%bZ=load i8*,i8**%bY,align 8
%b0=getelementptr inbounds i8,i8*%u,i64 8
%b1=bitcast i8*%b0 to i8**
%b2=load i8*,i8**%b1,align 8
%b3=bitcast i8*%b2 to i8**
%b4=load i8*,i8**%b3,align 8
store i8*%b4,i8**%e,align 8
%b5=getelementptr inbounds i8,i8*%b2,i64 8
%b6=bitcast i8*%b5 to i8***
%b7=load i8**,i8***%b6,align 8
%b8=load i8*,i8**%b7,align 8
%b9=call i32@sml_obj_equal(i8*inreg%bZ,i8*inreg%b8)#0
%ca=icmp eq i32%b9,0
br i1%ca,label%cB,label%cb
cb:
%cc=call fastcc i8*@_SMLLN17PolyTyElimination12equalListOptE_790(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aD,i64 0,i32 2)to i8*))
%cd=getelementptr inbounds i8,i8*%cc,i64 16
%ce=bitcast i8*%cd to i8*(i8*,i8*)**
%cf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ce,align 8
%cg=bitcast i8*%cc to i8**
%ch=load i8*,i8**%cg,align 8
%ci=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cj=call fastcc i8*%cf(i8*inreg%ch,i8*inreg%ci)
%ck=getelementptr inbounds i8,i8*%cj,i64 16
%cl=bitcast i8*%ck to i8*(i8*,i8*)**
%cm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cl,align 8
%cn=bitcast i8*%cj to i8**
%co=load i8*,i8**%cn,align 8
store i8*%co,i8**%c,align 8
%cp=call i8*@sml_alloc(i32 inreg 20)#0
%cq=getelementptr inbounds i8,i8*%cp,i64 -4
%cr=bitcast i8*%cq to i32*
store i32 1342177296,i32*%cr,align 4
%cs=load i8*,i8**%d,align 8
%ct=bitcast i8*%cp to i8**
store i8*%cs,i8**%ct,align 8
%cu=load i8*,i8**%e,align 8
%cv=getelementptr inbounds i8,i8*%cp,i64 8
%cw=bitcast i8*%cv to i8**
store i8*%cu,i8**%cw,align 8
%cx=getelementptr inbounds i8,i8*%cp,i64 16
%cy=bitcast i8*%cx to i32*
store i32 3,i32*%cy,align 4
%cz=load i8*,i8**%c,align 8
%cA=tail call fastcc i8*%cm(i8*inreg%cz,i8*inreg%cp)
ret i8*%cA
cB:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%cC=call i8*@sml_alloc(i32 inreg 60)#0
%cD=getelementptr inbounds i8,i8*%cC,i64 -4
%cE=bitcast i8*%cD to i32*
store i32 1342177336,i32*%cE,align 4
%cF=getelementptr inbounds i8,i8*%cC,i64 56
%cG=bitcast i8*%cF to i32*
store i32 1,i32*%cG,align 4
%cH=bitcast i8*%cC to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aC,i64 0,i32 2)to i8*),i8**%cH,align 8
call void@sml_raise(i8*inreg%cC)#1
unreachable
cI:
%cJ=getelementptr inbounds i8,i8*%r,i64 8
%cK=bitcast i8*%cJ to i8**
%cL=load i8*,i8**%cK,align 8
%cM=bitcast i8*%cL to i8***
%cN=load i8**,i8***%cM,align 8
%cO=load i8*,i8**%cN,align 8
store i8*%cO,i8**%d,align 8
%cP=getelementptr inbounds i8,i8*%cL,i64 8
%cQ=bitcast i8*%cP to i8**
%cR=load i8*,i8**%cQ,align 8
store i8*%cR,i8**%e,align 8
%cS=bitcast i8*%u to i32*
%cT=load i32,i32*%cS,align 4
%cU=icmp eq i32%cT,1
br i1%cU,label%c2,label%cV
cV:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%cW=call i8*@sml_alloc(i32 inreg 60)#0
%cX=getelementptr inbounds i8,i8*%cW,i64 -4
%cY=bitcast i8*%cX to i32*
store i32 1342177336,i32*%cY,align 4
%cZ=getelementptr inbounds i8,i8*%cW,i64 56
%c0=bitcast i8*%cZ to i32*
store i32 1,i32*%c0,align 4
%c1=bitcast i8*%cW to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aA,i64 0,i32 2)to i8*),i8**%c1,align 8
call void@sml_raise(i8*inreg%cW)#1
unreachable
c2:
%c3=getelementptr inbounds i8,i8*%u,i64 8
%c4=bitcast i8*%c3 to i8**
%c5=load i8*,i8**%c4,align 8
%c6=bitcast i8*%c5 to i8***
%c7=load i8**,i8***%c6,align 8
%c8=load i8*,i8**%c7,align 8
store i8*%c8,i8**%f,align 8
%c9=getelementptr inbounds i8,i8*%c5,i64 8
%da=bitcast i8*%c9 to i8**
%db=load i8*,i8**%da,align 8
store i8*%db,i8**%g,align 8
%dc=call i8*@sml_alloc(i32 inreg 20)#0
%dd=getelementptr inbounds i8,i8*%dc,i64 -4
%de=bitcast i8*%dd to i32*
store i32 1342177296,i32*%de,align 4
%df=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dg=bitcast i8*%dc to i8**
store i8*%df,i8**%dg,align 8
%dh=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%di=getelementptr inbounds i8,i8*%dc,i64 8
%dj=bitcast i8*%di to i8**
store i8*%dh,i8**%dj,align 8
%dk=getelementptr inbounds i8,i8*%dc,i64 16
%dl=bitcast i8*%dk to i32*
store i32 3,i32*%dl,align 4
%dm=call fastcc i32@_SMLFN6Symbol12eqLongsymbolE(i8*inreg%dc)
%dn=icmp eq i32%dm,0
br i1%dn,label%dO,label%do
do:
%dp=call fastcc i8*@_SMLLN17PolyTyElimination12equalListOptE_790(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ay,i64 0,i32 2)to i8*))
%dq=getelementptr inbounds i8,i8*%dp,i64 16
%dr=bitcast i8*%dq to i8*(i8*,i8*)**
%ds=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dr,align 8
%dt=bitcast i8*%dp to i8**
%du=load i8*,i8**%dt,align 8
%dv=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dw=call fastcc i8*%ds(i8*inreg%du,i8*inreg%dv)
%dx=getelementptr inbounds i8,i8*%dw,i64 16
%dy=bitcast i8*%dx to i8*(i8*,i8*)**
%dz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dy,align 8
%dA=bitcast i8*%dw to i8**
%dB=load i8*,i8**%dA,align 8
store i8*%dB,i8**%c,align 8
%dC=call i8*@sml_alloc(i32 inreg 20)#0
%dD=getelementptr inbounds i8,i8*%dC,i64 -4
%dE=bitcast i8*%dD to i32*
store i32 1342177296,i32*%dE,align 4
%dF=load i8*,i8**%e,align 8
%dG=bitcast i8*%dC to i8**
store i8*%dF,i8**%dG,align 8
%dH=load i8*,i8**%g,align 8
%dI=getelementptr inbounds i8,i8*%dC,i64 8
%dJ=bitcast i8*%dI to i8**
store i8*%dH,i8**%dJ,align 8
%dK=getelementptr inbounds i8,i8*%dC,i64 16
%dL=bitcast i8*%dK to i32*
store i32 3,i32*%dL,align 4
%dM=load i8*,i8**%c,align 8
%dN=tail call fastcc i8*%dz(i8*inreg%dM,i8*inreg%dC)
ret i8*%dN
dO:
store i8*null,i8**%c,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
%dP=call i8*@sml_alloc(i32 inreg 60)#0
%dQ=getelementptr inbounds i8,i8*%dP,i64 -4
%dR=bitcast i8*%dQ to i32*
store i32 1342177336,i32*%dR,align 4
%dS=getelementptr inbounds i8,i8*%dP,i64 56
%dT=bitcast i8*%dS to i32*
store i32 1,i32*%dT,align 4
%dU=bitcast i8*%dP to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ax,i64 0,i32 2)to i8*),i8**%dU,align 8
call void@sml_raise(i8*inreg%dP)#1
unreachable
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9equalKindE_803(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
s:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%a,i8**%i,align 8
store i8*%b,i8**%j,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%q,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%j,align 8
br label%q
q:
%r=phi i8*[%p,%o],[%b,%s]
%t=bitcast i8*%r to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%j,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%l,align 8
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%k,align 8
%E=getelementptr inbounds i8,i8*%u,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
%H=call fastcc i8*@_SMLFN5Types15equalPropertiesE(i8*inreg%G)
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8*(i8*,i8*)**
%K=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%J,align 8
%L=bitcast i8*%H to i8**
%M=load i8*,i8**%L,align 8
%N=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%O=getelementptr inbounds i8,i8*%N,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
%R=call fastcc i8*%K(i8*inreg%M,i8*inreg%Q)
%S=bitcast i8*%R to i32*
%T=load i32,i32*%S,align 4
%U=icmp eq i32%T,0
br i1%U,label%ep,label%V
V:
%W=call i8*@sml_alloc(i32 inreg 20)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177296,i32*%Y,align 4
%Z=load i8*,i8**%j,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=load i8*,i8**%k,align 8
%ac=getelementptr inbounds i8,i8*%W,i64 8
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%W,i64 16
%af=bitcast i8*%ae to i32*
store i32 3,i32*%af,align 4
%ag=load i8*,i8**%i,align 8
%ah=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ah)
%ai=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ai)
%aj=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aj)
%ak=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ak)
%al=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%al)
%am=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%am)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%ag,i8**%c,align 8
store i8*%W,i8**%d,align 8
%an=load atomic i32,i32*@sml_check_flag unordered,align 4
%ao=icmp eq i32%an,0
br i1%ao,label%aw,label%ap
ap:
call void@sml_check(i32 inreg%an)
%aq=load i8*,i8**%d,align 8
%ar=load i8*,i8**%c,align 8
%as=getelementptr inbounds i8,i8*%aq,i64 8
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
%av=bitcast i8*%aq to i8**
br label%aw
aw:
%ax=phi i8**[%av,%ap],[%aa,%V]
%ay=phi i8*[%au,%ap],[%ab,%V]
%az=phi i8*[%ar,%ap],[%ag,%V]
store i8*%az,i8**%d,align 8
%aA=load i8*,i8**%ax,align 8
%aB=icmp eq i8*%aA,null
br i1%aB,label%bW,label%aC
aC:
%aD=bitcast i8*%aA to i32*
%aE=load i32,i32*%aD,align 4
switch i32%aE,label%aF[
i32 0,label%dE
i32 1,label%cb
i32 3,label%bW
i32 2,label%aX
]
aF:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%aG=load i8*,i8**@_SMLZ5Match,align 8
store i8*%aG,i8**%c,align 8
%aH=call i8*@sml_alloc(i32 inreg 20)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177296,i32*%aJ,align 4
store i8*%aH,i8**%d,align 8
%aK=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aL=bitcast i8*%aH to i8**
store i8*%aK,i8**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aH,i64 8
%aN=bitcast i8*%aM to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@a3,i64 0,i32 2,i64 0),i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aH,i64 16
%aP=bitcast i8*%aO to i32*
store i32 3,i32*%aP,align 4
%aQ=call i8*@sml_alloc(i32 inreg 60)#0
%aR=getelementptr inbounds i8,i8*%aQ,i64 -4
%aS=bitcast i8*%aR to i32*
store i32 1342177336,i32*%aS,align 4
%aT=getelementptr inbounds i8,i8*%aQ,i64 56
%aU=bitcast i8*%aT to i32*
store i32 1,i32*%aU,align 4
%aV=load i8*,i8**%d,align 8
%aW=bitcast i8*%aQ to i8**
store i8*%aV,i8**%aW,align 8
call void@sml_raise(i8*inreg%aQ)#1
unreachable
aX:
%aY=getelementptr inbounds i8,i8*%aA,i64 8
%aZ=bitcast i8*%aY to i8**
%a0=load i8*,i8**%aZ,align 8
store i8*%a0,i8**%c,align 8
%a1=icmp eq i8*%ay,null
br i1%a1,label%a6,label%a2
a2:
%a3=bitcast i8*%ay to i32*
%a4=load i32,i32*%a3,align 4
%a5=icmp eq i32%a4,2
br i1%a5,label%bd,label%a6
a6:
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
%a7=call i8*@sml_alloc(i32 inreg 60)#0
%a8=getelementptr inbounds i8,i8*%a7,i64 -4
%a9=bitcast i8*%a8 to i32*
store i32 1342177336,i32*%a9,align 4
%ba=getelementptr inbounds i8,i8*%a7,i64 56
%bb=bitcast i8*%ba to i32*
store i32 1,i32*%bb,align 4
%bc=bitcast i8*%a7 to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a2,i64 0,i32 2)to i8*),i8**%bc,align 8
call void@sml_raise(i8*inreg%a7)#1
unreachable
bd:
%be=getelementptr inbounds i8,i8*%ay,i64 8
%bf=bitcast i8*%be to i8**
%bg=load i8*,i8**%bf,align 8
store i8*%bg,i8**%e,align 8
%bh=call fastcc i8*@_SMLLN17PolyTyElimination9equalListE_782(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a0,i64 0,i32 2)to i8*))
%bi=getelementptr inbounds i8,i8*%bh,i64 16
%bj=bitcast i8*%bi to i8*(i8*,i8*)**
%bk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bj,align 8
%bl=bitcast i8*%bh to i8**
%bm=load i8*,i8**%bl,align 8
%bn=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bo=call fastcc i8*%bk(i8*inreg%bm,i8*inreg%bn)
%bp=getelementptr inbounds i8,i8*%bo,i64 16
%bq=bitcast i8*%bp to i8*(i8*,i8*)**
%br=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bq,align 8
%bs=bitcast i8*%bo to i8**
%bt=load i8*,i8**%bs,align 8
store i8*%bt,i8**%f,align 8
%bu=call fastcc i8*@_SMLFN11RecordLabel3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%bv=getelementptr inbounds i8,i8*%bu,i64 16
%bw=bitcast i8*%bv to i8*(i8*,i8*)**
%bx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bw,align 8
%by=bitcast i8*%bu to i8**
%bz=load i8*,i8**%by,align 8
%bA=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bB=call fastcc i8*%bx(i8*inreg%bz,i8*inreg%bA)
store i8*%bB,i8**%c,align 8
%bC=call fastcc i8*@_SMLFN11RecordLabel3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%bD=getelementptr inbounds i8,i8*%bC,i64 16
%bE=bitcast i8*%bD to i8*(i8*,i8*)**
%bF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bE,align 8
%bG=bitcast i8*%bC to i8**
%bH=load i8*,i8**%bG,align 8
%bI=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bJ=call fastcc i8*%bF(i8*inreg%bH,i8*inreg%bI)
store i8*%bJ,i8**%d,align 8
%bK=call i8*@sml_alloc(i32 inreg 20)#0
%bL=getelementptr inbounds i8,i8*%bK,i64 -4
%bM=bitcast i8*%bL to i32*
store i32 1342177296,i32*%bM,align 4
%bN=load i8*,i8**%c,align 8
%bO=bitcast i8*%bK to i8**
store i8*%bN,i8**%bO,align 8
%bP=load i8*,i8**%d,align 8
%bQ=getelementptr inbounds i8,i8*%bK,i64 8
%bR=bitcast i8*%bQ to i8**
store i8*%bP,i8**%bR,align 8
%bS=getelementptr inbounds i8,i8*%bK,i64 16
%bT=bitcast i8*%bS to i32*
store i32 3,i32*%bT,align 4
%bU=load i8*,i8**%f,align 8
%bV=tail call fastcc i8*%br(i8*inreg%bU,i8*inreg%bK)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ah)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ai)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aj)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ak)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%al)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%am)
br label%en
bW:
store i8*null,i8**%d,align 8
%bX=icmp eq i8*%ay,null
br i1%bX,label%b9,label%bY
bY:
%bZ=bitcast i8*%ay to i32*
%b0=load i32,i32*%bZ,align 4
%b1=icmp eq i32%b0,3
br i1%b1,label%b9,label%b2
b2:
%b3=call i8*@sml_alloc(i32 inreg 60)#0
%b4=getelementptr inbounds i8,i8*%b3,i64 -4
%b5=bitcast i8*%b4 to i32*
store i32 1342177336,i32*%b5,align 4
%b6=getelementptr inbounds i8,i8*%b3,i64 56
%b7=bitcast i8*%b6 to i32*
store i32 1,i32*%b7,align 4
%b8=bitcast i8*%b3 to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aZ,i64 0,i32 2)to i8*),i8**%b8,align 8
call void@sml_raise(i8*inreg%b3)#1
unreachable
b9:
%ca=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 0,i32 inreg 4)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ah)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ai)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aj)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ak)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%al)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%am)
br label%en
cb:
%cc=getelementptr inbounds i8,i8*%aA,i64 8
%cd=bitcast i8*%cc to i8**
%ce=load i8*,i8**%cd,align 8
%cf=bitcast i8*%ce to i8**
%cg=load i8*,i8**%cf,align 8
store i8*%cg,i8**%c,align 8
%ch=getelementptr inbounds i8,i8*%ce,i64 8
%ci=bitcast i8*%ch to i8**
%cj=load i8*,i8**%ci,align 8
store i8*%cj,i8**%e,align 8
%ck=icmp eq i8*%ay,null
br i1%ck,label%cp,label%cl
cl:
%cm=bitcast i8*%ay to i32*
%cn=load i32,i32*%cm,align 4
%co=icmp eq i32%cn,1
br i1%co,label%cw,label%cp
cp:
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%e,align 8
%cq=call i8*@sml_alloc(i32 inreg 60)#0
%cr=getelementptr inbounds i8,i8*%cq,i64 -4
%cs=bitcast i8*%cr to i32*
store i32 1342177336,i32*%cs,align 4
%ct=getelementptr inbounds i8,i8*%cq,i64 56
%cu=bitcast i8*%ct to i32*
store i32 1,i32*%cu,align 4
%cv=bitcast i8*%cq to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aX,i64 0,i32 2)to i8*),i8**%cv,align 8
call void@sml_raise(i8*inreg%cq)#1
unreachable
cw:
%cx=getelementptr inbounds i8,i8*%ay,i64 8
%cy=bitcast i8*%cx to i8**
%cz=load i8*,i8**%cy,align 8
%cA=bitcast i8*%cz to i8**
%cB=load i8*,i8**%cA,align 8
store i8*%cB,i8**%f,align 8
%cC=getelementptr inbounds i8,i8*%cz,i64 8
%cD=bitcast i8*%cC to i8**
%cE=load i8*,i8**%cD,align 8
store i8*%cE,i8**%g,align 8
%cF=call fastcc i8*@_SMLLN17PolyTyElimination9equalListE_782(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aU,i64 0,i32 2)to i8*))
%cG=getelementptr inbounds i8,i8*%cF,i64 16
%cH=bitcast i8*%cG to i8*(i8*,i8*)**
%cI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cH,align 8
%cJ=bitcast i8*%cF to i8**
%cK=load i8*,i8**%cJ,align 8
%cL=load i8*,i8**%d,align 8
%cM=call fastcc i8*%cI(i8*inreg%cK,i8*inreg%cL)
%cN=getelementptr inbounds i8,i8*%cM,i64 16
%cO=bitcast i8*%cN to i8*(i8*,i8*)**
%cP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cO,align 8
%cQ=bitcast i8*%cM to i8**
%cR=load i8*,i8**%cQ,align 8
store i8*%cR,i8**%h,align 8
%cS=call i8*@sml_alloc(i32 inreg 20)#0
%cT=getelementptr inbounds i8,i8*%cS,i64 -4
%cU=bitcast i8*%cT to i32*
store i32 1342177296,i32*%cU,align 4
%cV=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cW=bitcast i8*%cS to i8**
store i8*%cV,i8**%cW,align 8
%cX=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cY=getelementptr inbounds i8,i8*%cS,i64 8
%cZ=bitcast i8*%cY to i8**
store i8*%cX,i8**%cZ,align 8
%c0=getelementptr inbounds i8,i8*%cS,i64 16
%c1=bitcast i8*%c0 to i32*
store i32 3,i32*%c1,align 4
%c2=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%c3=call fastcc i8*%cP(i8*inreg%c2,i8*inreg%cS)
store i8*%c3,i8**%c,align 8
%c4=call fastcc i8*@_SMLLN17PolyTyElimination9equalListE_782(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aV,i64 0,i32 2)to i8*))
%c5=getelementptr inbounds i8,i8*%c4,i64 16
%c6=bitcast i8*%c5 to i8*(i8*,i8*)**
%c7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c6,align 8
%c8=bitcast i8*%c4 to i8**
%c9=load i8*,i8**%c8,align 8
%da=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%db=call fastcc i8*%c7(i8*inreg%c9,i8*inreg%da)
%dc=getelementptr inbounds i8,i8*%db,i64 16
%dd=bitcast i8*%dc to i8*(i8*,i8*)**
%de=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dd,align 8
%df=bitcast i8*%db to i8**
%dg=load i8*,i8**%df,align 8
store i8*%dg,i8**%d,align 8
%dh=call i8*@sml_alloc(i32 inreg 20)#0
%di=getelementptr inbounds i8,i8*%dh,i64 -4
%dj=bitcast i8*%di to i32*
store i32 1342177296,i32*%dj,align 4
%dk=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dl=bitcast i8*%dh to i8**
store i8*%dk,i8**%dl,align 8
%dm=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dn=getelementptr inbounds i8,i8*%dh,i64 8
%do=bitcast i8*%dn to i8**
store i8*%dm,i8**%do,align 8
%dp=getelementptr inbounds i8,i8*%dh,i64 16
%dq=bitcast i8*%dp to i32*
store i32 3,i32*%dq,align 4
%dr=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ds=call fastcc i8*%de(i8*inreg%dr,i8*inreg%dh)
store i8*%ds,i8**%d,align 8
%dt=call i8*@sml_alloc(i32 inreg 20)#0
%du=getelementptr inbounds i8,i8*%dt,i64 -4
%dv=bitcast i8*%du to i32*
store i32 1342177296,i32*%dv,align 4
%dw=load i8*,i8**%c,align 8
%dx=bitcast i8*%dt to i8**
store i8*%dw,i8**%dx,align 8
%dy=load i8*,i8**%d,align 8
%dz=getelementptr inbounds i8,i8*%dt,i64 8
%dA=bitcast i8*%dz to i8**
store i8*%dy,i8**%dA,align 8
%dB=getelementptr inbounds i8,i8*%dt,i64 16
%dC=bitcast i8*%dB to i32*
store i32 3,i32*%dC,align 4
%dD=tail call fastcc i8*@_SMLLN17PolyTyElimination10equalUnionE_775(i8*inreg%dt)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ah)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ai)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aj)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ak)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%al)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%am)
br label%en
dE:
%dF=getelementptr inbounds i8,i8*%aA,i64 8
%dG=bitcast i8*%dF to i8**
%dH=load i8*,i8**%dG,align 8
store i8*%dH,i8**%c,align 8
%dI=icmp eq i8*%ay,null
br i1%dI,label%dN,label%dJ
dJ:
%dK=bitcast i8*%ay to i32*
%dL=load i32,i32*%dK,align 4
%dM=icmp eq i32%dL,0
br i1%dM,label%dU,label%dN
dN:
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
%dO=call i8*@sml_alloc(i32 inreg 60)#0
%dP=getelementptr inbounds i8,i8*%dO,i64 -4
%dQ=bitcast i8*%dP to i32*
store i32 1342177336,i32*%dQ,align 4
%dR=getelementptr inbounds i8,i8*%dO,i64 56
%dS=bitcast i8*%dR to i32*
store i32 1,i32*%dS,align 4
%dT=bitcast i8*%dO to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aT,i64 0,i32 2)to i8*),i8**%dT,align 8
call void@sml_raise(i8*inreg%dO)#1
unreachable
dU:
%dV=getelementptr inbounds i8,i8*%ay,i64 8
%dW=bitcast i8*%dV to i8**
%dX=load i8*,i8**%dW,align 8
store i8*%dX,i8**%e,align 8
%dY=call fastcc i8*@_SMLLN17PolyTyElimination9equalListE_782(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aR,i64 0,i32 2)to i8*))
%dZ=getelementptr inbounds i8,i8*%dY,i64 16
%d0=bitcast i8*%dZ to i8*(i8*,i8*)**
%d1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d0,align 8
%d2=bitcast i8*%dY to i8**
%d3=load i8*,i8**%d2,align 8
%d4=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%d5=call fastcc i8*%d1(i8*inreg%d3,i8*inreg%d4)
%d6=getelementptr inbounds i8,i8*%d5,i64 16
%d7=bitcast i8*%d6 to i8*(i8*,i8*)**
%d8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d7,align 8
%d9=bitcast i8*%d5 to i8**
%ea=load i8*,i8**%d9,align 8
store i8*%ea,i8**%d,align 8
%eb=call i8*@sml_alloc(i32 inreg 20)#0
%ec=getelementptr inbounds i8,i8*%eb,i64 -4
%ed=bitcast i8*%ec to i32*
store i32 1342177296,i32*%ed,align 4
%ee=load i8*,i8**%c,align 8
%ef=bitcast i8*%eb to i8**
store i8*%ee,i8**%ef,align 8
%eg=load i8*,i8**%e,align 8
%eh=getelementptr inbounds i8,i8*%eb,i64 8
%ei=bitcast i8*%eh to i8**
store i8*%eg,i8**%ei,align 8
%ej=getelementptr inbounds i8,i8*%eb,i64 16
%ek=bitcast i8*%ej to i32*
store i32 3,i32*%ek,align 4
%el=load i8*,i8**%d,align 8
%em=tail call fastcc i8*%d8(i8*inreg%el,i8*inreg%eb)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ah)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ai)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aj)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ak)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%al)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%am)
br label%en
en:
%eo=phi i8*[%bV,%bd],[%ca,%b9],[%dD,%cw],[%em,%dU]
ret i8*%eo
ep:
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
%eq=call i8*@sml_alloc(i32 inreg 60)#0
%er=getelementptr inbounds i8,i8*%eq,i64 -4
%es=bitcast i8*%er to i32*
store i32 1342177336,i32*%es,align 4
%et=getelementptr inbounds i8,i8*%eq,i64 56
%eu=bitcast i8*%et to i32*
store i32 1,i32*%eu,align 4
%ev=bitcast i8*%eq to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aQ,i64 0,i32 2)to i8*),i8**%ev,align 8
call void@sml_raise(i8*inreg%eq)#1
unreachable
}
define internal fastcc void@_SMLLN17PolyTyElimination5equalE_1040(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"personality i32(...)*@sml_personality{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%n
j:
call void@sml_check(i32 inreg%f)
%k=load i8*,i8**%c,align 8
%l=bitcast i8**%e to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%j],[%i,%h]
%p=phi i8*[%k,%j],[%b,%h]
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=getelementptr inbounds i8,i8*%p,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%d,align 8
%v=load i8*,i8**%o,align 8
store i8*%v,i8**%e,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%H=invoke fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%G,i8*inreg%w)
to label%au unwind label%I
I:
%J=landingpad{i8*,i8*}
catch i8*null
%K=extractvalue{i8*,i8*}%J,1
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%c,align 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
%P=icmp eq i8*%O,bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i64 0,i32 2)to i8*)
br i1%P,label%Q,label%am
Q:
%R=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%R,i8**%c,align 8
%S=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a7,i64 0,i32 2)to i8*))
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 28)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177304,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%Z,align 8
%aa=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%T,i64 24
%ae=bitcast i8*%ad to i32*
store i32 7,i32*%ae,align 4
%af=call i8*@sml_alloc(i32 inreg 60)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177336,i32*%ah,align 4
%ai=getelementptr inbounds i8,i8*%af,i64 56
%aj=bitcast i8*%ai to i32*
store i32 1,i32*%aj,align 4
%ak=load i8*,i8**%e,align 8
%al=bitcast i8*%af to i8**
store i8*%ak,i8**%al,align 8
call void@sml_raise(i8*inreg%af)#1
unreachable
am:
%an=call i8*@sml_alloc(i32 inreg 60)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177336,i32*%ap,align 4
%aq=getelementptr inbounds i8,i8*%an,i64 56
%ar=bitcast i8*%aq to i32*
store i32 1,i32*%ar,align 4
%as=load i8*,i8**%c,align 8
%at=bitcast i8*%an to i8**
store i8*%as,i8**%at,align 8
call void@sml_raise(i8*inreg%an)#1
unreachable
au:
ret void
}
define internal fastcc i8*@_SMLLN17PolyTyElimination5equalE_1041(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17PolyTyElimination5equalE_1040 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination5equalE_1754 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc void@_SMLLN17PolyTyElimination9equalListE_1047(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"personality i32(...)*@sml_personality{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=bitcast i8*%l to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=invoke fastcc i8*@_SMLFN8ListPair5appEqE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
to label%t unwind label%Y
t:
%u=getelementptr inbounds i8,i8*%s,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%s to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%f,align 8
%z=bitcast i8**%e to i8***
%A=load i8**,i8***%z,align 8
store i8*null,i8**%e,align 8
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLN17PolyTyElimination5equalE_1041(i8*inreg%B)
%D=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%E=invoke fastcc i8*%w(i8*inreg%D,i8*inreg%C)
to label%F unwind label%Y
F:
%G=getelementptr inbounds i8,i8*%E,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%E to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%e,align 8
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%L,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%W=invoke fastcc i8*%I(i8*inreg%V,i8*inreg%L)
to label%X unwind label%Y
X:
ret void
Y:
%Z=landingpad{i8*,i8*}
catch i8*null
%aa=extractvalue{i8*,i8*}%Z,1
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*%ac,i8**%c,align 8
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
%af=load i8*,i8**@_SMLZN8ListPair14UnequalLengthsE,align 8
%ag=icmp eq i8*%ae,%af
br i1%ag,label%ah,label%aD
ah:
%ai=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%ai,i8**%c,align 8
%aj=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a9,i64 0,i32 2)to i8*))
store i8*%aj,i8**%d,align 8
%ak=call i8*@sml_alloc(i32 inreg 28)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177304,i32*%am,align 4
store i8*%ak,i8**%e,align 8
%an=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ak,i64 8
%aq=bitcast i8*%ap to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%aq,align 8
%ar=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%as=getelementptr inbounds i8,i8*%ak,i64 16
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%ak,i64 24
%av=bitcast i8*%au to i32*
store i32 7,i32*%av,align 4
%aw=call i8*@sml_alloc(i32 inreg 60)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177336,i32*%ay,align 4
%az=getelementptr inbounds i8,i8*%aw,i64 56
%aA=bitcast i8*%az to i32*
store i32 1,i32*%aA,align 4
%aB=load i8*,i8**%e,align 8
%aC=bitcast i8*%aw to i8**
store i8*%aB,i8**%aC,align 8
call void@sml_raise(i8*inreg%aw)#1
unreachable
aD:
%aE=call i8*@sml_alloc(i32 inreg 60)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177336,i32*%aG,align 4
%aH=getelementptr inbounds i8,i8*%aE,i64 56
%aI=bitcast i8*%aH to i32*
store i32 1,i32*%aI,align 4
%aJ=load i8*,i8**%c,align 8
%aK=bitcast i8*%aE to i8**
store i8*%aJ,i8**%aK,align 8
call void@sml_raise(i8*inreg%aE)#1
unreachable
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9equalListE_1048(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17PolyTyElimination9equalListE_1047 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9equalListE_1756 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc void@_SMLLN17PolyTyElimination8equalAllE_1050(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
j:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
br label%h
h:
%i=phi i8*[%Y,%z],[%b,%j]
store i8*%i,i8**%d,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%d,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%i,%h]
%q=icmp eq i8*%p,null
br i1%q,label%r,label%s
r:
ret void
s:
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%d,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=icmp eq i8*%x,null
br i1%y,label%r,label%z
z:
%A=bitcast i8*%x to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%f,align 8
%F=load i8*,i8**%c,align 8
%G=call fastcc i8*@_SMLLN17PolyTyElimination5equalE_1041(i8*inreg%F)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%g,align 8
%M=call i8*@sml_alloc(i32 inreg 20)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177296,i32*%O,align 4
%P=load i8*,i8**%d,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%S=getelementptr inbounds i8,i8*%M,i64 8
%T=bitcast i8*%S to i8**
store i8*%R,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%M,i64 16
%V=bitcast i8*%U to i32*
store i32 3,i32*%V,align 4
%W=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%X=call fastcc i8*%J(i8*inreg%W,i8*inreg%M)
%Y=call i8*@sml_alloc(i32 inreg 20)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177296,i32*%aa,align 4
%ab=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ae=getelementptr inbounds i8,i8*%Y,i64 8
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%Y,i64 16
%ah=bitcast i8*%ag to i32*
store i32 3,i32*%ah,align 4
br label%h
}
define internal fastcc i32@_SMLLN17PolyTyElimination7equalTyE_1052(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=icmp eq i32%c,%f
%h=zext i1%g to i32
ret i32%h
}
define internal fastcc i32@_SMLLN17PolyTyElimination7equalTyE_1054(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"personality i32(...)*@sml_personality{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%e,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%l)
%m=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%m)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ba,i64 0,i32 2)to i8*),i8**%c,align 8
%n=call i8*@sml_alloc(i32 inreg 12)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177288,i32*%p,align 4
store i8*%n,i8**%d,align 8
%q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to i32*
store i32 1,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
%x=load i8*,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map4alliE_682 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map4alliE_1691 to void(...)*),void(...)**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 24
%E=bitcast i8*%D to i32*
store i32 -2147483647,i32*%E,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%l)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%m)
store i8*%x,i8**%g,align 8
%F=call i8*@sml_alloc(i32 inreg 8)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 805306376,i32*%H,align 4
%I=bitcast i8*%F to i64*
store i64 0,i64*%I,align 1
%J=bitcast i8**%f to i8***
%K=load i8**,i8***%J,align 8
store i8*null,i8**%f,align 8
%L=load i8*,i8**%K,align 8
%M=bitcast i8*%F to i8**
call void@sml_write(i8*inreg%F,i8**inreg%M,i8*inreg%L)#0
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=invoke fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_798(i8*inreg%F,i8*inreg%N)
to label%P unwind label%V
P:
%Q=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%R=invoke fastcc i8*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map4alliE_1691(i8*inreg%Q,i8*inreg%O)
to label%S unwind label%V
S:
%T=bitcast i8*%R to i32*
%U=load i32,i32*%T,align 4
br label%ad
V:
%W=landingpad{i8*,i8*}
catch i8*null
%X=extractvalue{i8*,i8*}%W,1
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*%Z,i8**%e,align 8
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
%ac=icmp eq i8*%ab,bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL770,i64 0,i32 2)to i8*)
br i1%ac,label%ad,label%af
ad:
%ae=phi i32[0,%V],[%U,%S]
ret i32%ae
af:
%ag=call i8*@sml_alloc(i32 inreg 60)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177336,i32*%ai,align 4
%aj=getelementptr inbounds i8,i8*%ag,i64 56
%ak=bitcast i8*%aj to i32*
store i32 1,i32*%ak,align 4
%al=load i8*,i8**%e,align 8
%am=bitcast i8*%ag to i8**
store i8*%al,i8**%am,align 8
call void@sml_raise(i8*inreg%ag)#1
unreachable
}
define internal fastcc i8*@_SMLLN17PolyTyElimination11getIdsUnionE_1059(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=bitcast i8*%j to i8***
%n=load i8**,i8***%m,align 8
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=load i8*,i8**%l,align 8
%q=getelementptr inbounds i8,i8*%p,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%j,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
%w=getelementptr inbounds i8,i8*%v,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%d,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call fastcc i32@_SMLFN16DynamicKindUtils6eqKindE(i8*inreg%z)
%K=icmp eq i32%J,0
br i1%K,label%W,label%L
L:
%M=call i8*@sml_alloc(i32 inreg 20)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177296,i32*%O,align 4
%P=load i8*,i8**%b,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=load i8*,i8**%c,align 8
%S=getelementptr inbounds i8,i8*%M,i64 8
%T=bitcast i8*%S to i8**
store i8*%R,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%M,i64 16
%V=bitcast i8*%U to i32*
store i32 3,i32*%V,align 4
ret i8*%M
W:
store i8*null,i8**%c,align 8
%X=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%X,i8**%b,align 8
%Y=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bc,i64 0,i32 2)to i8*))
store i8*%Y,i8**%c,align 8
%Z=call i8*@sml_alloc(i32 inreg 28)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177304,i32*%ab,align 4
store i8*%Z,i8**%d,align 8
%ac=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%Z,i64 8
%af=bitcast i8*%ae to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%af,align 8
%ag=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%Z,i64 24
%ak=bitcast i8*%aj to i32*
store i32 7,i32*%ak,align 4
%al=call i8*@sml_alloc(i32 inreg 60)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177336,i32*%an,align 4
%ao=getelementptr inbounds i8,i8*%al,i64 56
%ap=bitcast i8*%ao to i32*
store i32 1,i32*%ap,align 4
%aq=load i8*,i8**%d,align 8
%ar=bitcast i8*%al to i8**
store i8*%aq,i8**%ar,align 8
call void@sml_raise(i8*inreg%al)#1
unreachable
}
define internal fastcc i8*@_SMLLN17PolyTyElimination11getIdsUnionE_1061(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%c,align 8
%o=getelementptr inbounds i8,i8*%k,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%r)
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bd,i64 0,i32 2)to i8*),i8**%b,align 8
%s=load atomic i32,i32*@sml_check_flag unordered,align 4
%t=icmp eq i32%s,0
br i1%t,label%v,label%u
u:
call void@sml_check(i32 inreg%s)
br label%v
v:
%w=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 1,i32 inreg 8)
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
%C=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%D=call fastcc i8*%z(i8*inreg%B,i8*inreg%C)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%r)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%e,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
%M=load i8*,i8**%c,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%d,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%J,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%e,align 8
%U=tail call fastcc i8*%G(i8*inreg%T,i8*inreg%J)
ret i8*%U
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1063(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=getelementptr inbounds i8,i8*%o,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=load i8*,i8**%n,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
store i8*null,i8**%c,align 8
%w=bitcast i8**%n to i8***
%x=load i8**,i8***%w,align 8
%y=load i8*,i8**%x,align 8
%z=bitcast i8*%o to i8**
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*%v(i8*inreg%y,i8*inreg%A)
store i8*%B,i8**%c,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=load i8*,i8**%c,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%d,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=tail call fastcc i8*@_SMLLN17PolyTyElimination11getIdsUnionE_1061(i8*inreg%C)
ret i8*%M
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1064(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%f,align 8
%r=load i8*,i8**%d,align 8
%s=getelementptr inbounds i8,i8*%r,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=call i8*@sml_alloc(i32 inreg 12)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177288,i32*%x,align 4
store i8*%v,i8**%g,align 8
%y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177304,i32*%E,align 4
%F=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10getIdsListE_1063 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10getIdsListE_1063 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 24
%M=bitcast i8*%L to i32*
store i32 -2147483647,i32*%M,align 4
%N=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%O=call fastcc i8*%o(i8*inreg%N,i8*inreg%C)
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8*(i8*,i8*)**
%R=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
%U=bitcast i8**%d to i8***
%V=load i8**,i8***%U,align 8
store i8*null,i8**%d,align 8
%W=load i8*,i8**%V,align 8
%X=call fastcc i8*%R(i8*inreg%T,i8*inreg%W)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=load i8*,i8**%c,align 8
%ae=tail call fastcc i8*%aa(i8*inreg%ac,i8*inreg%ad)
ret i8*%ae
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10getIdsListE_1064 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10getIdsListE_1064 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1085(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1086(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1087(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1088(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination16getIdsConstraintE_1075(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15getIdsBackendTyE_1090(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15getIdsBackendTyE_1091(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination17getIdsCodeEntryTyE_1093(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12getIdsBtvEnvE_1094(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination10getIdsKindE_1070(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12getIdsBtvEnvE_1097(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=call fastcc i8*@_SMLFN16DynamicKindUtils16kindOfStaticKindE(i8*inreg%i)
%l=icmp eq i8*%k,null
br i1%l,label%m,label%G
m:
%n=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 28)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177304,i32*%q,align 4
store i8*%o,i8**%c,align 8
%r=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@bk,i64 0,i32 2,i64 0),i8**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 16
%w=bitcast i8*%v to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@bl,i64 0,i32 2,i64 0),i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 24
%y=bitcast i8*%x to i32*
store i32 7,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 60)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177336,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 56
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
call void@sml_raise(i8*inreg%z)#1
unreachable
G:
%H=bitcast i8*%k to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%c,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
%M=load i8*,i8**%b,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%J,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
ret i8*%J
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14getIdsTvarKindE_1099(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14getIdsTvarKindE_1100(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14getIdsTvarKindE_1101(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination19getIdsOprimSelectorE_1072(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14getIdsTvarKindE_1102(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination19getIdsOverloadMatchE_1104(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination19getIdsOverloadMatchE_1105(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination19getIdsOverloadMatchE_1106(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=getelementptr inbounds i8,i8*%o,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
store i8*null,i8**%c,align 8
%s=load i8*,i8**%n,align 8
%t=bitcast i8*%o to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination19getIdsOverloadMatchE_1073(i8*inreg%s,i8*inreg%u)
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=tail call fastcc i8*@_SMLLN17PolyTyElimination11getIdsUnionE_1061(i8*inreg%w)
ret i8*%G
}
define internal fastcc i8*@_SMLLN17PolyTyElimination16getIdsConstraintE_1109(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
j:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
br label%h
h:
%i=phi i8*[%dH,%dE],[%b,%j]
store i8*%i,i8**%c,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%c,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%i,%h]
%q=icmp eq i8*%p,null
br i1%q,label%em,label%r
r:
%s=bitcast i8*%p to i32*
%t=load i32,i32*%s,align 4
switch i32%t,label%u[
i32 9,label%eO
i32 0,label%eI
i32 4,label%em
i32 3,label%ed
i32 5,label%d4
i32 10,label%df
i32 1,label%db
i32 6,label%cn
i32 8,label%bG
i32 2,label%a5
i32 7,label%M
]
u:
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%v=load i8*,i8**@_SMLZ5Match,align 8
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%d,align 8
%z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bi,i64 0,i32 2,i64 0),i8**%C,align 8
%D=getelementptr inbounds i8,i8*%w,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 60)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177336,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%F,i64 56
%J=bitcast i8*%I to i32*
store i32 1,i32*%J,align 4
%K=load i8*,i8**%d,align 8
%L=bitcast i8*%F to i8**
store i8*%K,i8**%L,align 8
call void@sml_raise(i8*inreg%F)#1
unreachable
M:
%N=getelementptr inbounds i8,i8*%p,i64 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%e,align 8
%Q=load i8*,i8**%f,align 8
%R=getelementptr inbounds i8,i8*%Q,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%c,align 8
%U=call i8*@sml_alloc(i32 inreg 12)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177288,i32*%W,align 4
store i8*%U,i8**%d,align 8
%X=load i8*,i8**%f,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to i32*
store i32 1,i32*%aa,align 4
%ab=call i8*@sml_alloc(i32 inreg 28)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177304,i32*%ad,align 4
%ae=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%ab,i64 8
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8getIdsTyE_1088 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ab,i64 16
%aj=bitcast i8*%ai to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8getIdsTyE_1088 to void(...)*),void(...)**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 24
%al=bitcast i8*%ak to i32*
store i32 -2147483647,i32*%al,align 4
%am=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%an=call fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%am,i8*inreg%ab)
%ao=getelementptr inbounds i8,i8*%an,i64 16
%ap=bitcast i8*%ao to i8*(i8*,i8*)**
%aq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ap,align 8
%ar=bitcast i8*%an to i8**
%as=load i8*,i8**%ar,align 8
%at=load i8*,i8**%e,align 8
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8**
%aw=load i8*,i8**%av,align 8
%ax=call fastcc i8*%aq(i8*inreg%as,i8*inreg%aw)
store i8*%ax,i8**%c,align 8
%ay=bitcast i8**%e to i8***
%az=load i8**,i8***%ay,align 8
%aA=load i8*,i8**%az,align 8
%aB=load i8*,i8**%f,align 8
%aC=call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%aB,i8*inreg%aA)
store i8*%aC,i8**%d,align 8
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
%aG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aD,i64 16
%aM=bitcast i8*%aL to i32*
store i32 3,i32*%aM,align 4
%aN=call fastcc i8*@_SMLLN17PolyTyElimination11getIdsUnionE_1061(i8*inreg%aD)
store i8*%aN,i8**%c,align 8
%aO=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aP=getelementptr inbounds i8,i8*%aO,i64 8
%aQ=bitcast i8*%aP to i8**
%aR=load i8*,i8**%aQ,align 8
%aS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aT=call fastcc i8*@_SMLLN17PolyTyElimination12getIdsBtvEnvE_1069(i8*inreg%aS,i8*inreg%aR)
store i8*%aT,i8**%d,align 8
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
%aX=load i8*,i8**%c,align 8
%aY=bitcast i8*%aU to i8**
store i8*%aX,i8**%aY,align 8
%aZ=load i8*,i8**%d,align 8
%a0=getelementptr inbounds i8,i8*%aU,i64 8
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aU,i64 16
%a3=bitcast i8*%a2 to i32*
store i32 3,i32*%a3,align 4
%a4=tail call fastcc i8*@_SMLLN17PolyTyElimination11getIdsUnionE_1061(i8*inreg%aU)
ret i8*%a4
a5:
%a6=getelementptr inbounds i8,i8*%p,i64 8
%a7=bitcast i8*%a6 to i8**
%a8=load i8*,i8**%a7,align 8
store i8*%a8,i8**%c,align 8
%a9=load i8*,i8**%f,align 8
%ba=getelementptr inbounds i8,i8*%a9,i64 8
%bb=bitcast i8*%ba to i8**
%bc=load i8*,i8**%bb,align 8
store i8*%bc,i8**%d,align 8
%bd=call i8*@sml_alloc(i32 inreg 12)#0
%be=getelementptr inbounds i8,i8*%bd,i64 -4
%bf=bitcast i8*%be to i32*
store i32 1342177288,i32*%bf,align 4
store i8*%bd,i8**%e,align 8
%bg=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bh=bitcast i8*%bd to i8**
store i8*%bg,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%bd,i64 8
%bj=bitcast i8*%bi to i32*
store i32 1,i32*%bj,align 4
%bk=call i8*@sml_alloc(i32 inreg 28)#0
%bl=getelementptr inbounds i8,i8*%bk,i64 -4
%bm=bitcast i8*%bl to i32*
store i32 1342177304,i32*%bm,align 4
%bn=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bo=bitcast i8*%bk to i8**
store i8*%bn,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bk,i64 8
%bq=bitcast i8*%bp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8getIdsTyE_1087 to void(...)*),void(...)**%bq,align 8
%br=getelementptr inbounds i8,i8*%bk,i64 16
%bs=bitcast i8*%br to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8getIdsTyE_1087 to void(...)*),void(...)**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bk,i64 24
%bu=bitcast i8*%bt to i32*
store i32 -2147483647,i32*%bu,align 4
%bv=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bw=call fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%bv,i8*inreg%bk)
%bx=getelementptr inbounds i8,i8*%bw,i64 16
%by=bitcast i8*%bx to i8*(i8*,i8*)**
%bz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%by,align 8
%bA=bitcast i8*%bw to i8**
%bB=load i8*,i8**%bA,align 8
%bC=bitcast i8**%c to i8***
%bD=load i8**,i8***%bC,align 8
%bE=load i8*,i8**%bD,align 8
%bF=tail call fastcc i8*%bz(i8*inreg%bB,i8*inreg%bE)
ret i8*%bF
bG:
%bH=getelementptr inbounds i8,i8*%p,i64 8
%bI=bitcast i8*%bH to i8**
%bJ=load i8*,i8**%bI,align 8
store i8*%bJ,i8**%c,align 8
%bK=load i8*,i8**%f,align 8
%bL=getelementptr inbounds i8,i8*%bK,i64 8
%bM=bitcast i8*%bL to i8**
%bN=load i8*,i8**%bM,align 8
store i8*%bN,i8**%d,align 8
%bO=call i8*@sml_alloc(i32 inreg 12)#0
%bP=getelementptr inbounds i8,i8*%bO,i64 -4
%bQ=bitcast i8*%bP to i32*
store i32 1342177288,i32*%bQ,align 4
store i8*%bO,i8**%e,align 8
%bR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bS=bitcast i8*%bO to i8**
store i8*%bR,i8**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bO,i64 8
%bU=bitcast i8*%bT to i32*
store i32 1,i32*%bU,align 4
%bV=call i8*@sml_alloc(i32 inreg 28)#0
%bW=getelementptr inbounds i8,i8*%bV,i64 -4
%bX=bitcast i8*%bW to i32*
store i32 1342177304,i32*%bX,align 4
%bY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bZ=bitcast i8*%bV to i8**
store i8*%bY,i8**%bZ,align 8
%b0=getelementptr inbounds i8,i8*%bV,i64 8
%b1=bitcast i8*%b0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8getIdsTyE_1086 to void(...)*),void(...)**%b1,align 8
%b2=getelementptr inbounds i8,i8*%bV,i64 16
%b3=bitcast i8*%b2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8getIdsTyE_1086 to void(...)*),void(...)**%b3,align 8
%b4=getelementptr inbounds i8,i8*%bV,i64 24
%b5=bitcast i8*%b4 to i32*
store i32 -2147483647,i32*%b5,align 4
%b6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b7=call fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%b6,i8*inreg%bV)
%b8=getelementptr inbounds i8,i8*%b7,i64 16
%b9=bitcast i8*%b8 to i8*(i8*,i8*)**
%ca=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b9,align 8
%cb=bitcast i8*%b7 to i8**
%cc=load i8*,i8**%cb,align 8
store i8*%cc,i8**%d,align 8
%cd=call fastcc i8*@_SMLFN11RecordLabel3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%ce=getelementptr inbounds i8,i8*%cd,i64 16
%cf=bitcast i8*%ce to i8*(i8*,i8*)**
%cg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cf,align 8
%ch=bitcast i8*%cd to i8**
%ci=load i8*,i8**%ch,align 8
%cj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ck=call fastcc i8*%cg(i8*inreg%ci,i8*inreg%cj)
%cl=load i8*,i8**%d,align 8
%cm=tail call fastcc i8*%ca(i8*inreg%cl,i8*inreg%ck)
ret i8*%cm
cn:
%co=getelementptr inbounds i8,i8*%p,i64 8
%cp=bitcast i8*%co to i8**
%cq=load i8*,i8**%cp,align 8
%cr=bitcast i8*%cq to i8**
%cs=load i8*,i8**%cr,align 8
store i8*%cs,i8**%c,align 8
%ct=getelementptr inbounds i8,i8*%cq,i64 8
%cu=bitcast i8*%ct to i8**
%cv=load i8*,i8**%cu,align 8
store i8*%cv,i8**%d,align 8
%cw=load i8*,i8**%f,align 8
%cx=getelementptr inbounds i8,i8*%cw,i64 8
%cy=bitcast i8*%cx to i8**
%cz=load i8*,i8**%cy,align 8
store i8*%cz,i8**%e,align 8
%cA=call i8*@sml_alloc(i32 inreg 12)#0
%cB=getelementptr inbounds i8,i8*%cA,i64 -4
%cC=bitcast i8*%cB to i32*
store i32 1342177288,i32*%cC,align 4
store i8*%cA,i8**%g,align 8
%cD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cE=bitcast i8*%cA to i8**
store i8*%cD,i8**%cE,align 8
%cF=getelementptr inbounds i8,i8*%cA,i64 8
%cG=bitcast i8*%cF to i32*
store i32 1,i32*%cG,align 4
%cH=call i8*@sml_alloc(i32 inreg 28)#0
%cI=getelementptr inbounds i8,i8*%cH,i64 -4
%cJ=bitcast i8*%cI to i32*
store i32 1342177304,i32*%cJ,align 4
%cK=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cL=bitcast i8*%cH to i8**
store i8*%cK,i8**%cL,align 8
%cM=getelementptr inbounds i8,i8*%cH,i64 8
%cN=bitcast i8*%cM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8getIdsTyE_1085 to void(...)*),void(...)**%cN,align 8
%cO=getelementptr inbounds i8,i8*%cH,i64 16
%cP=bitcast i8*%cO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8getIdsTyE_1085 to void(...)*),void(...)**%cP,align 8
%cQ=getelementptr inbounds i8,i8*%cH,i64 24
%cR=bitcast i8*%cQ to i32*
store i32 -2147483647,i32*%cR,align 4
%cS=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cT=call fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%cS,i8*inreg%cH)
%cU=getelementptr inbounds i8,i8*%cT,i64 16
%cV=bitcast i8*%cU to i8*(i8*,i8*)**
%cW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cV,align 8
%cX=bitcast i8*%cT to i8**
%cY=load i8*,i8**%cX,align 8
store i8*%cY,i8**%e,align 8
%cZ=call i8*@sml_alloc(i32 inreg 20)#0
%c0=getelementptr inbounds i8,i8*%cZ,i64 -4
%c1=bitcast i8*%c0 to i32*
store i32 1342177296,i32*%c1,align 4
%c2=load i8*,i8**%d,align 8
%c3=bitcast i8*%cZ to i8**
store i8*%c2,i8**%c3,align 8
%c4=load i8*,i8**%c,align 8
%c5=getelementptr inbounds i8,i8*%cZ,i64 8
%c6=bitcast i8*%c5 to i8**
store i8*%c4,i8**%c6,align 8
%c7=getelementptr inbounds i8,i8*%cZ,i64 16
%c8=bitcast i8*%c7 to i32*
store i32 3,i32*%c8,align 4
%c9=load i8*,i8**%e,align 8
%da=tail call fastcc i8*%cW(i8*inreg%c9,i8*inreg%cZ)
ret i8*%da
db:
%dc=bitcast i8**%f to i8***
%dd=load i8**,i8***%dc,align 8
%de=load i8*,i8**%dd,align 8
ret i8*%de
df:
%dg=getelementptr inbounds i8,i8*%p,i64 8
%dh=bitcast i8*%dg to i8***
%di=load i8**,i8***%dh,align 8
%dj=load i8*,i8**%di,align 8
%dk=bitcast i8*%dj to i32*
%dl=load i32,i32*%dk,align 4
switch i32%dl,label%dm[
i32 1,label%dI
i32 0,label%dE
]
dm:
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%dn=load i8*,i8**@_SMLZ5Match,align 8
store i8*%dn,i8**%c,align 8
%do=call i8*@sml_alloc(i32 inreg 20)#0
%dp=getelementptr inbounds i8,i8*%do,i64 -4
%dq=bitcast i8*%dp to i32*
store i32 1342177296,i32*%dq,align 4
store i8*%do,i8**%d,align 8
%dr=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ds=bitcast i8*%do to i8**
store i8*%dr,i8**%ds,align 8
%dt=getelementptr inbounds i8,i8*%do,i64 8
%du=bitcast i8*%dt to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bi,i64 0,i32 2,i64 0),i8**%du,align 8
%dv=getelementptr inbounds i8,i8*%do,i64 16
%dw=bitcast i8*%dv to i32*
store i32 3,i32*%dw,align 4
%dx=call i8*@sml_alloc(i32 inreg 60)#0
%dy=getelementptr inbounds i8,i8*%dx,i64 -4
%dz=bitcast i8*%dy to i32*
store i32 1342177336,i32*%dz,align 4
%dA=getelementptr inbounds i8,i8*%dx,i64 56
%dB=bitcast i8*%dA to i32*
store i32 1,i32*%dB,align 4
%dC=load i8*,i8**%d,align 8
%dD=bitcast i8*%dx to i8**
store i8*%dC,i8**%dD,align 8
call void@sml_raise(i8*inreg%dx)#1
unreachable
dE:
%dF=getelementptr inbounds i8,i8*%dj,i64 8
%dG=bitcast i8*%dF to i8**
%dH=load i8*,i8**%dG,align 8
br label%h
dI:
store i8*null,i8**%f,align 8
%dJ=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%dJ,i8**%c,align 8
%dK=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bh,i64 0,i32 2)to i8*))
store i8*%dK,i8**%d,align 8
%dL=call i8*@sml_alloc(i32 inreg 28)#0
%dM=getelementptr inbounds i8,i8*%dL,i64 -4
%dN=bitcast i8*%dM to i32*
store i32 1342177304,i32*%dN,align 4
store i8*%dL,i8**%e,align 8
%dO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dP=bitcast i8*%dL to i8**
store i8*%dO,i8**%dP,align 8
%dQ=getelementptr inbounds i8,i8*%dL,i64 8
%dR=bitcast i8*%dQ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%dR,align 8
%dS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dT=getelementptr inbounds i8,i8*%dL,i64 16
%dU=bitcast i8*%dT to i8**
store i8*%dS,i8**%dU,align 8
%dV=getelementptr inbounds i8,i8*%dL,i64 24
%dW=bitcast i8*%dV to i32*
store i32 7,i32*%dW,align 4
%dX=call i8*@sml_alloc(i32 inreg 60)#0
%dY=getelementptr inbounds i8,i8*%dX,i64 -4
%dZ=bitcast i8*%dY to i32*
store i32 1342177336,i32*%dZ,align 4
%d0=getelementptr inbounds i8,i8*%dX,i64 56
%d1=bitcast i8*%d0 to i32*
store i32 1,i32*%d1,align 4
%d2=load i8*,i8**%e,align 8
%d3=bitcast i8*%dX to i8**
store i8*%d2,i8**%d3,align 8
call void@sml_raise(i8*inreg%dX)#1
unreachable
d4:
%d5=getelementptr inbounds i8,i8*%p,i64 8
%d6=bitcast i8*%d5 to i8**
%d7=load i8*,i8**%d6,align 8
%d8=getelementptr inbounds i8,i8*%d7,i64 8
%d9=bitcast i8*%d8 to i8**
%ea=load i8*,i8**%d9,align 8
%eb=load i8*,i8**%f,align 8
%ec=tail call fastcc i8*@_SMLLN17PolyTyElimination10getIdsKindE_1070(i8*inreg%eb,i8*inreg%ea)
ret i8*%ec
ed:
%ee=getelementptr inbounds i8,i8*%p,i64 8
%ef=bitcast i8*%ee to i8**
%eg=load i8*,i8**%ef,align 8
%eh=getelementptr inbounds i8,i8*%eg,i64 8
%ei=bitcast i8*%eh to i8**
%ej=load i8*,i8**%ei,align 8
%ek=load i8*,i8**%f,align 8
%el=tail call fastcc i8*@_SMLLN17PolyTyElimination10getIdsKindE_1070(i8*inreg%ek,i8*inreg%ej)
ret i8*%el
em:
store i8*null,i8**%f,align 8
%en=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%en,i8**%c,align 8
%eo=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bf,i64 0,i32 2)to i8*))
store i8*%eo,i8**%d,align 8
%ep=call i8*@sml_alloc(i32 inreg 28)#0
%eq=getelementptr inbounds i8,i8*%ep,i64 -4
%er=bitcast i8*%eq to i32*
store i32 1342177304,i32*%er,align 4
store i8*%ep,i8**%e,align 8
%es=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%et=bitcast i8*%ep to i8**
store i8*%es,i8**%et,align 8
%eu=getelementptr inbounds i8,i8*%ep,i64 8
%ev=bitcast i8*%eu to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%ev,align 8
%ew=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ex=getelementptr inbounds i8,i8*%ep,i64 16
%ey=bitcast i8*%ex to i8**
store i8*%ew,i8**%ey,align 8
%ez=getelementptr inbounds i8,i8*%ep,i64 24
%eA=bitcast i8*%ez to i32*
store i32 7,i32*%eA,align 4
%eB=call i8*@sml_alloc(i32 inreg 60)#0
%eC=getelementptr inbounds i8,i8*%eB,i64 -4
%eD=bitcast i8*%eC to i32*
store i32 1342177336,i32*%eD,align 4
%eE=getelementptr inbounds i8,i8*%eB,i64 56
%eF=bitcast i8*%eE to i32*
store i32 1,i32*%eF,align 4
%eG=load i8*,i8**%e,align 8
%eH=bitcast i8*%eB to i8**
store i8*%eG,i8**%eH,align 8
call void@sml_raise(i8*inreg%eB)#1
unreachable
eI:
%eJ=getelementptr inbounds i8,i8*%p,i64 8
%eK=bitcast i8*%eJ to i8**
%eL=load i8*,i8**%eK,align 8
%eM=load i8*,i8**%f,align 8
%eN=tail call fastcc i8*@_SMLLN17PolyTyElimination15getIdsBackendTyE_1067(i8*inreg%eM,i8*inreg%eL)
ret i8*%eN
eO:
%eP=getelementptr inbounds i8,i8*%p,i64 8
%eQ=bitcast i8*%eP to i8**
%eR=load i8*,i8**%eQ,align 8
%eS=load i8*,i8**%f,align 8
%eT=tail call fastcc i8*@_SMLLN17PolyTyElimination17getIdsSingletonTyE_1074(i8*inreg%eS,i8*inreg%eR)
ret i8*%eT
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15getIdsBackendTyE_1067(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%b,i8**%c,align 8
store i8*%a,i8**%f,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%c,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%b,%o]
%p=bitcast i8*%n to i32*
%q=load i32,i32*%p,align 4
switch i32%q,label%r[
i32 6,label%dC
i32 5,label%dt
i32 4,label%dk
i32 1,label%de
i32 3,label%c8
i32 0,label%bQ
i32 9,label%bM
i32 10,label%bI
i32 8,label%bE
i32 7,label%bA
i32 2,label%J
]
r:
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%s=load i8*,i8**@_SMLZ5Match,align 8
store i8*%s,i8**%c,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%d,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bj,i64 0,i32 2,i64 0),i8**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 60)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177336,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 56
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=load i8*,i8**%d,align 8
%I=bitcast i8*%C to i8**
store i8*%H,i8**%I,align 8
call void@sml_raise(i8*inreg%C)#1
unreachable
J:
%K=getelementptr inbounds i8,i8*%n,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%d,align 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%e,align 8
%P=load i8*,i8**%f,align 8
%Q=getelementptr inbounds i8,i8*%P,i64 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%c,align 8
%T=call i8*@sml_alloc(i32 inreg 12)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177288,i32*%V,align 4
store i8*%T,i8**%g,align 8
%W=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to i32*
store i32 1,i32*%Z,align 4
%aa=call i8*@sml_alloc(i32 inreg 28)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177304,i32*%ac,align 4
%ad=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%aa,i64 8
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15getIdsBackendTyE_1091 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%aa,i64 16
%ai=bitcast i8*%ah to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15getIdsBackendTyE_1091 to void(...)*),void(...)**%ai,align 8
%aj=getelementptr inbounds i8,i8*%aa,i64 24
%ak=bitcast i8*%aj to i32*
store i32 -2147483647,i32*%ak,align 4
%al=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%am=call fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%al,i8*inreg%aa)
%an=getelementptr inbounds i8,i8*%am,i64 16
%ao=bitcast i8*%an to i8*(i8*,i8*)**
%ap=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ao,align 8
%aq=bitcast i8*%am to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%h,align 8
%as=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%at=getelementptr inbounds i8,i8*%as,i64 16
%au=bitcast i8*%at to i8*(i8*,i8*)**
%av=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%au,align 8
%aw=bitcast i8*%as to i8**
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%g,align 8
%ay=load i8*,i8**%d,align 8
%az=getelementptr inbounds i8,i8*%ay,i64 16
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
%aC=icmp eq i8*%aB,null
br i1%aC,label%aQ,label%aD
aD:
%aE=bitcast i8*%aB to i8**
%aF=load i8*,i8**%aE,align 8
store i8*%aF,i8**%c,align 8
%aG=call i8*@sml_alloc(i32 inreg 20)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177296,i32*%aI,align 4
%aJ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aG,i64 8
%aM=bitcast i8*%aL to i8**
store i8*null,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aG,i64 16
%aO=bitcast i8*%aN to i32*
store i32 3,i32*%aO,align 4
%aP=load i8*,i8**%d,align 8
br label%aQ
aQ:
%aR=phi i8*[%aP,%aD],[%ay,%J]
%aS=phi i8*[%aG,%aD],[null,%J]
store i8*%aS,i8**%c,align 8
%aT=getelementptr inbounds i8,i8*%aR,i64 24
%aU=bitcast i8*%aT to i8**
%aV=load i8*,i8**%aU,align 8
%aW=icmp eq i8*%aV,null
br i1%aW,label%aX,label%aZ
aX:
store i8*null,i8**%d,align 8
%aY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
br label%bk
aZ:
%a0=bitcast i8*%aV to i8**
%a1=load i8*,i8**%a0,align 8
store i8*%a1,i8**%d,align 8
%a2=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%a3=getelementptr inbounds i8,i8*%a2,i64 16
%a4=bitcast i8*%a3 to i8*(i8*,i8*)**
%a5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a4,align 8
%a6=bitcast i8*%a2 to i8**
%a7=load i8*,i8**%a6,align 8
store i8*%a7,i8**%f,align 8
%a8=call i8*@sml_alloc(i32 inreg 20)#0
%a9=getelementptr inbounds i8,i8*%a8,i64 -4
%ba=bitcast i8*%a9 to i32*
store i32 1342177296,i32*%ba,align 4
%bb=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bc=bitcast i8*%a8 to i8**
store i8*%bb,i8**%bc,align 8
%bd=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%be=getelementptr inbounds i8,i8*%a8,i64 8
%bf=bitcast i8*%be to i8**
store i8*%bd,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%a8,i64 16
%bh=bitcast i8*%bg to i32*
store i32 3,i32*%bh,align 4
%bi=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bj=call fastcc i8*%a5(i8*inreg%bi,i8*inreg%a8)
br label%bk
bk:
%bl=phi i8*[%bj,%aZ],[%aY,%aX]
store i8*%bl,i8**%d,align 8
%bm=call i8*@sml_alloc(i32 inreg 20)#0
%bn=getelementptr inbounds i8,i8*%bm,i64 -4
%bo=bitcast i8*%bn to i32*
store i32 1342177296,i32*%bo,align 4
%bp=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bq=bitcast i8*%bm to i8**
store i8*%bp,i8**%bq,align 8
%br=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bs=getelementptr inbounds i8,i8*%bm,i64 8
%bt=bitcast i8*%bs to i8**
store i8*%br,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bm,i64 16
%bv=bitcast i8*%bu to i32*
store i32 3,i32*%bv,align 4
%bw=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bx=call fastcc i8*%av(i8*inreg%bw,i8*inreg%bm)
%by=load i8*,i8**%h,align 8
%bz=tail call fastcc i8*%ap(i8*inreg%by,i8*inreg%bx)
ret i8*%bz
bA:
%bB=bitcast i8**%f to i8***
%bC=load i8**,i8***%bB,align 8
%bD=load i8*,i8**%bC,align 8
ret i8*%bD
bE:
%bF=bitcast i8**%f to i8***
%bG=load i8**,i8***%bF,align 8
%bH=load i8*,i8**%bG,align 8
ret i8*%bH
bI:
%bJ=bitcast i8**%f to i8***
%bK=load i8**,i8***%bJ,align 8
%bL=load i8*,i8**%bK,align 8
ret i8*%bL
bM:
%bN=bitcast i8**%f to i8***
%bO=load i8**,i8***%bN,align 8
%bP=load i8*,i8**%bO,align 8
ret i8*%bP
bQ:
%bR=getelementptr inbounds i8,i8*%n,i64 8
%bS=bitcast i8*%bR to i8**
%bT=load i8*,i8**%bS,align 8
store i8*%bT,i8**%e,align 8
%bU=getelementptr inbounds i8,i8*%bT,i64 32
%bV=bitcast i8*%bU to i8**
%bW=load i8*,i8**%bV,align 8
%bX=load i8*,i8**%f,align 8
%bY=call fastcc i8*@_SMLLN17PolyTyElimination12getIdsBtvEnvE_1069(i8*inreg%bX,i8*inreg%bW)
store i8*%bY,i8**%c,align 8
%bZ=load i8*,i8**%f,align 8
%b0=getelementptr inbounds i8,i8*%bZ,i64 8
%b1=bitcast i8*%b0 to i8**
%b2=load i8*,i8**%b1,align 8
store i8*%b2,i8**%d,align 8
%b3=call i8*@sml_alloc(i32 inreg 12)#0
%b4=getelementptr inbounds i8,i8*%b3,i64 -4
%b5=bitcast i8*%b4 to i32*
store i32 1342177288,i32*%b5,align 4
store i8*%b3,i8**%g,align 8
%b6=load i8*,i8**%f,align 8
%b7=bitcast i8*%b3 to i8**
store i8*%b6,i8**%b7,align 8
%b8=getelementptr inbounds i8,i8*%b3,i64 8
%b9=bitcast i8*%b8 to i32*
store i32 1,i32*%b9,align 4
%ca=call i8*@sml_alloc(i32 inreg 28)#0
%cb=getelementptr inbounds i8,i8*%ca,i64 -4
%cc=bitcast i8*%cb to i32*
store i32 1342177304,i32*%cc,align 4
%cd=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ce=bitcast i8*%ca to i8**
store i8*%cd,i8**%ce,align 8
%cf=getelementptr inbounds i8,i8*%ca,i64 8
%cg=bitcast i8*%cf to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15getIdsBackendTyE_1090 to void(...)*),void(...)**%cg,align 8
%ch=getelementptr inbounds i8,i8*%ca,i64 16
%ci=bitcast i8*%ch to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15getIdsBackendTyE_1090 to void(...)*),void(...)**%ci,align 8
%cj=getelementptr inbounds i8,i8*%ca,i64 24
%ck=bitcast i8*%cj to i32*
store i32 -2147483647,i32*%ck,align 4
%cl=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cm=call fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%cl,i8*inreg%ca)
%cn=getelementptr inbounds i8,i8*%cm,i64 16
%co=bitcast i8*%cn to i8*(i8*,i8*)**
%cp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%co,align 8
%cq=bitcast i8*%cm to i8**
%cr=load i8*,i8**%cq,align 8
%cs=bitcast i8**%e to i8***
%ct=load i8**,i8***%cs,align 8
%cu=load i8*,i8**%ct,align 8
%cv=call fastcc i8*%cp(i8*inreg%cr,i8*inreg%cu)
store i8*%cv,i8**%d,align 8
%cw=call i8*@sml_alloc(i32 inreg 20)#0
%cx=getelementptr inbounds i8,i8*%cw,i64 -4
%cy=bitcast i8*%cx to i32*
store i32 1342177296,i32*%cy,align 4
%cz=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cA=bitcast i8*%cw to i8**
store i8*%cz,i8**%cA,align 8
%cB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cC=getelementptr inbounds i8,i8*%cw,i64 8
%cD=bitcast i8*%cC to i8**
store i8*%cB,i8**%cD,align 8
%cE=getelementptr inbounds i8,i8*%cw,i64 16
%cF=bitcast i8*%cE to i32*
store i32 3,i32*%cF,align 4
%cG=call fastcc i8*@_SMLLN17PolyTyElimination11getIdsUnionE_1061(i8*inreg%cw)
store i8*%cG,i8**%c,align 8
%cH=load i8*,i8**%e,align 8
%cI=getelementptr inbounds i8,i8*%cH,i64 24
%cJ=bitcast i8*%cI to i8**
%cK=load i8*,i8**%cJ,align 8
%cL=icmp eq i8*%cK,null
store i8*null,i8**%e,align 8
br i1%cL,label%cM,label%cQ
cM:
%cN=bitcast i8**%f to i8***
%cO=load i8**,i8***%cN,align 8
store i8*null,i8**%f,align 8
%cP=load i8*,i8**%cO,align 8
br label%cV
cQ:
%cR=bitcast i8*%cK to i8**
%cS=load i8*,i8**%cR,align 8
%cT=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cU=call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%cT,i8*inreg%cS)
br label%cV
cV:
%cW=phi i8*[%cU,%cQ],[%cP,%cM]
store i8*%cW,i8**%d,align 8
%cX=call i8*@sml_alloc(i32 inreg 20)#0
%cY=getelementptr inbounds i8,i8*%cX,i64 -4
%cZ=bitcast i8*%cY to i32*
store i32 1342177296,i32*%cZ,align 4
%c0=load i8*,i8**%c,align 8
%c1=bitcast i8*%cX to i8**
store i8*%c0,i8**%c1,align 8
%c2=load i8*,i8**%d,align 8
%c3=getelementptr inbounds i8,i8*%cX,i64 8
%c4=bitcast i8*%c3 to i8**
store i8*%c2,i8**%c4,align 8
%c5=getelementptr inbounds i8,i8*%cX,i64 16
%c6=bitcast i8*%c5 to i32*
store i32 3,i32*%c6,align 4
%c7=tail call fastcc i8*@_SMLLN17PolyTyElimination11getIdsUnionE_1061(i8*inreg%cX)
ret i8*%c7
c8:
%c9=getelementptr inbounds i8,i8*%n,i64 8
%da=bitcast i8*%c9 to i8**
%db=load i8*,i8**%da,align 8
%dc=load i8*,i8**%f,align 8
%dd=tail call fastcc i8*@_SMLLN17PolyTyElimination17getIdsCodeEntryTyE_1068(i8*inreg%dc,i8*inreg%db)
ret i8*%dd
de:
%df=getelementptr inbounds i8,i8*%n,i64 8
%dg=bitcast i8*%df to i8**
%dh=load i8*,i8**%dg,align 8
%di=load i8*,i8**%f,align 8
%dj=tail call fastcc i8*@_SMLLN17PolyTyElimination17getIdsCodeEntryTyE_1068(i8*inreg%di,i8*inreg%dh)
ret i8*%dj
dk:
%dl=getelementptr inbounds i8,i8*%n,i64 8
%dm=bitcast i8*%dl to i8**
%dn=load i8*,i8**%dm,align 8
%do=getelementptr inbounds i8,i8*%dn,i64 8
%dp=bitcast i8*%do to i8**
%dq=load i8*,i8**%dp,align 8
%dr=load i8*,i8**%f,align 8
%ds=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%dr,i8*inreg%dq)
ret i8*%ds
dt:
%du=getelementptr inbounds i8,i8*%n,i64 8
%dv=bitcast i8*%du to i8**
%dw=load i8*,i8**%dv,align 8
%dx=getelementptr inbounds i8,i8*%dw,i64 8
%dy=bitcast i8*%dx to i8**
%dz=load i8*,i8**%dy,align 8
%dA=load i8*,i8**%f,align 8
%dB=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%dA,i8*inreg%dz)
ret i8*%dB
dC:
%dD=getelementptr inbounds i8,i8*%n,i64 8
%dE=bitcast i8*%dD to i8**
%dF=load i8*,i8**%dE,align 8
%dG=load i8*,i8**%f,align 8
%dH=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%dG,i8*inreg%dF)
ret i8*%dH
}
define internal fastcc i8*@_SMLLN17PolyTyElimination17getIdsCodeEntryTyE_1068(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%b,i8**%c,align 8
store i8*%a,i8**%f,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%m,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
%l=load i8*,i8**%f,align 8
br label%m
m:
%n=phi i8*[%l,%j],[%a,%o]
%p=phi i8*[%k,%j],[%b,%o]
store i8*null,i8**%c,align 8
store i8*%p,i8**%e,align 8
%q=getelementptr inbounds i8,i8*%p,i64 24
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*@_SMLLN17PolyTyElimination12getIdsBtvEnvE_1069(i8*inreg%n,i8*inreg%s)
store i8*%t,i8**%c,align 8
%u=load i8*,i8**%f,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%d,align 8
%y=call i8*@sml_alloc(i32 inreg 12)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177288,i32*%A,align 4
store i8*%y,i8**%g,align 8
%B=load i8*,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 28)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
%I=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination17getIdsCodeEntryTyE_1093 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%F,i64 16
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination17getIdsCodeEntryTyE_1093 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 24
%P=bitcast i8*%O to i32*
store i32 -2147483647,i32*%P,align 4
%Q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%R=call fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%Q,i8*inreg%F)
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=bitcast i8**%e to i8***
%Y=load i8**,i8***%X,align 8
%Z=load i8*,i8**%Y,align 8
%aa=call fastcc i8*%U(i8*inreg%W,i8*inreg%Z)
store i8*%aa,i8**%d,align 8
%ab=call i8*@sml_alloc(i32 inreg 20)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177296,i32*%ad,align 4
%ae=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ah=getelementptr inbounds i8,i8*%ab,i64 8
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ab,i64 16
%ak=bitcast i8*%aj to i32*
store i32 3,i32*%ak,align 4
%al=call fastcc i8*@_SMLLN17PolyTyElimination11getIdsUnionE_1061(i8*inreg%ab)
store i8*%al,i8**%c,align 8
%am=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%an=getelementptr inbounds i8,i8*%am,i64 16
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
%aq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ar=call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%aq,i8*inreg%ap)
store i8*%ar,i8**%d,align 8
%as=call i8*@sml_alloc(i32 inreg 20)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177296,i32*%au,align 4
%av=load i8*,i8**%c,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=load i8*,i8**%d,align 8
%ay=getelementptr inbounds i8,i8*%as,i64 8
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%as,i64 16
%aB=bitcast i8*%aA to i32*
store i32 3,i32*%aB,align 4
%aC=tail call fastcc i8*@_SMLLN17PolyTyElimination11getIdsUnionE_1061(i8*inreg%as)
ret i8*%aC
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12getIdsBtvEnvE_1069(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%b,i8**%e,align 8
store i8*%a,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
%o=getelementptr inbounds i8,i8*%m,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%f,align 8
%r=call i8*@sml_alloc(i32 inreg 12)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177288,i32*%t,align 4
store i8*%r,i8**%g,align 8
%u=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12getIdsBtvEnvE_1094 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12getIdsBtvEnvE_1094 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
%J=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%K=call fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%J,i8*inreg%y)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%d,align 8
%Q=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%e,align 8
%X=call fastcc i8*%T(i8*inreg%V,i8*inreg%W)
%Y=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Z=call fastcc i8*%N(i8*inreg%Y,i8*inreg%X)
store i8*%Z,i8**%d,align 8
%aa=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aa)
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bm,i64 0,i32 2)to i8*),i8**%c,align 8
%ab=load atomic i32,i32*@sml_check_flag unordered,align 4
%ac=icmp eq i32%ab,0
br i1%ac,label%ae,label%ad
ad:
call void@sml_check(i32 inreg%ab)
br label%ae
ae:
%af=call fastcc i8*@_SMLFN14BoundTypeVarID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ag=getelementptr inbounds i8,i8*%af,i64 16
%ah=bitcast i8*%ag to i8*(i8*,i8*)**
%ai=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ah,align 8
%aj=bitcast i8*%af to i8**
%ak=load i8*,i8**%aj,align 8
%al=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%am=call fastcc i8*%ai(i8*inreg%ak,i8*inreg%al)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aa)
%an=getelementptr inbounds i8,i8*%am,i64 16
%ao=bitcast i8*%an to i8*(i8*,i8*)**
%ap=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ao,align 8
%aq=bitcast i8*%am to i8**
%ar=load i8*,i8**%aq,align 8
%as=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%at=call fastcc i8*%ap(i8*inreg%ar,i8*inreg%as)
store i8*%at,i8**%e,align 8
%au=call i8*@sml_alloc(i32 inreg 20)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177296,i32*%aw,align 4
%ax=load i8*,i8**%d,align 8
%ay=bitcast i8*%au to i8**
store i8*%ax,i8**%ay,align 8
%az=load i8*,i8**%e,align 8
%aA=getelementptr inbounds i8,i8*%au,i64 8
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%au,i64 16
%aD=bitcast i8*%aC to i32*
store i32 3,i32*%aD,align 4
%aE=tail call fastcc i8*@_SMLLN17PolyTyElimination11getIdsUnionE_1061(i8*inreg%au)
ret i8*%aE
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10getIdsKindE_1070(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
store i8*%a,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination14getIdsTvarKindE_1071(i8*inreg%k,i8*inreg%p)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14getIdsTvarKindE_1071(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%b,i8**%c,align 8
store i8*%a,i8**%e,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=icmp eq i8*%m,null
br i1%o,label%aB,label%p
p:
%q=bitcast i8*%m to i32*
%r=load i32,i32*%q,align 4
switch i32%r,label%s[
i32 0,label%bZ
i32 1,label%aF
i32 3,label%aB
i32 2,label%K
]
s:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%t=load i8*,i8**@_SMLZ5Match,align 8
store i8*%t,i8**%c,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%d,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bn,i64 0,i32 2,i64 0),i8**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 60)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177336,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%D,i64 56
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=load i8*,i8**%d,align 8
%J=bitcast i8*%D to i8**
store i8*%I,i8**%J,align 8
call void@sml_raise(i8*inreg%D)#1
unreachable
K:
%L=getelementptr inbounds i8,i8*%m,i64 8
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%c,align 8
%O=load i8*,i8**%e,align 8
%P=getelementptr inbounds i8,i8*%O,i64 8
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%d,align 8
%S=call i8*@sml_alloc(i32 inreg 12)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177288,i32*%U,align 4
store i8*%S,i8**%f,align 8
%V=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to i32*
store i32 1,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 28)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177304,i32*%ab,align 4
%ac=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%Z,i64 8
%af=bitcast i8*%ae to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14getIdsTvarKindE_1102 to void(...)*),void(...)**%af,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 16
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14getIdsTvarKindE_1102 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 24
%aj=bitcast i8*%ai to i32*
store i32 -2147483647,i32*%aj,align 4
%ak=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%al=call fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%ak,i8*inreg%Z)
%am=getelementptr inbounds i8,i8*%al,i64 16
%an=bitcast i8*%am to i8*(i8*,i8*)**
%ao=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%an,align 8
%ap=bitcast i8*%al to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%d,align 8
%ar=call fastcc i8*@_SMLFN11RecordLabel3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%as=getelementptr inbounds i8,i8*%ar,i64 16
%at=bitcast i8*%as to i8*(i8*,i8*)**
%au=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%at,align 8
%av=bitcast i8*%ar to i8**
%aw=load i8*,i8**%av,align 8
%ax=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ay=call fastcc i8*%au(i8*inreg%aw,i8*inreg%ax)
%az=load i8*,i8**%d,align 8
%aA=tail call fastcc i8*%ao(i8*inreg%az,i8*inreg%ay)
ret i8*%aA
aB:
%aC=bitcast i8**%e to i8***
%aD=load i8**,i8***%aC,align 8
%aE=load i8*,i8**%aD,align 8
ret i8*%aE
aF:
%aG=getelementptr inbounds i8,i8*%m,i64 8
%aH=bitcast i8*%aG to i8**
%aI=load i8*,i8**%aH,align 8
store i8*%aI,i8**%d,align 8
%aJ=load i8*,i8**%e,align 8
%aK=getelementptr inbounds i8,i8*%aJ,i64 8
%aL=bitcast i8*%aK to i8**
%aM=load i8*,i8**%aL,align 8
store i8*%aM,i8**%c,align 8
%aN=call i8*@sml_alloc(i32 inreg 12)#0
%aO=getelementptr inbounds i8,i8*%aN,i64 -4
%aP=bitcast i8*%aO to i32*
store i32 1342177288,i32*%aP,align 4
store i8*%aN,i8**%f,align 8
%aQ=load i8*,i8**%e,align 8
%aR=bitcast i8*%aN to i8**
store i8*%aQ,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aN,i64 8
%aT=bitcast i8*%aS to i32*
store i32 1,i32*%aT,align 4
%aU=call i8*@sml_alloc(i32 inreg 28)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177304,i32*%aW,align 4
%aX=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aY=bitcast i8*%aU to i8**
store i8*%aX,i8**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aU,i64 8
%a0=bitcast i8*%aZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14getIdsTvarKindE_1100 to void(...)*),void(...)**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aU,i64 16
%a2=bitcast i8*%a1 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14getIdsTvarKindE_1100 to void(...)*),void(...)**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aU,i64 24
%a4=bitcast i8*%a3 to i32*
store i32 -2147483647,i32*%a4,align 4
%a5=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a6=call fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%a5,i8*inreg%aU)
%a7=getelementptr inbounds i8,i8*%a6,i64 16
%a8=bitcast i8*%a7 to i8*(i8*,i8*)**
%a9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a8,align 8
%ba=bitcast i8*%a6 to i8**
%bb=load i8*,i8**%ba,align 8
%bc=bitcast i8**%d to i8***
%bd=load i8**,i8***%bc,align 8
%be=load i8*,i8**%bd,align 8
%bf=call fastcc i8*%a9(i8*inreg%bb,i8*inreg%be)
store i8*%bf,i8**%c,align 8
%bg=load i8*,i8**%e,align 8
%bh=getelementptr inbounds i8,i8*%bg,i64 8
%bi=bitcast i8*%bh to i8**
%bj=load i8*,i8**%bi,align 8
store i8*%bj,i8**%f,align 8
%bk=call i8*@sml_alloc(i32 inreg 12)#0
%bl=getelementptr inbounds i8,i8*%bk,i64 -4
%bm=bitcast i8*%bl to i32*
store i32 1342177288,i32*%bm,align 4
store i8*%bk,i8**%g,align 8
%bn=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bo=bitcast i8*%bk to i8**
store i8*%bn,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bk,i64 8
%bq=bitcast i8*%bp to i32*
store i32 1,i32*%bq,align 4
%br=call i8*@sml_alloc(i32 inreg 28)#0
%bs=getelementptr inbounds i8,i8*%br,i64 -4
%bt=bitcast i8*%bs to i32*
store i32 1342177304,i32*%bt,align 4
%bu=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bv=bitcast i8*%br to i8**
store i8*%bu,i8**%bv,align 8
%bw=getelementptr inbounds i8,i8*%br,i64 8
%bx=bitcast i8*%bw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14getIdsTvarKindE_1101 to void(...)*),void(...)**%bx,align 8
%by=getelementptr inbounds i8,i8*%br,i64 16
%bz=bitcast i8*%by to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14getIdsTvarKindE_1101 to void(...)*),void(...)**%bz,align 8
%bA=getelementptr inbounds i8,i8*%br,i64 24
%bB=bitcast i8*%bA to i32*
store i32 -2147483647,i32*%bB,align 4
%bC=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bD=call fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%bC,i8*inreg%br)
%bE=getelementptr inbounds i8,i8*%bD,i64 16
%bF=bitcast i8*%bE to i8*(i8*,i8*)**
%bG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bF,align 8
%bH=bitcast i8*%bD to i8**
%bI=load i8*,i8**%bH,align 8
%bJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bK=getelementptr inbounds i8,i8*%bJ,i64 8
%bL=bitcast i8*%bK to i8**
%bM=load i8*,i8**%bL,align 8
%bN=call fastcc i8*%bG(i8*inreg%bI,i8*inreg%bM)
store i8*%bN,i8**%d,align 8
%bO=call i8*@sml_alloc(i32 inreg 20)#0
%bP=getelementptr inbounds i8,i8*%bO,i64 -4
%bQ=bitcast i8*%bP to i32*
store i32 1342177296,i32*%bQ,align 4
%bR=load i8*,i8**%c,align 8
%bS=bitcast i8*%bO to i8**
store i8*%bR,i8**%bS,align 8
%bT=load i8*,i8**%d,align 8
%bU=getelementptr inbounds i8,i8*%bO,i64 8
%bV=bitcast i8*%bU to i8**
store i8*%bT,i8**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bO,i64 16
%bX=bitcast i8*%bW to i32*
store i32 3,i32*%bX,align 4
%bY=tail call fastcc i8*@_SMLLN17PolyTyElimination11getIdsUnionE_1061(i8*inreg%bO)
ret i8*%bY
bZ:
%b0=getelementptr inbounds i8,i8*%m,i64 8
%b1=bitcast i8*%b0 to i8**
%b2=load i8*,i8**%b1,align 8
store i8*%b2,i8**%c,align 8
%b3=load i8*,i8**%e,align 8
%b4=getelementptr inbounds i8,i8*%b3,i64 8
%b5=bitcast i8*%b4 to i8**
%b6=load i8*,i8**%b5,align 8
store i8*%b6,i8**%d,align 8
%b7=call i8*@sml_alloc(i32 inreg 12)#0
%b8=getelementptr inbounds i8,i8*%b7,i64 -4
%b9=bitcast i8*%b8 to i32*
store i32 1342177288,i32*%b9,align 4
store i8*%b7,i8**%f,align 8
%ca=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cb=bitcast i8*%b7 to i8**
store i8*%ca,i8**%cb,align 8
%cc=getelementptr inbounds i8,i8*%b7,i64 8
%cd=bitcast i8*%cc to i32*
store i32 1,i32*%cd,align 4
%ce=call i8*@sml_alloc(i32 inreg 28)#0
%cf=getelementptr inbounds i8,i8*%ce,i64 -4
%cg=bitcast i8*%cf to i32*
store i32 1342177304,i32*%cg,align 4
%ch=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ci=bitcast i8*%ce to i8**
store i8*%ch,i8**%ci,align 8
%cj=getelementptr inbounds i8,i8*%ce,i64 8
%ck=bitcast i8*%cj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14getIdsTvarKindE_1099 to void(...)*),void(...)**%ck,align 8
%cl=getelementptr inbounds i8,i8*%ce,i64 16
%cm=bitcast i8*%cl to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14getIdsTvarKindE_1099 to void(...)*),void(...)**%cm,align 8
%cn=getelementptr inbounds i8,i8*%ce,i64 24
%co=bitcast i8*%cn to i32*
store i32 -2147483647,i32*%co,align 4
%cp=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cq=call fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%cp,i8*inreg%ce)
%cr=getelementptr inbounds i8,i8*%cq,i64 16
%cs=bitcast i8*%cr to i8*(i8*,i8*)**
%ct=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cs,align 8
%cu=bitcast i8*%cq to i8**
%cv=load i8*,i8**%cu,align 8
%cw=load i8*,i8**%c,align 8
%cx=tail call fastcc i8*%ct(i8*inreg%cv,i8*inreg%cw)
ret i8*%cx
}
define internal fastcc i8*@_SMLLN17PolyTyElimination19getIdsOprimSelectorE_1072(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
store i8*%a,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%m,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination19getIdsOverloadMatchE_1073(i8*inreg%k,i8*inreg%p)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination19getIdsOverloadMatchE_1073(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%c,align 8
store i8*%a,i8**%e,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=bitcast i8*%l to i32*
%o=load i32,i32*%n,align 4
switch i32%o,label%p[
i32 1,label%bp
i32 2,label%aH
i32 0,label%H
]
p:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%d,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bo,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=load i8*,i8**%d,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
H:
%I=getelementptr inbounds i8,i8*%l,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%c,align 8
%L=call fastcc i8*@_SMLFN5TypID3Map5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%d,align 8
%R=call i8*@sml_alloc(i32 inreg 12)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177288,i32*%T,align 4
store i8*%R,i8**%f,align 8
%U=load i8*,i8**%e,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination19getIdsOverloadMatchE_1106 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination19getIdsOverloadMatchE_1106 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=call fastcc i8*%O(i8*inreg%aj,i8*inreg%Y)
%al=getelementptr inbounds i8,i8*%ak,i64 16
%am=bitcast i8*%al to i8*(i8*,i8*)**
%an=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%am,align 8
%ao=bitcast i8*%ak to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%d,align 8
%aq=bitcast i8**%c to i8***
%ar=load i8**,i8***%aq,align 8
%as=load i8*,i8**%ar,align 8
%at=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%au=call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%at,i8*inreg%as)
%av=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aw=call fastcc i8*%an(i8*inreg%av,i8*inreg%au)
%ax=getelementptr inbounds i8,i8*%aw,i64 16
%ay=bitcast i8*%ax to i8*(i8*,i8*)**
%az=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ay,align 8
%aA=bitcast i8*%aw to i8**
%aB=load i8*,i8**%aA,align 8
%aC=load i8*,i8**%c,align 8
%aD=getelementptr inbounds i8,i8*%aC,i64 8
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
%aG=tail call fastcc i8*%az(i8*inreg%aB,i8*inreg%aF)
ret i8*%aG
aH:
%aI=getelementptr inbounds i8,i8*%l,i64 8
%aJ=bitcast i8*%aI to i8***
%aK=load i8**,i8***%aJ,align 8
%aL=load i8*,i8**%aK,align 8
%aM=icmp eq i8*%aL,null
br i1%aM,label%aN,label%aR
aN:
%aO=bitcast i8**%e to i8***
%aP=load i8**,i8***%aO,align 8
%aQ=load i8*,i8**%aP,align 8
ret i8*%aQ
aR:
%aS=bitcast i8*%aL to i8**
%aT=load i8*,i8**%aS,align 8
store i8*%aT,i8**%c,align 8
%aU=load i8*,i8**%e,align 8
%aV=getelementptr inbounds i8,i8*%aU,i64 8
%aW=bitcast i8*%aV to i8**
%aX=load i8*,i8**%aW,align 8
store i8*%aX,i8**%d,align 8
%aY=call i8*@sml_alloc(i32 inreg 12)#0
%aZ=getelementptr inbounds i8,i8*%aY,i64 -4
%a0=bitcast i8*%aZ to i32*
store i32 1342177288,i32*%a0,align 4
store i8*%aY,i8**%f,align 8
%a1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a2=bitcast i8*%aY to i8**
store i8*%a1,i8**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aY,i64 8
%a4=bitcast i8*%a3 to i32*
store i32 1,i32*%a4,align 4
%a5=call i8*@sml_alloc(i32 inreg 28)#0
%a6=getelementptr inbounds i8,i8*%a5,i64 -4
%a7=bitcast i8*%a6 to i32*
store i32 1342177304,i32*%a7,align 4
%a8=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a9=bitcast i8*%a5 to i8**
store i8*%a8,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a5,i64 8
%bb=bitcast i8*%ba to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination19getIdsOverloadMatchE_1105 to void(...)*),void(...)**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a5,i64 16
%bd=bitcast i8*%bc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination19getIdsOverloadMatchE_1105 to void(...)*),void(...)**%bd,align 8
%be=getelementptr inbounds i8,i8*%a5,i64 24
%bf=bitcast i8*%be to i32*
store i32 -2147483647,i32*%bf,align 4
%bg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bh=call fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%bg,i8*inreg%a5)
%bi=getelementptr inbounds i8,i8*%bh,i64 16
%bj=bitcast i8*%bi to i8*(i8*,i8*)**
%bk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bj,align 8
%bl=bitcast i8*%bh to i8**
%bm=load i8*,i8**%bl,align 8
%bn=load i8*,i8**%c,align 8
%bo=tail call fastcc i8*%bk(i8*inreg%bm,i8*inreg%bn)
ret i8*%bo
bp:
%bq=getelementptr inbounds i8,i8*%l,i64 8
%br=bitcast i8*%bq to i8**
%bs=load i8*,i8**%br,align 8
%bt=getelementptr inbounds i8,i8*%bs,i64 8
%bu=bitcast i8*%bt to i8**
%bv=load i8*,i8**%bu,align 8
%bw=icmp eq i8*%bv,null
br i1%bw,label%bx,label%bB
bx:
%by=bitcast i8**%e to i8***
%bz=load i8**,i8***%by,align 8
%bA=load i8*,i8**%bz,align 8
ret i8*%bA
bB:
%bC=bitcast i8*%bv to i8**
%bD=load i8*,i8**%bC,align 8
store i8*%bD,i8**%c,align 8
%bE=load i8*,i8**%e,align 8
%bF=getelementptr inbounds i8,i8*%bE,i64 8
%bG=bitcast i8*%bF to i8**
%bH=load i8*,i8**%bG,align 8
store i8*%bH,i8**%d,align 8
%bI=call i8*@sml_alloc(i32 inreg 12)#0
%bJ=getelementptr inbounds i8,i8*%bI,i64 -4
%bK=bitcast i8*%bJ to i32*
store i32 1342177288,i32*%bK,align 4
store i8*%bI,i8**%f,align 8
%bL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bM=bitcast i8*%bI to i8**
store i8*%bL,i8**%bM,align 8
%bN=getelementptr inbounds i8,i8*%bI,i64 8
%bO=bitcast i8*%bN to i32*
store i32 1,i32*%bO,align 4
%bP=call i8*@sml_alloc(i32 inreg 28)#0
%bQ=getelementptr inbounds i8,i8*%bP,i64 -4
%bR=bitcast i8*%bQ to i32*
store i32 1342177304,i32*%bR,align 4
%bS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bT=bitcast i8*%bP to i8**
store i8*%bS,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bP,i64 8
%bV=bitcast i8*%bU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination19getIdsOverloadMatchE_1104 to void(...)*),void(...)**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bP,i64 16
%bX=bitcast i8*%bW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination19getIdsOverloadMatchE_1104 to void(...)*),void(...)**%bX,align 8
%bY=getelementptr inbounds i8,i8*%bP,i64 24
%bZ=bitcast i8*%bY to i32*
store i32 -2147483647,i32*%bZ,align 4
%b0=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b1=call fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%b0,i8*inreg%bP)
%b2=getelementptr inbounds i8,i8*%b1,i64 16
%b3=bitcast i8*%b2 to i8*(i8*,i8*)**
%b4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b3,align 8
%b5=bitcast i8*%b1 to i8**
%b6=load i8*,i8**%b5,align 8
%b7=load i8*,i8**%c,align 8
%b8=tail call fastcc i8*%b4(i8*inreg%b6,i8*inreg%b7)
ret i8*%b8
}
define internal fastcc i8*@_SMLLN17PolyTyElimination17getIdsSingletonTyE_1074(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
store i8*%a,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
%l=bitcast i8*%j to i32*
%m=load i32,i32*%l,align 4
switch i32%m,label%n[
i32 1,label%ag
i32 0,label%X
i32 4,label%R
i32 3,label%L
i32 2,label%F
]
n:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%o=load i8*,i8**@_SMLZ5Match,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
store i8*%p,i8**%d,align 8
%s=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bp,i64 0,i32 2,i64 0),i8**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to i32*
store i32 3,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 60)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177336,i32*%A,align 4
%B=getelementptr inbounds i8,i8*%y,i64 56
%C=bitcast i8*%B to i32*
store i32 1,i32*%C,align 4
%D=load i8*,i8**%d,align 8
%E=bitcast i8*%y to i8**
store i8*%D,i8**%E,align 8
call void@sml_raise(i8*inreg%y)#1
unreachable
F:
%G=getelementptr inbounds i8,i8*%j,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
%J=load i8*,i8**%d,align 8
%K=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%J,i8*inreg%I)
ret i8*%K
L:
%M=getelementptr inbounds i8,i8*%j,i64 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%d,align 8
%Q=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%P,i8*inreg%O)
ret i8*%Q
R:
%S=getelementptr inbounds i8,i8*%j,i64 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
%V=load i8*,i8**%d,align 8
%W=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%V,i8*inreg%U)
ret i8*%W
X:
%Y=getelementptr inbounds i8,i8*%j,i64 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
%ab=getelementptr inbounds i8,i8*%aa,i64 8
%ac=bitcast i8*%ab to i8**
%ad=load i8*,i8**%ac,align 8
%ae=load i8*,i8**%d,align 8
%af=tail call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%ae,i8*inreg%ad)
ret i8*%af
ag:
%ah=getelementptr inbounds i8,i8*%j,i64 8
%ai=bitcast i8*%ah to i8**
%aj=load i8*,i8**%ai,align 8
%ak=load i8*,i8**%d,align 8
%al=tail call fastcc i8*@_SMLLN17PolyTyElimination19getIdsOprimSelectorE_1072(i8*inreg%ak,i8*inreg%aj)
ret i8*%al
}
define internal fastcc i8*@_SMLLN17PolyTyElimination16getIdsConstraintE_1075(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%b,i8**%c,align 8
store i8*%a,i8**%f,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%n,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%c,align 8
%m=load i8*,i8**%f,align 8
br label%n
n:
%o=phi i8*[%m,%k],[%a,%p]
%q=phi i8*[%l,%k],[%b,%p]
%r=bitcast i8*%q to i8**
%s=bitcast i8*%q to i8***
%t=load i8**,i8***%s,align 8
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
%v=load i8*,i8**%r,align 8
%w=getelementptr inbounds i8,i8*%v,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%d,align 8
%z=getelementptr inbounds i8,i8*%q,i64 16
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%o,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%g,align 8
%F=call i8*@sml_alloc(i32 inreg 12)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177288,i32*%H,align 4
store i8*%F,i8**%h,align 8
%I=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
%P=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16getIdsConstraintE_1109 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16getIdsConstraintE_1109 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 24
%W=bitcast i8*%V to i32*
store i32 -2147483647,i32*%W,align 4
%X=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Y=call fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%X,i8*inreg%M)
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
store i8*%ad,i8**%f,align 8
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
store i8*%ae,i8**%g,align 8
%ah=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ae,i64 8
%ak=bitcast i8*%aj to i8**
store i8*null,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ae,i64 16
%am=bitcast i8*%al to i32*
store i32 3,i32*%am,align 4
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%d,align 8
%aq=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
%aA=load i8*,i8**%e,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=load i8*,i8**%d,align 8
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ax,i64 16
%aG=bitcast i8*%aF to i32*
store i32 3,i32*%aG,align 4
%aH=load i8*,i8**%f,align 8
%aI=tail call fastcc i8*%ab(i8*inreg%aH,i8*inreg%ax)
ret i8*%aI
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14getIdsInstanceE_1111(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%d,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=icmp eq i8*%l,null
br i1%n,label%J,label%o
o:
%p=bitcast i8*%l to i32*
%q=load i32,i32*%p,align 4
switch i32%q,label%r[
i32 0,label%au
i32 1,label%N
i32 2,label%J
]
r:
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%s=load i8*,i8**@_SMLZ5Match,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%e,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bq,i64 0,i32 2,i64 0),i8**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 60)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177336,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 56
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=load i8*,i8**%e,align 8
%I=bitcast i8*%C to i8**
store i8*%H,i8**%I,align 8
call void@sml_raise(i8*inreg%C)#1
unreachable
J:
%K=bitcast i8**%f to i8***
%L=load i8**,i8***%K,align 8
%M=load i8*,i8**%L,align 8
ret i8*%M
N:
%O=getelementptr inbounds i8,i8*%l,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%e,align 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%d,align 8
%T=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
store i8*null,i8**%e,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 8
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
%aa=call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%W,i8*inreg%Z)
%ab=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ab)
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%aa,i8**%c,align 8
%ac=load atomic i32,i32*@sml_check_flag unordered,align 4
%ad=icmp eq i32%ac,0
br i1%ad,label%ag,label%ae
ae:
call void@sml_check(i32 inreg%ac)
%af=load i8*,i8**%c,align 8
br label%ag
ag:
%ah=phi i8*[%af,%ae],[%aa,%N]
store i8*null,i8**%c,align 8
%ai=call fastcc i8*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map9domainSetE_691(i8*inreg%ah)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ab)
store i8*%ai,i8**%e,align 8
%aj=call i8*@sml_alloc(i32 inreg 20)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177296,i32*%al,align 4
%am=load i8*,i8**%d,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=load i8*,i8**%e,align 8
%ap=getelementptr inbounds i8,i8*%aj,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%aj,i64 16
%as=bitcast i8*%ar to i32*
store i32 3,i32*%as,align 4
%at=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Set5unionE(i8*inreg%aj)
ret i8*%at
au:
%av=bitcast i8**%f to i8***
%aw=load i8**,i8***%av,align 8
%ax=load i8*,i8**%aw,align 8
ret i8*%ax
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15getIdsInstancesE_1112(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=getelementptr inbounds i8,i8*%o,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
store i8*null,i8**%c,align 8
%s=load i8*,i8**%n,align 8
%t=bitcast i8*%o to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination14getIdsInstanceE_1111(i8*inreg%s,i8*inreg%u)
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Set5unionE(i8*inreg%w)
ret i8*%G
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15getIdsInstancesE_1113(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%f,align 8
%r=load i8*,i8**%d,align 8
%s=getelementptr inbounds i8,i8*%r,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=call i8*@sml_alloc(i32 inreg 12)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177288,i32*%x,align 4
store i8*%v,i8**%g,align 8
%y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177304,i32*%E,align 4
%F=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15getIdsInstancesE_1112 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15getIdsInstancesE_1112 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 24
%M=bitcast i8*%L to i32*
store i32 -2147483647,i32*%M,align 4
%N=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%O=call fastcc i8*%o(i8*inreg%N,i8*inreg%C)
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8*(i8*,i8*)**
%R=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
%U=bitcast i8**%d to i8***
%V=load i8**,i8***%U,align 8
store i8*null,i8**%d,align 8
%W=load i8*,i8**%V,align 8
%X=call fastcc i8*%R(i8*inreg%T,i8*inreg%W)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=load i8*,i8**%c,align 8
%ae=tail call fastcc i8*%aa(i8*inreg%ac,i8*inreg%ad)
ret i8*%ae
}
define internal fastcc void@_SMLLN17PolyTyElimination6exportE_1114(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%k
h:
%i=bitcast i8*%a to i8**
%j=bitcast i8*%b to i32*
br label%p
k:
call void@sml_check(i32 inreg%f)
%l=bitcast i8**%c to i32**
%m=load i32*,i32**%l,align 8
%n=bitcast i8**%d to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%k],[%i,%h]
%r=phi i32*[%m,%k],[%j,%h]
%s=load i32,i32*%r,align 4
store i8*null,i8**%d,align 8
%t=load i8*,i8**%q,align 8
%u=call fastcc i8*@_SMLLN17PolyTyElimination10instanceOfE_748(i8*inreg%t)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%d,align 8
%A=load i8*,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%A,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
%E=getelementptr inbounds i8,i8*%D,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%c,align 8
%H=call i8*@sml_alloc(i32 inreg 20)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
store i8*%H,i8**%e,align 8
%K=bitcast i8*%H to i64*
store i64 0,i64*%K,align 4
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=getelementptr inbounds i8,i8*%H,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%H,i64 16
%P=bitcast i8*%O to i32*
store i32 2,i32*%P,align 4
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
%T=getelementptr inbounds i8,i8*%Q,i64 12
%U=bitcast i8*%T to i32*
store i32 0,i32*%U,align 1
%V=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%W=bitcast i8*%Q to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 8
%Y=bitcast i8*%X to i32*
store i32%s,i32*%Y,align 4
%Z=getelementptr inbounds i8,i8*%Q,i64 16
%aa=bitcast i8*%Z to i32*
store i32 1,i32*%aa,align 4
%ab=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ac=call fastcc i8*%x(i8*inreg%ab,i8*inreg%Q)
ret void
}
define internal fastcc void@_SMLLN17PolyTyElimination6exportE_1115(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%o
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%e to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%l],[%k,%j]
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%f,align 8
%r=call i8*@sml_alloc(i32 inreg 12)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177288,i32*%t,align 4
store i8*%r,i8**%g,align 8
%u=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17PolyTyElimination6exportE_1114 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination6exportE_1764 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
%J=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%J)
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%y,i8**%c,align 8
%K=load atomic i32,i32*@sml_check_flag unordered,align 4
%L=icmp eq i32%K,0
br i1%L,label%N,label%M
M:
call void@sml_check(i32 inreg%K)
br label%N
N:
%O=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4appiE(i32 inreg 1,i32 inreg 8)
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8*(i8*,i8*)**
%R=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=call fastcc i8*%R(i8*inreg%T,i8*inreg%U)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%J)
%W=getelementptr inbounds i8,i8*%V,i64 16
%X=bitcast i8*%W to i8*(i8*,i8*)**
%Y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%X,align 8
%Z=bitcast i8*%V to i8**
%aa=load i8*,i8**%Z,align 8
store i8*%aa,i8**%f,align 8
%ab=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ac=getelementptr inbounds i8,i8*%ab,i64 8
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
%af=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ag=call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%ae,i8*inreg%af)
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=call fastcc i8*%Y(i8*inreg%ah,i8*inreg%ag)
ret void
}
define internal fastcc i8*@_SMLLN17PolyTyElimination6exportE_1116(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17PolyTyElimination6exportE_1115 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination6exportE_1765 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1117(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=call fastcc i8*@_SMLFN13TyAlphaRename6copyTyE(i8*inreg%r)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=call fastcc i8*%v(i8*inreg%x,i8*inreg%y)
store i8*%z,i8**%c,align 8
%A=bitcast i8**%d to i8***
%B=load i8**,i8***%A,align 8
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*@_SMLLN17PolyTyElimination5touchE_733(i8*inreg%C)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%e,align 8
%J=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=load i8*,i8**%c,align 8
%O=call fastcc i8*@_SMLLN17PolyTyElimination8getIdsTyE_1066(i8*inreg%M,i8*inreg%N)
%P=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Q=call fastcc i8*%G(i8*inreg%P,i8*inreg%O)
%R=load i8*,i8**%c,align 8
ret i8*%R
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1118(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%c,align 8
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%d,align 8
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%e,align 8
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%f,align 8
%o=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=getelementptr inbounds i8,i8*%l,i64 16
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%l,i64 24
%x=bitcast i8*%w to i32*
store i32 7,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9analyzeTyE_1117 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9analyzeTyE_1117 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9analyzeTyE_1118 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9analyzeTyE_1118 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13analyzeExnConE_1129(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=bitcast i8*%l to i32*
%o=load i32,i32*%n,align 4
switch i32%o,label%p[
i32 0,label%bw
i32 1,label%H
]
p:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%d,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bv,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=load i8*,i8**%d,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
H:
%I=getelementptr inbounds i8,i8*%l,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%c,align 8
%L=call fastcc i8*@_SMLFN5ExnID3Map4findE(i32 inreg 1,i32 inreg 8)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%e,align 8
%R=bitcast i8**%d to i8****
%S=load i8***,i8****%R,align 8
%T=load i8**,i8***%S,align 8
%U=load i8*,i8**%T,align 8
%V=getelementptr inbounds i8,i8*%U,i64 24
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%d,align 8
%Y=bitcast i8**%c to i32**
%Z=load i32*,i32**%Y,align 8
%aa=load i32,i32*%Z,align 4
%ab=call i8*@sml_alloc(i32 inreg 20)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177296,i32*%ad,align 4
%ae=getelementptr inbounds i8,i8*%ab,i64 12
%af=bitcast i8*%ae to i32*
store i32 0,i32*%af,align 1
%ag=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ah=bitcast i8*%ab to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ab,i64 8
%aj=bitcast i8*%ai to i32*
store i32%aa,i32*%aj,align 4
%ak=getelementptr inbounds i8,i8*%ab,i64 16
%al=bitcast i8*%ak to i32*
store i32 1,i32*%al,align 4
%am=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%an=call fastcc i8*%O(i8*inreg%am,i8*inreg%ab)
%ao=icmp eq i8*%an,null
br i1%ao,label%ap,label%aL
ap:
%aq=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%aq,i8**%c,align 8
%ar=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bu,i64 0,i32 2)to i8*))
store i8*%ar,i8**%d,align 8
%as=call i8*@sml_alloc(i32 inreg 28)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177304,i32*%au,align 4
store i8*%as,i8**%e,align 8
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%as,i64 8
%ay=bitcast i8*%ax to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%ay,align 8
%az=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%as,i64 16
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%as,i64 24
%aD=bitcast i8*%aC to i32*
store i32 7,i32*%aD,align 4
%aE=call i8*@sml_alloc(i32 inreg 60)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177336,i32*%aG,align 4
%aH=getelementptr inbounds i8,i8*%aE,i64 56
%aI=bitcast i8*%aH to i32*
store i32 1,i32*%aI,align 4
%aJ=load i8*,i8**%e,align 8
%aK=bitcast i8*%aE to i8**
store i8*%aJ,i8**%aK,align 8
call void@sml_raise(i8*inreg%aE)#1
unreachable
aL:
%aM=bitcast i8*%an to i8**
%aN=load i8*,i8**%aM,align 8
%aO=getelementptr inbounds i8,i8*%aN,i64 16
%aP=bitcast i8*%aO to i8**
%aQ=load i8*,i8**%aP,align 8
store i8*%aQ,i8**%d,align 8
%aR=load i8*,i8**%c,align 8
%aS=bitcast i8*%aR to i32*
%aT=load i32,i32*%aS,align 4
%aU=getelementptr inbounds i8,i8*%aR,i64 8
%aV=bitcast i8*%aU to i8**
%aW=load i8*,i8**%aV,align 8
store i8*%aW,i8**%c,align 8
%aX=call i8*@sml_alloc(i32 inreg 28)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177304,i32*%aZ,align 4
store i8*%aX,i8**%e,align 8
%a0=getelementptr inbounds i8,i8*%aX,i64 4
%a1=bitcast i8*%a0 to i32*
store i32 0,i32*%a1,align 1
%a2=bitcast i8*%aX to i32*
store i32%aT,i32*%a2,align 4
%a3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a4=getelementptr inbounds i8,i8*%aX,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=load i8*,i8**%d,align 8
%a7=getelementptr inbounds i8,i8*%aX,i64 16
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%aX,i64 24
%ba=bitcast i8*%a9 to i32*
store i32 6,i32*%ba,align 4
%bb=call i8*@sml_alloc(i32 inreg 20)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177296,i32*%bd,align 4
store i8*%bb,i8**%c,align 8
%be=getelementptr inbounds i8,i8*%bb,i64 4
%bf=bitcast i8*%be to i32*
store i32 0,i32*%bf,align 1
%bg=bitcast i8*%bb to i32*
store i32 1,i32*%bg,align 4
%bh=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bi=getelementptr inbounds i8,i8*%bb,i64 8
%bj=bitcast i8*%bi to i8**
store i8*%bh,i8**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bb,i64 16
%bl=bitcast i8*%bk to i32*
store i32 2,i32*%bl,align 4
%bm=call i8*@sml_alloc(i32 inreg 20)#0
%bn=getelementptr inbounds i8,i8*%bm,i64 -4
%bo=bitcast i8*%bn to i32*
store i32 1342177296,i32*%bo,align 4
%bp=load i8*,i8**%c,align 8
%bq=bitcast i8*%bm to i8**
store i8*%bp,i8**%bq,align 8
%br=load i8*,i8**%d,align 8
%bs=getelementptr inbounds i8,i8*%bm,i64 8
%bt=bitcast i8*%bs to i8**
store i8*%br,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bm,i64 16
%bv=bitcast i8*%bu to i32*
store i32 3,i32*%bv,align 4
ret i8*%bm
bw:
%bx=getelementptr inbounds i8,i8*%l,i64 8
%by=bitcast i8*%bx to i8**
%bz=load i8*,i8**%by,align 8
store i8*%bz,i8**%c,align 8
%bA=call fastcc i8*@_SMLFN13LongsymbolEnv4findE(i32 inreg 1,i32 inreg 8)
%bB=getelementptr inbounds i8,i8*%bA,i64 16
%bC=bitcast i8*%bB to i8*(i8*,i8*)**
%bD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bC,align 8
%bE=bitcast i8*%bA to i8**
%bF=load i8*,i8**%bE,align 8
store i8*%bF,i8**%f,align 8
%bG=bitcast i8**%d to i8****
%bH=load i8***,i8****%bG,align 8
%bI=load i8**,i8***%bH,align 8
%bJ=load i8*,i8**%bI,align 8
%bK=getelementptr inbounds i8,i8*%bJ,i64 8
%bL=bitcast i8*%bK to i8**
%bM=load i8*,i8**%bL,align 8
store i8*%bM,i8**%d,align 8
%bN=bitcast i8**%c to i8***
%bO=load i8**,i8***%bN,align 8
%bP=load i8*,i8**%bO,align 8
store i8*%bP,i8**%e,align 8
%bQ=call i8*@sml_alloc(i32 inreg 20)#0
%bR=getelementptr inbounds i8,i8*%bQ,i64 -4
%bS=bitcast i8*%bR to i32*
store i32 1342177296,i32*%bS,align 4
%bT=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bU=bitcast i8*%bQ to i8**
store i8*%bT,i8**%bU,align 8
%bV=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bW=getelementptr inbounds i8,i8*%bQ,i64 8
%bX=bitcast i8*%bW to i8**
store i8*%bV,i8**%bX,align 8
%bY=getelementptr inbounds i8,i8*%bQ,i64 16
%bZ=bitcast i8*%bY to i32*
store i32 3,i32*%bZ,align 4
%b0=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b1=call fastcc i8*%bD(i8*inreg%b0,i8*inreg%bQ)
%b2=icmp eq i8*%b1,null
br i1%b2,label%b3,label%cp
b3:
%b4=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%b4,i8**%c,align 8
%b5=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bs,i64 0,i32 2)to i8*))
store i8*%b5,i8**%d,align 8
%b6=call i8*@sml_alloc(i32 inreg 28)#0
%b7=getelementptr inbounds i8,i8*%b6,i64 -4
%b8=bitcast i8*%b7 to i32*
store i32 1342177304,i32*%b8,align 4
store i8*%b6,i8**%e,align 8
%b9=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ca=bitcast i8*%b6 to i8**
store i8*%b9,i8**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b6,i64 8
%cc=bitcast i8*%cb to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%cc,align 8
%cd=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ce=getelementptr inbounds i8,i8*%b6,i64 16
%cf=bitcast i8*%ce to i8**
store i8*%cd,i8**%cf,align 8
%cg=getelementptr inbounds i8,i8*%b6,i64 24
%ch=bitcast i8*%cg to i32*
store i32 7,i32*%ch,align 4
%ci=call i8*@sml_alloc(i32 inreg 60)#0
%cj=getelementptr inbounds i8,i8*%ci,i64 -4
%ck=bitcast i8*%cj to i32*
store i32 1342177336,i32*%ck,align 4
%cl=getelementptr inbounds i8,i8*%ci,i64 56
%cm=bitcast i8*%cl to i32*
store i32 1,i32*%cm,align 4
%cn=load i8*,i8**%e,align 8
%co=bitcast i8*%ci to i8**
store i8*%cn,i8**%co,align 8
call void@sml_raise(i8*inreg%ci)#1
unreachable
cp:
%cq=bitcast i8*%b1 to i8**
%cr=load i8*,i8**%cq,align 8
%cs=getelementptr inbounds i8,i8*%cr,i64 8
%ct=bitcast i8*%cs to i8**
%cu=load i8*,i8**%ct,align 8
store i8*%cu,i8**%d,align 8
%cv=load i8**,i8***%bN,align 8
%cw=load i8*,i8**%cv,align 8
store i8*%cw,i8**%c,align 8
%cx=call i8*@sml_alloc(i32 inreg 20)#0
%cy=getelementptr inbounds i8,i8*%cx,i64 -4
%cz=bitcast i8*%cy to i32*
store i32 1342177296,i32*%cz,align 4
store i8*%cx,i8**%e,align 8
%cA=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cB=bitcast i8*%cx to i8**
store i8*%cA,i8**%cB,align 8
%cC=load i8*,i8**%d,align 8
%cD=getelementptr inbounds i8,i8*%cx,i64 8
%cE=bitcast i8*%cD to i8**
store i8*%cC,i8**%cE,align 8
%cF=getelementptr inbounds i8,i8*%cx,i64 16
%cG=bitcast i8*%cF to i32*
store i32 3,i32*%cG,align 4
%cH=call i8*@sml_alloc(i32 inreg 20)#0
%cI=getelementptr inbounds i8,i8*%cH,i64 -4
%cJ=bitcast i8*%cI to i32*
store i32 1342177296,i32*%cJ,align 4
store i8*%cH,i8**%c,align 8
%cK=bitcast i8*%cH to i64*
store i64 0,i64*%cK,align 4
%cL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cM=getelementptr inbounds i8,i8*%cH,i64 8
%cN=bitcast i8*%cM to i8**
store i8*%cL,i8**%cN,align 8
%cO=getelementptr inbounds i8,i8*%cH,i64 16
%cP=bitcast i8*%cO to i32*
store i32 2,i32*%cP,align 4
%cQ=call i8*@sml_alloc(i32 inreg 20)#0
%cR=getelementptr inbounds i8,i8*%cQ,i64 -4
%cS=bitcast i8*%cR to i32*
store i32 1342177296,i32*%cS,align 4
%cT=load i8*,i8**%c,align 8
%cU=bitcast i8*%cQ to i8**
store i8*%cT,i8**%cU,align 8
%cV=load i8*,i8**%d,align 8
%cW=getelementptr inbounds i8,i8*%cQ,i64 8
%cX=bitcast i8*%cW to i8**
store i8*%cV,i8**%cX,align 8
%cY=getelementptr inbounds i8,i8*%cQ,i64 16
%cZ=bitcast i8*%cY to i32*
store i32 3,i32*%cZ,align 4
ret i8*%cQ
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13analyzeExnConE_1130(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13analyzeExnConE_1129 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13analyzeExnConE_1129 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15analyzePrimInfoE_1132(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
%j=load i8*,i8**%e,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%a,%m]
%n=phi i8*[%i,%h],[%b,%m]
store i8*null,i8**%c,align 8
store i8*%n,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%l,i64 24
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=bitcast i8*%l to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%q,i8*inreg%s)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=load i8*,i8**%e,align 8
%A=getelementptr inbounds i8,i8*%z,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*%w(i8*inreg%y,i8*inreg%C)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=load i8*,i8**%d,align 8
%K=getelementptr inbounds i8,i8*%J,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=call fastcc i8*%G(i8*inreg%I,i8*inreg%M)
store i8*%N,i8**%c,align 8
%O=load i8*,i8**%e,align 8
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
store i8*null,i8**%e,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
%U=call fastcc i8*@_SMLLN17PolyTyElimination6exportE_1116(i8*inreg%R,i8*inreg%T)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%c,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
%ac=bitcast i8**%d to i8***
%ad=load i8**,i8***%ac,align 8
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%d,align 8
%af=call i8*@sml_alloc(i32 inreg 20)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177296,i32*%ah,align 4
%ai=load i8*,i8**%d,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=load i8*,i8**%c,align 8
%al=getelementptr inbounds i8,i8*%af,i64 8
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%af,i64 16
%ao=bitcast i8*%an to i32*
store i32 3,i32*%ao,align 4
ret i8*%af
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15analyzePrimInfoE_1133(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%b,i8**%c,align 8
%h=bitcast i8*%a to i8**
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%d,align 8
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%e,align 8
%m=getelementptr inbounds i8,i8*%a,i64 16
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%f,align 8
%p=call i8*@sml_alloc(i32 inreg 36)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177312,i32*%r,align 4
store i8*%p,i8**%g,align 8
%s=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=getelementptr inbounds i8,i8*%p,i64 24
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%p,i64 32
%E=bitcast i8*%D to i32*
store i32 15,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 28)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
%I=load i8*,i8**%g,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15analyzePrimInfoE_1132 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%F,i64 16
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15analyzePrimInfoE_1132 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 24
%P=bitcast i8*%O to i32*
store i32 -2147483647,i32*%P,align 4
ret i8*%F
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15analyzePrimInfoE_1134(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%c,align 8
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%d,align 8
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%e,align 8
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%f,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=getelementptr inbounds i8,i8*%l,i64 16
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%l,i64 24
%x=bitcast i8*%w to i32*
store i32 7,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15analyzePrimInfoE_1133 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15analyzePrimInfoE_1133 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLN17PolyTyElimination16analyzeOPrimInfoE_1135(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
%j=load i8*,i8**%e,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%a,%m]
%n=phi i8*[%i,%h],[%b,%m]
store i8*null,i8**%c,align 8
store i8*%n,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%l,i64 24
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=bitcast i8*%l to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%q,i8*inreg%s)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=load i8*,i8**%e,align 8
%A=getelementptr inbounds i8,i8*%z,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*%w(i8*inreg%y,i8*inreg%C)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=load i8*,i8**%d,align 8
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=call fastcc i8*%G(i8*inreg%I,i8*inreg%M)
store i8*%N,i8**%c,align 8
%O=load i8*,i8**%e,align 8
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
store i8*null,i8**%e,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
%U=call fastcc i8*@_SMLLN17PolyTyElimination6exportE_1116(i8*inreg%R,i8*inreg%T)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%c,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
%ac=load i8*,i8**%d,align 8
%ad=bitcast i8*%ac to i32*
%ae=load i32,i32*%ad,align 4
%af=getelementptr inbounds i8,i8*%ac,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
store i8*%ah,i8**%d,align 8
%ai=call i8*@sml_alloc(i32 inreg 28)#0
%aj=bitcast i8*%ai to i32*
%ak=getelementptr inbounds i8,i8*%ai,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177304,i32*%al,align 4
%am=getelementptr inbounds i8,i8*%ai,i64 4
%an=bitcast i8*%am to i32*
store i32 0,i32*%an,align 1
store i32%ae,i32*%aj,align 4
%ao=load i8*,i8**%d,align 8
%ap=getelementptr inbounds i8,i8*%ai,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=load i8*,i8**%c,align 8
%as=getelementptr inbounds i8,i8*%ai,i64 16
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%ai,i64 24
%av=bitcast i8*%au to i32*
store i32 6,i32*%av,align 4
ret i8*%ai
}
define internal fastcc i8*@_SMLLN17PolyTyElimination16analyzeOPrimInfoE_1136(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%b,i8**%c,align 8
%h=bitcast i8*%a to i8**
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%d,align 8
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%e,align 8
%m=getelementptr inbounds i8,i8*%a,i64 16
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%f,align 8
%p=call i8*@sml_alloc(i32 inreg 36)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177312,i32*%r,align 4
store i8*%p,i8**%g,align 8
%s=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=getelementptr inbounds i8,i8*%p,i64 24
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%p,i64 32
%E=bitcast i8*%D to i32*
store i32 15,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 28)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
%I=load i8*,i8**%g,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16analyzeOPrimInfoE_1135 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%F,i64 16
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16analyzeOPrimInfoE_1135 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 24
%P=bitcast i8*%O to i32*
store i32 -2147483647,i32*%P,align 4
ret i8*%F
}
define internal fastcc i8*@_SMLLN17PolyTyElimination16analyzeOPrimInfoE_1137(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%c,align 8
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%d,align 8
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%e,align 8
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%f,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=getelementptr inbounds i8,i8*%l,i64 16
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%l,i64 24
%x=bitcast i8*%w to i32*
store i32 7,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16analyzeOPrimInfoE_1136 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16analyzeOPrimInfoE_1136 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12analyzeFFItyE_1139(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination12analyzeFFItyE_1138(i8*inreg%p,i8*inreg%s,i8*inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12analyzeFFItyE_1140(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination12analyzeFFItyE_1138(i8*inreg%p,i8*inreg%s,i8*inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12analyzeFFItyE_1141(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination12analyzeFFItyE_1138(i8*inreg%p,i8*inreg%s,i8*inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12analyzeFFItyE_1142(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=getelementptr inbounds i8,i8*%k,i64 16
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%k,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%k to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8,i8*%m,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*@_SMLLN17PolyTyElimination12analyzeFFItyE_1138(i8*inreg%r,i8*inreg%u,i8*inreg%w,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12analyzeFFItyE_1138(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
w:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
store i8*%a,i8**%l,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
store i8*%d,i8**%g,align 8
%o=load atomic i32,i32*@sml_check_flag unordered,align 4
%p=icmp eq i32%o,0
br i1%p,label%u,label%q
q:
call void@sml_check(i32 inreg%o)
%r=load i8*,i8**%g,align 8
%s=load i8*,i8**%f,align 8
%t=load i8*,i8**%e,align 8
br label%u
u:
%v=phi i8*[%t,%q],[%b,%w]
%x=phi i8*[%s,%q],[%c,%w]
%y=phi i8*[%r,%q],[%d,%w]
store i8*%x,i8**%g,align 8
store i8*%v,i8**%h,align 8
%z=bitcast i8*%y to i32*
%A=load i32,i32*%z,align 4
switch i32%A,label%B[
i32 0,label%dX
i32 1,label%ba
i32 2,label%T
]
B:
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%l,align 8
call void@sml_matchcomp_bug()
%C=load i8*,i8**@_SMLZ5Match,align 8
store i8*%C,i8**%e,align 8
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
store i8*%D,i8**%f,align 8
%G=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bw,i64 0,i32 2,i64 0),i8**%J,align 8
%K=getelementptr inbounds i8,i8*%D,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 60)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177336,i32*%O,align 4
%P=getelementptr inbounds i8,i8*%M,i64 56
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
%R=load i8*,i8**%f,align 8
%S=bitcast i8*%M to i8**
store i8*%R,i8**%S,align 8
call void@sml_raise(i8*inreg%M)#1
unreachable
T:
%U=getelementptr inbounds i8,i8*%y,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%e,align 8
%X=getelementptr inbounds i8,i8*%W,i64 8
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%f,align 8
%aa=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ab=getelementptr inbounds i8,i8*%aa,i64 16
%ac=bitcast i8*%ab to i8*(i8*,i8*)**
%ad=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ac,align 8
%ae=bitcast i8*%aa to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%i,align 8
%ag=call i8*@sml_alloc(i32 inreg 28)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177304,i32*%ai,align 4
store i8*%ag,i8**%j,align 8
%aj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%am=getelementptr inbounds i8,i8*%ag,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%ap=getelementptr inbounds i8,i8*%ag,i64 16
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%ag,i64 24
%as=bitcast i8*%ar to i32*
store i32 7,i32*%as,align 4
%at=call i8*@sml_alloc(i32 inreg 28)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177304,i32*%av,align 4
%aw=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ax=bitcast i8*%at to i8**
store i8*%aw,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%at,i64 8
%az=bitcast i8*%ay to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12analyzeFFItyE_1142 to void(...)*),void(...)**%az,align 8
%aA=getelementptr inbounds i8,i8*%at,i64 16
%aB=bitcast i8*%aA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12analyzeFFItyE_1142 to void(...)*),void(...)**%aB,align 8
%aC=getelementptr inbounds i8,i8*%at,i64 24
%aD=bitcast i8*%aC to i32*
store i32 -2147483647,i32*%aD,align 4
%aE=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aF=call fastcc i8*%ad(i8*inreg%aE,i8*inreg%at)
%aG=getelementptr inbounds i8,i8*%aF,i64 16
%aH=bitcast i8*%aG to i8*(i8*,i8*)**
%aI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aH,align 8
%aJ=bitcast i8*%aF to i8**
%aK=load i8*,i8**%aJ,align 8
%aL=bitcast i8**%e to i8***
%aM=load i8**,i8***%aL,align 8
store i8*null,i8**%e,align 8
%aN=load i8*,i8**%aM,align 8
%aO=call fastcc i8*%aI(i8*inreg%aK,i8*inreg%aN)
store i8*%aO,i8**%e,align 8
%aP=call i8*@sml_alloc(i32 inreg 20)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177296,i32*%aR,align 4
store i8*%aP,i8**%g,align 8
%aS=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aV=getelementptr inbounds i8,i8*%aP,i64 8
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aP,i64 16
%aY=bitcast i8*%aX to i32*
store i32 3,i32*%aY,align 4
%aZ=call i8*@sml_alloc(i32 inreg 20)#0
%a0=bitcast i8*%aZ to i32*
%a1=getelementptr inbounds i8,i8*%aZ,i64 -4
%a2=bitcast i8*%a1 to i32*
store i32 1342177296,i32*%a2,align 4
%a3=getelementptr inbounds i8,i8*%aZ,i64 4
%a4=bitcast i8*%a3 to i32*
store i32 0,i32*%a4,align 1
store i32 2,i32*%a0,align 4
%a5=load i8*,i8**%g,align 8
%a6=getelementptr inbounds i8,i8*%aZ,i64 8
%a7=bitcast i8*%a6 to i8**
store i8*%a5,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%aZ,i64 16
%a9=bitcast i8*%a8 to i32*
store i32 2,i32*%a9,align 4
ret i8*%aZ
ba:
%bb=getelementptr inbounds i8,i8*%y,i64 8
%bc=bitcast i8*%bb to i8**
%bd=load i8*,i8**%bc,align 8
store i8*%bd,i8**%i,align 8
%be=bitcast i8*%bd to i8**
%bf=load i8*,i8**%be,align 8
store i8*%bf,i8**%j,align 8
%bg=getelementptr inbounds i8,i8*%bd,i64 32
%bh=bitcast i8*%bg to i8**
%bi=load i8*,i8**%bh,align 8
store i8*%bi,i8**%k,align 8
%bj=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bk=getelementptr inbounds i8,i8*%bj,i64 16
%bl=bitcast i8*%bk to i8*(i8*,i8*)**
%bm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bl,align 8
%bn=bitcast i8*%bj to i8**
%bo=load i8*,i8**%bn,align 8
store i8*%bo,i8**%e,align 8
%bp=call i8*@sml_alloc(i32 inreg 28)#0
%bq=getelementptr inbounds i8,i8*%bp,i64 -4
%br=bitcast i8*%bq to i32*
store i32 1342177304,i32*%br,align 4
store i8*%bp,i8**%f,align 8
%bs=load i8*,i8**%g,align 8
%bt=bitcast i8*%bp to i8**
store i8*%bs,i8**%bt,align 8
%bu=load i8*,i8**%h,align 8
%bv=getelementptr inbounds i8,i8*%bp,i64 8
%bw=bitcast i8*%bv to i8**
store i8*%bu,i8**%bw,align 8
%bx=load i8*,i8**%l,align 8
%by=getelementptr inbounds i8,i8*%bp,i64 16
%bz=bitcast i8*%by to i8**
store i8*%bx,i8**%bz,align 8
%bA=getelementptr inbounds i8,i8*%bp,i64 24
%bB=bitcast i8*%bA to i32*
store i32 7,i32*%bB,align 4
%bC=call i8*@sml_alloc(i32 inreg 28)#0
%bD=getelementptr inbounds i8,i8*%bC,i64 -4
%bE=bitcast i8*%bD to i32*
store i32 1342177304,i32*%bE,align 4
%bF=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bG=bitcast i8*%bC to i8**
store i8*%bF,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bC,i64 8
%bI=bitcast i8*%bH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12analyzeFFItyE_1139 to void(...)*),void(...)**%bI,align 8
%bJ=getelementptr inbounds i8,i8*%bC,i64 16
%bK=bitcast i8*%bJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12analyzeFFItyE_1139 to void(...)*),void(...)**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bC,i64 24
%bM=bitcast i8*%bL to i32*
store i32 -2147483647,i32*%bM,align 4
%bN=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bO=call fastcc i8*%bm(i8*inreg%bN,i8*inreg%bC)
%bP=getelementptr inbounds i8,i8*%bO,i64 16
%bQ=bitcast i8*%bP to i8*(i8*,i8*)**
%bR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bQ,align 8
%bS=bitcast i8*%bO to i8**
%bT=load i8*,i8**%bS,align 8
%bU=load i8*,i8**%i,align 8
%bV=getelementptr inbounds i8,i8*%bU,i64 8
%bW=bitcast i8*%bV to i8**
%bX=load i8*,i8**%bW,align 8
%bY=call fastcc i8*%bR(i8*inreg%bT,i8*inreg%bX)
store i8*%bY,i8**%e,align 8
%bZ=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%b0=getelementptr inbounds i8,i8*%bZ,i64 16
%b1=bitcast i8*%b0 to i8*(i8*,i8*)**
%b2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b1,align 8
%b3=bitcast i8*%bZ to i8**
%b4=load i8*,i8**%b3,align 8
store i8*%b4,i8**%m,align 8
%b5=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%b6=getelementptr inbounds i8,i8*%b5,i64 16
%b7=bitcast i8*%b6 to i8*(i8*,i8*)**
%b8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b7,align 8
%b9=bitcast i8*%b5 to i8**
%ca=load i8*,i8**%b9,align 8
store i8*%ca,i8**%f,align 8
%cb=call i8*@sml_alloc(i32 inreg 28)#0
%cc=getelementptr inbounds i8,i8*%cb,i64 -4
%cd=bitcast i8*%cc to i32*
store i32 1342177304,i32*%cd,align 4
store i8*%cb,i8**%n,align 8
%ce=load i8*,i8**%g,align 8
%cf=bitcast i8*%cb to i8**
store i8*%ce,i8**%cf,align 8
%cg=load i8*,i8**%h,align 8
%ch=getelementptr inbounds i8,i8*%cb,i64 8
%ci=bitcast i8*%ch to i8**
store i8*%cg,i8**%ci,align 8
%cj=load i8*,i8**%l,align 8
%ck=getelementptr inbounds i8,i8*%cb,i64 16
%cl=bitcast i8*%ck to i8**
store i8*%cj,i8**%cl,align 8
%cm=getelementptr inbounds i8,i8*%cb,i64 24
%cn=bitcast i8*%cm to i32*
store i32 7,i32*%cn,align 4
%co=call i8*@sml_alloc(i32 inreg 28)#0
%cp=getelementptr inbounds i8,i8*%co,i64 -4
%cq=bitcast i8*%cp to i32*
store i32 1342177304,i32*%cq,align 4
%cr=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%cs=bitcast i8*%co to i8**
store i8*%cr,i8**%cs,align 8
%ct=getelementptr inbounds i8,i8*%co,i64 8
%cu=bitcast i8*%ct to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12analyzeFFItyE_1140 to void(...)*),void(...)**%cu,align 8
%cv=getelementptr inbounds i8,i8*%co,i64 16
%cw=bitcast i8*%cv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12analyzeFFItyE_1140 to void(...)*),void(...)**%cw,align 8
%cx=getelementptr inbounds i8,i8*%co,i64 24
%cy=bitcast i8*%cx to i32*
store i32 -2147483647,i32*%cy,align 4
%cz=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cA=call fastcc i8*%b8(i8*inreg%cz,i8*inreg%co)
%cB=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%cC=call fastcc i8*%b2(i8*inreg%cB,i8*inreg%cA)
%cD=getelementptr inbounds i8,i8*%cC,i64 16
%cE=bitcast i8*%cD to i8*(i8*,i8*)**
%cF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cE,align 8
%cG=bitcast i8*%cC to i8**
%cH=load i8*,i8**%cG,align 8
%cI=load i8*,i8**%i,align 8
%cJ=getelementptr inbounds i8,i8*%cI,i64 16
%cK=bitcast i8*%cJ to i8**
%cL=load i8*,i8**%cK,align 8
%cM=call fastcc i8*%cF(i8*inreg%cH,i8*inreg%cL)
store i8*%cM,i8**%f,align 8
%cN=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cO=getelementptr inbounds i8,i8*%cN,i64 16
%cP=bitcast i8*%cO to i8*(i8*,i8*)**
%cQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cP,align 8
%cR=bitcast i8*%cN to i8**
%cS=load i8*,i8**%cR,align 8
store i8*%cS,i8**%m,align 8
%cT=call i8*@sml_alloc(i32 inreg 28)#0
%cU=getelementptr inbounds i8,i8*%cT,i64 -4
%cV=bitcast i8*%cU to i32*
store i32 1342177304,i32*%cV,align 4
store i8*%cT,i8**%n,align 8
%cW=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cX=bitcast i8*%cT to i8**
store i8*%cW,i8**%cX,align 8
%cY=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cZ=getelementptr inbounds i8,i8*%cT,i64 8
%c0=bitcast i8*%cZ to i8**
store i8*%cY,i8**%c0,align 8
%c1=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%c2=getelementptr inbounds i8,i8*%cT,i64 16
%c3=bitcast i8*%c2 to i8**
store i8*%c1,i8**%c3,align 8
%c4=getelementptr inbounds i8,i8*%cT,i64 24
%c5=bitcast i8*%c4 to i32*
store i32 7,i32*%c5,align 4
%c6=call i8*@sml_alloc(i32 inreg 28)#0
%c7=getelementptr inbounds i8,i8*%c6,i64 -4
%c8=bitcast i8*%c7 to i32*
store i32 1342177304,i32*%c8,align 4
%c9=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%da=bitcast i8*%c6 to i8**
store i8*%c9,i8**%da,align 8
%db=getelementptr inbounds i8,i8*%c6,i64 8
%dc=bitcast i8*%db to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12analyzeFFItyE_1141 to void(...)*),void(...)**%dc,align 8
%dd=getelementptr inbounds i8,i8*%c6,i64 16
%de=bitcast i8*%dd to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12analyzeFFItyE_1141 to void(...)*),void(...)**%de,align 8
%df=getelementptr inbounds i8,i8*%c6,i64 24
%dg=bitcast i8*%df to i32*
store i32 -2147483647,i32*%dg,align 4
%dh=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%di=call fastcc i8*%cQ(i8*inreg%dh,i8*inreg%c6)
%dj=getelementptr inbounds i8,i8*%di,i64 16
%dk=bitcast i8*%dj to i8*(i8*,i8*)**
%dl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dk,align 8
%dm=bitcast i8*%di to i8**
%dn=load i8*,i8**%dm,align 8
%do=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%dp=getelementptr inbounds i8,i8*%do,i64 24
%dq=bitcast i8*%dp to i8**
%dr=load i8*,i8**%dq,align 8
%ds=call fastcc i8*%dl(i8*inreg%dn,i8*inreg%dr)
store i8*%ds,i8**%g,align 8
%dt=call i8*@sml_alloc(i32 inreg 44)#0
%du=getelementptr inbounds i8,i8*%dt,i64 -4
%dv=bitcast i8*%du to i32*
store i32 1342177320,i32*%dv,align 4
store i8*%dt,i8**%h,align 8
%dw=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dx=bitcast i8*%dt to i8**
store i8*%dw,i8**%dx,align 8
%dy=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dz=getelementptr inbounds i8,i8*%dt,i64 8
%dA=bitcast i8*%dz to i8**
store i8*%dy,i8**%dA,align 8
%dB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dC=getelementptr inbounds i8,i8*%dt,i64 16
%dD=bitcast i8*%dC to i8**
store i8*%dB,i8**%dD,align 8
%dE=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dF=getelementptr inbounds i8,i8*%dt,i64 24
%dG=bitcast i8*%dF to i8**
store i8*%dE,i8**%dG,align 8
%dH=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%dI=getelementptr inbounds i8,i8*%dt,i64 32
%dJ=bitcast i8*%dI to i8**
store i8*%dH,i8**%dJ,align 8
%dK=getelementptr inbounds i8,i8*%dt,i64 40
%dL=bitcast i8*%dK to i32*
store i32 31,i32*%dL,align 4
%dM=call i8*@sml_alloc(i32 inreg 20)#0
%dN=bitcast i8*%dM to i32*
%dO=getelementptr inbounds i8,i8*%dM,i64 -4
%dP=bitcast i8*%dO to i32*
store i32 1342177296,i32*%dP,align 4
%dQ=getelementptr inbounds i8,i8*%dM,i64 4
%dR=bitcast i8*%dQ to i32*
store i32 0,i32*%dR,align 1
store i32 1,i32*%dN,align 4
%dS=load i8*,i8**%h,align 8
%dT=getelementptr inbounds i8,i8*%dM,i64 8
%dU=bitcast i8*%dT to i8**
store i8*%dS,i8**%dU,align 8
%dV=getelementptr inbounds i8,i8*%dM,i64 16
%dW=bitcast i8*%dV to i32*
store i32 2,i32*%dW,align 4
ret i8*%dM
dX:
%dY=getelementptr inbounds i8,i8*%y,i64 8
%dZ=bitcast i8*%dY to i8**
%d0=load i8*,i8**%dZ,align 8
store i8*%d0,i8**%e,align 8
%d1=getelementptr inbounds i8,i8*%d0,i64 8
%d2=bitcast i8*%d1 to i8**
%d3=load i8*,i8**%d2,align 8
store i8*%d3,i8**%f,align 8
%d4=bitcast i8**%l to i8***
%d5=load i8**,i8***%d4,align 8
store i8*null,i8**%l,align 8
%d6=load i8*,i8**%d5,align 8
store i8*null,i8**%h,align 8
%d7=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%d6,i8*inreg%v)
%d8=getelementptr inbounds i8,i8*%d7,i64 16
%d9=bitcast i8*%d8 to i8*(i8*,i8*)**
%ea=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d9,align 8
%eb=bitcast i8*%d7 to i8**
%ec=load i8*,i8**%eb,align 8
%ed=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ee=call fastcc i8*%ea(i8*inreg%ec,i8*inreg%ed)
%ef=getelementptr inbounds i8,i8*%ee,i64 16
%eg=bitcast i8*%ef to i8*(i8*,i8*)**
%eh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eg,align 8
%ei=bitcast i8*%ee to i8**
%ej=load i8*,i8**%ei,align 8
%ek=bitcast i8**%e to i8***
%el=load i8**,i8***%ek,align 8
store i8*null,i8**%e,align 8
%em=load i8*,i8**%el,align 8
%en=call fastcc i8*%eh(i8*inreg%ej,i8*inreg%em)
store i8*%en,i8**%e,align 8
%eo=call i8*@sml_alloc(i32 inreg 20)#0
%ep=getelementptr inbounds i8,i8*%eo,i64 -4
%eq=bitcast i8*%ep to i32*
store i32 1342177296,i32*%eq,align 4
store i8*%eo,i8**%g,align 8
%er=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%es=bitcast i8*%eo to i8**
store i8*%er,i8**%es,align 8
%et=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eu=getelementptr inbounds i8,i8*%eo,i64 8
%ev=bitcast i8*%eu to i8**
store i8*%et,i8**%ev,align 8
%ew=getelementptr inbounds i8,i8*%eo,i64 16
%ex=bitcast i8*%ew to i32*
store i32 3,i32*%ex,align 4
%ey=call i8*@sml_alloc(i32 inreg 20)#0
%ez=getelementptr inbounds i8,i8*%ey,i64 -4
%eA=bitcast i8*%ez to i32*
store i32 1342177296,i32*%eA,align 4
%eB=bitcast i8*%ey to i64*
store i64 0,i64*%eB,align 4
%eC=load i8*,i8**%g,align 8
%eD=getelementptr inbounds i8,i8*%ey,i64 8
%eE=bitcast i8*%eD to i8**
store i8*%eC,i8**%eE,align 8
%eF=getelementptr inbounds i8,i8*%ey,i64 16
%eG=bitcast i8*%eF to i32*
store i32 2,i32*%eG,align 4
ret i8*%ey
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18analyzeConstraintsE_1144(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination16getIdsConstraintE_1075(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18analyzeConstraintsE_1145(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=load i8*,i8**%d,align 8
%s=getelementptr inbounds i8,i8*%r,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*@_SMLFN13TyAlphaRename14copyConstraintE(i8*inreg%x)
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=call fastcc i8*%o(i8*inreg%z,i8*inreg%y)
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
store i8*%H,i8**%c,align 8
%I=bitcast i8**%d to i8***
%J=load i8**,i8***%I,align 8
%K=load i8*,i8**%J,align 8
%L=call fastcc i8*@_SMLLN17PolyTyElimination5touchE_733(i8*inreg%K)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%e,align 8
%R=load i8*,i8**%d,align 8
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%f,align 8
%V=getelementptr inbounds i8,i8*%R,i64 24
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%d,align 8
%Y=call i8*@sml_alloc(i32 inreg 12)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177288,i32*%aa,align 4
store i8*%Y,i8**%g,align 8
%ab=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
%af=call i8*@sml_alloc(i32 inreg 28)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177304,i32*%ah,align 4
%ai=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18analyzeConstraintsE_1144 to void(...)*),void(...)**%al,align 8
%am=getelementptr inbounds i8,i8*%af,i64 16
%an=bitcast i8*%am to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18analyzeConstraintsE_1144 to void(...)*),void(...)**%an,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 24
%ap=bitcast i8*%ao to i32*
store i32 -2147483647,i32*%ap,align 4
%aq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ar=call fastcc i8*@_SMLLN17PolyTyElimination10getIdsListE_1065(i8*inreg%aq,i8*inreg%af)
%as=getelementptr inbounds i8,i8*%ar,i64 16
%at=bitcast i8*%as to i8*(i8*,i8*)**
%au=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%at,align 8
%av=bitcast i8*%ar to i8**
%aw=load i8*,i8**%av,align 8
%ax=load i8*,i8**%c,align 8
%ay=call fastcc i8*%au(i8*inreg%aw,i8*inreg%ax)
%az=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aA=call fastcc i8*%O(i8*inreg%az,i8*inreg%ay)
%aB=load i8*,i8**%c,align 8
ret i8*%aB
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18analyzeConstraintsE_1146(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%b,i8**%c,align 8
%h=bitcast i8*%a to i8**
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%d,align 8
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%e,align 8
%m=getelementptr inbounds i8,i8*%a,i64 16
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%f,align 8
%p=call i8*@sml_alloc(i32 inreg 36)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177312,i32*%r,align 4
store i8*%p,i8**%g,align 8
%s=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=getelementptr inbounds i8,i8*%p,i64 24
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%p,i64 32
%E=bitcast i8*%D to i32*
store i32 15,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 28)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
%I=load i8*,i8**%g,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18analyzeConstraintsE_1145 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%F,i64 16
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18analyzeConstraintsE_1145 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 24
%P=bitcast i8*%O to i32*
store i32 -2147483647,i32*%P,align 4
ret i8*%F
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18analyzeConstraintsE_1147(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%c,align 8
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%d,align 8
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%e,align 8
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%f,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=getelementptr inbounds i8,i8*%l,i64 16
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%l,i64 24
%x=bitcast i8*%w to i32*
store i32 7,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18analyzeConstraintsE_1146 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18analyzeConstraintsE_1146 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13analyzeBtvEnvE_1148(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%g,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
%o=getelementptr inbounds i8,i8*%m,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*@_SMLFN13TyAlphaRename9newBtvEnvE(i8*inreg%t)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=call fastcc i8*%x(i8*inreg%z,i8*inreg%A)
store i8*%B,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%B,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%c,align 8
%F=bitcast i8**%g to i8***
%G=load i8**,i8***%F,align 8
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*@_SMLLN17PolyTyElimination5touchE_733(i8*inreg%H)
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%e,align 8
%O=load i8*,i8**%g,align 8
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
%S=load i8*,i8**%c,align 8
%T=call fastcc i8*@_SMLLN17PolyTyElimination12getIdsBtvEnvE_1069(i8*inreg%R,i8*inreg%S)
%U=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%V=call fastcc i8*%L(i8*inreg%U,i8*inreg%T)
%W=load i8*,i8**%g,align 8
%X=getelementptr inbounds i8,i8*%W,i64 8
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%f,align 8
%aa=load i8*,i8**%c,align 8
%ab=call fastcc i8*@_SMLFN12TypedCalcCon6btvEnvE(i8*inreg%aa)
store i8*%ab,i8**%e,align 8
%ac=load i8*,i8**%g,align 8
%ad=getelementptr inbounds i8,i8*%ac,i64 8
%ae=bitcast i8*%ad to i8***
%af=load i8**,i8***%ae,align 8
%ag=load i8*,i8**%af,align 8
store i8*%ag,i8**%g,align 8
%ah=call i8*@sml_alloc(i32 inreg 20)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177296,i32*%aj,align 4
%ak=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%an=getelementptr inbounds i8,i8*%ah,i64 8
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ah,i64 16
%aq=bitcast i8*%ap to i32*
store i32 3,i32*%aq,align 4
%ar=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%ah)
store i8*%ar,i8**%e,align 8
%as=load i8*,i8**%f,align 8
%at=getelementptr inbounds i8,i8*%as,i64 8
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
store i8*%av,i8**%f,align 8
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177296,i32*%ay,align 4
%az=load i8*,i8**%e,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=load i8*,i8**%f,align 8
%aC=getelementptr inbounds i8,i8*%aw,i64 8
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%aw,i64 16
%aF=bitcast i8*%aE to i32*
store i32 3,i32*%aF,align 4
%aG=bitcast i8**%d to i8***
%aH=load i8**,i8***%aG,align 8
store i8*null,i8**%d,align 8
%aI=load i8*,i8**%aH,align 8
store i8*%aI,i8**%f,align 8
%aJ=call i8*@sml_alloc(i32 inreg 20)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177296,i32*%aL,align 4
store i8*%aJ,i8**%d,align 8
%aM=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aP=getelementptr inbounds i8,i8*%aJ,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aJ,i64 16
%aS=bitcast i8*%aR to i32*
store i32 3,i32*%aS,align 4
%aT=call i8*@sml_alloc(i32 inreg 20)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
%aW=load i8*,i8**%c,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%d,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aT,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
ret i8*%aT
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13analyzeBtvEnvE_1149(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%c,align 8
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%d,align 8
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%e,align 8
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%f,align 8
%o=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=getelementptr inbounds i8,i8*%l,i64 16
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%l,i64 24
%x=bitcast i8*%w to i32*
store i32 7,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13analyzeBtvEnvE_1148 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13analyzeBtvEnvE_1148 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13analyzeBtvEnvE_1150(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13analyzeBtvEnvE_1149 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13analyzeBtvEnvE_1149 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzePatE_1152(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination10analyzePatE_1151(i8*inreg%p,i8*inreg%s,i8*inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzePatE_1153(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination10analyzePatE_1151(i8*inreg%p,i8*inreg%s,i8*inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLL6fields_1154(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination10analyzePatE_1151(i8*inreg%p,i8*inreg%s,i8*inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzePatE_1163(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzePatE_1151(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
v:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
store i8*%a,i8**%k,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
store i8*%d,i8**%g,align 8
%n=load atomic i32,i32*@sml_check_flag unordered,align 4
%o=icmp eq i32%n,0
br i1%o,label%t,label%p
p:
call void@sml_check(i32 inreg%n)
%q=load i8*,i8**%g,align 8
%r=load i8*,i8**%f,align 8
%s=load i8*,i8**%e,align 8
br label%t
t:
%u=phi i8*[%s,%p],[%b,%v]
%w=phi i8*[%r,%p],[%c,%v]
%x=phi i8*[%q,%p],[%d,%v]
store i8*%w,i8**%i,align 8
store i8*%u,i8**%h,align 8
%y=bitcast i8*%x to i32*
%z=load i32,i32*%y,align 4
switch i32%z,label%A[
i32 0,label%kO
i32 1,label%h8
i32 2,label%h6
i32 3,label%gT
i32 4,label%fV
i32 5,label%bs
i32 6,label%aF
i32 7,label%S
]
A:
store i8*null,i8**%i,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
call void@sml_matchcomp_bug()
%B=load i8*,i8**@_SMLZ5Match,align 8
store i8*%B,i8**%e,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
store i8*%C,i8**%f,align 8
%F=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bC,i64 0,i32 2,i64 0),i8**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 60)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177336,i32*%N,align 4
%O=getelementptr inbounds i8,i8*%L,i64 56
%P=bitcast i8*%O to i32*
store i32 1,i32*%P,align 4
%Q=load i8*,i8**%f,align 8
%R=bitcast i8*%L to i8**
store i8*%Q,i8**%R,align 8
call void@sml_raise(i8*inreg%L)#1
unreachable
S:
%T=getelementptr inbounds i8,i8*%x,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%e,align 8
%W=getelementptr inbounds i8,i8*%V,i64 8
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%f,align 8
%Z=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%aa=getelementptr inbounds i8,i8*%Z,i64 8
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
store i8*null,i8**%h,align 8
%ad=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%ac,i8*inreg%u)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ak=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%aj)
%al=getelementptr inbounds i8,i8*%ak,i64 16
%am=bitcast i8*%al to i8*(i8*,i8*)**
%an=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%am,align 8
%ao=bitcast i8*%ak to i8**
%ap=load i8*,i8**%ao,align 8
%aq=bitcast i8**%e to i8***
%ar=load i8**,i8***%aq,align 8
store i8*null,i8**%e,align 8
%as=load i8*,i8**%ar,align 8
%at=call fastcc i8*%an(i8*inreg%ap,i8*inreg%as)
store i8*%at,i8**%e,align 8
%au=call i8*@sml_alloc(i32 inreg 20)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177296,i32*%aw,align 4
%ax=load i8*,i8**%e,align 8
%ay=bitcast i8*%au to i8**
store i8*%ax,i8**%ay,align 8
%az=load i8*,i8**%f,align 8
%aA=getelementptr inbounds i8,i8*%au,i64 8
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%au,i64 16
%aD=bitcast i8*%aC to i32*
store i32 3,i32*%aD,align 4
%aE=call fastcc i8*@_SMLFN12TypedCalcCon9TPPATWILDE(i8*inreg%au)
ret i8*%aE
aF:
%aG=getelementptr inbounds i8,i8*%x,i64 8
%aH=bitcast i8*%aG to i8**
%aI=load i8*,i8**%aH,align 8
store i8*%aI,i8**%e,align 8
%aJ=bitcast i8*%aI to i32*
%aK=load i32,i32*%aJ,align 4
%aL=getelementptr inbounds i8,i8*%aI,i64 4
%aM=bitcast i8*%aL to i32*
%aN=load i32,i32*%aM,align 4
%aO=getelementptr inbounds i8,i8*%aI,i64 8
%aP=bitcast i8*%aO to i8**
%aQ=load i8*,i8**%aP,align 8
store i8*%aQ,i8**%f,align 8
%aR=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%aS=getelementptr inbounds i8,i8*%aR,i64 8
%aT=bitcast i8*%aS to i8**
%aU=load i8*,i8**%aT,align 8
store i8*null,i8**%h,align 8
%aV=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%aU,i8*inreg%u)
%aW=getelementptr inbounds i8,i8*%aV,i64 16
%aX=bitcast i8*%aW to i8*(i8*,i8*)**
%aY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aX,align 8
%aZ=bitcast i8*%aV to i8**
%a0=load i8*,i8**%aZ,align 8
%a1=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%a2=call fastcc i8*%aY(i8*inreg%a0,i8*inreg%a1)
%a3=getelementptr inbounds i8,i8*%a2,i64 16
%a4=bitcast i8*%a3 to i8*(i8*,i8*)**
%a5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a4,align 8
%a6=bitcast i8*%a2 to i8**
%a7=load i8*,i8**%a6,align 8
%a8=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a9=getelementptr inbounds i8,i8*%a8,i64 16
%ba=bitcast i8*%a9 to i8**
%bb=load i8*,i8**%ba,align 8
%bc=call fastcc i8*%a5(i8*inreg%a7,i8*inreg%bb)
store i8*%bc,i8**%e,align 8
%bd=call i8*@sml_alloc(i32 inreg 28)#0
%be=bitcast i8*%bd to i32*
%bf=getelementptr inbounds i8,i8*%bd,i64 -4
%bg=bitcast i8*%bf to i32*
store i32 1342177304,i32*%bg,align 4
store i32%aK,i32*%be,align 4
%bh=getelementptr inbounds i8,i8*%bd,i64 4
%bi=bitcast i8*%bh to i32*
store i32%aN,i32*%bi,align 4
%bj=load i8*,i8**%f,align 8
%bk=getelementptr inbounds i8,i8*%bd,i64 8
%bl=bitcast i8*%bk to i8**
store i8*%bj,i8**%bl,align 8
%bm=load i8*,i8**%e,align 8
%bn=getelementptr inbounds i8,i8*%bd,i64 16
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bd,i64 24
%bq=bitcast i8*%bp to i32*
store i32 6,i32*%bq,align 4
%br=call fastcc i8*@_SMLFN12TypedCalcCon8TPPATVARE(i8*inreg%bd)
ret i8*%br
bs:
%bt=getelementptr inbounds i8,i8*%x,i64 8
%bu=bitcast i8*%bt to i8**
%bv=load i8*,i8**%bu,align 8
store i8*%bv,i8**%f,align 8
%bw=getelementptr inbounds i8,i8*%bv,i64 8
%bx=bitcast i8*%bw to i8**
%by=load i8*,i8**%bx,align 8
store i8*%by,i8**%j,align 8
%bz=call fastcc i8*@_SMLFN11RecordLabel3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bA=getelementptr inbounds i8,i8*%bz,i64 16
%bB=bitcast i8*%bA to i8*(i8*,i8*)**
%bC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bB,align 8
%bD=bitcast i8*%bz to i8**
%bE=load i8*,i8**%bD,align 8
store i8*%bE,i8**%e,align 8
%bF=call i8*@sml_alloc(i32 inreg 28)#0
%bG=getelementptr inbounds i8,i8*%bF,i64 -4
%bH=bitcast i8*%bG to i32*
store i32 1342177304,i32*%bH,align 4
store i8*%bF,i8**%g,align 8
%bI=load i8*,i8**%i,align 8
%bJ=bitcast i8*%bF to i8**
store i8*%bI,i8**%bJ,align 8
%bK=load i8*,i8**%h,align 8
%bL=getelementptr inbounds i8,i8*%bF,i64 8
%bM=bitcast i8*%bL to i8**
store i8*%bK,i8**%bM,align 8
%bN=load i8*,i8**%k,align 8
%bO=getelementptr inbounds i8,i8*%bF,i64 16
%bP=bitcast i8*%bO to i8**
store i8*%bN,i8**%bP,align 8
%bQ=getelementptr inbounds i8,i8*%bF,i64 24
%bR=bitcast i8*%bQ to i32*
store i32 7,i32*%bR,align 4
%bS=call i8*@sml_alloc(i32 inreg 28)#0
%bT=getelementptr inbounds i8,i8*%bS,i64 -4
%bU=bitcast i8*%bT to i32*
store i32 1342177304,i32*%bU,align 4
%bV=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bW=bitcast i8*%bS to i8**
store i8*%bV,i8**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bS,i64 8
%bY=bitcast i8*%bX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6fields_1154 to void(...)*),void(...)**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bS,i64 16
%b0=bitcast i8*%bZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6fields_1154 to void(...)*),void(...)**%b0,align 8
%b1=getelementptr inbounds i8,i8*%bS,i64 24
%b2=bitcast i8*%b1 to i32*
store i32 -2147483647,i32*%b2,align 4
%b3=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b4=call fastcc i8*%bC(i8*inreg%b3,i8*inreg%bS)
%b5=getelementptr inbounds i8,i8*%b4,i64 16
%b6=bitcast i8*%b5 to i8*(i8*,i8*)**
%b7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b6,align 8
%b8=bitcast i8*%b4 to i8**
%b9=load i8*,i8**%b8,align 8
%ca=bitcast i8**%f to i8***
%cb=load i8**,i8***%ca,align 8
%cc=load i8*,i8**%cb,align 8
%cd=call fastcc i8*%b7(i8*inreg%b9,i8*inreg%cc)
store i8*%cd,i8**%e,align 8
%ce=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cf=getelementptr inbounds i8,i8*%ce,i64 8
%cg=bitcast i8*%cf to i8**
%ch=load i8*,i8**%cg,align 8
%ci=load i8*,i8**%h,align 8
%cj=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%ch,i8*inreg%ci)
%ck=getelementptr inbounds i8,i8*%cj,i64 16
%cl=bitcast i8*%ck to i8*(i8*,i8*)**
%cm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cl,align 8
%cn=bitcast i8*%cj to i8**
%co=load i8*,i8**%cn,align 8
%cp=load i8*,i8**%i,align 8
%cq=call fastcc i8*%cm(i8*inreg%co,i8*inreg%cp)
%cr=getelementptr inbounds i8,i8*%cq,i64 16
%cs=bitcast i8*%cr to i8*(i8*,i8*)**
%ct=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cs,align 8
%cu=bitcast i8*%cq to i8**
%cv=load i8*,i8**%cu,align 8
%cw=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cx=getelementptr inbounds i8,i8*%cw,i64 16
%cy=bitcast i8*%cx to i8**
%cz=load i8*,i8**%cy,align 8
%cA=call fastcc i8*%ct(i8*inreg%cv,i8*inreg%cz)
store i8*%cA,i8**%f,align 8
%cB=call fastcc i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg%cA)
%cC=icmp eq i8*%cB,null
br i1%cC,label%cG,label%cD
cD:
%cE=bitcast i8*%cB to i32*
%cF=load i32,i32*%cE,align 4
switch i32%cF,label%cG[
i32 3,label%dW
i32 5,label%dG
i32 1,label%cH
i32 8,label%ec
]
cG:
store i8*null,i8**%f,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%j,align 8
br label%fz
cH:
%cI=getelementptr inbounds i8,i8*%cB,i64 4
%cJ=bitcast i8*%cI to i32*
%cK=load i32,i32*%cJ,align 4
%cL=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg 1,i32 inreg 8)
%cM=getelementptr inbounds i8,i8*%cL,i64 16
%cN=bitcast i8*%cM to i8*(i8*,i8*)**
%cO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cN,align 8
%cP=bitcast i8*%cL to i8**
%cQ=load i8*,i8**%cP,align 8
store i8*%cQ,i8**%k,align 8
%cR=bitcast i8**%i to i8****
%cS=load i8***,i8****%cR,align 8
%cT=load i8**,i8***%cS,align 8
%cU=load i8*,i8**%cT,align 8
store i8*%cU,i8**%g,align 8
%cV=call i8*@sml_alloc(i32 inreg 20)#0
%cW=getelementptr inbounds i8,i8*%cV,i64 -4
%cX=bitcast i8*%cW to i32*
store i32 1342177296,i32*%cX,align 4
%cY=getelementptr inbounds i8,i8*%cV,i64 12
%cZ=bitcast i8*%cY to i32*
store i32 0,i32*%cZ,align 1
%c0=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%c1=bitcast i8*%cV to i8**
store i8*%c0,i8**%c1,align 8
%c2=getelementptr inbounds i8,i8*%cV,i64 8
%c3=bitcast i8*%c2 to i32*
store i32%cK,i32*%c3,align 4
%c4=getelementptr inbounds i8,i8*%cV,i64 16
%c5=bitcast i8*%c4 to i32*
store i32 1,i32*%c5,align 4
%c6=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%c7=call fastcc i8*%cO(i8*inreg%c6,i8*inreg%cV)
%c8=icmp eq i8*%c7,null
br i1%c8,label%dk,label%c9
c9:
%da=bitcast i8*%c7 to i8**
%db=load i8*,i8**%da,align 8
%dc=getelementptr inbounds i8,i8*%db,i64 16
%dd=bitcast i8*%dc to i8**
%de=load i8*,i8**%dd,align 8
%df=icmp eq i8*%de,null
br i1%df,label%dk,label%dg
dg:
%dh=bitcast i8*%de to i32*
%di=load i32,i32*%dh,align 4
%dj=icmp eq i32%di,2
br i1%dj,label%ec,label%dk
dk:
store i8*null,i8**%f,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%j,align 8
%dl=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%dl,i8**%e,align 8
%dm=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bA,i64 0,i32 2)to i8*))
store i8*%dm,i8**%f,align 8
%dn=call i8*@sml_alloc(i32 inreg 28)#0
%do=getelementptr inbounds i8,i8*%dn,i64 -4
%dp=bitcast i8*%do to i32*
store i32 1342177304,i32*%dp,align 4
store i8*%dn,i8**%g,align 8
%dq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dr=bitcast i8*%dn to i8**
store i8*%dq,i8**%dr,align 8
%ds=getelementptr inbounds i8,i8*%dn,i64 8
%dt=bitcast i8*%ds to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%dt,align 8
%du=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dv=getelementptr inbounds i8,i8*%dn,i64 16
%dw=bitcast i8*%dv to i8**
store i8*%du,i8**%dw,align 8
%dx=getelementptr inbounds i8,i8*%dn,i64 24
%dy=bitcast i8*%dx to i32*
store i32 7,i32*%dy,align 4
%dz=call i8*@sml_alloc(i32 inreg 60)#0
%dA=getelementptr inbounds i8,i8*%dz,i64 -4
%dB=bitcast i8*%dA to i32*
store i32 1342177336,i32*%dB,align 4
%dC=getelementptr inbounds i8,i8*%dz,i64 56
%dD=bitcast i8*%dC to i32*
store i32 1,i32*%dD,align 4
%dE=load i8*,i8**%g,align 8
%dF=bitcast i8*%dz to i8**
store i8*%dE,i8**%dF,align 8
call void@sml_raise(i8*inreg%dz)#1
unreachable
dG:
%dH=getelementptr inbounds i8,i8*%cB,i64 8
%dI=bitcast i8*%dH to i8**
%dJ=load i8*,i8**%dI,align 8
%dK=getelementptr inbounds i8,i8*%dJ,i64 8
%dL=bitcast i8*%dK to i8**
%dM=load i8*,i8**%dL,align 8
%dN=getelementptr inbounds i8,i8*%dM,i64 16
%dO=bitcast i8*%dN to i8**
%dP=load i8*,i8**%dO,align 8
%dQ=icmp eq i8*%dP,null
br i1%dQ,label%dV,label%dR
dR:
%dS=bitcast i8*%dP to i32*
%dT=load i32,i32*%dS,align 4
%dU=icmp eq i32%dT,2
br i1%dU,label%ec,label%dV
dV:
store i8*null,i8**%f,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%j,align 8
br label%fz
dW:
%dX=getelementptr inbounds i8,i8*%cB,i64 8
%dY=bitcast i8*%dX to i8**
%dZ=load i8*,i8**%dY,align 8
%d0=getelementptr inbounds i8,i8*%dZ,i64 8
%d1=bitcast i8*%d0 to i8**
%d2=load i8*,i8**%d1,align 8
%d3=getelementptr inbounds i8,i8*%d2,i64 16
%d4=bitcast i8*%d3 to i8**
%d5=load i8*,i8**%d4,align 8
%d6=icmp eq i8*%d5,null
br i1%d6,label%eb,label%d7
d7:
%d8=bitcast i8*%d5 to i32*
%d9=load i32,i32*%d8,align 4
%ea=icmp eq i32%d9,2
br i1%ea,label%ec,label%eb
eb:
store i8*null,i8**%f,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%j,align 8
br label%fz
ec:
%ed=phi i8*[%cB,%cD],[%de,%dg],[%dP,%dR],[%d5,%d7]
%ee=getelementptr inbounds i8,i8*%ed,i64 8
%ef=bitcast i8*%ee to i8**
%eg=load i8*,i8**%ef,align 8
store i8*%eg,i8**%g,align 8
%eh=call fastcc i8*@_SMLFN11RecordLabel3Map13intersectWithE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%ei=getelementptr inbounds i8,i8*%eh,i64 16
%ej=bitcast i8*%ei to i8*(i8*,i8*)**
%ek=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ej,align 8
%el=bitcast i8*%eh to i8**
%em=load i8*,i8**%el,align 8
store i8*%em,i8**%k,align 8
%en=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%eo=call fastcc i8*@_SMLLN17PolyTyElimination5equalE_1041(i8*inreg%en)
%ep=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%eq=call fastcc i8*%ek(i8*inreg%ep,i8*inreg%eo)
%er=getelementptr inbounds i8,i8*%eq,i64 16
%es=bitcast i8*%er to i8*(i8*,i8*)**
%et=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%es,align 8
%eu=bitcast i8*%eq to i8**
%ev=load i8*,i8**%eu,align 8
store i8*%ev,i8**%k,align 8
%ew=call fastcc i8*@_SMLFN11RecordLabel3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ex=getelementptr inbounds i8,i8*%ew,i64 16
%ey=bitcast i8*%ex to i8*(i8*,i8*)**
%ez=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ey,align 8
%eA=bitcast i8*%ew to i8**
%eB=load i8*,i8**%eA,align 8
%eC=call fastcc i8*%ez(i8*inreg%eB,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bB,i64 0,i32 2)to i8*))
%eD=getelementptr inbounds i8,i8*%eC,i64 16
%eE=bitcast i8*%eD to i8*(i8*,i8*)**
%eF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eE,align 8
%eG=bitcast i8*%eC to i8**
%eH=load i8*,i8**%eG,align 8
%eI=load i8*,i8**%e,align 8
%eJ=call fastcc i8*%eF(i8*inreg%eH,i8*inreg%eI)
store i8*%eJ,i8**%h,align 8
%eK=call i8*@sml_alloc(i32 inreg 20)#0
%eL=getelementptr inbounds i8,i8*%eK,i64 -4
%eM=bitcast i8*%eL to i32*
store i32 1342177296,i32*%eM,align 4
%eN=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%eO=bitcast i8*%eK to i8**
store i8*%eN,i8**%eO,align 8
%eP=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%eQ=getelementptr inbounds i8,i8*%eK,i64 8
%eR=bitcast i8*%eQ to i8**
store i8*%eP,i8**%eR,align 8
%eS=getelementptr inbounds i8,i8*%eK,i64 16
%eT=bitcast i8*%eS to i32*
store i32 3,i32*%eT,align 4
%eU=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%eV=call fastcc i8*%et(i8*inreg%eU,i8*inreg%eK)
%eW=bitcast i8**%i to i8****
%eX=load i8***,i8****%eW,align 8
store i8*null,i8**%i,align 8
%eY=load i8**,i8***%eX,align 8
%eZ=load i8*,i8**%eY,align 8
store i8*%eZ,i8**%g,align 8
%e0=call i8*@sml_alloc(i32 inreg 12)#0
%e1=getelementptr inbounds i8,i8*%e0,i64 -4
%e2=bitcast i8*%e1 to i32*
store i32 1342177288,i32*%e2,align 4
%e3=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%e4=bitcast i8*%e0 to i8**
store i8*%e3,i8**%e4,align 8
%e5=getelementptr inbounds i8,i8*%e0,i64 8
%e6=bitcast i8*%e5 to i32*
store i32 1,i32*%e6,align 4
%e7=call fastcc i8*@_SMLFN12TypedCalcCon11TPPATRECORDE(i8*inreg%e0)
%e8=getelementptr inbounds i8,i8*%e7,i64 16
%e9=bitcast i8*%e8 to i8*(i8*,i8*)**
%fa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%e9,align 8
%fb=bitcast i8*%e7 to i8**
%fc=load i8*,i8**%fb,align 8
store i8*%fc,i8**%g,align 8
%fd=call i8*@sml_alloc(i32 inreg 12)#0
%fe=getelementptr inbounds i8,i8*%fd,i64 -4
%ff=bitcast i8*%fe to i32*
store i32 1342177288,i32*%ff,align 4
store i8*%fd,i8**%h,align 8
%fg=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fh=bitcast i8*%fd to i8**
store i8*%fg,i8**%fh,align 8
%fi=getelementptr inbounds i8,i8*%fd,i64 8
%fj=bitcast i8*%fi to i32*
store i32 1,i32*%fj,align 4
%fk=call i8*@sml_alloc(i32 inreg 28)#0
%fl=getelementptr inbounds i8,i8*%fk,i64 -4
%fm=bitcast i8*%fl to i32*
store i32 1342177304,i32*%fm,align 4
%fn=load i8*,i8**%e,align 8
%fo=bitcast i8*%fk to i8**
store i8*%fn,i8**%fo,align 8
%fp=load i8*,i8**%j,align 8
%fq=getelementptr inbounds i8,i8*%fk,i64 8
%fr=bitcast i8*%fq to i8**
store i8*%fp,i8**%fr,align 8
%fs=load i8*,i8**%h,align 8
%ft=getelementptr inbounds i8,i8*%fk,i64 16
%fu=bitcast i8*%ft to i8**
store i8*%fs,i8**%fu,align 8
%fv=getelementptr inbounds i8,i8*%fk,i64 24
%fw=bitcast i8*%fv to i32*
store i32 7,i32*%fw,align 4
%fx=load i8*,i8**%g,align 8
%fy=call fastcc i8*%fa(i8*inreg%fx,i8*inreg%fk)
ret i8*%fy
fz:
%fA=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%fA,i8**%e,align 8
%fB=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@by,i64 0,i32 2)to i8*))
store i8*%fB,i8**%f,align 8
%fC=call i8*@sml_alloc(i32 inreg 28)#0
%fD=getelementptr inbounds i8,i8*%fC,i64 -4
%fE=bitcast i8*%fD to i32*
store i32 1342177304,i32*%fE,align 4
store i8*%fC,i8**%g,align 8
%fF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fG=bitcast i8*%fC to i8**
store i8*%fF,i8**%fG,align 8
%fH=getelementptr inbounds i8,i8*%fC,i64 8
%fI=bitcast i8*%fH to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%fI,align 8
%fJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fK=getelementptr inbounds i8,i8*%fC,i64 16
%fL=bitcast i8*%fK to i8**
store i8*%fJ,i8**%fL,align 8
%fM=getelementptr inbounds i8,i8*%fC,i64 24
%fN=bitcast i8*%fM to i32*
store i32 7,i32*%fN,align 4
%fO=call i8*@sml_alloc(i32 inreg 60)#0
%fP=getelementptr inbounds i8,i8*%fO,i64 -4
%fQ=bitcast i8*%fP to i32*
store i32 1342177336,i32*%fQ,align 4
%fR=getelementptr inbounds i8,i8*%fO,i64 56
%fS=bitcast i8*%fR to i32*
store i32 1,i32*%fS,align 4
%fT=load i8*,i8**%g,align 8
%fU=bitcast i8*%fO to i8**
store i8*%fT,i8**%fU,align 8
call void@sml_raise(i8*inreg%fO)#1
unreachable
fV:
%fW=getelementptr inbounds i8,i8*%x,i64 8
%fX=bitcast i8*%fW to i8**
%fY=load i8*,i8**%fX,align 8
store i8*%fY,i8**%f,align 8
%fZ=getelementptr inbounds i8,i8*%fY,i64 8
%f0=bitcast i8*%fZ to i8**
%f1=load i8*,i8**%f0,align 8
store i8*%f1,i8**%g,align 8
%f2=getelementptr inbounds i8,i8*%fY,i64 16
%f3=bitcast i8*%f2 to i8**
%f4=load i8*,i8**%f3,align 8
%f5=load i8*,i8**%k,align 8
%f6=call fastcc i8*@_SMLLN17PolyTyElimination10analyzePatE_1151(i8*inreg%f5,i8*inreg%u,i8*inreg%w,i8*inreg%f4)
store i8*%f6,i8**%e,align 8
%f7=bitcast i8**%f to i8***
%f8=load i8**,i8***%f7,align 8
store i8*null,i8**%f,align 8
%f9=load i8*,i8**%f8,align 8
%ga=load i8*,i8**%i,align 8
%gb=load i8*,i8**%h,align 8
%gc=load i8*,i8**%k,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%k,align 8
%gd=call fastcc i8*@_SMLLN17PolyTyElimination10analyzePatE_1151(i8*inreg%gc,i8*inreg%gb,i8*inreg%ga,i8*inreg%f9)
store i8*%gd,i8**%f,align 8
%ge=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gf=call fastcc i8*@_SMLLN17PolyTyElimination5equalE_1041(i8*inreg%ge)
%gg=getelementptr inbounds i8,i8*%gf,i64 16
%gh=bitcast i8*%gg to i8*(i8*,i8*)**
%gi=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gh,align 8
%gj=bitcast i8*%gf to i8**
%gk=load i8*,i8**%gj,align 8
store i8*%gk,i8**%j,align 8
%gl=load i8*,i8**%f,align 8
%gm=getelementptr inbounds i8,i8*%gl,i64 8
%gn=bitcast i8*%gm to i8**
%go=load i8*,i8**%gn,align 8
store i8*%go,i8**%h,align 8
%gp=load i8*,i8**%e,align 8
%gq=getelementptr inbounds i8,i8*%gp,i64 8
%gr=bitcast i8*%gq to i8**
%gs=load i8*,i8**%gr,align 8
store i8*%gs,i8**%i,align 8
%gt=call i8*@sml_alloc(i32 inreg 20)#0
%gu=getelementptr inbounds i8,i8*%gt,i64 -4
%gv=bitcast i8*%gu to i32*
store i32 1342177296,i32*%gv,align 4
%gw=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gx=bitcast i8*%gt to i8**
store i8*%gw,i8**%gx,align 8
%gy=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%gz=getelementptr inbounds i8,i8*%gt,i64 8
%gA=bitcast i8*%gz to i8**
store i8*%gy,i8**%gA,align 8
%gB=getelementptr inbounds i8,i8*%gt,i64 16
%gC=bitcast i8*%gB to i32*
store i32 3,i32*%gC,align 4
%gD=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%gE=call fastcc i8*%gi(i8*inreg%gD,i8*inreg%gt)
%gF=call i8*@sml_alloc(i32 inreg 28)#0
%gG=getelementptr inbounds i8,i8*%gF,i64 -4
%gH=bitcast i8*%gG to i32*
store i32 1342177304,i32*%gH,align 4
%gI=load i8*,i8**%f,align 8
%gJ=bitcast i8*%gF to i8**
store i8*%gI,i8**%gJ,align 8
%gK=load i8*,i8**%g,align 8
%gL=getelementptr inbounds i8,i8*%gF,i64 8
%gM=bitcast i8*%gL to i8**
store i8*%gK,i8**%gM,align 8
%gN=load i8*,i8**%e,align 8
%gO=getelementptr inbounds i8,i8*%gF,i64 16
%gP=bitcast i8*%gO to i8**
store i8*%gN,i8**%gP,align 8
%gQ=getelementptr inbounds i8,i8*%gF,i64 24
%gR=bitcast i8*%gQ to i32*
store i32 7,i32*%gR,align 4
%gS=call fastcc i8*@_SMLFN12TypedCalcCon12TPPATLAYEREDE(i8*inreg%gF)
ret i8*%gS
gT:
%gU=getelementptr inbounds i8,i8*%x,i64 8
%gV=bitcast i8*%gU to i8**
%gW=load i8*,i8**%gV,align 8
store i8*%gW,i8**%f,align 8
%gX=getelementptr inbounds i8,i8*%gW,i64 16
%gY=bitcast i8*%gX to i8**
%gZ=load i8*,i8**%gY,align 8
store i8*%gZ,i8**%g,align 8
%g0=call fastcc i8*@_SMLLN17PolyTyElimination13analyzeExnConE_1130(i8*inreg%w)
%g1=getelementptr inbounds i8,i8*%g0,i64 16
%g2=bitcast i8*%g1 to i8*(i8*,i8*)**
%g3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%g2,align 8
%g4=bitcast i8*%g0 to i8**
%g5=load i8*,i8**%g4,align 8
%g6=load i8*,i8**%f,align 8
%g7=getelementptr inbounds i8,i8*%g6,i64 8
%g8=bitcast i8*%g7 to i8**
%g9=load i8*,i8**%g8,align 8
%ha=call fastcc i8*%g3(i8*inreg%g5,i8*inreg%g9)
%hb=bitcast i8*%ha to i8**
%hc=load i8*,i8**%hb,align 8
store i8*%hc,i8**%e,align 8
%hd=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%he=getelementptr inbounds i8,i8*%hd,i64 16
%hf=bitcast i8*%he to i8*(i8*,i8*)**
%hg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hf,align 8
%hh=bitcast i8*%hd to i8**
%hi=load i8*,i8**%hh,align 8
store i8*%hi,i8**%j,align 8
%hj=call i8*@sml_alloc(i32 inreg 28)#0
%hk=getelementptr inbounds i8,i8*%hj,i64 -4
%hl=bitcast i8*%hk to i32*
store i32 1342177304,i32*%hl,align 4
store i8*%hj,i8**%l,align 8
%hm=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%hn=bitcast i8*%hj to i8**
store i8*%hm,i8**%hn,align 8
%ho=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hp=getelementptr inbounds i8,i8*%hj,i64 8
%hq=bitcast i8*%hp to i8**
store i8*%ho,i8**%hq,align 8
%hr=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%hs=getelementptr inbounds i8,i8*%hj,i64 16
%ht=bitcast i8*%hs to i8**
store i8*%hr,i8**%ht,align 8
%hu=getelementptr inbounds i8,i8*%hj,i64 24
%hv=bitcast i8*%hu to i32*
store i32 7,i32*%hv,align 4
%hw=call i8*@sml_alloc(i32 inreg 28)#0
%hx=getelementptr inbounds i8,i8*%hw,i64 -4
%hy=bitcast i8*%hx to i32*
store i32 1342177304,i32*%hy,align 4
%hz=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%hA=bitcast i8*%hw to i8**
store i8*%hz,i8**%hA,align 8
%hB=getelementptr inbounds i8,i8*%hw,i64 8
%hC=bitcast i8*%hB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzePatE_1153 to void(...)*),void(...)**%hC,align 8
%hD=getelementptr inbounds i8,i8*%hw,i64 16
%hE=bitcast i8*%hD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzePatE_1153 to void(...)*),void(...)**%hE,align 8
%hF=getelementptr inbounds i8,i8*%hw,i64 24
%hG=bitcast i8*%hF to i32*
store i32 -2147483647,i32*%hG,align 4
%hH=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%hI=call fastcc i8*%hg(i8*inreg%hH,i8*inreg%hw)
%hJ=getelementptr inbounds i8,i8*%hI,i64 16
%hK=bitcast i8*%hJ to i8*(i8*,i8*)**
%hL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hK,align 8
%hM=bitcast i8*%hI to i8**
%hN=load i8*,i8**%hM,align 8
%hO=bitcast i8**%f to i8***
%hP=load i8**,i8***%hO,align 8
store i8*null,i8**%f,align 8
%hQ=load i8*,i8**%hP,align 8
%hR=call fastcc i8*%hL(i8*inreg%hN,i8*inreg%hQ)
store i8*%hR,i8**%f,align 8
%hS=call i8*@sml_alloc(i32 inreg 28)#0
%hT=getelementptr inbounds i8,i8*%hS,i64 -4
%hU=bitcast i8*%hT to i32*
store i32 1342177304,i32*%hU,align 4
%hV=load i8*,i8**%f,align 8
%hW=bitcast i8*%hS to i8**
store i8*%hV,i8**%hW,align 8
%hX=load i8*,i8**%e,align 8
%hY=getelementptr inbounds i8,i8*%hS,i64 8
%hZ=bitcast i8*%hY to i8**
store i8*%hX,i8**%hZ,align 8
%h0=load i8*,i8**%g,align 8
%h1=getelementptr inbounds i8,i8*%hS,i64 16
%h2=bitcast i8*%h1 to i8**
store i8*%h0,i8**%h2,align 8
%h3=getelementptr inbounds i8,i8*%hS,i64 24
%h4=bitcast i8*%h3 to i32*
store i32 7,i32*%h4,align 4
%h5=call fastcc i8*@_SMLFN12TypedCalcCon17TPPATEXNCONSTRUCTE(i8*inreg%hS)
ret i8*%h5
h6:
%h7=load i8*,i8**@_SMLZN12TypedCalcCon10TPPATERRORE,align 8
ret i8*%h7
h8:
%h9=getelementptr inbounds i8,i8*%x,i64 8
%ia=bitcast i8*%h9 to i8**
%ib=load i8*,i8**%ia,align 8
store i8*%ib,i8**%g,align 8
%ic=getelementptr inbounds i8,i8*%ib,i64 24
%id=bitcast i8*%ic to i8**
%ie=load i8*,i8**%id,align 8
store i8*%ie,i8**%j,align 8
%if=getelementptr inbounds i8,i8*%ib,i64 8
%ig=bitcast i8*%if to i8**
%ih=load i8*,i8**%ig,align 8
%ii=bitcast i8*%ih to i32*
%ij=load i32,i32*%ii,align 4
%ik=getelementptr inbounds i8,i8*%ih,i64 8
%il=bitcast i8*%ik to i8**
%im=load i8*,i8**%il,align 8
store i8*%im,i8**%f,align 8
%in=load i8*,i8**%k,align 8
%io=getelementptr inbounds i8,i8*%in,i64 8
%ip=bitcast i8*%io to i8**
%iq=load i8*,i8**%ip,align 8
%ir=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%iq,i8*inreg%u)
%is=getelementptr inbounds i8,i8*%ir,i64 16
%it=bitcast i8*%is to i8*(i8*,i8*)**
%iu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%it,align 8
%iv=bitcast i8*%ir to i8**
%iw=load i8*,i8**%iv,align 8
%ix=load i8*,i8**%i,align 8
%iy=call fastcc i8*%iu(i8*inreg%iw,i8*inreg%ix)
%iz=getelementptr inbounds i8,i8*%iy,i64 16
%iA=bitcast i8*%iz to i8*(i8*,i8*)**
%iB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%iA,align 8
%iC=bitcast i8*%iy to i8**
%iD=load i8*,i8**%iC,align 8
%iE=load i8*,i8**%g,align 8
%iF=getelementptr inbounds i8,i8*%iE,i64 8
%iG=bitcast i8*%iF to i8**
%iH=load i8*,i8**%iG,align 8
%iI=getelementptr inbounds i8,i8*%iH,i64 16
%iJ=bitcast i8*%iI to i8**
%iK=load i8*,i8**%iJ,align 8
%iL=call fastcc i8*%iB(i8*inreg%iD,i8*inreg%iK)
store i8*%iL,i8**%l,align 8
%iM=call i8*@sml_alloc(i32 inreg 28)#0
%iN=getelementptr inbounds i8,i8*%iM,i64 -4
%iO=bitcast i8*%iN to i32*
store i32 1342177304,i32*%iO,align 4
store i8*%iM,i8**%e,align 8
%iP=getelementptr inbounds i8,i8*%iM,i64 4
%iQ=bitcast i8*%iP to i32*
store i32 0,i32*%iQ,align 1
%iR=bitcast i8*%iM to i32*
store i32%ij,i32*%iR,align 4
%iS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%iT=getelementptr inbounds i8,i8*%iM,i64 8
%iU=bitcast i8*%iT to i8**
store i8*%iS,i8**%iU,align 8
%iV=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%iW=getelementptr inbounds i8,i8*%iM,i64 16
%iX=bitcast i8*%iW to i8**
store i8*%iV,i8**%iX,align 8
%iY=getelementptr inbounds i8,i8*%iM,i64 24
%iZ=bitcast i8*%iY to i32*
store i32 6,i32*%iZ,align 4
%i0=bitcast i8**%k to i8***
%i1=load i8**,i8***%i0,align 8
%i2=load i8*,i8**%i1,align 8
%i3=load i8*,i8**%h,align 8
%i4=call fastcc i8*@_SMLLN17PolyTyElimination6exportE_1116(i8*inreg%i2,i8*inreg%i3)
%i5=getelementptr inbounds i8,i8*%i4,i64 16
%i6=bitcast i8*%i5 to i8*(i8*,i8*)**
%i7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i6,align 8
%i8=bitcast i8*%i4 to i8**
%i9=load i8*,i8**%i8,align 8
%ja=load i8*,i8**%e,align 8
%jb=getelementptr inbounds i8,i8*%ja,i64 16
%jc=bitcast i8*%jb to i8**
%jd=load i8*,i8**%jc,align 8
%je=call fastcc i8*%i7(i8*inreg%i9,i8*inreg%jd)
%jf=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jg=getelementptr inbounds i8,i8*%jf,i64 16
%jh=bitcast i8*%jg to i8*(i8*,i8*)**
%ji=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jh,align 8
%jj=bitcast i8*%jf to i8**
%jk=load i8*,i8**%jj,align 8
store i8*%jk,i8**%l,align 8
%jl=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jm=getelementptr inbounds i8,i8*%jl,i64 16
%jn=bitcast i8*%jm to i8*(i8*,i8*)**
%jo=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jn,align 8
%jp=bitcast i8*%jl to i8**
%jq=load i8*,i8**%jp,align 8
store i8*%jq,i8**%f,align 8
%jr=load i8*,i8**%k,align 8
%js=getelementptr inbounds i8,i8*%jr,i64 8
%jt=bitcast i8*%js to i8**
%ju=load i8*,i8**%jt,align 8
%jv=load i8*,i8**%h,align 8
%jw=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%ju,i8*inreg%jv)
%jx=getelementptr inbounds i8,i8*%jw,i64 16
%jy=bitcast i8*%jx to i8*(i8*,i8*)**
%jz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jy,align 8
%jA=bitcast i8*%jw to i8**
%jB=load i8*,i8**%jA,align 8
%jC=load i8*,i8**%i,align 8
%jD=call fastcc i8*%jz(i8*inreg%jB,i8*inreg%jC)
%jE=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%jF=call fastcc i8*%jo(i8*inreg%jE,i8*inreg%jD)
%jG=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%jH=call fastcc i8*%ji(i8*inreg%jG,i8*inreg%jF)
%jI=getelementptr inbounds i8,i8*%jH,i64 16
%jJ=bitcast i8*%jI to i8*(i8*,i8*)**
%jK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jJ,align 8
%jL=bitcast i8*%jH to i8**
%jM=load i8*,i8**%jL,align 8
%jN=load i8*,i8**%g,align 8
%jO=getelementptr inbounds i8,i8*%jN,i64 16
%jP=bitcast i8*%jO to i8**
%jQ=load i8*,i8**%jP,align 8
%jR=call fastcc i8*%jK(i8*inreg%jM,i8*inreg%jQ)
store i8*%jR,i8**%f,align 8
%jS=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jT=getelementptr inbounds i8,i8*%jS,i64 16
%jU=bitcast i8*%jT to i8*(i8*,i8*)**
%jV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jU,align 8
%jW=bitcast i8*%jS to i8**
%jX=load i8*,i8**%jW,align 8
store i8*%jX,i8**%l,align 8
%jY=call i8*@sml_alloc(i32 inreg 28)#0
%jZ=getelementptr inbounds i8,i8*%jY,i64 -4
%j0=bitcast i8*%jZ to i32*
store i32 1342177304,i32*%j0,align 4
store i8*%jY,i8**%m,align 8
%j1=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%j2=bitcast i8*%jY to i8**
store i8*%j1,i8**%j2,align 8
%j3=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%j4=getelementptr inbounds i8,i8*%jY,i64 8
%j5=bitcast i8*%j4 to i8**
store i8*%j3,i8**%j5,align 8
%j6=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%j7=getelementptr inbounds i8,i8*%jY,i64 16
%j8=bitcast i8*%j7 to i8**
store i8*%j6,i8**%j8,align 8
%j9=getelementptr inbounds i8,i8*%jY,i64 24
%ka=bitcast i8*%j9 to i32*
store i32 7,i32*%ka,align 4
%kb=call i8*@sml_alloc(i32 inreg 28)#0
%kc=getelementptr inbounds i8,i8*%kb,i64 -4
%kd=bitcast i8*%kc to i32*
store i32 1342177304,i32*%kd,align 4
%ke=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%kf=bitcast i8*%kb to i8**
store i8*%ke,i8**%kf,align 8
%kg=getelementptr inbounds i8,i8*%kb,i64 8
%kh=bitcast i8*%kg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzePatE_1152 to void(...)*),void(...)**%kh,align 8
%ki=getelementptr inbounds i8,i8*%kb,i64 16
%kj=bitcast i8*%ki to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzePatE_1152 to void(...)*),void(...)**%kj,align 8
%kk=getelementptr inbounds i8,i8*%kb,i64 24
%kl=bitcast i8*%kk to i32*
store i32 -2147483647,i32*%kl,align 4
%km=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%kn=call fastcc i8*%jV(i8*inreg%km,i8*inreg%kb)
%ko=getelementptr inbounds i8,i8*%kn,i64 16
%kp=bitcast i8*%ko to i8*(i8*,i8*)**
%kq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kp,align 8
%kr=bitcast i8*%kn to i8**
%ks=load i8*,i8**%kr,align 8
%kt=bitcast i8**%g to i8***
%ku=load i8**,i8***%kt,align 8
store i8*null,i8**%g,align 8
%kv=load i8*,i8**%ku,align 8
%kw=call fastcc i8*%kq(i8*inreg%ks,i8*inreg%kv)
store i8*%kw,i8**%g,align 8
%kx=call i8*@sml_alloc(i32 inreg 36)#0
%ky=getelementptr inbounds i8,i8*%kx,i64 -4
%kz=bitcast i8*%ky to i32*
store i32 1342177312,i32*%kz,align 4
%kA=load i8*,i8**%g,align 8
%kB=bitcast i8*%kx to i8**
store i8*%kA,i8**%kB,align 8
%kC=load i8*,i8**%e,align 8
%kD=getelementptr inbounds i8,i8*%kx,i64 8
%kE=bitcast i8*%kD to i8**
store i8*%kC,i8**%kE,align 8
%kF=load i8*,i8**%f,align 8
%kG=getelementptr inbounds i8,i8*%kx,i64 16
%kH=bitcast i8*%kG to i8**
store i8*%kF,i8**%kH,align 8
%kI=load i8*,i8**%j,align 8
%kJ=getelementptr inbounds i8,i8*%kx,i64 24
%kK=bitcast i8*%kJ to i8**
store i8*%kI,i8**%kK,align 8
%kL=getelementptr inbounds i8,i8*%kx,i64 32
%kM=bitcast i8*%kL to i32*
store i32 15,i32*%kM,align 4
%kN=call fastcc i8*@_SMLFN12TypedCalcCon18TPPATDATACONSTRUCTE(i8*inreg%kx)
ret i8*%kN
kO:
%kP=getelementptr inbounds i8,i8*%x,i64 8
%kQ=bitcast i8*%kP to i8**
%kR=load i8*,i8**%kQ,align 8
store i8*%kR,i8**%e,align 8
%kS=bitcast i8*%kR to i8**
%kT=load i8*,i8**%kS,align 8
store i8*%kT,i8**%f,align 8
%kU=getelementptr inbounds i8,i8*%kR,i64 16
%kV=bitcast i8*%kU to i8**
%kW=load i8*,i8**%kV,align 8
store i8*%kW,i8**%g,align 8
%kX=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%kY=getelementptr inbounds i8,i8*%kX,i64 8
%kZ=bitcast i8*%kY to i8**
%k0=load i8*,i8**%kZ,align 8
store i8*null,i8**%h,align 8
%k1=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%k0,i8*inreg%u)
%k2=getelementptr inbounds i8,i8*%k1,i64 16
%k3=bitcast i8*%k2 to i8*(i8*,i8*)**
%k4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k3,align 8
%k5=bitcast i8*%k1 to i8**
%k6=load i8*,i8**%k5,align 8
%k7=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%k8=call fastcc i8*%k4(i8*inreg%k6,i8*inreg%k7)
%k9=getelementptr inbounds i8,i8*%k8,i64 16
%la=bitcast i8*%k9 to i8*(i8*,i8*)**
%lb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%la,align 8
%lc=bitcast i8*%k8 to i8**
%ld=load i8*,i8**%lc,align 8
%le=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%lf=getelementptr inbounds i8,i8*%le,i64 8
%lg=bitcast i8*%lf to i8**
%lh=load i8*,i8**%lg,align 8
%li=call fastcc i8*%lb(i8*inreg%ld,i8*inreg%lh)
store i8*%li,i8**%e,align 8
%lj=call i8*@sml_alloc(i32 inreg 28)#0
%lk=getelementptr inbounds i8,i8*%lj,i64 -4
%ll=bitcast i8*%lk to i32*
store i32 1342177304,i32*%ll,align 4
%lm=load i8*,i8**%f,align 8
%ln=bitcast i8*%lj to i8**
store i8*%lm,i8**%ln,align 8
%lo=load i8*,i8**%e,align 8
%lp=getelementptr inbounds i8,i8*%lj,i64 8
%lq=bitcast i8*%lp to i8**
store i8*%lo,i8**%lq,align 8
%lr=load i8*,i8**%g,align 8
%ls=getelementptr inbounds i8,i8*%lj,i64 16
%lt=bitcast i8*%ls to i8**
store i8*%lr,i8**%lt,align 8
%lu=getelementptr inbounds i8,i8*%lj,i64 24
%lv=bitcast i8*%lu to i32*
store i32 7,i32*%lv,align 4
%lw=call fastcc i8*@_SMLFN12TypedCalcCon13TPPATCONSTANTE(i8*inreg%lj)
ret i8*%lw
}
define internal fastcc i8*@_SMLL10argExpList_1174(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%p,i8*inreg%s,i8*inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1175(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLL7expList_1181(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%p,i8*inreg%s,i8*inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1182(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLL11analyzeRule_1184(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%f,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=getelementptr inbounds i8,i8*%o,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=getelementptr inbounds i8,i8*%m,i64 16
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%m,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%u,i8*inreg%x)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=bitcast i8**%f to i8***
%F=load i8**,i8***%E,align 8
%G=load i8*,i8**%F,align 8
%H=call fastcc i8*%B(i8*inreg%D,i8*inreg%G)
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8*(i8*,i8*)**
%K=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%J,align 8
%L=bitcast i8*%H to i8**
%M=load i8*,i8**%L,align 8
%N=load i8*,i8**%c,align 8
%O=getelementptr inbounds i8,i8*%N,i64 16
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
%R=call fastcc i8*%K(i8*inreg%M,i8*inreg%Q)
store i8*%R,i8**%d,align 8
%S=load i8*,i8**%f,align 8
%T=getelementptr inbounds i8,i8*%S,i64 24
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
%W=getelementptr inbounds i8,i8*%S,i64 8
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*null,i8**%f,align 8
%Z=bitcast i8*%S to i8**
%aa=load i8*,i8**%Z,align 8
%ab=bitcast i8**%c to i8***
%ac=load i8**,i8***%ab,align 8
store i8*null,i8**%c,align 8
%ad=load i8*,i8**%ac,align 8
%ae=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%V,i8*inreg%Y,i8*inreg%aa,i8*inreg%ad)
store i8*%ae,i8**%c,align 8
%af=call i8*@sml_alloc(i32 inreg 28)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177304,i32*%ah,align 4
%ai=load i8*,i8**%c,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=load i8*,i8**%e,align 8
%al=getelementptr inbounds i8,i8*%af,i64 8
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=load i8*,i8**%d,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 16
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%af,i64 24
%ar=bitcast i8*%aq to i32*
store i32 7,i32*%ar,align 4
ret i8*%af
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1189(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%e,label%g
e:
%f=bitcast i8*%a to i8**
br label%j
g:
call void@sml_check(i32 inreg%c)
%h=bitcast i8**%b to i8***
%i=load i8**,i8***%h,align 8
br label%j
j:
%k=phi i8**[%i,%g],[%f,%e]
store i8*null,i8**%b,align 8
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%l,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
ret i8*%o
}
define internal fastcc i8*@_SMLL9argVarOpt_1191(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
%j=load i8*,i8**%d,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%a,%m]
%n=phi i8*[%i,%h],[%b,%m]
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=getelementptr inbounds i8,i8*%n,i64 4
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=getelementptr inbounds i8,i8*%n,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=getelementptr inbounds i8,i8*%l,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=getelementptr inbounds i8,i8*%l,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%y,i8*inreg%B)
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=bitcast i8**%d to i8***
%J=load i8**,i8***%I,align 8
store i8*null,i8**%d,align 8
%K=load i8*,i8**%J,align 8
%L=call fastcc i8*%F(i8*inreg%H,i8*inreg%K)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
%V=call fastcc i8*%O(i8*inreg%Q,i8*inreg%U)
store i8*%V,i8**%c,align 8
%W=call i8*@sml_alloc(i32 inreg 28)#0
%X=bitcast i8*%W to i32*
%Y=getelementptr inbounds i8,i8*%W,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177304,i32*%Z,align 4
store i32%p,i32*%X,align 4
%aa=getelementptr inbounds i8,i8*%W,i64 4
%ab=bitcast i8*%aa to i32*
store i32%s,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
%ad=getelementptr inbounds i8,i8*%W,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=load i8*,i8**%c,align 8
%ag=getelementptr inbounds i8,i8*%W,i64 16
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%W,i64 24
%aj=bitcast i8*%ai to i32*
store i32 6,i32*%aj,align 4
ret i8*%W
}
define internal fastcc i8*@_SMLL11analyzeRule_1192(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
u:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
store i8*%a,i8**%j,align 8
store i8*%b,i8**%c,align 8
%n=load atomic i32,i32*@sml_check_flag unordered,align 4
%o=icmp eq i32%n,0
br i1%o,label%s,label%p
p:
call void@sml_check(i32 inreg%n)
%q=load i8*,i8**%c,align 8
%r=load i8*,i8**%j,align 8
br label%s
s:
%t=phi i8*[%r,%p],[%a,%u]
%v=phi i8*[%q,%p],[%b,%u]
store i8*null,i8**%c,align 8
store i8*%v,i8**%g,align 8
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=bitcast i8*%y to i32*
%A=load i32,i32*%z,align 4
%B=getelementptr inbounds i8,i8*%y,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%d,align 8
%E=getelementptr inbounds i8,i8*%t,i64 32
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
%H=getelementptr inbounds i8,i8*%t,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
%K=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%G,i8*inreg%J)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
%Q=bitcast i8**%j to i8***
%R=load i8**,i8***%Q,align 8
%S=load i8*,i8**%R,align 8
%T=call fastcc i8*%N(i8*inreg%P,i8*inreg%S)
%U=getelementptr inbounds i8,i8*%T,i64 16
%V=bitcast i8*%U to i8*(i8*,i8*)**
%W=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%V,align 8
%X=bitcast i8*%T to i8**
%Y=load i8*,i8**%X,align 8
%Z=load i8*,i8**%g,align 8
%aa=getelementptr inbounds i8,i8*%Z,i64 16
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
%ad=getelementptr inbounds i8,i8*%ac,i64 16
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
%ag=call fastcc i8*%W(i8*inreg%Y,i8*inreg%af)
store i8*%ag,i8**%e,align 8
%ah=call i8*@sml_alloc(i32 inreg 28)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177304,i32*%aj,align 4
store i8*%ah,i8**%c,align 8
%ak=getelementptr inbounds i8,i8*%ah,i64 4
%al=bitcast i8*%ak to i32*
store i32 0,i32*%al,align 1
%am=bitcast i8*%ah to i32*
store i32%A,i32*%am,align 4
%an=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ao=getelementptr inbounds i8,i8*%ah,i64 8
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ar=getelementptr inbounds i8,i8*%ah,i64 16
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%ah,i64 24
%au=bitcast i8*%at to i32*
store i32 6,i32*%au,align 4
%av=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aw=getelementptr inbounds i8,i8*%av,i64 16
%ax=bitcast i8*%aw to i8*(i8*,i8*)**
%ay=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ax,align 8
%az=bitcast i8*%av to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%e,align 8
%aB=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aC=getelementptr inbounds i8,i8*%aB,i64 16
%aD=bitcast i8*%aC to i8*(i8*,i8*)**
%aE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aD,align 8
%aF=bitcast i8*%aB to i8**
%aG=load i8*,i8**%aF,align 8
store i8*%aG,i8**%d,align 8
%aH=load i8*,i8**%j,align 8
%aI=getelementptr inbounds i8,i8*%aH,i64 32
%aJ=bitcast i8*%aI to i8**
%aK=load i8*,i8**%aJ,align 8
%aL=getelementptr inbounds i8,i8*%aH,i64 8
%aM=bitcast i8*%aL to i8**
%aN=load i8*,i8**%aM,align 8
%aO=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%aK,i8*inreg%aN)
%aP=getelementptr inbounds i8,i8*%aO,i64 16
%aQ=bitcast i8*%aP to i8*(i8*,i8*)**
%aR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aQ,align 8
%aS=bitcast i8*%aO to i8**
%aT=load i8*,i8**%aS,align 8
%aU=load i8**,i8***%Q,align 8
%aV=load i8*,i8**%aU,align 8
%aW=call fastcc i8*%aR(i8*inreg%aT,i8*inreg%aV)
%aX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aY=call fastcc i8*%aE(i8*inreg%aX,i8*inreg%aW)
%aZ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a0=call fastcc i8*%ay(i8*inreg%aZ,i8*inreg%aY)
%a1=getelementptr inbounds i8,i8*%a0,i64 16
%a2=bitcast i8*%a1 to i8*(i8*,i8*)**
%a3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a2,align 8
%a4=bitcast i8*%a0 to i8**
%a5=load i8*,i8**%a4,align 8
%a6=load i8*,i8**%g,align 8
%a7=getelementptr inbounds i8,i8*%a6,i64 24
%a8=bitcast i8*%a7 to i8**
%a9=load i8*,i8**%a8,align 8
%ba=call fastcc i8*%a3(i8*inreg%a5,i8*inreg%a9)
store i8*%ba,i8**%d,align 8
%bb=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bc=getelementptr inbounds i8,i8*%bb,i64 16
%bd=bitcast i8*%bc to i8*(i8*,i8*)**
%be=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bd,align 8
%bf=bitcast i8*%bb to i8**
%bg=load i8*,i8**%bf,align 8
store i8*%bg,i8**%i,align 8
%bh=load i8**,i8***%Q,align 8
%bi=load i8*,i8**%bh,align 8
store i8*%bi,i8**%e,align 8
%bj=getelementptr inbounds i8*,i8**%bh,i64 1
%bk=load i8*,i8**%bj,align 8
store i8*%bk,i8**%f,align 8
%bl=getelementptr inbounds i8*,i8**%bh,i64 4
%bm=load i8*,i8**%bl,align 8
store i8*%bm,i8**%h,align 8
%bn=call i8*@sml_alloc(i32 inreg 28)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177304,i32*%bp,align 4
store i8*%bn,i8**%k,align 8
%bq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%br=bitcast i8*%bn to i8**
store i8*%bq,i8**%br,align 8
%bs=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bt=getelementptr inbounds i8,i8*%bn,i64 8
%bu=bitcast i8*%bt to i8**
store i8*%bs,i8**%bu,align 8
%bv=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bw=getelementptr inbounds i8,i8*%bn,i64 16
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%bn,i64 24
%bz=bitcast i8*%by to i32*
store i32 7,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 28)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177304,i32*%bC,align 4
%bD=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bE=bitcast i8*%bA to i8**
store i8*%bD,i8**%bE,align 8
%bF=getelementptr inbounds i8,i8*%bA,i64 8
%bG=bitcast i8*%bF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9argVarOpt_1191 to void(...)*),void(...)**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bA,i64 16
%bI=bitcast i8*%bH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9argVarOpt_1191 to void(...)*),void(...)**%bI,align 8
%bJ=getelementptr inbounds i8,i8*%bA,i64 24
%bK=bitcast i8*%bJ to i32*
store i32 -2147483647,i32*%bK,align 4
%bL=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bM=call fastcc i8*%be(i8*inreg%bL,i8*inreg%bA)
%bN=getelementptr inbounds i8,i8*%bM,i64 16
%bO=bitcast i8*%bN to i8*(i8*,i8*)**
%bP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bO,align 8
%bQ=bitcast i8*%bM to i8**
%bR=load i8*,i8**%bQ,align 8
%bS=bitcast i8**%g to i8***
%bT=load i8**,i8***%bS,align 8
%bU=load i8*,i8**%bT,align 8
%bV=call fastcc i8*%bP(i8*inreg%bR,i8*inreg%bU)
store i8*%bV,i8**%e,align 8
%bW=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bX=getelementptr inbounds i8,i8*%bW,i64 16
%bY=bitcast i8*%bX to i8*(i8*,i8*)**
%bZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bY,align 8
%b0=bitcast i8*%bW to i8**
%b1=load i8*,i8**%b0,align 8
%b2=load i8*,i8**@_SMLZN12TypedCalcCon8TPPATVARE,align 8
%b3=call fastcc i8*%bZ(i8*inreg%b1,i8*inreg%b2)
%b4=getelementptr inbounds i8,i8*%b3,i64 16
%b5=bitcast i8*%b4 to i8*(i8*,i8*)**
%b6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b5,align 8
%b7=bitcast i8*%b3 to i8**
%b8=load i8*,i8**%b7,align 8
%b9=load i8*,i8**%e,align 8
%ca=call fastcc i8*%b6(i8*inreg%b8,i8*inreg%b9)
store i8*%ca,i8**%f,align 8
%cb=load i8*,i8**%j,align 8
%cc=getelementptr inbounds i8,i8*%cb,i64 16
%cd=bitcast i8*%cc to i8**
%ce=load i8*,i8**%cd,align 8
store i8*%ce,i8**%h,align 8
%cf=call i8*@sml_alloc(i32 inreg 36)#0
%cg=getelementptr inbounds i8,i8*%cf,i64 -4
%ch=bitcast i8*%cg to i32*
store i32 1342177312,i32*%ch,align 4
%ci=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cj=bitcast i8*%cf to i8**
store i8*%ci,i8**%cj,align 8
%ck=load i8*,i8**%c,align 8
%cl=getelementptr inbounds i8,i8*%cf,i64 8
%cm=bitcast i8*%cl to i8**
store i8*%ck,i8**%cm,align 8
%cn=load i8*,i8**%d,align 8
%co=getelementptr inbounds i8,i8*%cf,i64 16
%cp=bitcast i8*%co to i8**
store i8*%cn,i8**%cp,align 8
%cq=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cr=getelementptr inbounds i8,i8*%cf,i64 24
%cs=bitcast i8*%cr to i8**
store i8*%cq,i8**%cs,align 8
%ct=getelementptr inbounds i8,i8*%cf,i64 32
%cu=bitcast i8*%ct to i32*
store i32 15,i32*%cu,align 4
%cv=call fastcc i8*@_SMLFN12TypedCalcCon18TPPATDATACONSTRUCTE(i8*inreg%cf)
%cw=getelementptr inbounds i8,i8*%cv,i64 8
%cx=bitcast i8*%cw to i8**
%cy=load i8*,i8**%cx,align 8
store i8*%cy,i8**%f,align 8
%cz=load i8*,i8**%j,align 8
%cA=getelementptr inbounds i8,i8*%cz,i64 40
%cB=bitcast i8*%cA to i8**
%cC=load i8*,i8**%cB,align 8
store i8*%cC,i8**%l,align 8
%cD=getelementptr inbounds i8,i8*%cz,i64 8
%cE=bitcast i8*%cD to i8**
%cF=load i8*,i8**%cE,align 8
store i8*%cF,i8**%m,align 8
%cG=bitcast i8*%cz to i8**
%cH=load i8*,i8**%cG,align 8
store i8*%cH,i8**%i,align 8
%cI=getelementptr inbounds i8,i8*%cv,i64 16
%cJ=bitcast i8*%cI to i8**
%cK=load i8*,i8**%cJ,align 8
%cL=call fastcc i8*@_SMLFN12TypedCalcCon6varEnvE(i8*inreg%cK)
store i8*%cL,i8**%h,align 8
%cM=bitcast i8**%j to i8****
%cN=load i8***,i8****%cM,align 8
%cO=load i8**,i8***%cN,align 8
%cP=load i8*,i8**%cO,align 8
store i8*%cP,i8**%k,align 8
%cQ=call i8*@sml_alloc(i32 inreg 20)#0
%cR=getelementptr inbounds i8,i8*%cQ,i64 -4
%cS=bitcast i8*%cR to i32*
store i32 1342177296,i32*%cS,align 4
%cT=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cU=bitcast i8*%cQ to i8**
store i8*%cT,i8**%cU,align 8
%cV=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cW=getelementptr inbounds i8,i8*%cQ,i64 8
%cX=bitcast i8*%cW to i8**
store i8*%cV,i8**%cX,align 8
%cY=getelementptr inbounds i8,i8*%cQ,i64 16
%cZ=bitcast i8*%cY to i32*
store i32 3,i32*%cZ,align 4
%c0=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%cQ)
store i8*%c0,i8**%h,align 8
%c1=load i8*,i8**%i,align 8
%c2=getelementptr inbounds i8,i8*%c1,i64 8
%c3=bitcast i8*%c2 to i8**
%c4=load i8*,i8**%c3,align 8
store i8*%c4,i8**%i,align 8
%c5=call i8*@sml_alloc(i32 inreg 20)#0
%c6=getelementptr inbounds i8,i8*%c5,i64 -4
%c7=bitcast i8*%c6 to i32*
store i32 1342177296,i32*%c7,align 4
%c8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%c9=bitcast i8*%c5 to i8**
store i8*%c8,i8**%c9,align 8
%da=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%db=getelementptr inbounds i8,i8*%c5,i64 8
%dc=bitcast i8*%db to i8**
store i8*%da,i8**%dc,align 8
%dd=getelementptr inbounds i8,i8*%c5,i64 16
%de=bitcast i8*%dd to i32*
store i32 3,i32*%de,align 4
%df=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dg=getelementptr inbounds i8,i8*%df,i64 8
%dh=bitcast i8*%dg to i8**
%di=load i8*,i8**%dh,align 8
%dj=load i8*,i8**%l,align 8
%dk=load i8*,i8**%m,align 8
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
%dl=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%dj,i8*inreg%dk,i8*inreg%c5,i8*inreg%di)
store i8*%dl,i8**%g,align 8
%dm=load i8*,i8**%j,align 8
%dn=getelementptr inbounds i8,i8*%dm,i64 24
%do=bitcast i8*%dn to i8**
%dp=load i8*,i8**%do,align 8
store i8*null,i8**%j,align 8
%dq=getelementptr inbounds i8,i8*%dm,i64 8
%dr=bitcast i8*%dq to i8**
%ds=load i8*,i8**%dr,align 8
%dt=call fastcc i8*@_SMLLN17PolyTyElimination6exportE_1116(i8*inreg%dp,i8*inreg%ds)
%du=getelementptr inbounds i8,i8*%dt,i64 16
%dv=bitcast i8*%du to i8*(i8*,i8*)**
%dw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dv,align 8
%dx=bitcast i8*%dt to i8**
%dy=load i8*,i8**%dx,align 8
%dz=load i8*,i8**%c,align 8
%dA=getelementptr inbounds i8,i8*%dz,i64 16
%dB=bitcast i8*%dA to i8**
%dC=load i8*,i8**%dB,align 8
%dD=call fastcc i8*%dw(i8*inreg%dy,i8*inreg%dC)
%dE=call i8*@sml_alloc(i32 inreg 36)#0
%dF=getelementptr inbounds i8,i8*%dE,i64 -4
%dG=bitcast i8*%dF to i32*
store i32 1342177312,i32*%dG,align 4
store i8*%dE,i8**%h,align 8
%dH=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dI=bitcast i8*%dE to i8**
store i8*%dH,i8**%dI,align 8
%dJ=load i8*,i8**%g,align 8
%dK=getelementptr inbounds i8,i8*%dE,i64 8
%dL=bitcast i8*%dK to i8**
store i8*%dJ,i8**%dL,align 8
%dM=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dN=getelementptr inbounds i8,i8*%dE,i64 16
%dO=bitcast i8*%dN to i8**
store i8*%dM,i8**%dO,align 8
%dP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dQ=getelementptr inbounds i8,i8*%dE,i64 24
%dR=bitcast i8*%dQ to i8**
store i8*%dP,i8**%dR,align 8
%dS=getelementptr inbounds i8,i8*%dE,i64 32
%dT=bitcast i8*%dS to i32*
store i32 15,i32*%dT,align 4
%dU=call i8*@sml_alloc(i32 inreg 20)#0
%dV=getelementptr inbounds i8,i8*%dU,i64 -4
%dW=bitcast i8*%dV to i32*
store i32 1342177296,i32*%dW,align 4
store i8*%dU,i8**%e,align 8
%dX=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dY=bitcast i8*%dU to i8**
store i8*%dX,i8**%dY,align 8
%dZ=getelementptr inbounds i8,i8*%dU,i64 8
%d0=bitcast i8*%dZ to i8**
store i8*null,i8**%d0,align 8
%d1=getelementptr inbounds i8,i8*%dU,i64 16
%d2=bitcast i8*%d1 to i32*
store i32 3,i32*%d2,align 4
%d3=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%d4=getelementptr inbounds i8,i8*%d3,i64 8
%d5=bitcast i8*%d4 to i8**
%d6=load i8*,i8**%d5,align 8
store i8*%d6,i8**%c,align 8
%d7=call i8*@sml_alloc(i32 inreg 20)#0
%d8=getelementptr inbounds i8,i8*%d7,i64 -4
%d9=bitcast i8*%d8 to i32*
store i32 1342177296,i32*%d9,align 4
store i8*%d7,i8**%d,align 8
%ea=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%eb=bitcast i8*%d7 to i8**
store i8*%ea,i8**%eb,align 8
%ec=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ed=getelementptr inbounds i8,i8*%d7,i64 8
%ee=bitcast i8*%ed to i8**
store i8*%ec,i8**%ee,align 8
%ef=getelementptr inbounds i8,i8*%d7,i64 16
%eg=bitcast i8*%ef to i32*
store i32 3,i32*%eg,align 4
%eh=call i8*@sml_alloc(i32 inreg 20)#0
%ei=getelementptr inbounds i8,i8*%eh,i64 -4
%ej=bitcast i8*%ei to i32*
store i32 1342177296,i32*%ej,align 4
store i8*%eh,i8**%c,align 8
%ek=getelementptr inbounds i8,i8*%eh,i64 4
%el=bitcast i8*%ek to i32*
store i32 0,i32*%el,align 1
%em=bitcast i8*%eh to i32*
store i32 6,i32*%em,align 4
%en=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eo=getelementptr inbounds i8,i8*%eh,i64 8
%ep=bitcast i8*%eo to i8**
store i8*%en,i8**%ep,align 8
%eq=getelementptr inbounds i8,i8*%eh,i64 16
%er=bitcast i8*%eq to i32*
store i32 2,i32*%er,align 4
%es=call i8*@sml_alloc(i32 inreg 20)#0
%et=getelementptr inbounds i8,i8*%es,i64 -4
%eu=bitcast i8*%et to i32*
store i32 1342177296,i32*%eu,align 4
%ev=load i8*,i8**%h,align 8
%ew=bitcast i8*%es to i8**
store i8*%ev,i8**%ew,align 8
%ex=load i8*,i8**%c,align 8
%ey=getelementptr inbounds i8,i8*%es,i64 8
%ez=bitcast i8*%ey to i8**
store i8*%ex,i8**%ez,align 8
%eA=getelementptr inbounds i8,i8*%es,i64 16
%eB=bitcast i8*%eA to i32*
store i32 3,i32*%eB,align 4
ret i8*%es
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1193(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1195(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLL9argVarOpt_1197(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
%j=load i8*,i8**%d,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%a,%m]
%n=phi i8*[%i,%h],[%b,%m]
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=getelementptr inbounds i8,i8*%n,i64 4
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=getelementptr inbounds i8,i8*%n,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=getelementptr inbounds i8,i8*%l,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=getelementptr inbounds i8,i8*%l,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%y,i8*inreg%B)
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=bitcast i8**%d to i8***
%J=load i8**,i8***%I,align 8
store i8*null,i8**%d,align 8
%K=load i8*,i8**%J,align 8
%L=call fastcc i8*%F(i8*inreg%H,i8*inreg%K)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
%V=call fastcc i8*%O(i8*inreg%Q,i8*inreg%U)
store i8*%V,i8**%c,align 8
%W=call i8*@sml_alloc(i32 inreg 28)#0
%X=bitcast i8*%W to i32*
%Y=getelementptr inbounds i8,i8*%W,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177304,i32*%Z,align 4
store i32%p,i32*%X,align 4
%aa=getelementptr inbounds i8,i8*%W,i64 4
%ab=bitcast i8*%aa to i32*
store i32%s,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
%ad=getelementptr inbounds i8,i8*%W,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=load i8*,i8**%c,align 8
%ag=getelementptr inbounds i8,i8*%W,i64 16
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%W,i64 24
%aj=bitcast i8*%ai to i32*
store i32 6,i32*%aj,align 4
ret i8*%W
}
define internal fastcc i8*@_SMLL11analyzeRule_1198(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%a,i8**%i,align 8
store i8*%b,i8**%c,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%n,label%q
n:
%o=bitcast i8*%a to i8**
%p=bitcast i8**%i to i8***
br label%u
q:
call void@sml_check(i32 inreg%l)
%r=load i8*,i8**%c,align 8
%s=bitcast i8**%i to i8***
%t=load i8**,i8***%s,align 8
br label%u
u:
%v=phi i8***[%p,%n],[%s,%q]
%w=phi i8**[%o,%n],[%t,%q]
%x=phi i8*[%b,%n],[%r,%q]
store i8*null,i8**%c,align 8
store i8*%x,i8**%f,align 8
%y=load i8*,i8**%w,align 8
%z=call fastcc i8*@_SMLLN17PolyTyElimination13analyzeExnConE_1130(i8*inreg%y)
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=load i8*,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%C(i8*inreg%E,i8*inreg%I)
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%c,align 8
%M=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%h,align 8
%S=load i8**,i8***%v,align 8
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%d,align 8
%U=getelementptr inbounds i8*,i8**%S,i64 1
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%e,align 8
%W=getelementptr inbounds i8*,i8**%S,i64 3
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%g,align 8
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
store i8*%Y,i8**%j,align 8
%ab=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ae=getelementptr inbounds i8,i8*%Y,i64 8
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 16
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%Y,i64 24
%ak=bitcast i8*%aj to i32*
store i32 7,i32*%ak,align 4
%al=call i8*@sml_alloc(i32 inreg 28)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177304,i32*%an,align 4
%ao=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%al,i64 8
%ar=bitcast i8*%aq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9argVarOpt_1197 to void(...)*),void(...)**%ar,align 8
%as=getelementptr inbounds i8,i8*%al,i64 16
%at=bitcast i8*%as to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9argVarOpt_1197 to void(...)*),void(...)**%at,align 8
%au=getelementptr inbounds i8,i8*%al,i64 24
%av=bitcast i8*%au to i32*
store i32 -2147483647,i32*%av,align 4
%aw=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ax=call fastcc i8*%P(i8*inreg%aw,i8*inreg%al)
%ay=getelementptr inbounds i8,i8*%ax,i64 16
%az=bitcast i8*%ay to i8*(i8*,i8*)**
%aA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%az,align 8
%aB=bitcast i8*%ax to i8**
%aC=load i8*,i8**%aB,align 8
%aD=bitcast i8**%f to i8***
%aE=load i8**,i8***%aD,align 8
%aF=load i8*,i8**%aE,align 8
%aG=call fastcc i8*%aA(i8*inreg%aC,i8*inreg%aF)
store i8*%aG,i8**%d,align 8
%aH=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aI=getelementptr inbounds i8,i8*%aH,i64 16
%aJ=bitcast i8*%aI to i8*(i8*,i8*)**
%aK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aJ,align 8
%aL=bitcast i8*%aH to i8**
%aM=load i8*,i8**%aL,align 8
%aN=load i8*,i8**@_SMLZN12TypedCalcCon8TPPATVARE,align 8
%aO=call fastcc i8*%aK(i8*inreg%aM,i8*inreg%aN)
%aP=getelementptr inbounds i8,i8*%aO,i64 16
%aQ=bitcast i8*%aP to i8*(i8*,i8*)**
%aR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aQ,align 8
%aS=bitcast i8*%aO to i8**
%aT=load i8*,i8**%aS,align 8
%aU=load i8*,i8**%d,align 8
%aV=call fastcc i8*%aR(i8*inreg%aT,i8*inreg%aU)
store i8*%aV,i8**%e,align 8
%aW=load i8*,i8**%i,align 8
%aX=getelementptr inbounds i8,i8*%aW,i64 16
%aY=bitcast i8*%aX to i8**
%aZ=load i8*,i8**%aY,align 8
store i8*%aZ,i8**%g,align 8
%a0=call i8*@sml_alloc(i32 inreg 28)#0
%a1=getelementptr inbounds i8,i8*%a0,i64 -4
%a2=bitcast i8*%a1 to i32*
store i32 1342177304,i32*%a2,align 4
%a3=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a4=bitcast i8*%a0 to i8**
store i8*%a3,i8**%a4,align 8
%a5=load i8*,i8**%c,align 8
%a6=getelementptr inbounds i8,i8*%a0,i64 8
%a7=bitcast i8*%a6 to i8**
store i8*%a5,i8**%a7,align 8
%a8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a9=getelementptr inbounds i8,i8*%a0,i64 16
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a0,i64 24
%bc=bitcast i8*%bb to i32*
store i32 7,i32*%bc,align 4
%bd=call fastcc i8*@_SMLFN12TypedCalcCon17TPPATEXNCONSTRUCTE(i8*inreg%a0)
%be=getelementptr inbounds i8,i8*%bd,i64 8
%bf=bitcast i8*%be to i8**
%bg=load i8*,i8**%bf,align 8
store i8*%bg,i8**%e,align 8
%bh=load i8*,i8**%i,align 8
%bi=getelementptr inbounds i8,i8*%bh,i64 32
%bj=bitcast i8*%bi to i8**
%bk=load i8*,i8**%bj,align 8
store i8*%bk,i8**%j,align 8
%bl=getelementptr inbounds i8,i8*%bh,i64 8
%bm=bitcast i8*%bl to i8**
%bn=load i8*,i8**%bm,align 8
store i8*%bn,i8**%k,align 8
%bo=bitcast i8*%bh to i8**
%bp=load i8*,i8**%bo,align 8
store i8*%bp,i8**%h,align 8
%bq=getelementptr inbounds i8,i8*%bd,i64 16
%br=bitcast i8*%bq to i8**
%bs=load i8*,i8**%br,align 8
%bt=call fastcc i8*@_SMLFN12TypedCalcCon6varEnvE(i8*inreg%bs)
store i8*%bt,i8**%g,align 8
%bu=bitcast i8**%i to i8****
%bv=load i8***,i8****%bu,align 8
%bw=load i8**,i8***%bv,align 8
%bx=load i8*,i8**%bw,align 8
store i8*%bx,i8**%i,align 8
%by=call i8*@sml_alloc(i32 inreg 20)#0
%bz=getelementptr inbounds i8,i8*%by,i64 -4
%bA=bitcast i8*%bz to i32*
store i32 1342177296,i32*%bA,align 4
%bB=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bC=bitcast i8*%by to i8**
store i8*%bB,i8**%bC,align 8
%bD=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bE=getelementptr inbounds i8,i8*%by,i64 8
%bF=bitcast i8*%bE to i8**
store i8*%bD,i8**%bF,align 8
%bG=getelementptr inbounds i8,i8*%by,i64 16
%bH=bitcast i8*%bG to i32*
store i32 3,i32*%bH,align 4
%bI=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%by)
store i8*%bI,i8**%g,align 8
%bJ=load i8*,i8**%h,align 8
%bK=getelementptr inbounds i8,i8*%bJ,i64 8
%bL=bitcast i8*%bK to i8**
%bM=load i8*,i8**%bL,align 8
store i8*%bM,i8**%h,align 8
%bN=call i8*@sml_alloc(i32 inreg 20)#0
%bO=getelementptr inbounds i8,i8*%bN,i64 -4
%bP=bitcast i8*%bO to i32*
store i32 1342177296,i32*%bP,align 4
%bQ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bR=bitcast i8*%bN to i8**
store i8*%bQ,i8**%bR,align 8
%bS=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bT=getelementptr inbounds i8,i8*%bN,i64 8
%bU=bitcast i8*%bT to i8**
store i8*%bS,i8**%bU,align 8
%bV=getelementptr inbounds i8,i8*%bN,i64 16
%bW=bitcast i8*%bV to i32*
store i32 3,i32*%bW,align 4
%bX=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bY=getelementptr inbounds i8,i8*%bX,i64 8
%bZ=bitcast i8*%bY to i8**
%b0=load i8*,i8**%bZ,align 8
%b1=load i8*,i8**%j,align 8
%b2=load i8*,i8**%k,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
%b3=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%b1,i8*inreg%b2,i8*inreg%bN,i8*inreg%b0)
store i8*%b3,i8**%f,align 8
%b4=call i8*@sml_alloc(i32 inreg 28)#0
%b5=getelementptr inbounds i8,i8*%b4,i64 -4
%b6=bitcast i8*%b5 to i32*
store i32 1342177304,i32*%b6,align 4
store i8*%b4,i8**%g,align 8
%b7=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b8=bitcast i8*%b4 to i8**
store i8*%b7,i8**%b8,align 8
%b9=load i8*,i8**%f,align 8
%ca=getelementptr inbounds i8,i8*%b4,i64 8
%cb=bitcast i8*%ca to i8**
store i8*%b9,i8**%cb,align 8
%cc=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cd=getelementptr inbounds i8,i8*%b4,i64 16
%ce=bitcast i8*%cd to i8**
store i8*%cc,i8**%ce,align 8
%cf=getelementptr inbounds i8,i8*%b4,i64 24
%cg=bitcast i8*%cf to i32*
store i32 7,i32*%cg,align 4
%ch=call i8*@sml_alloc(i32 inreg 20)#0
%ci=getelementptr inbounds i8,i8*%ch,i64 -4
%cj=bitcast i8*%ci to i32*
store i32 1342177296,i32*%cj,align 4
store i8*%ch,i8**%h,align 8
%ck=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cl=bitcast i8*%ch to i8**
store i8*%ck,i8**%cl,align 8
%cm=getelementptr inbounds i8,i8*%ch,i64 8
%cn=bitcast i8*%cm to i8**
store i8*null,i8**%cn,align 8
%co=getelementptr inbounds i8,i8*%ch,i64 16
%cp=bitcast i8*%co to i32*
store i32 3,i32*%cp,align 4
%cq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cr=getelementptr inbounds i8,i8*%cq,i64 8
%cs=bitcast i8*%cr to i8**
%ct=load i8*,i8**%cs,align 8
store i8*%ct,i8**%c,align 8
%cu=call i8*@sml_alloc(i32 inreg 20)#0
%cv=getelementptr inbounds i8,i8*%cu,i64 -4
%cw=bitcast i8*%cv to i32*
store i32 1342177296,i32*%cw,align 4
store i8*%cu,i8**%d,align 8
%cx=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cy=bitcast i8*%cu to i8**
store i8*%cx,i8**%cy,align 8
%cz=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cA=getelementptr inbounds i8,i8*%cu,i64 8
%cB=bitcast i8*%cA to i8**
store i8*%cz,i8**%cB,align 8
%cC=getelementptr inbounds i8,i8*%cu,i64 16
%cD=bitcast i8*%cC to i32*
store i32 3,i32*%cD,align 4
%cE=call i8*@sml_alloc(i32 inreg 20)#0
%cF=getelementptr inbounds i8,i8*%cE,i64 -4
%cG=bitcast i8*%cF to i32*
store i32 1342177296,i32*%cG,align 4
store i8*%cE,i8**%c,align 8
%cH=getelementptr inbounds i8,i8*%cE,i64 4
%cI=bitcast i8*%cH to i32*
store i32 0,i32*%cI,align 1
%cJ=bitcast i8*%cE to i32*
store i32 6,i32*%cJ,align 4
%cK=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cL=getelementptr inbounds i8,i8*%cE,i64 8
%cM=bitcast i8*%cL to i8**
store i8*%cK,i8**%cM,align 8
%cN=getelementptr inbounds i8,i8*%cE,i64 16
%cO=bitcast i8*%cN to i32*
store i32 2,i32*%cO,align 4
%cP=call i8*@sml_alloc(i32 inreg 20)#0
%cQ=getelementptr inbounds i8,i8*%cP,i64 -4
%cR=bitcast i8*%cQ to i32*
store i32 1342177296,i32*%cR,align 4
%cS=load i8*,i8**%g,align 8
%cT=bitcast i8*%cP to i8**
store i8*%cS,i8**%cT,align 8
%cU=load i8*,i8**%c,align 8
%cV=getelementptr inbounds i8,i8*%cP,i64 8
%cW=bitcast i8*%cV to i8**
store i8*%cU,i8**%cW,align 8
%cX=getelementptr inbounds i8,i8*%cP,i64 16
%cY=bitcast i8*%cX to i32*
store i32 3,i32*%cY,align 4
ret i8*%cP
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1199(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1201(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1204(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%p,i8*inreg%s,i8*inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1205(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%p,i8*inreg%s,i8*inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1221(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%p,i8*inreg%s,i8*inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLL10argVarList_1222(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
%j=load i8*,i8**%d,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%a,%m]
%n=phi i8*[%i,%h],[%b,%m]
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=getelementptr inbounds i8,i8*%n,i64 4
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=getelementptr inbounds i8,i8*%n,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=getelementptr inbounds i8,i8*%l,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=getelementptr inbounds i8,i8*%l,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%y,i8*inreg%B)
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=bitcast i8**%d to i8***
%J=load i8**,i8***%I,align 8
store i8*null,i8**%d,align 8
%K=load i8*,i8**%J,align 8
%L=call fastcc i8*%F(i8*inreg%H,i8*inreg%K)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
%V=call fastcc i8*%O(i8*inreg%Q,i8*inreg%U)
store i8*%V,i8**%c,align 8
%W=call i8*@sml_alloc(i32 inreg 28)#0
%X=bitcast i8*%W to i32*
%Y=getelementptr inbounds i8,i8*%W,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177304,i32*%Z,align 4
store i32%p,i32*%X,align 4
%aa=getelementptr inbounds i8,i8*%W,i64 4
%ab=bitcast i8*%aa to i32*
store i32%s,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
%ad=getelementptr inbounds i8,i8*%W,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=load i8*,i8**%c,align 8
%ag=getelementptr inbounds i8,i8*%W,i64 16
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%W,i64 24
%aj=bitcast i8*%ai to i32*
store i32 6,i32*%aj,align 4
ret i8*%W
}
define internal fastcc i8*@_SMLL10argVarList_1223(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
%j=load i8*,i8**%d,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%a,%m]
%n=phi i8*[%i,%h],[%b,%m]
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=getelementptr inbounds i8,i8*%n,i64 4
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=getelementptr inbounds i8,i8*%n,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=getelementptr inbounds i8,i8*%l,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=getelementptr inbounds i8,i8*%l,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%y,i8*inreg%B)
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=bitcast i8**%d to i8***
%J=load i8**,i8***%I,align 8
store i8*null,i8**%d,align 8
%K=load i8*,i8**%J,align 8
%L=call fastcc i8*%F(i8*inreg%H,i8*inreg%K)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
%V=call fastcc i8*%O(i8*inreg%Q,i8*inreg%U)
store i8*%V,i8**%c,align 8
%W=call i8*@sml_alloc(i32 inreg 28)#0
%X=bitcast i8*%W to i32*
%Y=getelementptr inbounds i8,i8*%W,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177304,i32*%Z,align 4
store i32%p,i32*%X,align 4
%aa=getelementptr inbounds i8,i8*%W,i64 4
%ab=bitcast i8*%aa to i32*
store i32%s,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
%ad=getelementptr inbounds i8,i8*%W,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=load i8*,i8**%c,align 8
%ag=getelementptr inbounds i8,i8*%W,i64 16
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%W,i64 24
%aj=bitcast i8*%ai to i32*
store i32 6,i32*%aj,align 4
ret i8*%W
}
define internal fastcc i8*@_SMLL10argVarList_1224(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
%j=load i8*,i8**%d,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%a,%m]
%n=phi i8*[%i,%h],[%b,%m]
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=getelementptr inbounds i8,i8*%n,i64 4
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=getelementptr inbounds i8,i8*%n,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=getelementptr inbounds i8,i8*%l,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=getelementptr inbounds i8,i8*%l,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%y,i8*inreg%B)
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=bitcast i8**%d to i8***
%J=load i8**,i8***%I,align 8
store i8*null,i8**%d,align 8
%K=load i8*,i8**%J,align 8
%L=call fastcc i8*%F(i8*inreg%H,i8*inreg%K)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
%V=call fastcc i8*%O(i8*inreg%Q,i8*inreg%U)
store i8*%V,i8**%c,align 8
%W=call i8*@sml_alloc(i32 inreg 28)#0
%X=bitcast i8*%W to i32*
%Y=getelementptr inbounds i8,i8*%W,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177304,i32*%Z,align 4
store i32%p,i32*%X,align 4
%aa=getelementptr inbounds i8,i8*%W,i64 4
%ab=bitcast i8*%aa to i32*
store i32%s,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
%ad=getelementptr inbounds i8,i8*%W,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=load i8*,i8**%c,align 8
%ag=getelementptr inbounds i8,i8*%W,i64 16
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%W,i64 24
%aj=bitcast i8*%ai to i32*
store i32 6,i32*%aj,align 4
ret i8*%W
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1225(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%p,i8*inreg%s,i8*inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1230(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%p,i8*inreg%s,i8*inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLL7matches_1236(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination12analyzeMatchE_1168(i8*inreg%p,i8*inreg%s,i8*inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLL8matchTys_1237(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLL8matchTys_1239(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bX,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8**%b to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%q(i8*inreg%s,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=getelementptr inbounds i8,i8*%A,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%b,align 8
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
%H=load i8*,i8**%c,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%b,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%E,i64 16
%N=bitcast i8*%M to i32*
store i32 3,i32*%N,align 4
ret i8*%E
}
define internal fastcc i8*@_SMLLN17PolyTyElimination16analyzeMatchListE_1241(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 20)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
%g=getelementptr inbounds i8,i8*%c,i64 4
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 1
store i32 6,i32*%d,align 4
%i=load i8*,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%c,i64 8
%k=bitcast i8*%j to i8**
store i8*%i,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%c,i64 16
%m=bitcast i8*%l to i32*
store i32 2,i32*%m,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLL4args_1247(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination10analyzePatE_1151(i8*inreg%p,i8*inreg%s,i8*inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLL8recbinds_1257(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%b to i8**
br label%o
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%c to i8***
%m=load i8**,i8***%l,align 8
%n=load i8*,i8**%e,align 8
br label%o
o:
%p=phi i8*[%n,%k],[%a,%i]
%q=phi i8**[%m,%k],[%j,%i]
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=getelementptr inbounds i8*,i8**%q,i64 1
%t=load i8*,i8**%s,align 8
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=getelementptr inbounds i8,i8*%t,i64 4
%x=bitcast i8*%w to i32*
%y=load i32,i32*%x,align 4
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%f,align 8
%C=getelementptr inbounds i8,i8*%p,i64 16
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
%F=getelementptr inbounds i8,i8*%p,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%E,i8*inreg%H)
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
%O=bitcast i8**%e to i8***
%P=load i8**,i8***%O,align 8
store i8*null,i8**%e,align 8
%Q=load i8*,i8**%P,align 8
%R=call fastcc i8*%L(i8*inreg%N,i8*inreg%Q)
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=getelementptr inbounds i8,i8*%X,i64 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
%ab=getelementptr inbounds i8,i8*%aa,i64 16
%ac=bitcast i8*%ab to i8**
%ad=load i8*,i8**%ac,align 8
%ae=call fastcc i8*%U(i8*inreg%W,i8*inreg%ad)
store i8*%ae,i8**%e,align 8
%af=call i8*@sml_alloc(i32 inreg 28)#0
%ag=bitcast i8*%af to i32*
%ah=getelementptr inbounds i8,i8*%af,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177304,i32*%ai,align 4
store i8*%af,i8**%c,align 8
store i32%v,i32*%ag,align 4
%aj=getelementptr inbounds i8,i8*%af,i64 4
%ak=bitcast i8*%aj to i32*
store i32%y,i32*%ak,align 4
%al=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%am=getelementptr inbounds i8,i8*%af,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ap=getelementptr inbounds i8,i8*%af,i64 16
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%af,i64 24
%as=bitcast i8*%ar to i32*
store i32 6,i32*%as,align 4
%at=call i8*@sml_alloc(i32 inreg 20)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177296,i32*%av,align 4
%aw=load i8*,i8**%d,align 8
%ax=bitcast i8*%at to i8**
store i8*%aw,i8**%ax,align 8
%ay=load i8*,i8**%c,align 8
%az=getelementptr inbounds i8,i8*%at,i64 8
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%at,i64 16
%aC=bitcast i8*%aB to i32*
store i32 3,i32*%aC,align 4
ret i8*%at
}
define internal fastcc i8*@_SMLL3env_1258(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15analyzeRecbindsE_1260(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%m,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
%l=load i8*,i8**%e,align 8
br label%m
m:
%n=phi i8*[%l,%j],[%a,%o]
%p=phi i8*[%k,%j],[%b,%o]
store i8*null,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%p,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%n,i64 16
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
%w=getelementptr inbounds i8,i8*%n,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=bitcast i8*%n to i8**
%A=load i8*,i8**%z,align 8
%B=bitcast i8*%p to i8**
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%v,i8*inreg%y,i8*inreg%A,i8*inreg%C)
store i8*%D,i8**%c,align 8
%E=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F=getelementptr inbounds i8,i8*%E,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*@_SMLLN17PolyTyElimination5equalE_1041(i8*inreg%H)
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%g,align 8
%O=load i8*,i8**%d,align 8
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%e,align 8
%S=load i8*,i8**%c,align 8
%T=getelementptr inbounds i8,i8*%S,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%f,align 8
%W=call i8*@sml_alloc(i32 inreg 20)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177296,i32*%Y,align 4
%Z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ac=getelementptr inbounds i8,i8*%W,i64 8
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%W,i64 16
%af=bitcast i8*%ae to i32*
store i32 3,i32*%af,align 4
%ag=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ah=call fastcc i8*%L(i8*inreg%ag,i8*inreg%W)
%ai=call i8*@sml_alloc(i32 inreg 20)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177296,i32*%ak,align 4
%al=load i8*,i8**%c,align 8
%am=bitcast i8*%ai to i8**
store i8*%al,i8**%am,align 8
%an=load i8*,i8**%d,align 8
%ao=getelementptr inbounds i8,i8*%ai,i64 8
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ai,i64 16
%ar=bitcast i8*%aq to i32*
store i32 3,i32*%ar,align 4
ret i8*%ai
}
define internal fastcc i8*@_SMLL8recbinds_1261(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=getelementptr inbounds i8,i8*%o,i64 24
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=getelementptr inbounds i8,i8*%o,i64 16
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=getelementptr inbounds i8,i8*%u,i64 4
%y=bitcast i8*%x to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%f,align 8
%D=getelementptr inbounds i8,i8*%m,i64 16
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
%G=getelementptr inbounds i8,i8*%m,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%F,i8*inreg%I)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%e to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%e,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
%ac=getelementptr inbounds i8,i8*%ab,i64 16
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
%af=call fastcc i8*%V(i8*inreg%X,i8*inreg%ae)
store i8*%af,i8**%e,align 8
%ag=call i8*@sml_alloc(i32 inreg 28)#0
%ah=bitcast i8*%ag to i32*
%ai=getelementptr inbounds i8,i8*%ag,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177304,i32*%aj,align 4
store i8*%ag,i8**%c,align 8
store i32%w,i32*%ah,align 4
%ak=getelementptr inbounds i8,i8*%ag,i64 4
%al=bitcast i8*%ak to i32*
store i32%z,i32*%al,align 4
%am=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%an=getelementptr inbounds i8,i8*%ag,i64 8
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aq=getelementptr inbounds i8,i8*%ag,i64 16
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%ag,i64 24
%at=bitcast i8*%as to i32*
store i32 6,i32*%at,align 4
%au=call i8*@sml_alloc(i32 inreg 20)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177296,i32*%aw,align 4
%ax=load i8*,i8**%c,align 8
%ay=bitcast i8*%au to i8**
store i8*%ax,i8**%ay,align 8
%az=load i8*,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%au,i64 8
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%au,i64 16
%aD=bitcast i8*%aC to i32*
store i32 3,i32*%aD,align 4
ret i8*%au
}
define internal fastcc i8*@_SMLL3env_1262(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18analyzeFunRecbindsE_1264(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%n,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%c,align 8
%m=load i8*,i8**%f,align 8
br label%n
n:
%o=phi i8*[%m,%k],[%a,%p]
%q=phi i8*[%l,%k],[%b,%p]
store i8*null,i8**%c,align 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%e,align 8
%t=getelementptr inbounds i8,i8*%o,i64 16
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
%w=getelementptr inbounds i8,i8*%o,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=bitcast i8*%o to i8**
%A=load i8*,i8**%z,align 8
%B=getelementptr inbounds i8,i8*%q,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
%E=call fastcc i8*@_SMLLN17PolyTyElimination16analyzeMatchListE_1167(i8*inreg%v,i8*inreg%y,i8*inreg%A,i8*inreg%D)
store i8*%E,i8**%d,align 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%c,align 8
%H=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%I=getelementptr inbounds i8,i8*%H,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
%L=call fastcc i8*@_SMLLN17PolyTyElimination5equalE_1041(i8*inreg%K)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%g,align 8
%R=load i8*,i8**%e,align 8
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%f,align 8
%V=load i8*,i8**%d,align 8
%W=getelementptr inbounds i8,i8*%V,i64 8
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%d,align 8
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
store i8*%Z,i8**%h,align 8
%ac=getelementptr inbounds i8,i8*%Z,i64 4
%ad=bitcast i8*%ac to i32*
store i32 0,i32*%ad,align 1
%ae=bitcast i8*%Z to i32*
store i32 6,i32*%ae,align 4
%af=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 8
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 16
%aj=bitcast i8*%ai to i32*
store i32 2,i32*%aj,align 4
%ak=call i8*@sml_alloc(i32 inreg 20)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177296,i32*%am,align 4
%an=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aq=getelementptr inbounds i8,i8*%ak,i64 8
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%ak,i64 16
%at=bitcast i8*%as to i32*
store i32 3,i32*%at,align 4
%au=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%av=call fastcc i8*%O(i8*inreg%au,i8*inreg%ak)
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177296,i32*%ay,align 4
%az=load i8*,i8**%e,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=load i8*,i8**%c,align 8
%aC=getelementptr inbounds i8,i8*%aw,i64 8
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%aw,i64 16
%aF=bitcast i8*%aE to i32*
store i32 3,i32*%aF,align 4
ret i8*%aw
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
y:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
store i8*%a,i8**%p,align 8
store i8*%b,i8**%g,align 8
store i8*%c,i8**%h,align 8
store i8*%d,i8**%i,align 8
%q=load atomic i32,i32*@sml_check_flag unordered,align 4
%r=icmp eq i32%q,0
br i1%r,label%w,label%s
s:
call void@sml_check(i32 inreg%q)
%t=load i8*,i8**%i,align 8
%u=load i8*,i8**%h,align 8
%v=load i8*,i8**%g,align 8
br label%w
w:
%x=phi i8*[%v,%s],[%b,%y]
%z=phi i8*[%u,%s],[%c,%y]
%A=phi i8*[%t,%s],[%d,%y]
store i8*%z,i8**%l,align 8
store i8*%x,i8**%m,align 8
%B=icmp eq i8*%A,null
%C=bitcast i8*%z to i8***
br i1%B,label%Of,label%D
D:
%E=bitcast i8*%A to i32*
%F=load i32,i32*%E,align 4
switch i32%F,label%G[
i32 0,label%afX
i32 2,label%ad5
i32 37,label%WF
i32 3,label%Vd
i32 5,label%Uu
i32 6,label%RO
i32 8,label%PB
i32 9,label%Oh
i32 14,label%Of
i32 16,label%M2
i32 17,label%Ls
i32 15,label%J2
i32 18,label%Iy
i32 19,label%G7
i32 22,label%Go
i32 21,label%Fj
i32 1,label%Dh
i32 20,label%BD
i32 23,label%zC
i32 4,label%xf
i32 39,label%vM
i32 25,label%vb
i32 26,label%uf
i32 27,label%tE
i32 28,label%si
i32 29,label%qW
i32 30,label%ps
i32 31,label%oG
i32 32,label%m1
i32 33,label%l4
i32 35,label%lj
i32 36,label%kG
i32 38,label%i2
i32 40,label%hF
i32 24,label%gr
i32 7,label%ff
i32 10,label%d3
i32 11,label%c0
i32 12,label%bX
i32 13,label%aL
i32 34,label%Y
]
G:
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%p,align 8
call void@sml_matchcomp_bug()
%H=load i8*,i8**@_SMLZ5Match,align 8
store i8*%H,i8**%g,align 8
%I=call i8*@sml_alloc(i32 inreg 20)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177296,i32*%K,align 4
store i8*%I,i8**%h,align 8
%L=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bW,i64 0,i32 2,i64 0),i8**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to i32*
store i32 3,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 60)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177336,i32*%T,align 4
%U=getelementptr inbounds i8,i8*%R,i64 56
%V=bitcast i8*%U to i32*
store i32 1,i32*%V,align 4
%W=load i8*,i8**%h,align 8
%X=bitcast i8*%R to i8**
store i8*%W,i8**%X,align 8
call void@sml_raise(i8*inreg%R)#1
unreachable
Y:
%Z=getelementptr inbounds i8,i8*%A,i64 8
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%g,align 8
%ac=getelementptr inbounds i8,i8*%ab,i64 8
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%h,align 8
%af=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%ag=getelementptr inbounds i8,i8*%af,i64 8
%ah=bitcast i8*%ag to i8**
%ai=load i8*,i8**%ah,align 8
store i8*null,i8**%m,align 8
%aj=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%ai,i8*inreg%x)
%ak=getelementptr inbounds i8,i8*%aj,i64 16
%al=bitcast i8*%ak to i8*(i8*,i8*)**
%am=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%al,align 8
%an=bitcast i8*%aj to i8**
%ao=load i8*,i8**%an,align 8
%ap=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%aq=call fastcc i8*%am(i8*inreg%ao,i8*inreg%ap)
%ar=getelementptr inbounds i8,i8*%aq,i64 16
%as=bitcast i8*%ar to i8*(i8*,i8*)**
%at=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%as,align 8
%au=bitcast i8*%aq to i8**
%av=load i8*,i8**%au,align 8
%aw=bitcast i8**%g to i8***
%ax=load i8**,i8***%aw,align 8
store i8*null,i8**%g,align 8
%ay=load i8*,i8**%ax,align 8
%az=call fastcc i8*%at(i8*inreg%av,i8*inreg%ay)
store i8*%az,i8**%g,align 8
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
%aD=load i8*,i8**%g,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%h,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call fastcc i8*@_SMLFN12TypedCalcCon9TPREIFYTYE(i8*inreg%aA)
ret i8*%aK
aL:
%aM=getelementptr inbounds i8,i8*%A,i64 8
%aN=bitcast i8*%aM to i8**
%aO=load i8*,i8**%aN,align 8
store i8*%aO,i8**%i,align 8
%aP=getelementptr inbounds i8,i8*%aO,i64 24
%aQ=bitcast i8*%aP to i8**
%aR=load i8*,i8**%aQ,align 8
store i8*%aR,i8**%j,align 8
%aS=getelementptr inbounds i8,i8*%aO,i64 16
%aT=bitcast i8*%aS to i8**
%aU=load i8*,i8**%aT,align 8
%aV=load i8*,i8**%p,align 8
%aW=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%aV,i8*inreg%x,i8*inreg%z,i8*inreg%aU)
store i8*%aW,i8**%g,align 8
%aX=load i8*,i8**%p,align 8
%aY=getelementptr inbounds i8,i8*%aX,i64 8
%aZ=bitcast i8*%aY to i8**
%a0=load i8*,i8**%aZ,align 8
%a1=load i8*,i8**%m,align 8
%a2=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%a0,i8*inreg%a1)
%a3=getelementptr inbounds i8,i8*%a2,i64 16
%a4=bitcast i8*%a3 to i8*(i8*,i8*)**
%a5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a4,align 8
%a6=bitcast i8*%a2 to i8**
%a7=load i8*,i8**%a6,align 8
%a8=load i8*,i8**%l,align 8
%a9=call fastcc i8*%a5(i8*inreg%a7,i8*inreg%a8)
%ba=getelementptr inbounds i8,i8*%a9,i64 16
%bb=bitcast i8*%ba to i8*(i8*,i8*)**
%bc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bb,align 8
%bd=bitcast i8*%a9 to i8**
%be=load i8*,i8**%bd,align 8
%bf=bitcast i8**%i to i8***
%bg=load i8**,i8***%bf,align 8
%bh=load i8*,i8**%bg,align 8
%bi=call fastcc i8*%bc(i8*inreg%be,i8*inreg%bh)
store i8*%bi,i8**%h,align 8
%bj=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%bk=getelementptr inbounds i8,i8*%bj,i64 8
%bl=bitcast i8*%bk to i8**
%bm=load i8*,i8**%bl,align 8
%bn=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%bo=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%bm,i8*inreg%bn)
%bp=getelementptr inbounds i8,i8*%bo,i64 16
%bq=bitcast i8*%bp to i8*(i8*,i8*)**
%br=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bq,align 8
%bs=bitcast i8*%bo to i8**
%bt=load i8*,i8**%bs,align 8
%bu=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%bv=call fastcc i8*%br(i8*inreg%bt,i8*inreg%bu)
%bw=getelementptr inbounds i8,i8*%bv,i64 16
%bx=bitcast i8*%bw to i8*(i8*,i8*)**
%by=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bx,align 8
%bz=bitcast i8*%bv to i8**
%bA=load i8*,i8**%bz,align 8
%bB=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bC=getelementptr inbounds i8,i8*%bB,i64 8
%bD=bitcast i8*%bC to i8**
%bE=load i8*,i8**%bD,align 8
%bF=call fastcc i8*%by(i8*inreg%bA,i8*inreg%bE)
store i8*%bF,i8**%i,align 8
%bG=call i8*@sml_alloc(i32 inreg 36)#0
%bH=getelementptr inbounds i8,i8*%bG,i64 -4
%bI=bitcast i8*%bH to i32*
store i32 1342177312,i32*%bI,align 4
%bJ=load i8*,i8**%h,align 8
%bK=bitcast i8*%bG to i8**
store i8*%bJ,i8**%bK,align 8
%bL=load i8*,i8**%i,align 8
%bM=getelementptr inbounds i8,i8*%bG,i64 8
%bN=bitcast i8*%bM to i8**
store i8*%bL,i8**%bN,align 8
%bO=load i8*,i8**%g,align 8
%bP=getelementptr inbounds i8,i8*%bG,i64 16
%bQ=bitcast i8*%bP to i8**
store i8*%bO,i8**%bQ,align 8
%bR=load i8*,i8**%j,align 8
%bS=getelementptr inbounds i8,i8*%bG,i64 24
%bT=bitcast i8*%bS to i8**
store i8*%bR,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bG,i64 32
%bV=bitcast i8*%bU to i32*
store i32 15,i32*%bV,align 4
%bW=call fastcc i8*@_SMLFN12TypedCalcCon13TPDYNAMICVIEWE(i8*inreg%bG)
ret i8*%bW
bX:
%bY=getelementptr inbounds i8,i8*%A,i64 8
%bZ=bitcast i8*%bY to i8**
%b0=load i8*,i8**%bZ,align 8
store i8*%b0,i8**%h,align 8
%b1=getelementptr inbounds i8,i8*%b0,i64 8
%b2=bitcast i8*%b1 to i8**
%b3=load i8*,i8**%b2,align 8
store i8*%b3,i8**%i,align 8
%b4=load i8*,i8**%p,align 8
%b5=getelementptr inbounds i8,i8*%b4,i64 8
%b6=bitcast i8*%b5 to i8**
%b7=load i8*,i8**%b6,align 8
%b8=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%b7,i8*inreg%x)
%b9=getelementptr inbounds i8,i8*%b8,i64 16
%ca=bitcast i8*%b9 to i8*(i8*,i8*)**
%cb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ca,align 8
%cc=bitcast i8*%b8 to i8**
%cd=load i8*,i8**%cc,align 8
%ce=load i8*,i8**%l,align 8
%cf=call fastcc i8*%cb(i8*inreg%cd,i8*inreg%ce)
%cg=getelementptr inbounds i8,i8*%cf,i64 16
%ch=bitcast i8*%cg to i8*(i8*,i8*)**
%ci=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ch,align 8
%cj=bitcast i8*%cf to i8**
%ck=load i8*,i8**%cj,align 8
%cl=bitcast i8**%h to i8***
%cm=load i8**,i8***%cl,align 8
%cn=load i8*,i8**%cm,align 8
%co=call fastcc i8*%ci(i8*inreg%ck,i8*inreg%cn)
store i8*%co,i8**%g,align 8
%cp=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%cq=getelementptr inbounds i8,i8*%cp,i64 8
%cr=bitcast i8*%cq to i8**
%cs=load i8*,i8**%cr,align 8
%ct=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%cu=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%cs,i8*inreg%ct)
%cv=getelementptr inbounds i8,i8*%cu,i64 16
%cw=bitcast i8*%cv to i8*(i8*,i8*)**
%cx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cw,align 8
%cy=bitcast i8*%cu to i8**
%cz=load i8*,i8**%cy,align 8
%cA=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%cB=call fastcc i8*%cx(i8*inreg%cz,i8*inreg%cA)
%cC=getelementptr inbounds i8,i8*%cB,i64 16
%cD=bitcast i8*%cC to i8*(i8*,i8*)**
%cE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cD,align 8
%cF=bitcast i8*%cB to i8**
%cG=load i8*,i8**%cF,align 8
%cH=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cI=getelementptr inbounds i8,i8*%cH,i64 16
%cJ=bitcast i8*%cI to i8**
%cK=load i8*,i8**%cJ,align 8
%cL=call fastcc i8*%cE(i8*inreg%cG,i8*inreg%cK)
store i8*%cL,i8**%h,align 8
%cM=call i8*@sml_alloc(i32 inreg 28)#0
%cN=getelementptr inbounds i8,i8*%cM,i64 -4
%cO=bitcast i8*%cN to i32*
store i32 1342177304,i32*%cO,align 4
%cP=load i8*,i8**%g,align 8
%cQ=bitcast i8*%cM to i8**
store i8*%cP,i8**%cQ,align 8
%cR=load i8*,i8**%i,align 8
%cS=getelementptr inbounds i8,i8*%cM,i64 8
%cT=bitcast i8*%cS to i8**
store i8*%cR,i8**%cT,align 8
%cU=load i8*,i8**%h,align 8
%cV=getelementptr inbounds i8,i8*%cM,i64 16
%cW=bitcast i8*%cV to i8**
store i8*%cU,i8**%cW,align 8
%cX=getelementptr inbounds i8,i8*%cM,i64 24
%cY=bitcast i8*%cX to i32*
store i32 7,i32*%cY,align 4
%cZ=call fastcc i8*@_SMLFN12TypedCalcCon12TPDYNAMICTOPE(i8*inreg%cM)
ret i8*%cZ
c0:
%c1=getelementptr inbounds i8,i8*%A,i64 8
%c2=bitcast i8*%c1 to i8**
%c3=load i8*,i8**%c2,align 8
store i8*%c3,i8**%h,align 8
%c4=getelementptr inbounds i8,i8*%c3,i64 8
%c5=bitcast i8*%c4 to i8**
%c6=load i8*,i8**%c5,align 8
store i8*%c6,i8**%i,align 8
%c7=load i8*,i8**%p,align 8
%c8=getelementptr inbounds i8,i8*%c7,i64 8
%c9=bitcast i8*%c8 to i8**
%da=load i8*,i8**%c9,align 8
%db=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%da,i8*inreg%x)
%dc=getelementptr inbounds i8,i8*%db,i64 16
%dd=bitcast i8*%dc to i8*(i8*,i8*)**
%de=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dd,align 8
%df=bitcast i8*%db to i8**
%dg=load i8*,i8**%df,align 8
%dh=load i8*,i8**%l,align 8
%di=call fastcc i8*%de(i8*inreg%dg,i8*inreg%dh)
%dj=getelementptr inbounds i8,i8*%di,i64 16
%dk=bitcast i8*%dj to i8*(i8*,i8*)**
%dl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dk,align 8
%dm=bitcast i8*%di to i8**
%dn=load i8*,i8**%dm,align 8
%do=bitcast i8**%h to i8***
%dp=load i8**,i8***%do,align 8
%dq=load i8*,i8**%dp,align 8
%dr=call fastcc i8*%dl(i8*inreg%dn,i8*inreg%dq)
store i8*%dr,i8**%g,align 8
%ds=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%dt=getelementptr inbounds i8,i8*%ds,i64 8
%du=bitcast i8*%dt to i8**
%dv=load i8*,i8**%du,align 8
%dw=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%dx=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%dv,i8*inreg%dw)
%dy=getelementptr inbounds i8,i8*%dx,i64 16
%dz=bitcast i8*%dy to i8*(i8*,i8*)**
%dA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dz,align 8
%dB=bitcast i8*%dx to i8**
%dC=load i8*,i8**%dB,align 8
%dD=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%dE=call fastcc i8*%dA(i8*inreg%dC,i8*inreg%dD)
%dF=getelementptr inbounds i8,i8*%dE,i64 16
%dG=bitcast i8*%dF to i8*(i8*,i8*)**
%dH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dG,align 8
%dI=bitcast i8*%dE to i8**
%dJ=load i8*,i8**%dI,align 8
%dK=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dL=getelementptr inbounds i8,i8*%dK,i64 16
%dM=bitcast i8*%dL to i8**
%dN=load i8*,i8**%dM,align 8
%dO=call fastcc i8*%dH(i8*inreg%dJ,i8*inreg%dN)
store i8*%dO,i8**%h,align 8
%dP=call i8*@sml_alloc(i32 inreg 28)#0
%dQ=getelementptr inbounds i8,i8*%dP,i64 -4
%dR=bitcast i8*%dQ to i32*
store i32 1342177304,i32*%dR,align 4
%dS=load i8*,i8**%g,align 8
%dT=bitcast i8*%dP to i8**
store i8*%dS,i8**%dT,align 8
%dU=load i8*,i8**%i,align 8
%dV=getelementptr inbounds i8,i8*%dP,i64 8
%dW=bitcast i8*%dV to i8**
store i8*%dU,i8**%dW,align 8
%dX=load i8*,i8**%h,align 8
%dY=getelementptr inbounds i8,i8*%dP,i64 16
%dZ=bitcast i8*%dY to i8**
store i8*%dX,i8**%dZ,align 8
%d0=getelementptr inbounds i8,i8*%dP,i64 24
%d1=bitcast i8*%d0 to i32*
store i32 7,i32*%d1,align 4
%d2=call fastcc i8*@_SMLFN12TypedCalcCon13TPDYNAMICNULLE(i8*inreg%dP)
ret i8*%d2
d3:
%d4=getelementptr inbounds i8,i8*%A,i64 8
%d5=bitcast i8*%d4 to i8**
%d6=load i8*,i8**%d5,align 8
store i8*%d6,i8**%i,align 8
%d7=getelementptr inbounds i8,i8*%d6,i64 24
%d8=bitcast i8*%d7 to i8**
%d9=load i8*,i8**%d8,align 8
store i8*%d9,i8**%j,align 8
%ea=getelementptr inbounds i8,i8*%d6,i64 16
%eb=bitcast i8*%ea to i8**
%ec=load i8*,i8**%eb,align 8
%ed=load i8*,i8**%p,align 8
%ee=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%ed,i8*inreg%x,i8*inreg%z,i8*inreg%ec)
store i8*%ee,i8**%g,align 8
%ef=load i8*,i8**%p,align 8
%eg=getelementptr inbounds i8,i8*%ef,i64 8
%eh=bitcast i8*%eg to i8**
%ei=load i8*,i8**%eh,align 8
%ej=load i8*,i8**%m,align 8
%ek=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%ei,i8*inreg%ej)
%el=getelementptr inbounds i8,i8*%ek,i64 16
%em=bitcast i8*%el to i8*(i8*,i8*)**
%en=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%em,align 8
%eo=bitcast i8*%ek to i8**
%ep=load i8*,i8**%eo,align 8
%eq=load i8*,i8**%l,align 8
%er=call fastcc i8*%en(i8*inreg%ep,i8*inreg%eq)
%es=getelementptr inbounds i8,i8*%er,i64 16
%et=bitcast i8*%es to i8*(i8*,i8*)**
%eu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%et,align 8
%ev=bitcast i8*%er to i8**
%ew=load i8*,i8**%ev,align 8
%ex=bitcast i8**%i to i8***
%ey=load i8**,i8***%ex,align 8
%ez=load i8*,i8**%ey,align 8
%eA=call fastcc i8*%eu(i8*inreg%ew,i8*inreg%ez)
store i8*%eA,i8**%h,align 8
%eB=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%eC=getelementptr inbounds i8,i8*%eB,i64 8
%eD=bitcast i8*%eC to i8**
%eE=load i8*,i8**%eD,align 8
%eF=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%eG=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%eE,i8*inreg%eF)
%eH=getelementptr inbounds i8,i8*%eG,i64 16
%eI=bitcast i8*%eH to i8*(i8*,i8*)**
%eJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eI,align 8
%eK=bitcast i8*%eG to i8**
%eL=load i8*,i8**%eK,align 8
%eM=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%eN=call fastcc i8*%eJ(i8*inreg%eL,i8*inreg%eM)
%eO=getelementptr inbounds i8,i8*%eN,i64 16
%eP=bitcast i8*%eO to i8*(i8*,i8*)**
%eQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eP,align 8
%eR=bitcast i8*%eN to i8**
%eS=load i8*,i8**%eR,align 8
%eT=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%eU=getelementptr inbounds i8,i8*%eT,i64 8
%eV=bitcast i8*%eU to i8**
%eW=load i8*,i8**%eV,align 8
%eX=call fastcc i8*%eQ(i8*inreg%eS,i8*inreg%eW)
store i8*%eX,i8**%i,align 8
%eY=call i8*@sml_alloc(i32 inreg 36)#0
%eZ=getelementptr inbounds i8,i8*%eY,i64 -4
%e0=bitcast i8*%eZ to i32*
store i32 1342177312,i32*%e0,align 4
%e1=load i8*,i8**%h,align 8
%e2=bitcast i8*%eY to i8**
store i8*%e1,i8**%e2,align 8
%e3=load i8*,i8**%i,align 8
%e4=getelementptr inbounds i8,i8*%eY,i64 8
%e5=bitcast i8*%e4 to i8**
store i8*%e3,i8**%e5,align 8
%e6=load i8*,i8**%g,align 8
%e7=getelementptr inbounds i8,i8*%eY,i64 16
%e8=bitcast i8*%e7 to i8**
store i8*%e6,i8**%e8,align 8
%e9=load i8*,i8**%j,align 8
%fa=getelementptr inbounds i8,i8*%eY,i64 24
%fb=bitcast i8*%fa to i8**
store i8*%e9,i8**%fb,align 8
%fc=getelementptr inbounds i8,i8*%eY,i64 32
%fd=bitcast i8*%fc to i32*
store i32 15,i32*%fd,align 4
%fe=call fastcc i8*@_SMLFN12TypedCalcCon11TPDYNAMICISE(i8*inreg%eY)
ret i8*%fe
ff:
%fg=getelementptr inbounds i8,i8*%A,i64 8
%fh=bitcast i8*%fg to i8**
%fi=load i8*,i8**%fh,align 8
store i8*%fi,i8**%i,align 8
%fj=getelementptr inbounds i8,i8*%fi,i64 24
%fk=bitcast i8*%fj to i8**
%fl=load i8*,i8**%fk,align 8
store i8*%fl,i8**%j,align 8
%fm=getelementptr inbounds i8,i8*%fi,i64 16
%fn=bitcast i8*%fm to i8**
%fo=load i8*,i8**%fn,align 8
%fp=load i8*,i8**%p,align 8
%fq=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%fp,i8*inreg%x,i8*inreg%z,i8*inreg%fo)
store i8*%fq,i8**%g,align 8
%fr=load i8*,i8**%p,align 8
%fs=getelementptr inbounds i8,i8*%fr,i64 8
%ft=bitcast i8*%fs to i8**
%fu=load i8*,i8**%ft,align 8
%fv=load i8*,i8**%m,align 8
%fw=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%fu,i8*inreg%fv)
%fx=getelementptr inbounds i8,i8*%fw,i64 16
%fy=bitcast i8*%fx to i8*(i8*,i8*)**
%fz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fy,align 8
%fA=bitcast i8*%fw to i8**
%fB=load i8*,i8**%fA,align 8
%fC=load i8*,i8**%l,align 8
%fD=call fastcc i8*%fz(i8*inreg%fB,i8*inreg%fC)
%fE=getelementptr inbounds i8,i8*%fD,i64 16
%fF=bitcast i8*%fE to i8*(i8*,i8*)**
%fG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fF,align 8
%fH=bitcast i8*%fD to i8**
%fI=load i8*,i8**%fH,align 8
%fJ=bitcast i8**%i to i8***
%fK=load i8**,i8***%fJ,align 8
%fL=load i8*,i8**%fK,align 8
%fM=call fastcc i8*%fG(i8*inreg%fI,i8*inreg%fL)
store i8*%fM,i8**%h,align 8
%fN=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%fO=getelementptr inbounds i8,i8*%fN,i64 8
%fP=bitcast i8*%fO to i8**
%fQ=load i8*,i8**%fP,align 8
%fR=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%fS=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%fQ,i8*inreg%fR)
%fT=getelementptr inbounds i8,i8*%fS,i64 16
%fU=bitcast i8*%fT to i8*(i8*,i8*)**
%fV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fU,align 8
%fW=bitcast i8*%fS to i8**
%fX=load i8*,i8**%fW,align 8
%fY=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%fZ=call fastcc i8*%fV(i8*inreg%fX,i8*inreg%fY)
%f0=getelementptr inbounds i8,i8*%fZ,i64 16
%f1=bitcast i8*%f0 to i8*(i8*,i8*)**
%f2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%f1,align 8
%f3=bitcast i8*%fZ to i8**
%f4=load i8*,i8**%f3,align 8
%f5=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%f6=getelementptr inbounds i8,i8*%f5,i64 8
%f7=bitcast i8*%f6 to i8**
%f8=load i8*,i8**%f7,align 8
%f9=call fastcc i8*%f2(i8*inreg%f4,i8*inreg%f8)
store i8*%f9,i8**%i,align 8
%ga=call i8*@sml_alloc(i32 inreg 36)#0
%gb=getelementptr inbounds i8,i8*%ga,i64 -4
%gc=bitcast i8*%gb to i32*
store i32 1342177312,i32*%gc,align 4
%gd=load i8*,i8**%h,align 8
%ge=bitcast i8*%ga to i8**
store i8*%gd,i8**%ge,align 8
%gf=load i8*,i8**%i,align 8
%gg=getelementptr inbounds i8,i8*%ga,i64 8
%gh=bitcast i8*%gg to i8**
store i8*%gf,i8**%gh,align 8
%gi=load i8*,i8**%g,align 8
%gj=getelementptr inbounds i8,i8*%ga,i64 16
%gk=bitcast i8*%gj to i8**
store i8*%gi,i8**%gk,align 8
%gl=load i8*,i8**%j,align 8
%gm=getelementptr inbounds i8,i8*%ga,i64 24
%gn=bitcast i8*%gm to i8**
store i8*%gl,i8**%gn,align 8
%go=getelementptr inbounds i8,i8*%ga,i64 32
%gp=bitcast i8*%go to i32*
store i32 15,i32*%gp,align 4
%gq=call fastcc i8*@_SMLFN12TypedCalcCon9TPDYNAMICE(i8*inreg%ga)
ret i8*%gq
gr:
%gs=getelementptr inbounds i8,i8*%A,i64 8
%gt=bitcast i8*%gs to i8**
%gu=load i8*,i8**%gt,align 8
store i8*%gu,i8**%j,align 8
%gv=getelementptr inbounds i8,i8*%gu,i64 16
%gw=bitcast i8*%gv to i32*
%gx=load i32,i32*%gw,align 4
%gy=getelementptr inbounds i8,i8*%gu,i64 24
%gz=bitcast i8*%gy to i8**
%gA=load i8*,i8**%gz,align 8
store i8*%gA,i8**%k,align 8
%gB=bitcast i8*%gu to i8***
%gC=load i8**,i8***%gB,align 8
%gD=load i8*,i8**%gC,align 8
%gE=load i8*,i8**%p,align 8
%gF=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%gE,i8*inreg%x,i8*inreg%z,i8*inreg%gD)
store i8*%gF,i8**%g,align 8
%gG=bitcast i8**%j to i8***
%gH=load i8**,i8***%gG,align 8
%gI=load i8*,i8**%gH,align 8
%gJ=getelementptr inbounds i8,i8*%gI,i64 8
%gK=bitcast i8*%gJ to i8**
%gL=load i8*,i8**%gK,align 8
%gM=load i8*,i8**%l,align 8
%gN=load i8*,i8**%m,align 8
%gO=load i8*,i8**%p,align 8
%gP=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%gO,i8*inreg%gN,i8*inreg%gM,i8*inreg%gL)
store i8*%gP,i8**%h,align 8
%gQ=call i8*@sml_alloc(i32 inreg 20)#0
%gR=getelementptr inbounds i8,i8*%gQ,i64 -4
%gS=bitcast i8*%gR to i32*
store i32 1342177296,i32*%gS,align 4
store i8*%gQ,i8**%i,align 8
%gT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gU=bitcast i8*%gQ to i8**
store i8*%gT,i8**%gU,align 8
%gV=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gW=getelementptr inbounds i8,i8*%gQ,i64 8
%gX=bitcast i8*%gW to i8**
store i8*%gV,i8**%gX,align 8
%gY=getelementptr inbounds i8,i8*%gQ,i64 16
%gZ=bitcast i8*%gY to i32*
store i32 3,i32*%gZ,align 4
%g0=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%g1=getelementptr inbounds i8,i8*%g0,i64 8
%g2=bitcast i8*%g1 to i8**
%g3=load i8*,i8**%g2,align 8
%g4=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%g5=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%g3,i8*inreg%g4)
%g6=getelementptr inbounds i8,i8*%g5,i64 16
%g7=bitcast i8*%g6 to i8*(i8*,i8*)**
%g8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%g7,align 8
%g9=bitcast i8*%g5 to i8**
%ha=load i8*,i8**%g9,align 8
%hb=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%hc=call fastcc i8*%g8(i8*inreg%ha,i8*inreg%hb)
%hd=getelementptr inbounds i8,i8*%hc,i64 16
%he=bitcast i8*%hd to i8*(i8*,i8*)**
%hf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%he,align 8
%hg=bitcast i8*%hc to i8**
%hh=load i8*,i8**%hg,align 8
%hi=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%hj=getelementptr inbounds i8,i8*%hi,i64 32
%hk=bitcast i8*%hj to i8**
%hl=load i8*,i8**%hk,align 8
%hm=call fastcc i8*%hf(i8*inreg%hh,i8*inreg%hl)
store i8*%hm,i8**%g,align 8
%hn=call i8*@sml_alloc(i32 inreg 36)#0
%ho=getelementptr inbounds i8,i8*%hn,i64 -4
%hp=bitcast i8*%ho to i32*
store i32 1342177312,i32*%hp,align 4
%hq=getelementptr inbounds i8,i8*%hn,i64 12
%hr=bitcast i8*%hq to i32*
store i32 0,i32*%hr,align 1
%hs=load i8*,i8**%i,align 8
%ht=bitcast i8*%hn to i8**
store i8*%hs,i8**%ht,align 8
%hu=getelementptr inbounds i8,i8*%hn,i64 8
%hv=bitcast i8*%hu to i32*
store i32%gx,i32*%hv,align 4
%hw=load i8*,i8**%k,align 8
%hx=getelementptr inbounds i8,i8*%hn,i64 16
%hy=bitcast i8*%hx to i8**
store i8*%hw,i8**%hy,align 8
%hz=load i8*,i8**%g,align 8
%hA=getelementptr inbounds i8,i8*%hn,i64 24
%hB=bitcast i8*%hA to i8**
store i8*%hz,i8**%hB,align 8
%hC=getelementptr inbounds i8,i8*%hn,i64 32
%hD=bitcast i8*%hC to i32*
store i32 13,i32*%hD,align 4
%hE=call fastcc i8*@_SMLFN12TypedCalcCon6TPJOINE(i8*inreg%hn)
ret i8*%hE
hF:
store i8*null,i8**%m,align 8
store i8*null,i8**%p,align 8
%hG=getelementptr inbounds i8,i8*%A,i64 8
%hH=bitcast i8*%hG to i8**
%hI=load i8*,i8**%hH,align 8
store i8*%hI,i8**%g,align 8
%hJ=call fastcc i8*@_SMLFN5VarID3Map4findE(i32 inreg 1,i32 inreg 8)
%hK=getelementptr inbounds i8,i8*%hJ,i64 16
%hL=bitcast i8*%hK to i8*(i8*,i8*)**
%hM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hL,align 8
%hN=bitcast i8*%hJ to i8**
%hO=load i8*,i8**%hN,align 8
store i8*%hO,i8**%i,align 8
%hP=bitcast i8**%l to i8***
%hQ=load i8**,i8***%hP,align 8
store i8*null,i8**%l,align 8
%hR=load i8*,i8**%hQ,align 8
%hS=getelementptr inbounds i8,i8*%hR,i64 32
%hT=bitcast i8*%hS to i8**
%hU=load i8*,i8**%hT,align 8
store i8*%hU,i8**%h,align 8
%hV=bitcast i8**%g to i32**
%hW=load i32*,i32**%hV,align 8
%hX=load i32,i32*%hW,align 4
%hY=call i8*@sml_alloc(i32 inreg 20)#0
%hZ=getelementptr inbounds i8,i8*%hY,i64 -4
%h0=bitcast i8*%hZ to i32*
store i32 1342177296,i32*%h0,align 4
%h1=getelementptr inbounds i8,i8*%hY,i64 12
%h2=bitcast i8*%h1 to i32*
store i32 0,i32*%h2,align 1
%h3=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%h4=bitcast i8*%hY to i8**
store i8*%h3,i8**%h4,align 8
%h5=getelementptr inbounds i8,i8*%hY,i64 8
%h6=bitcast i8*%h5 to i32*
store i32%hX,i32*%h6,align 4
%h7=getelementptr inbounds i8,i8*%hY,i64 16
%h8=bitcast i8*%h7 to i32*
store i32 1,i32*%h8,align 4
%h9=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ia=call fastcc i8*%hM(i8*inreg%h9,i8*inreg%hY)
%ib=icmp eq i8*%ia,null
br i1%ib,label%ic,label%iy
ic:
%id=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%id,i8**%g,align 8
%ie=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bV,i64 0,i32 2)to i8*))
store i8*%ie,i8**%h,align 8
%if=call i8*@sml_alloc(i32 inreg 28)#0
%ig=getelementptr inbounds i8,i8*%if,i64 -4
%ih=bitcast i8*%ig to i32*
store i32 1342177304,i32*%ih,align 4
store i8*%if,i8**%i,align 8
%ii=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ij=bitcast i8*%if to i8**
store i8*%ii,i8**%ij,align 8
%ik=getelementptr inbounds i8,i8*%if,i64 8
%il=bitcast i8*%ik to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%il,align 8
%im=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%in=getelementptr inbounds i8,i8*%if,i64 16
%io=bitcast i8*%in to i8**
store i8*%im,i8**%io,align 8
%ip=getelementptr inbounds i8,i8*%if,i64 24
%iq=bitcast i8*%ip to i32*
store i32 7,i32*%iq,align 4
%ir=call i8*@sml_alloc(i32 inreg 60)#0
%is=getelementptr inbounds i8,i8*%ir,i64 -4
%it=bitcast i8*%is to i32*
store i32 1342177336,i32*%it,align 4
%iu=getelementptr inbounds i8,i8*%ir,i64 56
%iv=bitcast i8*%iu to i32*
store i32 1,i32*%iv,align 4
%iw=load i8*,i8**%i,align 8
%ix=bitcast i8*%ir to i8**
store i8*%iw,i8**%ix,align 8
call void@sml_raise(i8*inreg%ir)#1
unreachable
iy:
%iz=bitcast i8*%ia to i8**
%iA=load i8*,i8**%iz,align 8
%iB=load i8*,i8**%g,align 8
%iC=bitcast i8*%iB to i32*
%iD=load i32,i32*%iC,align 4
%iE=getelementptr inbounds i8,i8*%iB,i64 4
%iF=bitcast i8*%iE to i32*
%iG=load i32,i32*%iF,align 4
%iH=getelementptr inbounds i8,i8*%iB,i64 8
%iI=bitcast i8*%iH to i8**
%iJ=load i8*,i8**%iI,align 8
store i8*%iJ,i8**%g,align 8
%iK=getelementptr inbounds i8,i8*%iA,i64 16
%iL=bitcast i8*%iK to i8**
%iM=load i8*,i8**%iL,align 8
store i8*%iM,i8**%h,align 8
%iN=call i8*@sml_alloc(i32 inreg 28)#0
%iO=bitcast i8*%iN to i32*
%iP=getelementptr inbounds i8,i8*%iN,i64 -4
%iQ=bitcast i8*%iP to i32*
store i32 1342177304,i32*%iQ,align 4
store i32%iD,i32*%iO,align 4
%iR=getelementptr inbounds i8,i8*%iN,i64 4
%iS=bitcast i8*%iR to i32*
store i32%iG,i32*%iS,align 4
%iT=load i8*,i8**%g,align 8
%iU=getelementptr inbounds i8,i8*%iN,i64 8
%iV=bitcast i8*%iU to i8**
store i8*%iT,i8**%iV,align 8
%iW=load i8*,i8**%h,align 8
%iX=getelementptr inbounds i8,i8*%iN,i64 16
%iY=bitcast i8*%iX to i8**
store i8*%iW,i8**%iY,align 8
%iZ=getelementptr inbounds i8,i8*%iN,i64 24
%i0=bitcast i8*%iZ to i32*
store i32 6,i32*%i0,align 4
%i1=call fastcc i8*@_SMLFN12TypedCalcCon5TPVARE(i8*inreg%iN)
ret i8*%i1
i2:
%i3=getelementptr inbounds i8,i8*%A,i64 8
%i4=bitcast i8*%i3 to i8**
%i5=load i8*,i8**%i4,align 8
store i8*%i5,i8**%h,align 8
%i6=getelementptr inbounds i8,i8*%i5,i64 24
%i7=bitcast i8*%i6 to i8**
%i8=load i8*,i8**%i7,align 8
store i8*%i8,i8**%j,align 8
%i9=bitcast i8*%i5 to i8**
%ja=load i8*,i8**%i9,align 8
%jb=load i8*,i8**%p,align 8
%jc=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%jb,i8*inreg%x,i8*inreg%z,i8*inreg%ja)
store i8*%jc,i8**%i,align 8
%jd=getelementptr inbounds i8,i8*%jc,i64 8
%je=bitcast i8*%jd to i8**
%jf=load i8*,i8**%je,align 8
store i8*%jf,i8**%g,align 8
%jg=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jh=getelementptr inbounds i8,i8*%jg,i64 16
%ji=bitcast i8*%jh to i8*(i8*,i8*)**
%jj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ji,align 8
%jk=bitcast i8*%jg to i8**
%jl=load i8*,i8**%jk,align 8
store i8*%jl,i8**%k,align 8
%jm=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%jn=getelementptr inbounds i8,i8*%jm,i64 8
%jo=bitcast i8*%jn to i8**
%jp=load i8*,i8**%jo,align 8
%jq=load i8*,i8**%m,align 8
%jr=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%jp,i8*inreg%jq)
%js=getelementptr inbounds i8,i8*%jr,i64 16
%jt=bitcast i8*%js to i8*(i8*,i8*)**
%ju=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jt,align 8
%jv=bitcast i8*%jr to i8**
%jw=load i8*,i8**%jv,align 8
%jx=load i8*,i8**%l,align 8
%jy=call fastcc i8*%ju(i8*inreg%jw,i8*inreg%jx)
%jz=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%jA=call fastcc i8*%jj(i8*inreg%jz,i8*inreg%jy)
%jB=getelementptr inbounds i8,i8*%jA,i64 16
%jC=bitcast i8*%jB to i8*(i8*,i8*)**
%jD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jC,align 8
%jE=bitcast i8*%jA to i8**
%jF=load i8*,i8**%jE,align 8
%jG=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%jH=getelementptr inbounds i8,i8*%jG,i64 16
%jI=bitcast i8*%jH to i8**
%jJ=load i8*,i8**%jI,align 8
%jK=call fastcc i8*%jD(i8*inreg%jF,i8*inreg%jJ)
store i8*%jK,i8**%h,align 8
%jL=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%jM=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%jM)
%jN=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%jN)
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%jL,i8**%e,align 8
%jO=call i8*@sml_alloc(i32 inreg 12)#0
%jP=getelementptr inbounds i8,i8*%jO,i64 -4
%jQ=bitcast i8*%jP to i32*
store i32 1342177288,i32*%jQ,align 4
store i8*%jO,i8**%f,align 8
%jR=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%jS=bitcast i8*%jO to i8**
store i8*%jR,i8**%jS,align 8
%jT=getelementptr inbounds i8,i8*%jO,i64 8
%jU=bitcast i8*%jT to i32*
store i32 1,i32*%jU,align 4
%jV=call i8*@sml_alloc(i32 inreg 28)#0
%jW=getelementptr inbounds i8,i8*%jV,i64 -4
%jX=bitcast i8*%jW to i32*
store i32 1342177304,i32*%jX,align 4
%jY=load i8*,i8**%f,align 8
%jZ=bitcast i8*%jV to i8**
store i8*%jY,i8**%jZ,align 8
%j0=getelementptr inbounds i8,i8*%jV,i64 8
%j1=bitcast i8*%j0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination11instantiateE_765 to void(...)*),void(...)**%j1,align 8
%j2=getelementptr inbounds i8,i8*%jV,i64 16
%j3=bitcast i8*%j2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination11instantiateE_765 to void(...)*),void(...)**%j3,align 8
%j4=getelementptr inbounds i8,i8*%jV,i64 24
%j5=bitcast i8*%j4 to i32*
store i32 -2147483647,i32*%j5,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%jM)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%jN)
%j6=bitcast i8**%l to i8****
%j7=load i8***,i8****%j6,align 8
store i8*null,i8**%l,align 8
%j8=load i8**,i8***%j7,align 8
%j9=load i8*,i8**%j8,align 8
%ka=call fastcc i8*@_SMLLN17PolyTyElimination11instantiateE_765(i8*inreg%jY,i8*inreg%j9)
%kb=getelementptr inbounds i8,i8*%ka,i64 16
%kc=bitcast i8*%kb to i8*(i8*,i8*)**
%kd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kc,align 8
%ke=bitcast i8*%ka to i8**
%kf=load i8*,i8**%ke,align 8
store i8*%kf,i8**%k,align 8
%kg=call i8*@sml_alloc(i32 inreg 20)#0
%kh=getelementptr inbounds i8,i8*%kg,i64 -4
%ki=bitcast i8*%kh to i32*
store i32 1342177296,i32*%ki,align 4
%kj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%kk=bitcast i8*%kg to i8**
store i8*%kj,i8**%kk,align 8
%kl=load i8*,i8**%h,align 8
%km=getelementptr inbounds i8,i8*%kg,i64 8
%kn=bitcast i8*%km to i8**
store i8*%kl,i8**%kn,align 8
%ko=getelementptr inbounds i8,i8*%kg,i64 16
%kp=bitcast i8*%ko to i32*
store i32 3,i32*%kp,align 4
%kq=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%kr=call fastcc i8*%kd(i8*inreg%kq,i8*inreg%kg)
%ks=call i8*@sml_alloc(i32 inreg 28)#0
%kt=getelementptr inbounds i8,i8*%ks,i64 -4
%ku=bitcast i8*%kt to i32*
store i32 1342177304,i32*%ku,align 4
%kv=load i8*,i8**%i,align 8
%kw=bitcast i8*%ks to i8**
store i8*%kv,i8**%kw,align 8
%kx=load i8*,i8**%h,align 8
%ky=getelementptr inbounds i8,i8*%ks,i64 8
%kz=bitcast i8*%ky to i8**
store i8*%kx,i8**%kz,align 8
%kA=load i8*,i8**%j,align 8
%kB=getelementptr inbounds i8,i8*%ks,i64 16
%kC=bitcast i8*%kB to i8**
store i8*%kA,i8**%kC,align 8
%kD=getelementptr inbounds i8,i8*%ks,i64 24
%kE=bitcast i8*%kD to i32*
store i32 7,i32*%kE,align 4
%kF=call fastcc i8*@_SMLFN12TypedCalcCon6TPTAPPE(i8*inreg%ks)
ret i8*%kF
kG:
%kH=getelementptr inbounds i8,i8*%A,i64 8
%kI=bitcast i8*%kH to i8**
%kJ=load i8*,i8**%kI,align 8
store i8*%kJ,i8**%g,align 8
%kK=getelementptr inbounds i8,i8*%kJ,i64 8
%kL=bitcast i8*%kK to i8**
%kM=load i8*,i8**%kL,align 8
store i8*%kM,i8**%h,align 8
%kN=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%kO=getelementptr inbounds i8,i8*%kN,i64 8
%kP=bitcast i8*%kO to i8**
%kQ=load i8*,i8**%kP,align 8
store i8*null,i8**%m,align 8
%kR=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%kQ,i8*inreg%x)
%kS=getelementptr inbounds i8,i8*%kR,i64 16
%kT=bitcast i8*%kS to i8*(i8*,i8*)**
%kU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kT,align 8
%kV=bitcast i8*%kR to i8**
%kW=load i8*,i8**%kV,align 8
%kX=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%kY=call fastcc i8*%kU(i8*inreg%kW,i8*inreg%kX)
%kZ=getelementptr inbounds i8,i8*%kY,i64 16
%k0=bitcast i8*%kZ to i8*(i8*,i8*)**
%k1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k0,align 8
%k2=bitcast i8*%kY to i8**
%k3=load i8*,i8**%k2,align 8
%k4=bitcast i8**%g to i8***
%k5=load i8**,i8***%k4,align 8
store i8*null,i8**%g,align 8
%k6=load i8*,i8**%k5,align 8
%k7=call fastcc i8*%k1(i8*inreg%k3,i8*inreg%k6)
store i8*%k7,i8**%g,align 8
%k8=call i8*@sml_alloc(i32 inreg 20)#0
%k9=getelementptr inbounds i8,i8*%k8,i64 -4
%la=bitcast i8*%k9 to i32*
store i32 1342177296,i32*%la,align 4
%lb=load i8*,i8**%g,align 8
%lc=bitcast i8*%k8 to i8**
store i8*%lb,i8**%lc,align 8
%ld=load i8*,i8**%h,align 8
%le=getelementptr inbounds i8,i8*%k8,i64 8
%lf=bitcast i8*%le to i8**
store i8*%ld,i8**%lf,align 8
%lg=getelementptr inbounds i8,i8*%k8,i64 16
%lh=bitcast i8*%lg to i32*
store i32 3,i32*%lh,align 4
%li=call fastcc i8*@_SMLFN12TypedCalcCon8TPSIZEOFE(i8*inreg%k8)
ret i8*%li
lj:
%lk=getelementptr inbounds i8,i8*%A,i64 8
%ll=bitcast i8*%lk to i8**
%lm=load i8*,i8**%ll,align 8
store i8*%lm,i8**%g,align 8
%ln=getelementptr inbounds i8,i8*%lm,i64 16
%lo=bitcast i8*%ln to i8**
%lp=load i8*,i8**%lo,align 8
store i8*%lp,i8**%h,align 8
%lq=getelementptr inbounds i8,i8*%lm,i64 24
%lr=bitcast i8*%lq to i8**
%ls=load i8*,i8**%lr,align 8
store i8*%ls,i8**%i,align 8
%lt=load i8**,i8***%C,align 8
%lu=load i8*,i8**%lt,align 8
store i8*%lu,i8**%j,align 8
%lv=call i8*@sml_alloc(i32 inreg 12)#0
%lw=getelementptr inbounds i8,i8*%lv,i64 -4
%lx=bitcast i8*%lw to i32*
store i32 1342177288,i32*%lx,align 4
%ly=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%lz=bitcast i8*%lv to i8**
store i8*%ly,i8**%lz,align 8
%lA=getelementptr inbounds i8,i8*%lv,i64 8
%lB=bitcast i8*%lA to i32*
store i32 1,i32*%lB,align 4
%lC=call fastcc i8*@_SMLFN12TypedCalcCon8TPSELECTE(i8*inreg%lv)
%lD=getelementptr inbounds i8,i8*%lC,i64 16
%lE=bitcast i8*%lD to i8*(i8*,i8*)**
%lF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%lE,align 8
%lG=bitcast i8*%lC to i8**
%lH=load i8*,i8**%lG,align 8
store i8*%lH,i8**%j,align 8
%lI=bitcast i8**%g to i8***
%lJ=load i8**,i8***%lI,align 8
store i8*null,i8**%g,align 8
%lK=load i8*,i8**%lJ,align 8
%lL=load i8*,i8**%l,align 8
%lM=load i8*,i8**%m,align 8
%lN=load i8*,i8**%p,align 8
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%p,align 8
%lO=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%lN,i8*inreg%lM,i8*inreg%lL,i8*inreg%lK)
store i8*%lO,i8**%g,align 8
%lP=call i8*@sml_alloc(i32 inreg 28)#0
%lQ=getelementptr inbounds i8,i8*%lP,i64 -4
%lR=bitcast i8*%lQ to i32*
store i32 1342177304,i32*%lR,align 4
%lS=load i8*,i8**%g,align 8
%lT=bitcast i8*%lP to i8**
store i8*%lS,i8**%lT,align 8
%lU=load i8*,i8**%h,align 8
%lV=getelementptr inbounds i8,i8*%lP,i64 8
%lW=bitcast i8*%lV to i8**
store i8*%lU,i8**%lW,align 8
%lX=load i8*,i8**%i,align 8
%lY=getelementptr inbounds i8,i8*%lP,i64 16
%lZ=bitcast i8*%lY to i8**
store i8*%lX,i8**%lZ,align 8
%l0=getelementptr inbounds i8,i8*%lP,i64 24
%l1=bitcast i8*%l0 to i32*
store i32 7,i32*%l1,align 4
%l2=load i8*,i8**%j,align 8
%l3=call fastcc i8*%lF(i8*inreg%l2,i8*inreg%lP)
ret i8*%l3
l4:
%l5=getelementptr inbounds i8,i8*%A,i64 8
%l6=bitcast i8*%l5 to i8**
%l7=load i8*,i8**%l6,align 8
store i8*%l7,i8**%g,align 8
%l8=getelementptr inbounds i8,i8*%l7,i64 8
%l9=bitcast i8*%l8 to i8**
%ma=load i8*,i8**%l9,align 8
store i8*%ma,i8**%h,align 8
%mb=call fastcc i8*@_SMLFN11RecordLabel3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%mc=getelementptr inbounds i8,i8*%mb,i64 16
%md=bitcast i8*%mc to i8*(i8*,i8*)**
%me=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%md,align 8
%mf=bitcast i8*%mb to i8**
%mg=load i8*,i8**%mf,align 8
store i8*%mg,i8**%i,align 8
%mh=call i8*@sml_alloc(i32 inreg 28)#0
%mi=getelementptr inbounds i8,i8*%mh,i64 -4
%mj=bitcast i8*%mi to i32*
store i32 1342177304,i32*%mj,align 4
store i8*%mh,i8**%j,align 8
%mk=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%ml=bitcast i8*%mh to i8**
store i8*%mk,i8**%ml,align 8
%mm=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%mn=getelementptr inbounds i8,i8*%mh,i64 8
%mo=bitcast i8*%mn to i8**
store i8*%mm,i8**%mo,align 8
%mp=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%mq=getelementptr inbounds i8,i8*%mh,i64 16
%mr=bitcast i8*%mq to i8**
store i8*%mp,i8**%mr,align 8
%ms=getelementptr inbounds i8,i8*%mh,i64 24
%mt=bitcast i8*%ms to i32*
store i32 7,i32*%mt,align 4
%mu=call i8*@sml_alloc(i32 inreg 28)#0
%mv=getelementptr inbounds i8,i8*%mu,i64 -4
%mw=bitcast i8*%mv to i32*
store i32 1342177304,i32*%mw,align 4
%mx=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%my=bitcast i8*%mu to i8**
store i8*%mx,i8**%my,align 8
%mz=getelementptr inbounds i8,i8*%mu,i64 8
%mA=bitcast i8*%mz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1230 to void(...)*),void(...)**%mA,align 8
%mB=getelementptr inbounds i8,i8*%mu,i64 16
%mC=bitcast i8*%mB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1230 to void(...)*),void(...)**%mC,align 8
%mD=getelementptr inbounds i8,i8*%mu,i64 24
%mE=bitcast i8*%mD to i32*
store i32 -2147483647,i32*%mE,align 4
%mF=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%mG=call fastcc i8*%me(i8*inreg%mF,i8*inreg%mu)
%mH=getelementptr inbounds i8,i8*%mG,i64 16
%mI=bitcast i8*%mH to i8*(i8*,i8*)**
%mJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mI,align 8
%mK=bitcast i8*%mG to i8**
%mL=load i8*,i8**%mK,align 8
%mM=bitcast i8**%g to i8***
%mN=load i8**,i8***%mM,align 8
store i8*null,i8**%g,align 8
%mO=load i8*,i8**%mN,align 8
%mP=call fastcc i8*%mJ(i8*inreg%mL,i8*inreg%mO)
store i8*%mP,i8**%g,align 8
%mQ=call i8*@sml_alloc(i32 inreg 20)#0
%mR=getelementptr inbounds i8,i8*%mQ,i64 -4
%mS=bitcast i8*%mR to i32*
store i32 1342177296,i32*%mS,align 4
%mT=load i8*,i8**%g,align 8
%mU=bitcast i8*%mQ to i8**
store i8*%mT,i8**%mU,align 8
%mV=load i8*,i8**%h,align 8
%mW=getelementptr inbounds i8,i8*%mQ,i64 8
%mX=bitcast i8*%mW to i8**
store i8*%mV,i8**%mX,align 8
%mY=getelementptr inbounds i8,i8*%mQ,i64 16
%mZ=bitcast i8*%mY to i32*
store i32 3,i32*%mZ,align 4
%m0=call fastcc i8*@_SMLFN12TypedCalcCon8TPRECORDE(i8*inreg%mQ)
ret i8*%m0
m1:
store i8*null,i8**%m,align 8
store i8*null,i8**%p,align 8
%m2=getelementptr inbounds i8,i8*%A,i64 8
%m3=bitcast i8*%m2 to i8**
%m4=load i8*,i8**%m3,align 8
store i8*%m4,i8**%g,align 8
%m5=bitcast i8*%m4 to i32*
%m6=load i32,i32*%m5,align 4
%m7=call fastcc i8*@_SMLFN5VarID3Map4findE(i32 inreg 1,i32 inreg 8)
%m8=getelementptr inbounds i8,i8*%m7,i64 16
%m9=bitcast i8*%m8 to i8*(i8*,i8*)**
%na=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m9,align 8
%nb=bitcast i8*%m7 to i8**
%nc=load i8*,i8**%nb,align 8
store i8*%nc,i8**%i,align 8
%nd=bitcast i8**%l to i8***
%ne=load i8**,i8***%nd,align 8
store i8*null,i8**%l,align 8
%nf=load i8*,i8**%ne,align 8
%ng=getelementptr inbounds i8,i8*%nf,i64 32
%nh=bitcast i8*%ng to i8**
%ni=load i8*,i8**%nh,align 8
store i8*%ni,i8**%h,align 8
%nj=load i8*,i8**%g,align 8
%nk=getelementptr inbounds i8,i8*%nj,i64 8
%nl=bitcast i8*%nk to i32**
%nm=load i32*,i32**%nl,align 8
%nn=load i32,i32*%nm,align 4
%no=call i8*@sml_alloc(i32 inreg 20)#0
%np=getelementptr inbounds i8,i8*%no,i64 -4
%nq=bitcast i8*%np to i32*
store i32 1342177296,i32*%nq,align 4
%nr=getelementptr inbounds i8,i8*%no,i64 12
%ns=bitcast i8*%nr to i32*
store i32 0,i32*%ns,align 1
%nt=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%nu=bitcast i8*%no to i8**
store i8*%nt,i8**%nu,align 8
%nv=getelementptr inbounds i8,i8*%no,i64 8
%nw=bitcast i8*%nv to i32*
store i32%nn,i32*%nw,align 4
%nx=getelementptr inbounds i8,i8*%no,i64 16
%ny=bitcast i8*%nx to i32*
store i32 1,i32*%ny,align 4
%nz=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%nA=call fastcc i8*%na(i8*inreg%nz,i8*inreg%no)
%nB=icmp eq i8*%nA,null
br i1%nB,label%nC,label%nY
nC:
%nD=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%nD,i8**%g,align 8
%nE=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bT,i64 0,i32 2)to i8*))
store i8*%nE,i8**%h,align 8
%nF=call i8*@sml_alloc(i32 inreg 28)#0
%nG=getelementptr inbounds i8,i8*%nF,i64 -4
%nH=bitcast i8*%nG to i32*
store i32 1342177304,i32*%nH,align 4
store i8*%nF,i8**%i,align 8
%nI=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%nJ=bitcast i8*%nF to i8**
store i8*%nI,i8**%nJ,align 8
%nK=getelementptr inbounds i8,i8*%nF,i64 8
%nL=bitcast i8*%nK to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%nL,align 8
%nM=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%nN=getelementptr inbounds i8,i8*%nF,i64 16
%nO=bitcast i8*%nN to i8**
store i8*%nM,i8**%nO,align 8
%nP=getelementptr inbounds i8,i8*%nF,i64 24
%nQ=bitcast i8*%nP to i32*
store i32 7,i32*%nQ,align 4
%nR=call i8*@sml_alloc(i32 inreg 60)#0
%nS=getelementptr inbounds i8,i8*%nR,i64 -4
%nT=bitcast i8*%nS to i32*
store i32 1342177336,i32*%nT,align 4
%nU=getelementptr inbounds i8,i8*%nR,i64 56
%nV=bitcast i8*%nU to i32*
store i32 1,i32*%nV,align 4
%nW=load i8*,i8**%i,align 8
%nX=bitcast i8*%nR to i8**
store i8*%nW,i8**%nX,align 8
call void@sml_raise(i8*inreg%nR)#1
unreachable
nY:
%nZ=bitcast i8*%nA to i8**
%n0=load i8*,i8**%nZ,align 8
%n1=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%n2=getelementptr inbounds i8,i8*%n1,i64 8
%n3=bitcast i8*%n2 to i8**
%n4=load i8*,i8**%n3,align 8
%n5=bitcast i8*%n4 to i32*
%n6=load i32,i32*%n5,align 4
%n7=getelementptr inbounds i8,i8*%n4,i64 4
%n8=bitcast i8*%n7 to i32*
%n9=load i32,i32*%n8,align 4
%oa=getelementptr inbounds i8,i8*%n4,i64 8
%ob=bitcast i8*%oa to i8**
%oc=load i8*,i8**%ob,align 8
store i8*%oc,i8**%h,align 8
%od=getelementptr inbounds i8,i8*%n0,i64 16
%oe=bitcast i8*%od to i8**
%of=load i8*,i8**%oe,align 8
store i8*%of,i8**%i,align 8
%og=call i8*@sml_alloc(i32 inreg 28)#0
%oh=bitcast i8*%og to i32*
%oi=getelementptr inbounds i8,i8*%og,i64 -4
%oj=bitcast i8*%oi to i32*
store i32 1342177304,i32*%oj,align 4
store i8*%og,i8**%g,align 8
store i32%n6,i32*%oh,align 4
%ok=getelementptr inbounds i8,i8*%og,i64 4
%ol=bitcast i8*%ok to i32*
store i32%n9,i32*%ol,align 4
%om=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%on=getelementptr inbounds i8,i8*%og,i64 8
%oo=bitcast i8*%on to i8**
store i8*%om,i8**%oo,align 8
%op=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%oq=getelementptr inbounds i8,i8*%og,i64 16
%or=bitcast i8*%oq to i8**
store i8*%op,i8**%or,align 8
%os=getelementptr inbounds i8,i8*%og,i64 24
%ot=bitcast i8*%os to i32*
store i32 6,i32*%ot,align 4
%ou=call i8*@sml_alloc(i32 inreg 20)#0
%ov=bitcast i8*%ou to i32*
%ow=getelementptr inbounds i8,i8*%ou,i64 -4
%ox=bitcast i8*%ow to i32*
store i32 1342177296,i32*%ox,align 4
%oy=getelementptr inbounds i8,i8*%ou,i64 4
%oz=bitcast i8*%oy to i32*
store i32 0,i32*%oz,align 1
store i32%m6,i32*%ov,align 4
%oA=load i8*,i8**%g,align 8
%oB=getelementptr inbounds i8,i8*%ou,i64 8
%oC=bitcast i8*%oB to i8**
store i8*%oA,i8**%oC,align 8
%oD=getelementptr inbounds i8,i8*%ou,i64 16
%oE=bitcast i8*%oD to i32*
store i32 2,i32*%oE,align 4
%oF=call fastcc i8*@_SMLFN12TypedCalcCon11TPRECFUNVARE(i8*inreg%ou)
ret i8*%oF
oG:
%oH=getelementptr inbounds i8,i8*%A,i64 8
%oI=bitcast i8*%oH to i8**
%oJ=load i8*,i8**%oI,align 8
store i8*%oJ,i8**%h,align 8
%oK=getelementptr inbounds i8,i8*%oJ,i64 8
%oL=bitcast i8*%oK to i8**
%oM=load i8*,i8**%oL,align 8
store i8*%oM,i8**%i,align 8
%oN=bitcast i8*%oJ to i8**
%oO=load i8*,i8**%oN,align 8
%oP=load i8*,i8**%p,align 8
%oQ=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%oP,i8*inreg%x,i8*inreg%z,i8*inreg%oO)
store i8*%oQ,i8**%g,align 8
%oR=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%oS=getelementptr inbounds i8,i8*%oR,i64 8
%oT=bitcast i8*%oS to i8**
%oU=load i8*,i8**%oT,align 8
%oV=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%oW=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%oU,i8*inreg%oV)
%oX=getelementptr inbounds i8,i8*%oW,i64 16
%oY=bitcast i8*%oX to i8*(i8*,i8*)**
%oZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%oY,align 8
%o0=bitcast i8*%oW to i8**
%o1=load i8*,i8**%o0,align 8
%o2=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%o3=call fastcc i8*%oZ(i8*inreg%o1,i8*inreg%o2)
%o4=getelementptr inbounds i8,i8*%o3,i64 16
%o5=bitcast i8*%o4 to i8*(i8*,i8*)**
%o6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o5,align 8
%o7=bitcast i8*%o3 to i8**
%o8=load i8*,i8**%o7,align 8
%o9=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%pa=getelementptr inbounds i8,i8*%o9,i64 16
%pb=bitcast i8*%pa to i8**
%pc=load i8*,i8**%pb,align 8
%pd=call fastcc i8*%o6(i8*inreg%o8,i8*inreg%pc)
store i8*%pd,i8**%h,align 8
%pe=call i8*@sml_alloc(i32 inreg 28)#0
%pf=getelementptr inbounds i8,i8*%pe,i64 -4
%pg=bitcast i8*%pf to i32*
store i32 1342177304,i32*%pg,align 4
%ph=load i8*,i8**%g,align 8
%pi=bitcast i8*%pe to i8**
store i8*%ph,i8**%pi,align 8
%pj=load i8*,i8**%i,align 8
%pk=getelementptr inbounds i8,i8*%pe,i64 8
%pl=bitcast i8*%pk to i8**
store i8*%pj,i8**%pl,align 8
%pm=load i8*,i8**%h,align 8
%pn=getelementptr inbounds i8,i8*%pe,i64 16
%po=bitcast i8*%pn to i8**
store i8*%pm,i8**%po,align 8
%pp=getelementptr inbounds i8,i8*%pe,i64 24
%pq=bitcast i8*%pp to i32*
store i32 7,i32*%pq,align 4
%pr=call fastcc i8*@_SMLFN12TypedCalcCon7TPRAISEE(i8*inreg%pe)
ret i8*%pr
ps:
%pt=getelementptr inbounds i8,i8*%A,i64 8
%pu=bitcast i8*%pt to i8**
%pv=load i8*,i8**%pu,align 8
store i8*%pv,i8**%i,align 8
%pw=getelementptr inbounds i8,i8*%pv,i64 16
%px=bitcast i8*%pw to i8**
%py=load i8*,i8**%px,align 8
store i8*%py,i8**%j,align 8
%pz=load i8*,i8**%p,align 8
%pA=getelementptr inbounds i8,i8*%pz,i64 16
%pB=bitcast i8*%pA to i8**
%pC=load i8*,i8**%pB,align 8
%pD=call fastcc i8*@_SMLLN17PolyTyElimination15analyzePrimInfoE_1134(i8*inreg%pC,i8*inreg%x)
%pE=getelementptr inbounds i8,i8*%pD,i64 16
%pF=bitcast i8*%pE to i8*(i8*,i8*)**
%pG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%pF,align 8
%pH=bitcast i8*%pD to i8**
%pI=load i8*,i8**%pH,align 8
%pJ=load i8*,i8**%l,align 8
%pK=call fastcc i8*%pG(i8*inreg%pI,i8*inreg%pJ)
%pL=getelementptr inbounds i8,i8*%pK,i64 16
%pM=bitcast i8*%pL to i8*(i8*,i8*)**
%pN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%pM,align 8
%pO=bitcast i8*%pK to i8**
%pP=load i8*,i8**%pO,align 8
%pQ=load i8*,i8**%i,align 8
%pR=getelementptr inbounds i8,i8*%pQ,i64 24
%pS=bitcast i8*%pR to i8**
%pT=load i8*,i8**%pS,align 8
%pU=call fastcc i8*%pN(i8*inreg%pP,i8*inreg%pT)
store i8*%pU,i8**%g,align 8
%pV=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%pW=getelementptr inbounds i8,i8*%pV,i64 16
%pX=bitcast i8*%pW to i8*(i8*,i8*)**
%pY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%pX,align 8
%pZ=bitcast i8*%pV to i8**
%p0=load i8*,i8**%pZ,align 8
store i8*%p0,i8**%k,align 8
%p1=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%p2=getelementptr inbounds i8,i8*%p1,i64 16
%p3=bitcast i8*%p2 to i8*(i8*,i8*)**
%p4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p3,align 8
%p5=bitcast i8*%p1 to i8**
%p6=load i8*,i8**%p5,align 8
store i8*%p6,i8**%h,align 8
%p7=load i8*,i8**%p,align 8
%p8=getelementptr inbounds i8,i8*%p7,i64 8
%p9=bitcast i8*%p8 to i8**
%qa=load i8*,i8**%p9,align 8
%qb=load i8*,i8**%m,align 8
%qc=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%qa,i8*inreg%qb)
%qd=getelementptr inbounds i8,i8*%qc,i64 16
%qe=bitcast i8*%qd to i8*(i8*,i8*)**
%qf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qe,align 8
%qg=bitcast i8*%qc to i8**
%qh=load i8*,i8**%qg,align 8
%qi=load i8*,i8**%l,align 8
%qj=call fastcc i8*%qf(i8*inreg%qh,i8*inreg%qi)
%qk=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ql=call fastcc i8*%p4(i8*inreg%qk,i8*inreg%qj)
%qm=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%qn=call fastcc i8*%pY(i8*inreg%qm,i8*inreg%ql)
%qo=getelementptr inbounds i8,i8*%qn,i64 16
%qp=bitcast i8*%qo to i8*(i8*,i8*)**
%qq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qp,align 8
%qr=bitcast i8*%qn to i8**
%qs=load i8*,i8**%qr,align 8
%qt=load i8*,i8**%i,align 8
%qu=getelementptr inbounds i8,i8*%qt,i64 8
%qv=bitcast i8*%qu to i8**
%qw=load i8*,i8**%qv,align 8
%qx=call fastcc i8*%qq(i8*inreg%qs,i8*inreg%qw)
store i8*%qx,i8**%h,align 8
%qy=bitcast i8**%i to i8***
%qz=load i8**,i8***%qy,align 8
store i8*null,i8**%i,align 8
%qA=load i8*,i8**%qz,align 8
%qB=load i8*,i8**%l,align 8
%qC=load i8*,i8**%m,align 8
%qD=load i8*,i8**%p,align 8
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%p,align 8
%qE=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%qD,i8*inreg%qC,i8*inreg%qB,i8*inreg%qA)
store i8*%qE,i8**%i,align 8
%qF=call i8*@sml_alloc(i32 inreg 36)#0
%qG=getelementptr inbounds i8,i8*%qF,i64 -4
%qH=bitcast i8*%qG to i32*
store i32 1342177312,i32*%qH,align 4
%qI=load i8*,i8**%i,align 8
%qJ=bitcast i8*%qF to i8**
store i8*%qI,i8**%qJ,align 8
%qK=load i8*,i8**%h,align 8
%qL=getelementptr inbounds i8,i8*%qF,i64 8
%qM=bitcast i8*%qL to i8**
store i8*%qK,i8**%qM,align 8
%qN=load i8*,i8**%j,align 8
%qO=getelementptr inbounds i8,i8*%qF,i64 16
%qP=bitcast i8*%qO to i8**
store i8*%qN,i8**%qP,align 8
%qQ=load i8*,i8**%g,align 8
%qR=getelementptr inbounds i8,i8*%qF,i64 24
%qS=bitcast i8*%qR to i8**
store i8*%qQ,i8**%qS,align 8
%qT=getelementptr inbounds i8,i8*%qF,i64 32
%qU=bitcast i8*%qT to i32*
store i32 15,i32*%qU,align 4
%qV=call fastcc i8*@_SMLFN12TypedCalcCon11TPPRIMAPPLYE(i8*inreg%qF)
ret i8*%qV
qW:
%qX=getelementptr inbounds i8,i8*%A,i64 8
%qY=bitcast i8*%qX to i8**
%qZ=load i8*,i8**%qY,align 8
store i8*%qZ,i8**%j,align 8
%q0=getelementptr inbounds i8,i8*%qZ,i64 32
%q1=bitcast i8*%q0 to i8**
%q2=load i8*,i8**%q1,align 8
store i8*%q2,i8**%k,align 8
%q3=load i8*,i8**%p,align 8
%q4=getelementptr inbounds i8,i8*%q3,i64 48
%q5=bitcast i8*%q4 to i8**
%q6=load i8*,i8**%q5,align 8
%q7=call fastcc i8*@_SMLLN17PolyTyElimination13analyzeBtvEnvE_1150(i8*inreg%q6,i8*inreg%x)
%q8=getelementptr inbounds i8,i8*%q7,i64 16
%q9=bitcast i8*%q8 to i8*(i8*,i8*)**
%ra=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q9,align 8
%rb=bitcast i8*%q7 to i8**
%rc=load i8*,i8**%rb,align 8
%rd=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%re=call fastcc i8*%ra(i8*inreg%rc,i8*inreg%rd)
%rf=getelementptr inbounds i8,i8*%re,i64 16
%rg=bitcast i8*%rf to i8*(i8*,i8*)**
%rh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rg,align 8
%ri=bitcast i8*%re to i8**
%rj=load i8*,i8**%ri,align 8
%rk=bitcast i8**%j to i8***
%rl=load i8**,i8***%rk,align 8
%rm=load i8*,i8**%rl,align 8
%rn=call fastcc i8*%rh(i8*inreg%rj,i8*inreg%rm)
store i8*%rn,i8**%h,align 8
%ro=bitcast i8*%rn to i8**
%rp=load i8*,i8**%ro,align 8
store i8*%rp,i8**%g,align 8
%rq=load i8*,i8**%p,align 8
%rr=getelementptr inbounds i8,i8*%rq,i64 40
%rs=bitcast i8*%rr to i8**
%rt=load i8*,i8**%rs,align 8
%ru=load i8*,i8**%m,align 8
%rv=call fastcc i8*@_SMLLN17PolyTyElimination18analyzeConstraintsE_1147(i8*inreg%rt,i8*inreg%ru)
%rw=getelementptr inbounds i8,i8*%rv,i64 16
%rx=bitcast i8*%rw to i8*(i8*,i8*)**
%ry=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rx,align 8
%rz=bitcast i8*%rv to i8**
%rA=load i8*,i8**%rz,align 8
%rB=load i8*,i8**%h,align 8
%rC=getelementptr inbounds i8,i8*%rB,i64 8
%rD=bitcast i8*%rC to i8**
%rE=load i8*,i8**%rD,align 8
%rF=call fastcc i8*%ry(i8*inreg%rA,i8*inreg%rE)
%rG=getelementptr inbounds i8,i8*%rF,i64 16
%rH=bitcast i8*%rG to i8*(i8*,i8*)**
%rI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rH,align 8
%rJ=bitcast i8*%rF to i8**
%rK=load i8*,i8**%rJ,align 8
%rL=load i8*,i8**%j,align 8
%rM=getelementptr inbounds i8,i8*%rL,i64 8
%rN=bitcast i8*%rM to i8**
%rO=load i8*,i8**%rN,align 8
%rP=call fastcc i8*%rI(i8*inreg%rK,i8*inreg%rO)
store i8*%rP,i8**%i,align 8
%rQ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%rR=getelementptr inbounds i8,i8*%rQ,i64 8
%rS=bitcast i8*%rR to i8**
%rT=load i8*,i8**%rS,align 8
%rU=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%rV=getelementptr inbounds i8,i8*%rU,i64 16
%rW=bitcast i8*%rV to i8**
%rX=load i8*,i8**%rW,align 8
%rY=load i8*,i8**%m,align 8
%rZ=load i8*,i8**%p,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%p,align 8
%r0=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%rZ,i8*inreg%rY,i8*inreg%rT,i8*inreg%rX)
store i8*%r0,i8**%h,align 8
%r1=call i8*@sml_alloc(i32 inreg 36)#0
%r2=getelementptr inbounds i8,i8*%r1,i64 -4
%r3=bitcast i8*%r2 to i32*
store i32 1342177312,i32*%r3,align 4
%r4=load i8*,i8**%g,align 8
%r5=bitcast i8*%r1 to i8**
store i8*%r4,i8**%r5,align 8
%r6=load i8*,i8**%i,align 8
%r7=getelementptr inbounds i8,i8*%r1,i64 8
%r8=bitcast i8*%r7 to i8**
store i8*%r6,i8**%r8,align 8
%r9=load i8*,i8**%h,align 8
%sa=getelementptr inbounds i8,i8*%r1,i64 16
%sb=bitcast i8*%sa to i8**
store i8*%r9,i8**%sb,align 8
%sc=load i8*,i8**%k,align 8
%sd=getelementptr inbounds i8,i8*%r1,i64 24
%se=bitcast i8*%sd to i8**
store i8*%sc,i8**%se,align 8
%sf=getelementptr inbounds i8,i8*%r1,i64 32
%sg=bitcast i8*%sf to i32*
store i32 15,i32*%sg,align 4
%sh=call fastcc i8*@_SMLFN12TypedCalcCon6TPPOLYE(i8*inreg%r1)
ret i8*%sh
si:
%sj=getelementptr inbounds i8,i8*%A,i64 8
%sk=bitcast i8*%sj to i8**
%sl=load i8*,i8**%sk,align 8
store i8*%sl,i8**%i,align 8
%sm=getelementptr inbounds i8,i8*%sl,i64 16
%sn=bitcast i8*%sm to i8**
%so=load i8*,i8**%sn,align 8
store i8*%so,i8**%j,align 8
%sp=load i8*,i8**%p,align 8
%sq=getelementptr inbounds i8,i8*%sp,i64 24
%sr=bitcast i8*%sq to i8**
%ss=load i8*,i8**%sr,align 8
%st=call fastcc i8*@_SMLLN17PolyTyElimination16analyzeOPrimInfoE_1137(i8*inreg%ss,i8*inreg%x)
%su=getelementptr inbounds i8,i8*%st,i64 16
%sv=bitcast i8*%su to i8*(i8*,i8*)**
%sw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%sv,align 8
%sx=bitcast i8*%st to i8**
%sy=load i8*,i8**%sx,align 8
%sz=load i8*,i8**%l,align 8
%sA=call fastcc i8*%sw(i8*inreg%sy,i8*inreg%sz)
%sB=getelementptr inbounds i8,i8*%sA,i64 16
%sC=bitcast i8*%sB to i8*(i8*,i8*)**
%sD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%sC,align 8
%sE=bitcast i8*%sA to i8**
%sF=load i8*,i8**%sE,align 8
%sG=load i8*,i8**%i,align 8
%sH=getelementptr inbounds i8,i8*%sG,i64 24
%sI=bitcast i8*%sH to i8**
%sJ=load i8*,i8**%sI,align 8
%sK=call fastcc i8*%sD(i8*inreg%sF,i8*inreg%sJ)
store i8*%sK,i8**%g,align 8
%sL=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%sM=getelementptr inbounds i8,i8*%sL,i64 16
%sN=bitcast i8*%sM to i8*(i8*,i8*)**
%sO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%sN,align 8
%sP=bitcast i8*%sL to i8**
%sQ=load i8*,i8**%sP,align 8
store i8*%sQ,i8**%h,align 8
%sR=load i8*,i8**%p,align 8
%sS=getelementptr inbounds i8,i8*%sR,i64 8
%sT=bitcast i8*%sS to i8**
%sU=load i8*,i8**%sT,align 8
%sV=load i8*,i8**%m,align 8
%sW=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%sU,i8*inreg%sV)
%sX=getelementptr inbounds i8,i8*%sW,i64 16
%sY=bitcast i8*%sX to i8*(i8*,i8*)**
%sZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%sY,align 8
%s0=bitcast i8*%sW to i8**
%s1=load i8*,i8**%s0,align 8
%s2=load i8*,i8**%l,align 8
%s3=call fastcc i8*%sZ(i8*inreg%s1,i8*inreg%s2)
%s4=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%s5=call fastcc i8*%sO(i8*inreg%s4,i8*inreg%s3)
%s6=getelementptr inbounds i8,i8*%s5,i64 16
%s7=bitcast i8*%s6 to i8*(i8*,i8*)**
%s8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s7,align 8
%s9=bitcast i8*%s5 to i8**
%ta=load i8*,i8**%s9,align 8
%tb=load i8*,i8**%i,align 8
%tc=getelementptr inbounds i8,i8*%tb,i64 8
%td=bitcast i8*%tc to i8**
%te=load i8*,i8**%td,align 8
%tf=call fastcc i8*%s8(i8*inreg%ta,i8*inreg%te)
store i8*%tf,i8**%h,align 8
%tg=bitcast i8**%i to i8***
%th=load i8**,i8***%tg,align 8
store i8*null,i8**%i,align 8
%ti=load i8*,i8**%th,align 8
%tj=load i8*,i8**%l,align 8
%tk=load i8*,i8**%m,align 8
%tl=load i8*,i8**%p,align 8
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%p,align 8
%tm=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%tl,i8*inreg%tk,i8*inreg%tj,i8*inreg%ti)
store i8*%tm,i8**%i,align 8
%tn=call i8*@sml_alloc(i32 inreg 36)#0
%to=getelementptr inbounds i8,i8*%tn,i64 -4
%tp=bitcast i8*%to to i32*
store i32 1342177312,i32*%tp,align 4
%tq=load i8*,i8**%i,align 8
%tr=bitcast i8*%tn to i8**
store i8*%tq,i8**%tr,align 8
%ts=load i8*,i8**%h,align 8
%tt=getelementptr inbounds i8,i8*%tn,i64 8
%tu=bitcast i8*%tt to i8**
store i8*%ts,i8**%tu,align 8
%tv=load i8*,i8**%j,align 8
%tw=getelementptr inbounds i8,i8*%tn,i64 16
%tx=bitcast i8*%tw to i8**
store i8*%tv,i8**%tx,align 8
%ty=load i8*,i8**%g,align 8
%tz=getelementptr inbounds i8,i8*%tn,i64 24
%tA=bitcast i8*%tz to i8**
store i8*%ty,i8**%tA,align 8
%tB=getelementptr inbounds i8,i8*%tn,i64 32
%tC=bitcast i8*%tB to i32*
store i32 15,i32*%tC,align 4
%tD=call fastcc i8*@_SMLFN12TypedCalcCon12TPOPRIMAPPLYE(i8*inreg%tn)
ret i8*%tD
tE:
%tF=getelementptr inbounds i8,i8*%A,i64 8
%tG=bitcast i8*%tF to i8**
%tH=load i8*,i8**%tG,align 8
store i8*%tH,i8**%h,align 8
%tI=getelementptr inbounds i8,i8*%tH,i64 16
%tJ=bitcast i8*%tI to i8**
%tK=load i8*,i8**%tJ,align 8
store i8*%tK,i8**%i,align 8
%tL=bitcast i8*%tH to i8**
%tM=load i8*,i8**%tL,align 8
%tN=load i8*,i8**%p,align 8
store i8*null,i8**%l,align 8
%tO=call fastcc i8*@_SMLLN17PolyTyElimination14analyzeMonoLetE_1169(i8*inreg%tN,i8*inreg%x,i8*inreg%z,i8*inreg%tM)
%tP=bitcast i8*%tO to i8**
%tQ=load i8*,i8**%tP,align 8
store i8*%tQ,i8**%g,align 8
%tR=getelementptr inbounds i8,i8*%tO,i64 8
%tS=bitcast i8*%tR to i8**
%tT=load i8*,i8**%tS,align 8
%tU=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%tV=getelementptr inbounds i8,i8*%tU,i64 8
%tW=bitcast i8*%tV to i8**
%tX=load i8*,i8**%tW,align 8
%tY=load i8*,i8**%m,align 8
%tZ=load i8*,i8**%p,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%p,align 8
%t0=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%tZ,i8*inreg%tY,i8*inreg%tT,i8*inreg%tX)
store i8*%t0,i8**%h,align 8
%t1=call i8*@sml_alloc(i32 inreg 28)#0
%t2=getelementptr inbounds i8,i8*%t1,i64 -4
%t3=bitcast i8*%t2 to i32*
store i32 1342177304,i32*%t3,align 4
%t4=load i8*,i8**%g,align 8
%t5=bitcast i8*%t1 to i8**
store i8*%t4,i8**%t5,align 8
%t6=load i8*,i8**%h,align 8
%t7=getelementptr inbounds i8,i8*%t1,i64 8
%t8=bitcast i8*%t7 to i8**
store i8*%t6,i8**%t8,align 8
%t9=load i8*,i8**%i,align 8
%ua=getelementptr inbounds i8,i8*%t1,i64 16
%ub=bitcast i8*%ua to i8**
store i8*%t9,i8**%ub,align 8
%uc=getelementptr inbounds i8,i8*%t1,i64 24
%ud=bitcast i8*%uc to i32*
store i32 7,i32*%ud,align 4
%ue=call fastcc i8*@_SMLFN12TypedCalcCon9TPMONOLETE(i8*inreg%t1)
ret i8*%ue
uf:
%ug=getelementptr inbounds i8,i8*%A,i64 8
%uh=bitcast i8*%ug to i8**
%ui=load i8*,i8**%uh,align 8
store i8*%ui,i8**%h,align 8
%uj=getelementptr inbounds i8,i8*%ui,i64 16
%uk=bitcast i8*%uj to i8**
%ul=load i8*,i8**%uk,align 8
store i8*%ul,i8**%i,align 8
%um=getelementptr inbounds i8,i8*%ui,i64 24
%un=bitcast i8*%um to i8**
%uo=load i8*,i8**%un,align 8
store i8*%uo,i8**%j,align 8
%up=load i8**,i8***%C,align 8
%uq=load i8*,i8**%up,align 8
store i8*%uq,i8**%g,align 8
%ur=call i8*@sml_alloc(i32 inreg 12)#0
%us=getelementptr inbounds i8,i8*%ur,i64 -4
%ut=bitcast i8*%us to i32*
store i32 1342177288,i32*%ut,align 4
%uu=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%uv=bitcast i8*%ur to i8**
store i8*%uu,i8**%uv,align 8
%uw=getelementptr inbounds i8,i8*%ur,i64 8
%ux=bitcast i8*%uw to i32*
store i32 1,i32*%ux,align 4
%uy=call fastcc i8*@_SMLFN12TypedCalcCon8TPMODIFYE(i8*inreg%ur)
%uz=getelementptr inbounds i8,i8*%uy,i64 16
%uA=bitcast i8*%uz to i8*(i8*,i8*)**
%uB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%uA,align 8
%uC=bitcast i8*%uy to i8**
%uD=load i8*,i8**%uC,align 8
store i8*%uD,i8**%k,align 8
%uE=load i8*,i8**%h,align 8
%uF=getelementptr inbounds i8,i8*%uE,i64 32
%uG=bitcast i8*%uF to i8**
%uH=load i8*,i8**%uG,align 8
%uI=load i8*,i8**%l,align 8
%uJ=load i8*,i8**%m,align 8
%uK=load i8*,i8**%p,align 8
%uL=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%uK,i8*inreg%uJ,i8*inreg%uI,i8*inreg%uH)
store i8*%uL,i8**%g,align 8
%uM=bitcast i8**%h to i8***
%uN=load i8**,i8***%uM,align 8
store i8*null,i8**%h,align 8
%uO=load i8*,i8**%uN,align 8
%uP=load i8*,i8**%l,align 8
%uQ=load i8*,i8**%m,align 8
%uR=load i8*,i8**%p,align 8
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%p,align 8
%uS=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%uR,i8*inreg%uQ,i8*inreg%uP,i8*inreg%uO)
store i8*%uS,i8**%h,align 8
%uT=call i8*@sml_alloc(i32 inreg 36)#0
%uU=getelementptr inbounds i8,i8*%uT,i64 -4
%uV=bitcast i8*%uU to i32*
store i32 1342177312,i32*%uV,align 4
%uW=load i8*,i8**%h,align 8
%uX=bitcast i8*%uT to i8**
store i8*%uW,i8**%uX,align 8
%uY=load i8*,i8**%i,align 8
%uZ=getelementptr inbounds i8,i8*%uT,i64 8
%u0=bitcast i8*%uZ to i8**
store i8*%uY,i8**%u0,align 8
%u1=load i8*,i8**%j,align 8
%u2=getelementptr inbounds i8,i8*%uT,i64 16
%u3=bitcast i8*%u2 to i8**
store i8*%u1,i8**%u3,align 8
%u4=load i8*,i8**%g,align 8
%u5=getelementptr inbounds i8,i8*%uT,i64 24
%u6=bitcast i8*%u5 to i8**
store i8*%u4,i8**%u6,align 8
%u7=getelementptr inbounds i8,i8*%uT,i64 32
%u8=bitcast i8*%u7 to i32*
store i32 15,i32*%u8,align 4
%u9=load i8*,i8**%k,align 8
%va=call fastcc i8*%uB(i8*inreg%u9,i8*inreg%uT)
ret i8*%va
vb:
%vc=getelementptr inbounds i8,i8*%A,i64 8
%vd=bitcast i8*%vc to i8**
%ve=load i8*,i8**%vd,align 8
store i8*%ve,i8**%h,align 8
%vf=getelementptr inbounds i8,i8*%ve,i64 16
%vg=bitcast i8*%vf to i8**
%vh=load i8*,i8**%vg,align 8
store i8*%vh,i8**%i,align 8
%vi=getelementptr inbounds i8,i8*%ve,i64 8
%vj=bitcast i8*%vi to i8**
%vk=load i8*,i8**%vj,align 8
%vl=load i8*,i8**%p,align 8
store i8*null,i8**%l,align 8
%vm=call fastcc i8*@_SMLLN17PolyTyElimination15analyzeDeclListE_1170(i8*inreg%vl,i8*inreg%x,i8*inreg%z,i8*inreg%vk)
%vn=bitcast i8*%vm to i8**
%vo=load i8*,i8**%vn,align 8
store i8*%vo,i8**%g,align 8
%vp=getelementptr inbounds i8,i8*%vm,i64 8
%vq=bitcast i8*%vp to i8**
%vr=load i8*,i8**%vq,align 8
%vs=bitcast i8**%h to i8***
%vt=load i8**,i8***%vs,align 8
store i8*null,i8**%h,align 8
%vu=load i8*,i8**%vt,align 8
%vv=load i8*,i8**%m,align 8
%vw=load i8*,i8**%p,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%p,align 8
%vx=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%vw,i8*inreg%vv,i8*inreg%vr,i8*inreg%vu)
store i8*%vx,i8**%h,align 8
%vy=call i8*@sml_alloc(i32 inreg 28)#0
%vz=getelementptr inbounds i8,i8*%vy,i64 -4
%vA=bitcast i8*%vz to i32*
store i32 1342177304,i32*%vA,align 4
%vB=load i8*,i8**%h,align 8
%vC=bitcast i8*%vy to i8**
store i8*%vB,i8**%vC,align 8
%vD=load i8*,i8**%g,align 8
%vE=getelementptr inbounds i8,i8*%vy,i64 8
%vF=bitcast i8*%vE to i8**
store i8*%vD,i8**%vF,align 8
%vG=load i8*,i8**%i,align 8
%vH=getelementptr inbounds i8,i8*%vy,i64 16
%vI=bitcast i8*%vH to i8**
store i8*%vG,i8**%vI,align 8
%vJ=getelementptr inbounds i8,i8*%vy,i64 24
%vK=bitcast i8*%vJ to i32*
store i32 7,i32*%vK,align 4
%vL=call fastcc i8*@_SMLFN12TypedCalcCon5TPLETE(i8*inreg%vy)
ret i8*%vL
vM:
%vN=getelementptr inbounds i8,i8*%A,i64 8
%vO=bitcast i8*%vN to i8**
%vP=load i8*,i8**%vO,align 8
store i8*%vP,i8**%h,align 8
%vQ=getelementptr inbounds i8,i8*%vP,i64 8
%vR=bitcast i8*%vQ to i8**
%vS=load i8*,i8**%vR,align 8
store i8*%vS,i8**%i,align 8
%vT=getelementptr inbounds i8,i8*%vP,i64 16
%vU=bitcast i8*%vT to i8**
%vV=load i8*,i8**%vU,align 8
store i8*%vV,i8**%j,align 8
%vW=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%vX=getelementptr inbounds i8,i8*%vW,i64 16
%vY=bitcast i8*%vX to i8*(i8*,i8*)**
%vZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%vY,align 8
%v0=bitcast i8*%vW to i8**
%v1=load i8*,i8**%v0,align 8
store i8*%v1,i8**%g,align 8
%v2=call i8*@sml_alloc(i32 inreg 28)#0
%v3=getelementptr inbounds i8,i8*%v2,i64 -4
%v4=bitcast i8*%v3 to i32*
store i32 1342177304,i32*%v4,align 4
store i8*%v2,i8**%k,align 8
%v5=load i8*,i8**%l,align 8
%v6=bitcast i8*%v2 to i8**
store i8*%v5,i8**%v6,align 8
%v7=load i8*,i8**%m,align 8
%v8=getelementptr inbounds i8,i8*%v2,i64 8
%v9=bitcast i8*%v8 to i8**
store i8*%v7,i8**%v9,align 8
%wa=load i8*,i8**%p,align 8
%wb=getelementptr inbounds i8,i8*%v2,i64 16
%wc=bitcast i8*%wb to i8**
store i8*%wa,i8**%wc,align 8
%wd=getelementptr inbounds i8,i8*%v2,i64 24
%we=bitcast i8*%wd to i32*
store i32 7,i32*%we,align 4
%wf=call i8*@sml_alloc(i32 inreg 28)#0
%wg=getelementptr inbounds i8,i8*%wf,i64 -4
%wh=bitcast i8*%wg to i32*
store i32 1342177304,i32*%wh,align 4
%wi=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%wj=bitcast i8*%wf to i8**
store i8*%wi,i8**%wj,align 8
%wk=getelementptr inbounds i8,i8*%wf,i64 8
%wl=bitcast i8*%wk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1225 to void(...)*),void(...)**%wl,align 8
%wm=getelementptr inbounds i8,i8*%wf,i64 16
%wn=bitcast i8*%wm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1225 to void(...)*),void(...)**%wn,align 8
%wo=getelementptr inbounds i8,i8*%wf,i64 24
%wp=bitcast i8*%wo to i32*
store i32 -2147483647,i32*%wp,align 4
%wq=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%wr=call fastcc i8*%vZ(i8*inreg%wq,i8*inreg%wf)
%ws=getelementptr inbounds i8,i8*%wr,i64 16
%wt=bitcast i8*%ws to i8*(i8*,i8*)**
%wu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%wt,align 8
%wv=bitcast i8*%wr to i8**
%ww=load i8*,i8**%wv,align 8
%wx=bitcast i8**%h to i8***
%wy=load i8**,i8***%wx,align 8
%wz=load i8*,i8**%wy,align 8
%wA=call fastcc i8*%wu(i8*inreg%ww,i8*inreg%wz)
store i8*%wA,i8**%g,align 8
%wB=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%wC=getelementptr inbounds i8,i8*%wB,i64 8
%wD=bitcast i8*%wC to i8**
%wE=load i8*,i8**%wD,align 8
%wF=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%wG=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%wE,i8*inreg%wF)
%wH=getelementptr inbounds i8,i8*%wG,i64 16
%wI=bitcast i8*%wH to i8*(i8*,i8*)**
%wJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%wI,align 8
%wK=bitcast i8*%wG to i8**
%wL=load i8*,i8**%wK,align 8
%wM=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%wN=call fastcc i8*%wJ(i8*inreg%wL,i8*inreg%wM)
%wO=getelementptr inbounds i8,i8*%wN,i64 16
%wP=bitcast i8*%wO to i8*(i8*,i8*)**
%wQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%wP,align 8
%wR=bitcast i8*%wN to i8**
%wS=load i8*,i8**%wR,align 8
%wT=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%wU=getelementptr inbounds i8,i8*%wT,i64 24
%wV=bitcast i8*%wU to i8**
%wW=load i8*,i8**%wV,align 8
%wX=call fastcc i8*%wQ(i8*inreg%wS,i8*inreg%wW)
store i8*%wX,i8**%h,align 8
%wY=call i8*@sml_alloc(i32 inreg 36)#0
%wZ=getelementptr inbounds i8,i8*%wY,i64 -4
%w0=bitcast i8*%wZ to i32*
store i32 1342177312,i32*%w0,align 4
%w1=load i8*,i8**%g,align 8
%w2=bitcast i8*%wY to i8**
store i8*%w1,i8**%w2,align 8
%w3=load i8*,i8**%i,align 8
%w4=getelementptr inbounds i8,i8*%wY,i64 8
%w5=bitcast i8*%w4 to i8**
store i8*%w3,i8**%w5,align 8
%w6=load i8*,i8**%j,align 8
%w7=getelementptr inbounds i8,i8*%wY,i64 16
%w8=bitcast i8*%w7 to i8**
store i8*%w6,i8**%w8,align 8
%w9=load i8*,i8**%h,align 8
%xa=getelementptr inbounds i8,i8*%wY,i64 24
%xb=bitcast i8*%xa to i8**
store i8*%w9,i8**%xb,align 8
%xc=getelementptr inbounds i8,i8*%wY,i64 32
%xd=bitcast i8*%xc to i32*
store i32 15,i32*%xd,align 4
%xe=call fastcc i8*@_SMLFN12TypedCalcCon7TPTHROWE(i8*inreg%wY)
ret i8*%xe
xf:
%xg=getelementptr inbounds i8,i8*%A,i64 8
%xh=bitcast i8*%xg to i8**
%xi=load i8*,i8**%xh,align 8
store i8*%xi,i8**%i,align 8
%xj=getelementptr inbounds i8,i8*%xi,i64 16
%xk=bitcast i8*%xj to i8**
%xl=load i8*,i8**%xk,align 8
store i8*%xl,i8**%j,align 8
%xm=getelementptr inbounds i8,i8*%xi,i64 24
%xn=bitcast i8*%xm to i8**
%xo=load i8*,i8**%xn,align 8
store i8*%xo,i8**%k,align 8
%xp=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%xq=getelementptr inbounds i8,i8*%xp,i64 16
%xr=bitcast i8*%xq to i8*(i8*,i8*)**
%xs=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%xr,align 8
%xt=bitcast i8*%xp to i8**
%xu=load i8*,i8**%xt,align 8
store i8*%xu,i8**%h,align 8
%xv=load i8*,i8**%p,align 8
%xw=getelementptr inbounds i8,i8*%xv,i64 8
%xx=bitcast i8*%xw to i8**
%xy=load i8*,i8**%xx,align 8
store i8*%xy,i8**%g,align 8
%xz=call i8*@sml_alloc(i32 inreg 28)#0
%xA=getelementptr inbounds i8,i8*%xz,i64 -4
%xB=bitcast i8*%xA to i32*
store i32 1342177304,i32*%xB,align 4
store i8*%xz,i8**%n,align 8
%xC=load i8*,i8**%l,align 8
%xD=bitcast i8*%xz to i8**
store i8*%xC,i8**%xD,align 8
%xE=load i8*,i8**%m,align 8
%xF=getelementptr inbounds i8,i8*%xz,i64 8
%xG=bitcast i8*%xF to i8**
store i8*%xE,i8**%xG,align 8
%xH=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%xI=getelementptr inbounds i8,i8*%xz,i64 16
%xJ=bitcast i8*%xI to i8**
store i8*%xH,i8**%xJ,align 8
%xK=getelementptr inbounds i8,i8*%xz,i64 24
%xL=bitcast i8*%xK to i32*
store i32 7,i32*%xL,align 4
%xM=call i8*@sml_alloc(i32 inreg 28)#0
%xN=getelementptr inbounds i8,i8*%xM,i64 -4
%xO=bitcast i8*%xN to i32*
store i32 1342177304,i32*%xO,align 4
%xP=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%xQ=bitcast i8*%xM to i8**
store i8*%xP,i8**%xQ,align 8
%xR=getelementptr inbounds i8,i8*%xM,i64 8
%xS=bitcast i8*%xR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10argVarList_1224 to void(...)*),void(...)**%xS,align 8
%xT=getelementptr inbounds i8,i8*%xM,i64 16
%xU=bitcast i8*%xT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10argVarList_1224 to void(...)*),void(...)**%xU,align 8
%xV=getelementptr inbounds i8,i8*%xM,i64 24
%xW=bitcast i8*%xV to i32*
store i32 -2147483647,i32*%xW,align 4
%xX=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%xY=call fastcc i8*%xs(i8*inreg%xX,i8*inreg%xM)
%xZ=getelementptr inbounds i8,i8*%xY,i64 16
%x0=bitcast i8*%xZ to i8*(i8*,i8*)**
%x1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x0,align 8
%x2=bitcast i8*%xY to i8**
%x3=load i8*,i8**%x2,align 8
%x4=bitcast i8**%i to i8***
%x5=load i8**,i8***%x4,align 8
%x6=load i8*,i8**%x5,align 8
%x7=call fastcc i8*%x1(i8*inreg%x3,i8*inreg%x6)
store i8*%x7,i8**%g,align 8
%x8=load i8*,i8**%i,align 8
%x9=getelementptr inbounds i8,i8*%x8,i64 40
%ya=bitcast i8*%x9 to i8**
%yb=load i8*,i8**%ya,align 8
%yc=load i8*,i8**%l,align 8
%yd=load i8*,i8**%m,align 8
%ye=load i8*,i8**%p,align 8
%yf=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%ye,i8*inreg%yd,i8*inreg%yc,i8*inreg%yb)
store i8*%yf,i8**%h,align 8
%yg=load i8*,i8**%g,align 8
%yh=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%yg)
store i8*%yh,i8**%n,align 8
%yi=bitcast i8**%l to i8***
%yj=load i8**,i8***%yi,align 8
%yk=load i8*,i8**%yj,align 8
store i8*%yk,i8**%o,align 8
%yl=call i8*@sml_alloc(i32 inreg 20)#0
%ym=getelementptr inbounds i8,i8*%yl,i64 -4
%yn=bitcast i8*%ym to i32*
store i32 1342177296,i32*%yn,align 4
%yo=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%yp=bitcast i8*%yl to i8**
store i8*%yo,i8**%yp,align 8
%yq=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%yr=getelementptr inbounds i8,i8*%yl,i64 8
%ys=bitcast i8*%yr to i8**
store i8*%yq,i8**%ys,align 8
%yt=getelementptr inbounds i8,i8*%yl,i64 16
%yu=bitcast i8*%yt to i32*
store i32 3,i32*%yu,align 4
%yv=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%yl)
store i8*%yv,i8**%n,align 8
%yw=load i8*,i8**%l,align 8
%yx=getelementptr inbounds i8,i8*%yw,i64 8
%yy=bitcast i8*%yx to i8**
%yz=load i8*,i8**%yy,align 8
store i8*%yz,i8**%l,align 8
%yA=call i8*@sml_alloc(i32 inreg 20)#0
%yB=getelementptr inbounds i8,i8*%yA,i64 -4
%yC=bitcast i8*%yB to i32*
store i32 1342177296,i32*%yC,align 4
%yD=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%yE=bitcast i8*%yA to i8**
store i8*%yD,i8**%yE,align 8
%yF=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%yG=getelementptr inbounds i8,i8*%yA,i64 8
%yH=bitcast i8*%yG to i8**
store i8*%yF,i8**%yH,align 8
%yI=getelementptr inbounds i8,i8*%yA,i64 16
%yJ=bitcast i8*%yI to i32*
store i32 3,i32*%yJ,align 4
%yK=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%yL=getelementptr inbounds i8,i8*%yK,i64 8
%yM=bitcast i8*%yL to i8**
%yN=load i8*,i8**%yM,align 8
%yO=load i8*,i8**%m,align 8
%yP=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%yQ=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%yP,i8*inreg%yO,i8*inreg%yA,i8*inreg%yN)
store i8*%yQ,i8**%i,align 8
%yR=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%yS=call fastcc i8*@_SMLLN17PolyTyElimination5equalE_1041(i8*inreg%yR)
%yT=getelementptr inbounds i8,i8*%yS,i64 16
%yU=bitcast i8*%yT to i8*(i8*,i8*)**
%yV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%yU,align 8
%yW=bitcast i8*%yS to i8**
%yX=load i8*,i8**%yW,align 8
store i8*%yX,i8**%n,align 8
%yY=load i8*,i8**%h,align 8
%yZ=getelementptr inbounds i8,i8*%yY,i64 8
%y0=bitcast i8*%yZ to i8**
%y1=load i8*,i8**%y0,align 8
store i8*%y1,i8**%l,align 8
%y2=load i8*,i8**%i,align 8
%y3=getelementptr inbounds i8,i8*%y2,i64 8
%y4=bitcast i8*%y3 to i8**
%y5=load i8*,i8**%y4,align 8
store i8*%y5,i8**%m,align 8
%y6=call i8*@sml_alloc(i32 inreg 20)#0
%y7=getelementptr inbounds i8,i8*%y6,i64 -4
%y8=bitcast i8*%y7 to i32*
store i32 1342177296,i32*%y8,align 4
%y9=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%za=bitcast i8*%y6 to i8**
store i8*%y9,i8**%za,align 8
%zb=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%zc=getelementptr inbounds i8,i8*%y6,i64 8
%zd=bitcast i8*%zc to i8**
store i8*%zb,i8**%zd,align 8
%ze=getelementptr inbounds i8,i8*%y6,i64 16
%zf=bitcast i8*%ze to i32*
store i32 3,i32*%zf,align 4
%zg=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%zh=call fastcc i8*%yV(i8*inreg%zg,i8*inreg%y6)
%zi=call i8*@sml_alloc(i32 inreg 44)#0
%zj=getelementptr inbounds i8,i8*%zi,i64 -4
%zk=bitcast i8*%zj to i32*
store i32 1342177320,i32*%zk,align 4
%zl=load i8*,i8**%g,align 8
%zm=bitcast i8*%zi to i8**
store i8*%zl,i8**%zm,align 8
%zn=load i8*,i8**%i,align 8
%zo=getelementptr inbounds i8,i8*%zi,i64 8
%zp=bitcast i8*%zo to i8**
store i8*%zn,i8**%zp,align 8
%zq=load i8*,i8**%j,align 8
%zr=getelementptr inbounds i8,i8*%zi,i64 16
%zs=bitcast i8*%zr to i8**
store i8*%zq,i8**%zs,align 8
%zt=load i8*,i8**%k,align 8
%zu=getelementptr inbounds i8,i8*%zi,i64 24
%zv=bitcast i8*%zu to i8**
store i8*%zt,i8**%zv,align 8
%zw=load i8*,i8**%h,align 8
%zx=getelementptr inbounds i8,i8*%zi,i64 32
%zy=bitcast i8*%zx to i8**
store i8*%zw,i8**%zy,align 8
%zz=getelementptr inbounds i8,i8*%zi,i64 40
%zA=bitcast i8*%zz to i32*
store i32 31,i32*%zA,align 4
%zB=call fastcc i8*@_SMLFN12TypedCalcCon7TPCATCHE(i8*inreg%zi)
ret i8*%zB
zC:
%zD=getelementptr inbounds i8,i8*%A,i64 8
%zE=bitcast i8*%zD to i8**
%zF=load i8*,i8**%zE,align 8
store i8*%zF,i8**%i,align 8
%zG=getelementptr inbounds i8,i8*%zF,i64 24
%zH=bitcast i8*%zG to i8**
%zI=load i8*,i8**%zH,align 8
store i8*%zI,i8**%j,align 8
%zJ=bitcast i8*%zF to i8**
%zK=load i8*,i8**%zJ,align 8
%zL=bitcast i8*%zK to i32*
%zM=load i32,i32*%zL,align 4
%zN=getelementptr inbounds i8,i8*%zK,i64 4
%zO=bitcast i8*%zN to i32*
%zP=load i32,i32*%zO,align 4
%zQ=getelementptr inbounds i8,i8*%zK,i64 8
%zR=bitcast i8*%zQ to i8**
%zS=load i8*,i8**%zR,align 8
store i8*%zS,i8**%h,align 8
%zT=load i8*,i8**%p,align 8
%zU=getelementptr inbounds i8,i8*%zT,i64 8
%zV=bitcast i8*%zU to i8**
%zW=load i8*,i8**%zV,align 8
%zX=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%zW,i8*inreg%x)
%zY=getelementptr inbounds i8,i8*%zX,i64 16
%zZ=bitcast i8*%zY to i8*(i8*,i8*)**
%z0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%zZ,align 8
%z1=bitcast i8*%zX to i8**
%z2=load i8*,i8**%z1,align 8
%z3=load i8*,i8**%l,align 8
%z4=call fastcc i8*%z0(i8*inreg%z2,i8*inreg%z3)
%z5=getelementptr inbounds i8,i8*%z4,i64 16
%z6=bitcast i8*%z5 to i8*(i8*,i8*)**
%z7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z6,align 8
%z8=bitcast i8*%z4 to i8**
%z9=load i8*,i8**%z8,align 8
%Aa=bitcast i8**%i to i8***
%Ab=load i8**,i8***%Aa,align 8
%Ac=load i8*,i8**%Ab,align 8
%Ad=getelementptr inbounds i8,i8*%Ac,i64 16
%Ae=bitcast i8*%Ad to i8**
%Af=load i8*,i8**%Ae,align 8
%Ag=call fastcc i8*%z7(i8*inreg%z9,i8*inreg%Af)
store i8*%Ag,i8**%k,align 8
%Ah=call i8*@sml_alloc(i32 inreg 28)#0
%Ai=bitcast i8*%Ah to i32*
%Aj=getelementptr inbounds i8,i8*%Ah,i64 -4
%Ak=bitcast i8*%Aj to i32*
store i32 1342177304,i32*%Ak,align 4
store i8*%Ah,i8**%g,align 8
store i32%zM,i32*%Ai,align 4
%Al=getelementptr inbounds i8,i8*%Ah,i64 4
%Am=bitcast i8*%Al to i32*
store i32%zP,i32*%Am,align 4
%An=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Ao=getelementptr inbounds i8,i8*%Ah,i64 8
%Ap=bitcast i8*%Ao to i8**
store i8*%An,i8**%Ap,align 8
%Aq=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%Ar=getelementptr inbounds i8,i8*%Ah,i64 16
%As=bitcast i8*%Ar to i8**
store i8*%Aq,i8**%As,align 8
%At=getelementptr inbounds i8,i8*%Ah,i64 24
%Au=bitcast i8*%At to i32*
store i32 6,i32*%Au,align 4
%Av=load i8*,i8**%i,align 8
%Aw=getelementptr inbounds i8,i8*%Av,i64 8
%Ax=bitcast i8*%Aw to i8**
%Ay=load i8*,i8**%Ax,align 8
%Az=load i8*,i8**%l,align 8
%AA=load i8*,i8**%m,align 8
%AB=load i8*,i8**%p,align 8
%AC=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%AB,i8*inreg%AA,i8*inreg%Az,i8*inreg%Ay)
store i8*%AC,i8**%h,align 8
%AD=call i8*@sml_alloc(i32 inreg 20)#0
%AE=getelementptr inbounds i8,i8*%AD,i64 -4
%AF=bitcast i8*%AE to i32*
store i32 1342177296,i32*%AF,align 4
%AG=load i8*,i8**%g,align 8
%AH=bitcast i8*%AD to i8**
store i8*%AG,i8**%AH,align 8
%AI=getelementptr inbounds i8,i8*%AD,i64 8
%AJ=bitcast i8*%AI to i8**
store i8*null,i8**%AJ,align 8
%AK=getelementptr inbounds i8,i8*%AD,i64 16
%AL=bitcast i8*%AK to i32*
store i32 3,i32*%AL,align 4
%AM=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%AD)
store i8*%AM,i8**%k,align 8
%AN=bitcast i8**%l to i8***
%AO=load i8**,i8***%AN,align 8
%AP=load i8*,i8**%AO,align 8
store i8*%AP,i8**%n,align 8
%AQ=call i8*@sml_alloc(i32 inreg 20)#0
%AR=getelementptr inbounds i8,i8*%AQ,i64 -4
%AS=bitcast i8*%AR to i32*
store i32 1342177296,i32*%AS,align 4
%AT=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%AU=bitcast i8*%AQ to i8**
store i8*%AT,i8**%AU,align 8
%AV=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%AW=getelementptr inbounds i8,i8*%AQ,i64 8
%AX=bitcast i8*%AW to i8**
store i8*%AV,i8**%AX,align 8
%AY=getelementptr inbounds i8,i8*%AQ,i64 16
%AZ=bitcast i8*%AY to i32*
store i32 3,i32*%AZ,align 4
%A0=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%AQ)
store i8*%A0,i8**%k,align 8
%A1=load i8*,i8**%l,align 8
%A2=getelementptr inbounds i8,i8*%A1,i64 8
%A3=bitcast i8*%A2 to i8**
%A4=load i8*,i8**%A3,align 8
store i8*%A4,i8**%l,align 8
%A5=call i8*@sml_alloc(i32 inreg 20)#0
%A6=getelementptr inbounds i8,i8*%A5,i64 -4
%A7=bitcast i8*%A6 to i32*
store i32 1342177296,i32*%A7,align 4
%A8=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%A9=bitcast i8*%A5 to i8**
store i8*%A8,i8**%A9,align 8
%Ba=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%Bb=getelementptr inbounds i8,i8*%A5,i64 8
%Bc=bitcast i8*%Bb to i8**
store i8*%Ba,i8**%Bc,align 8
%Bd=getelementptr inbounds i8,i8*%A5,i64 16
%Be=bitcast i8*%Bd to i32*
store i32 3,i32*%Be,align 4
%Bf=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Bg=getelementptr inbounds i8,i8*%Bf,i64 16
%Bh=bitcast i8*%Bg to i8**
%Bi=load i8*,i8**%Bh,align 8
%Bj=load i8*,i8**%m,align 8
%Bk=load i8*,i8**%p,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%p,align 8
%Bl=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%Bk,i8*inreg%Bj,i8*inreg%A5,i8*inreg%Bi)
store i8*%Bl,i8**%i,align 8
%Bm=call i8*@sml_alloc(i32 inreg 36)#0
%Bn=getelementptr inbounds i8,i8*%Bm,i64 -4
%Bo=bitcast i8*%Bn to i32*
store i32 1342177312,i32*%Bo,align 4
%Bp=load i8*,i8**%g,align 8
%Bq=bitcast i8*%Bm to i8**
store i8*%Bp,i8**%Bq,align 8
%Br=load i8*,i8**%h,align 8
%Bs=getelementptr inbounds i8,i8*%Bm,i64 8
%Bt=bitcast i8*%Bs to i8**
store i8*%Br,i8**%Bt,align 8
%Bu=load i8*,i8**%i,align 8
%Bv=getelementptr inbounds i8,i8*%Bm,i64 16
%Bw=bitcast i8*%Bv to i8**
store i8*%Bu,i8**%Bw,align 8
%Bx=load i8*,i8**%j,align 8
%By=getelementptr inbounds i8,i8*%Bm,i64 24
%Bz=bitcast i8*%By to i8**
store i8*%Bx,i8**%Bz,align 8
%BA=getelementptr inbounds i8,i8*%Bm,i64 32
%BB=bitcast i8*%BA to i32*
store i32 15,i32*%BB,align 4
%BC=call fastcc i8*@_SMLFN12TypedCalcCon8TPHANDLEE(i8*inreg%Bm)
ret i8*%BC
BD:
%BE=getelementptr inbounds i8,i8*%A,i64 8
%BF=bitcast i8*%BE to i8**
%BG=load i8*,i8**%BF,align 8
store i8*%BG,i8**%h,align 8
%BH=getelementptr inbounds i8,i8*%BG,i64 24
%BI=bitcast i8*%BH to i8**
%BJ=load i8*,i8**%BI,align 8
store i8*%BJ,i8**%i,align 8
%BK=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%BL=getelementptr inbounds i8,i8*%BK,i64 16
%BM=bitcast i8*%BL to i8*(i8*,i8*)**
%BN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%BM,align 8
%BO=bitcast i8*%BK to i8**
%BP=load i8*,i8**%BO,align 8
store i8*%BP,i8**%j,align 8
%BQ=load i8*,i8**%p,align 8
%BR=getelementptr inbounds i8,i8*%BQ,i64 8
%BS=bitcast i8*%BR to i8**
%BT=load i8*,i8**%BS,align 8
store i8*%BT,i8**%g,align 8
%BU=call i8*@sml_alloc(i32 inreg 28)#0
%BV=getelementptr inbounds i8,i8*%BU,i64 -4
%BW=bitcast i8*%BV to i32*
store i32 1342177304,i32*%BW,align 4
store i8*%BU,i8**%k,align 8
%BX=load i8*,i8**%l,align 8
%BY=bitcast i8*%BU to i8**
store i8*%BX,i8**%BY,align 8
%BZ=load i8*,i8**%m,align 8
%B0=getelementptr inbounds i8,i8*%BU,i64 8
%B1=bitcast i8*%B0 to i8**
store i8*%BZ,i8**%B1,align 8
%B2=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%B3=getelementptr inbounds i8,i8*%BU,i64 16
%B4=bitcast i8*%B3 to i8**
store i8*%B2,i8**%B4,align 8
%B5=getelementptr inbounds i8,i8*%BU,i64 24
%B6=bitcast i8*%B5 to i32*
store i32 7,i32*%B6,align 4
%B7=call i8*@sml_alloc(i32 inreg 28)#0
%B8=getelementptr inbounds i8,i8*%B7,i64 -4
%B9=bitcast i8*%B8 to i32*
store i32 1342177304,i32*%B9,align 4
%Ca=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%Cb=bitcast i8*%B7 to i8**
store i8*%Ca,i8**%Cb,align 8
%Cc=getelementptr inbounds i8,i8*%B7,i64 8
%Cd=bitcast i8*%Cc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10argVarList_1223 to void(...)*),void(...)**%Cd,align 8
%Ce=getelementptr inbounds i8,i8*%B7,i64 16
%Cf=bitcast i8*%Ce to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10argVarList_1223 to void(...)*),void(...)**%Cf,align 8
%Cg=getelementptr inbounds i8,i8*%B7,i64 24
%Ch=bitcast i8*%Cg to i32*
store i32 -2147483647,i32*%Ch,align 4
%Ci=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%Cj=call fastcc i8*%BN(i8*inreg%Ci,i8*inreg%B7)
%Ck=getelementptr inbounds i8,i8*%Cj,i64 16
%Cl=bitcast i8*%Ck to i8*(i8*,i8*)**
%Cm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Cl,align 8
%Cn=bitcast i8*%Cj to i8**
%Co=load i8*,i8**%Cn,align 8
%Cp=bitcast i8**%h to i8***
%Cq=load i8**,i8***%Cp,align 8
%Cr=load i8*,i8**%Cq,align 8
%Cs=call fastcc i8*%Cm(i8*inreg%Co,i8*inreg%Cr)
store i8*%Cs,i8**%g,align 8
%Ct=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%Cs)
store i8*%Ct,i8**%j,align 8
%Cu=bitcast i8**%l to i8***
%Cv=load i8**,i8***%Cu,align 8
%Cw=load i8*,i8**%Cv,align 8
store i8*%Cw,i8**%k,align 8
%Cx=call i8*@sml_alloc(i32 inreg 20)#0
%Cy=getelementptr inbounds i8,i8*%Cx,i64 -4
%Cz=bitcast i8*%Cy to i32*
store i32 1342177296,i32*%Cz,align 4
%CA=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%CB=bitcast i8*%Cx to i8**
store i8*%CA,i8**%CB,align 8
%CC=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%CD=getelementptr inbounds i8,i8*%Cx,i64 8
%CE=bitcast i8*%CD to i8**
store i8*%CC,i8**%CE,align 8
%CF=getelementptr inbounds i8,i8*%Cx,i64 16
%CG=bitcast i8*%CF to i32*
store i32 3,i32*%CG,align 4
%CH=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%Cx)
store i8*%CH,i8**%j,align 8
%CI=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%CJ=getelementptr inbounds i8,i8*%CI,i64 8
%CK=bitcast i8*%CJ to i8**
%CL=load i8*,i8**%CK,align 8
store i8*%CL,i8**%k,align 8
%CM=call i8*@sml_alloc(i32 inreg 20)#0
%CN=getelementptr inbounds i8,i8*%CM,i64 -4
%CO=bitcast i8*%CN to i32*
store i32 1342177296,i32*%CO,align 4
%CP=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%CQ=bitcast i8*%CM to i8**
store i8*%CP,i8**%CQ,align 8
%CR=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%CS=getelementptr inbounds i8,i8*%CM,i64 8
%CT=bitcast i8*%CS to i8**
store i8*%CR,i8**%CT,align 8
%CU=getelementptr inbounds i8,i8*%CM,i64 16
%CV=bitcast i8*%CU to i32*
store i32 3,i32*%CV,align 4
%CW=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%CX=getelementptr inbounds i8,i8*%CW,i64 8
%CY=bitcast i8*%CX to i8**
%CZ=load i8*,i8**%CY,align 8
%C0=load i8*,i8**%m,align 8
%C1=load i8*,i8**%p,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%p,align 8
%C2=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%C1,i8*inreg%C0,i8*inreg%CM,i8*inreg%CZ)
store i8*%C2,i8**%h,align 8
%C3=call i8*@sml_alloc(i32 inreg 28)#0
%C4=getelementptr inbounds i8,i8*%C3,i64 -4
%C5=bitcast i8*%C4 to i32*
store i32 1342177304,i32*%C5,align 4
%C6=load i8*,i8**%g,align 8
%C7=bitcast i8*%C3 to i8**
store i8*%C6,i8**%C7,align 8
%C8=load i8*,i8**%h,align 8
%C9=getelementptr inbounds i8,i8*%C3,i64 8
%Da=bitcast i8*%C9 to i8**
store i8*%C8,i8**%Da,align 8
%Db=load i8*,i8**%i,align 8
%Dc=getelementptr inbounds i8,i8*%C3,i64 16
%Dd=bitcast i8*%Dc to i8**
store i8*%Db,i8**%Dd,align 8
%De=getelementptr inbounds i8,i8*%C3,i64 24
%Df=bitcast i8*%De to i32*
store i32 7,i32*%Df,align 4
%Dg=call fastcc i8*@_SMLFN12TypedCalcCon5TPFNME(i8*inreg%C3)
ret i8*%Dg
Dh:
%Di=getelementptr inbounds i8,i8*%A,i64 8
%Dj=bitcast i8*%Di to i8**
%Dk=load i8*,i8**%Dj,align 8
store i8*%Dk,i8**%i,align 8
%Dl=getelementptr inbounds i8,i8*%Dk,i64 8
%Dm=bitcast i8*%Dl to i8**
%Dn=load i8*,i8**%Dm,align 8
store i8*%Dn,i8**%j,align 8
%Do=getelementptr inbounds i8,i8*%Dk,i64 24
%Dp=bitcast i8*%Do to i8**
%Dq=load i8*,i8**%Dp,align 8
store i8*%Dq,i8**%k,align 8
%Dr=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Ds=getelementptr inbounds i8,i8*%Dr,i64 16
%Dt=bitcast i8*%Ds to i8*(i8*,i8*)**
%Du=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Dt,align 8
%Dv=bitcast i8*%Dr to i8**
%Dw=load i8*,i8**%Dv,align 8
store i8*%Dw,i8**%h,align 8
%Dx=load i8*,i8**%p,align 8
%Dy=getelementptr inbounds i8,i8*%Dx,i64 8
%Dz=bitcast i8*%Dy to i8**
%DA=load i8*,i8**%Dz,align 8
store i8*%DA,i8**%g,align 8
%DB=call i8*@sml_alloc(i32 inreg 28)#0
%DC=getelementptr inbounds i8,i8*%DB,i64 -4
%DD=bitcast i8*%DC to i32*
store i32 1342177304,i32*%DD,align 4
store i8*%DB,i8**%n,align 8
%DE=load i8*,i8**%l,align 8
%DF=bitcast i8*%DB to i8**
store i8*%DE,i8**%DF,align 8
%DG=load i8*,i8**%m,align 8
%DH=getelementptr inbounds i8,i8*%DB,i64 8
%DI=bitcast i8*%DH to i8**
store i8*%DG,i8**%DI,align 8
%DJ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%DK=getelementptr inbounds i8,i8*%DB,i64 16
%DL=bitcast i8*%DK to i8**
store i8*%DJ,i8**%DL,align 8
%DM=getelementptr inbounds i8,i8*%DB,i64 24
%DN=bitcast i8*%DM to i32*
store i32 7,i32*%DN,align 4
%DO=call i8*@sml_alloc(i32 inreg 28)#0
%DP=getelementptr inbounds i8,i8*%DO,i64 -4
%DQ=bitcast i8*%DP to i32*
store i32 1342177304,i32*%DQ,align 4
%DR=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%DS=bitcast i8*%DO to i8**
store i8*%DR,i8**%DS,align 8
%DT=getelementptr inbounds i8,i8*%DO,i64 8
%DU=bitcast i8*%DT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10argVarList_1222 to void(...)*),void(...)**%DU,align 8
%DV=getelementptr inbounds i8,i8*%DO,i64 16
%DW=bitcast i8*%DV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10argVarList_1222 to void(...)*),void(...)**%DW,align 8
%DX=getelementptr inbounds i8,i8*%DO,i64 24
%DY=bitcast i8*%DX to i32*
store i32 -2147483647,i32*%DY,align 4
%DZ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%D0=call fastcc i8*%Du(i8*inreg%DZ,i8*inreg%DO)
%D1=getelementptr inbounds i8,i8*%D0,i64 16
%D2=bitcast i8*%D1 to i8*(i8*,i8*)**
%D3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D2,align 8
%D4=bitcast i8*%D0 to i8**
%D5=load i8*,i8**%D4,align 8
%D6=bitcast i8**%i to i8***
%D7=load i8**,i8***%D6,align 8
%D8=load i8*,i8**%D7,align 8
%D9=call fastcc i8*%D3(i8*inreg%D5,i8*inreg%D8)
store i8*%D9,i8**%g,align 8
%Ea=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%D9)
store i8*%Ea,i8**%h,align 8
%Eb=bitcast i8**%l to i8***
%Ec=load i8**,i8***%Eb,align 8
%Ed=load i8*,i8**%Ec,align 8
store i8*%Ed,i8**%n,align 8
%Ee=call i8*@sml_alloc(i32 inreg 20)#0
%Ef=getelementptr inbounds i8,i8*%Ee,i64 -4
%Eg=bitcast i8*%Ef to i32*
store i32 1342177296,i32*%Eg,align 4
%Eh=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%Ei=bitcast i8*%Ee to i8**
store i8*%Eh,i8**%Ei,align 8
%Ej=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Ek=getelementptr inbounds i8,i8*%Ee,i64 8
%El=bitcast i8*%Ek to i8**
store i8*%Ej,i8**%El,align 8
%Em=getelementptr inbounds i8,i8*%Ee,i64 16
%En=bitcast i8*%Em to i32*
store i32 3,i32*%En,align 4
%Eo=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%Ee)
store i8*%Eo,i8**%h,align 8
%Ep=load i8*,i8**%l,align 8
%Eq=getelementptr inbounds i8,i8*%Ep,i64 8
%Er=bitcast i8*%Eq to i8**
%Es=load i8*,i8**%Er,align 8
store i8*%Es,i8**%l,align 8
%Et=call i8*@sml_alloc(i32 inreg 20)#0
%Eu=getelementptr inbounds i8,i8*%Et,i64 -4
%Ev=bitcast i8*%Eu to i32*
store i32 1342177296,i32*%Ev,align 4
%Ew=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Ex=bitcast i8*%Et to i8**
store i8*%Ew,i8**%Ex,align 8
%Ey=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%Ez=getelementptr inbounds i8,i8*%Et,i64 8
%EA=bitcast i8*%Ez to i8**
store i8*%Ey,i8**%EA,align 8
%EB=getelementptr inbounds i8,i8*%Et,i64 16
%EC=bitcast i8*%EB to i32*
store i32 3,i32*%EC,align 4
%ED=load i8*,i8**%i,align 8
%EE=getelementptr inbounds i8,i8*%ED,i64 16
%EF=bitcast i8*%EE to i8**
%EG=load i8*,i8**%EF,align 8
%EH=load i8*,i8**%m,align 8
%EI=load i8*,i8**%p,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%p,align 8
%EJ=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%EI,i8*inreg%EH,i8*inreg%Et,i8*inreg%EG)
store i8*%EJ,i8**%h,align 8
%EK=call fastcc i8*@_SMLFN6Option6isSomeE(i32 inreg 1,i32 inreg 8)
%EL=getelementptr inbounds i8,i8*%EK,i64 16
%EM=bitcast i8*%EL to i8*(i8*,i8*)**
%EN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%EM,align 8
%EO=bitcast i8*%EK to i8**
%EP=load i8*,i8**%EO,align 8
%EQ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ER=getelementptr inbounds i8,i8*%EQ,i64 32
%ES=bitcast i8*%ER to i8**
%ET=load i8*,i8**%ES,align 8
%EU=call fastcc i8*%EN(i8*inreg%EP,i8*inreg%ET)
%EV=bitcast i8*%EU to i32*
%EW=load i32,i32*%EV,align 4
%EX=call fastcc i32@_SMLFN4Bool3notE(i32 inreg%EW)
%EY=call i8*@sml_alloc(i32 inreg 44)#0
%EZ=getelementptr inbounds i8,i8*%EY,i64 -4
%E0=bitcast i8*%EZ to i32*
store i32 1342177320,i32*%E0,align 4
%E1=getelementptr inbounds i8,i8*%EY,i64 28
%E2=bitcast i8*%E1 to i32*
store i32 0,i32*%E2,align 1
%E3=load i8*,i8**%g,align 8
%E4=bitcast i8*%EY to i8**
store i8*%E3,i8**%E4,align 8
%E5=load i8*,i8**%j,align 8
%E6=getelementptr inbounds i8,i8*%EY,i64 8
%E7=bitcast i8*%E6 to i8**
store i8*%E5,i8**%E7,align 8
%E8=load i8*,i8**%h,align 8
%E9=getelementptr inbounds i8,i8*%EY,i64 16
%Fa=bitcast i8*%E9 to i8**
store i8*%E8,i8**%Fa,align 8
%Fb=getelementptr inbounds i8,i8*%EY,i64 24
%Fc=bitcast i8*%Fb to i32*
store i32%EX,i32*%Fc,align 4
%Fd=load i8*,i8**%k,align 8
%Fe=getelementptr inbounds i8,i8*%EY,i64 32
%Ff=bitcast i8*%Fe to i8**
store i8*%Fd,i8**%Ff,align 8
%Fg=getelementptr inbounds i8,i8*%EY,i64 40
%Fh=bitcast i8*%Fg to i32*
store i32 23,i32*%Fh,align 4
%Fi=call fastcc i8*@_SMLFN12TypedCalcCon12TPCALLBACKFNE(i8*inreg%EY)
ret i8*%Fi
Fj:
%Fk=getelementptr inbounds i8,i8*%A,i64 8
%Fl=bitcast i8*%Fk to i8**
%Fm=load i8*,i8**%Fl,align 8
store i8*%Fm,i8**%h,align 8
%Fn=getelementptr inbounds i8,i8*%Fm,i64 24
%Fo=bitcast i8*%Fn to i8**
%Fp=load i8*,i8**%Fo,align 8
store i8*%Fp,i8**%i,align 8
%Fq=getelementptr inbounds i8,i8*%Fm,i64 16
%Fr=bitcast i8*%Fq to i8**
%Fs=load i8*,i8**%Fr,align 8
%Ft=load i8*,i8**%p,align 8
%Fu=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%Ft,i8*inreg%x,i8*inreg%z,i8*inreg%Fs)
store i8*%Fu,i8**%g,align 8
%Fv=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Fw=getelementptr inbounds i8,i8*%Fv,i64 16
%Fx=bitcast i8*%Fw to i8*(i8*,i8*)**
%Fy=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Fx,align 8
%Fz=bitcast i8*%Fv to i8**
%FA=load i8*,i8**%Fz,align 8
store i8*%FA,i8**%j,align 8
%FB=call i8*@sml_alloc(i32 inreg 28)#0
%FC=getelementptr inbounds i8,i8*%FB,i64 -4
%FD=bitcast i8*%FC to i32*
store i32 1342177304,i32*%FD,align 4
store i8*%FB,i8**%k,align 8
%FE=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%FF=bitcast i8*%FB to i8**
store i8*%FE,i8**%FF,align 8
%FG=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%FH=getelementptr inbounds i8,i8*%FB,i64 8
%FI=bitcast i8*%FH to i8**
store i8*%FG,i8**%FI,align 8
%FJ=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%FK=getelementptr inbounds i8,i8*%FB,i64 16
%FL=bitcast i8*%FK to i8**
store i8*%FJ,i8**%FL,align 8
%FM=getelementptr inbounds i8,i8*%FB,i64 24
%FN=bitcast i8*%FM to i32*
store i32 7,i32*%FN,align 4
%FO=call i8*@sml_alloc(i32 inreg 28)#0
%FP=getelementptr inbounds i8,i8*%FO,i64 -4
%FQ=bitcast i8*%FP to i32*
store i32 1342177304,i32*%FQ,align 4
%FR=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%FS=bitcast i8*%FO to i8**
store i8*%FR,i8**%FS,align 8
%FT=getelementptr inbounds i8,i8*%FO,i64 8
%FU=bitcast i8*%FT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1221 to void(...)*),void(...)**%FU,align 8
%FV=getelementptr inbounds i8,i8*%FO,i64 16
%FW=bitcast i8*%FV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1221 to void(...)*),void(...)**%FW,align 8
%FX=getelementptr inbounds i8,i8*%FO,i64 24
%FY=bitcast i8*%FX to i32*
store i32 -2147483647,i32*%FY,align 4
%FZ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%F0=call fastcc i8*%Fy(i8*inreg%FZ,i8*inreg%FO)
%F1=getelementptr inbounds i8,i8*%F0,i64 16
%F2=bitcast i8*%F1 to i8*(i8*,i8*)**
%F3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F2,align 8
%F4=bitcast i8*%F0 to i8**
%F5=load i8*,i8**%F4,align 8
%F6=bitcast i8**%h to i8***
%F7=load i8**,i8***%F6,align 8
store i8*null,i8**%h,align 8
%F8=load i8*,i8**%F7,align 8
%F9=call fastcc i8*%F3(i8*inreg%F5,i8*inreg%F8)
store i8*%F9,i8**%h,align 8
%Ga=call i8*@sml_alloc(i32 inreg 28)#0
%Gb=getelementptr inbounds i8,i8*%Ga,i64 -4
%Gc=bitcast i8*%Gb to i32*
store i32 1342177304,i32*%Gc,align 4
%Gd=load i8*,i8**%h,align 8
%Ge=bitcast i8*%Ga to i8**
store i8*%Gd,i8**%Ge,align 8
%Gf=load i8*,i8**%g,align 8
%Gg=getelementptr inbounds i8,i8*%Ga,i64 8
%Gh=bitcast i8*%Gg to i8**
store i8*%Gf,i8**%Gh,align 8
%Gi=load i8*,i8**%i,align 8
%Gj=getelementptr inbounds i8,i8*%Ga,i64 16
%Gk=bitcast i8*%Gj to i8**
store i8*%Gi,i8**%Gk,align 8
%Gl=getelementptr inbounds i8,i8*%Ga,i64 24
%Gm=bitcast i8*%Gl to i32*
store i32 7,i32*%Gm,align 4
%Gn=call fastcc i8*@_SMLFN12TypedCalcCon14TPFOREIGNAPPLYE(i8*inreg%Ga)
ret i8*%Gn
Go:
%Gp=getelementptr inbounds i8,i8*%A,i64 8
%Gq=bitcast i8*%Gp to i8**
%Gr=load i8*,i8**%Gq,align 8
store i8*%Gr,i8**%g,align 8
%Gs=bitcast i8*%Gr to i8**
%Gt=load i8*,i8**%Gs,align 8
store i8*%Gt,i8**%h,align 8
%Gu=getelementptr inbounds i8,i8*%Gr,i64 8
%Gv=bitcast i8*%Gu to i8**
%Gw=load i8*,i8**%Gv,align 8
store i8*%Gw,i8**%i,align 8
%Gx=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%Gy=getelementptr inbounds i8,i8*%Gx,i64 8
%Gz=bitcast i8*%Gy to i8**
%GA=load i8*,i8**%Gz,align 8
store i8*null,i8**%m,align 8
%GB=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%GA,i8*inreg%x)
%GC=getelementptr inbounds i8,i8*%GB,i64 16
%GD=bitcast i8*%GC to i8*(i8*,i8*)**
%GE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%GD,align 8
%GF=bitcast i8*%GB to i8**
%GG=load i8*,i8**%GF,align 8
%GH=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%GI=call fastcc i8*%GE(i8*inreg%GG,i8*inreg%GH)
%GJ=getelementptr inbounds i8,i8*%GI,i64 16
%GK=bitcast i8*%GJ to i8*(i8*,i8*)**
%GL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%GK,align 8
%GM=bitcast i8*%GI to i8**
%GN=load i8*,i8**%GM,align 8
%GO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%GP=getelementptr inbounds i8,i8*%GO,i64 16
%GQ=bitcast i8*%GP to i8**
%GR=load i8*,i8**%GQ,align 8
%GS=call fastcc i8*%GL(i8*inreg%GN,i8*inreg%GR)
store i8*%GS,i8**%g,align 8
%GT=call i8*@sml_alloc(i32 inreg 28)#0
%GU=getelementptr inbounds i8,i8*%GT,i64 -4
%GV=bitcast i8*%GU to i32*
store i32 1342177304,i32*%GV,align 4
%GW=load i8*,i8**%h,align 8
%GX=bitcast i8*%GT to i8**
store i8*%GW,i8**%GX,align 8
%GY=load i8*,i8**%i,align 8
%GZ=getelementptr inbounds i8,i8*%GT,i64 8
%G0=bitcast i8*%GZ to i8**
store i8*%GY,i8**%G0,align 8
%G1=load i8*,i8**%g,align 8
%G2=getelementptr inbounds i8,i8*%GT,i64 16
%G3=bitcast i8*%G2 to i8**
store i8*%G1,i8**%G3,align 8
%G4=getelementptr inbounds i8,i8*%GT,i64 24
%G5=bitcast i8*%G4 to i32*
store i32 7,i32*%G5,align 4
%G6=call fastcc i8*@_SMLFN12TypedCalcCon15TPFOREIGNSYMBOLE(i8*inreg%GT)
ret i8*%G6
G7:
%G8=getelementptr inbounds i8,i8*%A,i64 8
%G9=bitcast i8*%G8 to i8**
%Ha=load i8*,i8**%G9,align 8
store i8*%Ha,i8**%h,align 8
%Hb=getelementptr inbounds i8,i8*%Ha,i64 8
%Hc=bitcast i8*%Hb to i8**
%Hd=load i8*,i8**%Hc,align 8
%He=bitcast i8*%Hd to i32*
%Hf=load i32,i32*%He,align 4
switch i32%Hf,label%Hg[
i32 1,label%H0
i32 0,label%Hy
]
Hg:
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%p,align 8
call void@sml_matchcomp_bug()
%Hh=load i8*,i8**@_SMLZ5Match,align 8
store i8*%Hh,i8**%g,align 8
%Hi=call i8*@sml_alloc(i32 inreg 20)#0
%Hj=getelementptr inbounds i8,i8*%Hi,i64 -4
%Hk=bitcast i8*%Hj to i32*
store i32 1342177296,i32*%Hk,align 4
store i8*%Hi,i8**%h,align 8
%Hl=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Hm=bitcast i8*%Hi to i8**
store i8*%Hl,i8**%Hm,align 8
%Hn=getelementptr inbounds i8,i8*%Hi,i64 8
%Ho=bitcast i8*%Hn to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bW,i64 0,i32 2,i64 0),i8**%Ho,align 8
%Hp=getelementptr inbounds i8,i8*%Hi,i64 16
%Hq=bitcast i8*%Hp to i32*
store i32 3,i32*%Hq,align 4
%Hr=call i8*@sml_alloc(i32 inreg 60)#0
%Hs=getelementptr inbounds i8,i8*%Hr,i64 -4
%Ht=bitcast i8*%Hs to i32*
store i32 1342177336,i32*%Ht,align 4
%Hu=getelementptr inbounds i8,i8*%Hr,i64 56
%Hv=bitcast i8*%Hu to i32*
store i32 1,i32*%Hv,align 4
%Hw=load i8*,i8**%h,align 8
%Hx=bitcast i8*%Hr to i8**
store i8*%Hw,i8**%Hx,align 8
call void@sml_raise(i8*inreg%Hr)#1
unreachable
Hy:
%Hz=bitcast i8*%Ha to i8**
%HA=getelementptr inbounds i8,i8*%Hd,i64 8
%HB=bitcast i8*%HA to i8**
%HC=load i8*,i8**%HB,align 8
store i8*%HC,i8**%i,align 8
%HD=getelementptr inbounds i8,i8*%Ha,i64 16
%HE=bitcast i8*%HD to i8**
%HF=load i8*,i8**%HE,align 8
store i8*%HF,i8**%j,align 8
%HG=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%HH=getelementptr inbounds i8,i8*%HG,i64 32
%HI=bitcast i8*%HH to i8**
%HJ=load i8*,i8**%HI,align 8
store i8*null,i8**%h,align 8
%HK=load i8*,i8**%Hz,align 8
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
%HL=call fastcc i8*@_SMLLN17PolyTyElimination12analyzeFFItyE_1138(i8*inreg%HJ,i8*inreg%x,i8*inreg%z,i8*inreg%HK)
store i8*%HL,i8**%g,align 8
%HM=call i8*@sml_alloc(i32 inreg 28)#0
%HN=getelementptr inbounds i8,i8*%HM,i64 -4
%HO=bitcast i8*%HN to i32*
store i32 1342177304,i32*%HO,align 4
%HP=load i8*,i8**%g,align 8
%HQ=bitcast i8*%HM to i8**
store i8*%HP,i8**%HQ,align 8
%HR=load i8*,i8**%i,align 8
%HS=getelementptr inbounds i8,i8*%HM,i64 8
%HT=bitcast i8*%HS to i8**
store i8*%HR,i8**%HT,align 8
%HU=load i8*,i8**%j,align 8
%HV=getelementptr inbounds i8,i8*%HM,i64 16
%HW=bitcast i8*%HV to i8**
store i8*%HU,i8**%HW,align 8
%HX=getelementptr inbounds i8,i8*%HM,i64 24
%HY=bitcast i8*%HX to i32*
store i32 7,i32*%HY,align 4
%HZ=call fastcc i8*@_SMLFN12TypedCalcCon15TPFFIIMPORT__EXTE(i8*inreg%HM)
ret i8*%HZ
H0:
%H1=getelementptr inbounds i8,i8*%Hd,i64 8
%H2=bitcast i8*%H1 to i8***
%H3=load i8**,i8***%H2,align 8
%H4=getelementptr inbounds i8,i8*%Ha,i64 16
%H5=bitcast i8*%H4 to i8**
%H6=load i8*,i8**%H5,align 8
store i8*%H6,i8**%i,align 8
%H7=load i8*,i8**%H3,align 8
%H8=load i8*,i8**%p,align 8
%H9=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%H8,i8*inreg%x,i8*inreg%z,i8*inreg%H7)
store i8*%H9,i8**%g,align 8
%Ia=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%Ib=getelementptr inbounds i8,i8*%Ia,i64 32
%Ic=bitcast i8*%Ib to i8**
%Id=load i8*,i8**%Ic,align 8
%Ie=bitcast i8**%h to i8***
%If=load i8**,i8***%Ie,align 8
store i8*null,i8**%h,align 8
%Ig=load i8*,i8**%If,align 8
%Ih=load i8*,i8**%l,align 8
%Ii=load i8*,i8**%m,align 8
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
%Ij=call fastcc i8*@_SMLLN17PolyTyElimination12analyzeFFItyE_1138(i8*inreg%Id,i8*inreg%Ii,i8*inreg%Ih,i8*inreg%Ig)
store i8*%Ij,i8**%h,align 8
%Ik=call i8*@sml_alloc(i32 inreg 28)#0
%Il=getelementptr inbounds i8,i8*%Ik,i64 -4
%Im=bitcast i8*%Il to i32*
store i32 1342177304,i32*%Im,align 4
%In=load i8*,i8**%h,align 8
%Io=bitcast i8*%Ik to i8**
store i8*%In,i8**%Io,align 8
%Ip=load i8*,i8**%g,align 8
%Iq=getelementptr inbounds i8,i8*%Ik,i64 8
%Ir=bitcast i8*%Iq to i8**
store i8*%Ip,i8**%Ir,align 8
%Is=load i8*,i8**%i,align 8
%It=getelementptr inbounds i8,i8*%Ik,i64 16
%Iu=bitcast i8*%It to i8**
store i8*%Is,i8**%Iu,align 8
%Iv=getelementptr inbounds i8,i8*%Ik,i64 24
%Iw=bitcast i8*%Iv to i32*
store i32 7,i32*%Iw,align 4
%Ix=call fastcc i8*@_SMLFN12TypedCalcCon15TPFFIIMPORT__FUNE(i8*inreg%Ik)
ret i8*%Ix
Iy:
store i8*null,i8**%m,align 8
store i8*null,i8**%p,align 8
%Iz=getelementptr inbounds i8,i8*%A,i64 8
%IA=bitcast i8*%Iz to i8**
%IB=load i8*,i8**%IA,align 8
store i8*%IB,i8**%g,align 8
%IC=getelementptr inbounds i8,i8*%IB,i64 8
%ID=bitcast i8*%IC to i8**
%IE=load i8*,i8**%ID,align 8
store i8*%IE,i8**%h,align 8
%IF=call fastcc i8*@_SMLFN13LongsymbolEnv4findE(i32 inreg 1,i32 inreg 8)
%IG=getelementptr inbounds i8,i8*%IF,i64 16
%IH=bitcast i8*%IG to i8*(i8*,i8*)**
%II=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%IH,align 8
%IJ=bitcast i8*%IF to i8**
%IK=load i8*,i8**%IJ,align 8
store i8*%IK,i8**%k,align 8
%IL=bitcast i8**%l to i8***
%IM=load i8**,i8***%IL,align 8
store i8*null,i8**%l,align 8
%IN=load i8*,i8**%IM,align 8
%IO=getelementptr inbounds i8,i8*%IN,i64 16
%IP=bitcast i8*%IO to i8**
%IQ=load i8*,i8**%IP,align 8
store i8*%IQ,i8**%i,align 8
%IR=bitcast i8**%g to i8****
%IS=load i8***,i8****%IR,align 8
%IT=load i8**,i8***%IS,align 8
%IU=load i8*,i8**%IT,align 8
store i8*%IU,i8**%j,align 8
%IV=call i8*@sml_alloc(i32 inreg 20)#0
%IW=getelementptr inbounds i8,i8*%IV,i64 -4
%IX=bitcast i8*%IW to i32*
store i32 1342177296,i32*%IX,align 4
%IY=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%IZ=bitcast i8*%IV to i8**
store i8*%IY,i8**%IZ,align 8
%I0=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%I1=getelementptr inbounds i8,i8*%IV,i64 8
%I2=bitcast i8*%I1 to i8**
store i8*%I0,i8**%I2,align 8
%I3=getelementptr inbounds i8,i8*%IV,i64 16
%I4=bitcast i8*%I3 to i32*
store i32 3,i32*%I4,align 4
%I5=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%I6=call fastcc i8*%II(i8*inreg%I5,i8*inreg%IV)
%I7=icmp eq i8*%I6,null
br i1%I7,label%I8,label%Jy
I8:
store i8*null,i8**%h,align 8
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@c6,i64 0,i32 2,i64 0))
%I9=load i8***,i8****%IR,align 8
store i8*null,i8**%g,align 8
%Ja=load i8**,i8***%I9,align 8
%Jb=load i8*,i8**%Ja,align 8
%Jc=call fastcc i8*@_SMLFN6Symbol18longsymbolToStringE(i8*inreg%Jb)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%Jc)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@dk,i64 0,i32 2,i64 0))
%Jd=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%Jd,i8**%g,align 8
%Je=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bR,i64 0,i32 2)to i8*))
store i8*%Je,i8**%h,align 8
%Jf=call i8*@sml_alloc(i32 inreg 28)#0
%Jg=getelementptr inbounds i8,i8*%Jf,i64 -4
%Jh=bitcast i8*%Jg to i32*
store i32 1342177304,i32*%Jh,align 4
store i8*%Jf,i8**%i,align 8
%Ji=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Jj=bitcast i8*%Jf to i8**
store i8*%Ji,i8**%Jj,align 8
%Jk=getelementptr inbounds i8,i8*%Jf,i64 8
%Jl=bitcast i8*%Jk to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%Jl,align 8
%Jm=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Jn=getelementptr inbounds i8,i8*%Jf,i64 16
%Jo=bitcast i8*%Jn to i8**
store i8*%Jm,i8**%Jo,align 8
%Jp=getelementptr inbounds i8,i8*%Jf,i64 24
%Jq=bitcast i8*%Jp to i32*
store i32 7,i32*%Jq,align 4
%Jr=call i8*@sml_alloc(i32 inreg 60)#0
%Js=getelementptr inbounds i8,i8*%Jr,i64 -4
%Jt=bitcast i8*%Js to i32*
store i32 1342177336,i32*%Jt,align 4
%Ju=getelementptr inbounds i8,i8*%Jr,i64 56
%Jv=bitcast i8*%Ju to i32*
store i32 1,i32*%Jv,align 4
%Jw=load i8*,i8**%i,align 8
%Jx=bitcast i8*%Jr to i8**
store i8*%Jw,i8**%Jx,align 8
call void@sml_raise(i8*inreg%Jr)#1
unreachable
Jy:
%Jz=bitcast i8*%I6 to i8**
%JA=load i8*,i8**%Jz,align 8
%JB=load i8***,i8****%IR,align 8
store i8*null,i8**%g,align 8
%JC=load i8**,i8***%JB,align 8
%JD=load i8*,i8**%JC,align 8
store i8*%JD,i8**%i,align 8
%JE=getelementptr inbounds i8,i8*%JA,i64 8
%JF=bitcast i8*%JE to i8**
%JG=load i8*,i8**%JF,align 8
store i8*%JG,i8**%j,align 8
%JH=call i8*@sml_alloc(i32 inreg 20)#0
%JI=getelementptr inbounds i8,i8*%JH,i64 -4
%JJ=bitcast i8*%JI to i32*
store i32 1342177296,i32*%JJ,align 4
store i8*%JH,i8**%g,align 8
%JK=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%JL=bitcast i8*%JH to i8**
store i8*%JK,i8**%JL,align 8
%JM=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%JN=getelementptr inbounds i8,i8*%JH,i64 8
%JO=bitcast i8*%JN to i8**
store i8*%JM,i8**%JO,align 8
%JP=getelementptr inbounds i8,i8*%JH,i64 16
%JQ=bitcast i8*%JP to i32*
store i32 3,i32*%JQ,align 4
%JR=call i8*@sml_alloc(i32 inreg 20)#0
%JS=getelementptr inbounds i8,i8*%JR,i64 -4
%JT=bitcast i8*%JS to i32*
store i32 1342177296,i32*%JT,align 4
%JU=load i8*,i8**%g,align 8
%JV=bitcast i8*%JR to i8**
store i8*%JU,i8**%JV,align 8
%JW=load i8*,i8**%h,align 8
%JX=getelementptr inbounds i8,i8*%JR,i64 8
%JY=bitcast i8*%JX to i8**
store i8*%JW,i8**%JY,align 8
%JZ=getelementptr inbounds i8,i8*%JR,i64 16
%J0=bitcast i8*%JZ to i32*
store i32 3,i32*%J0,align 4
%J1=call fastcc i8*@_SMLFN12TypedCalcCon7TPEXVARE(i8*inreg%JR)
ret i8*%J1
J2:
store i8*null,i8**%m,align 8
store i8*null,i8**%p,align 8
%J3=getelementptr inbounds i8,i8*%A,i64 8
%J4=bitcast i8*%J3 to i8**
%J5=load i8*,i8**%J4,align 8
store i8*%J5,i8**%g,align 8
%J6=getelementptr inbounds i8,i8*%J5,i64 8
%J7=bitcast i8*%J6 to i8**
%J8=load i8*,i8**%J7,align 8
store i8*%J8,i8**%h,align 8
%J9=call fastcc i8*@_SMLFN13LongsymbolEnv4findE(i32 inreg 1,i32 inreg 8)
%Ka=getelementptr inbounds i8,i8*%J9,i64 16
%Kb=bitcast i8*%Ka to i8*(i8*,i8*)**
%Kc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Kb,align 8
%Kd=bitcast i8*%J9 to i8**
%Ke=load i8*,i8**%Kd,align 8
store i8*%Ke,i8**%k,align 8
%Kf=bitcast i8**%l to i8***
%Kg=load i8**,i8***%Kf,align 8
store i8*null,i8**%l,align 8
%Kh=load i8*,i8**%Kg,align 8
%Ki=getelementptr inbounds i8,i8*%Kh,i64 8
%Kj=bitcast i8*%Ki to i8**
%Kk=load i8*,i8**%Kj,align 8
store i8*%Kk,i8**%i,align 8
%Kl=bitcast i8**%g to i8****
%Km=load i8***,i8****%Kl,align 8
%Kn=load i8**,i8***%Km,align 8
%Ko=load i8*,i8**%Kn,align 8
store i8*%Ko,i8**%j,align 8
%Kp=call i8*@sml_alloc(i32 inreg 20)#0
%Kq=getelementptr inbounds i8,i8*%Kp,i64 -4
%Kr=bitcast i8*%Kq to i32*
store i32 1342177296,i32*%Kr,align 4
%Ks=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Kt=bitcast i8*%Kp to i8**
store i8*%Ks,i8**%Kt,align 8
%Ku=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%Kv=getelementptr inbounds i8,i8*%Kp,i64 8
%Kw=bitcast i8*%Kv to i8**
store i8*%Ku,i8**%Kw,align 8
%Kx=getelementptr inbounds i8,i8*%Kp,i64 16
%Ky=bitcast i8*%Kx to i32*
store i32 3,i32*%Ky,align 4
%Kz=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%KA=call fastcc i8*%Kc(i8*inreg%Kz,i8*inreg%Kp)
%KB=icmp eq i8*%KA,null
br i1%KB,label%KC,label%KY
KC:
store i8*null,i8**%h,align 8
%KD=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%KD,i8**%g,align 8
%KE=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bP,i64 0,i32 2)to i8*))
store i8*%KE,i8**%h,align 8
%KF=call i8*@sml_alloc(i32 inreg 28)#0
%KG=getelementptr inbounds i8,i8*%KF,i64 -4
%KH=bitcast i8*%KG to i32*
store i32 1342177304,i32*%KH,align 4
store i8*%KF,i8**%i,align 8
%KI=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%KJ=bitcast i8*%KF to i8**
store i8*%KI,i8**%KJ,align 8
%KK=getelementptr inbounds i8,i8*%KF,i64 8
%KL=bitcast i8*%KK to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%KL,align 8
%KM=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%KN=getelementptr inbounds i8,i8*%KF,i64 16
%KO=bitcast i8*%KN to i8**
store i8*%KM,i8**%KO,align 8
%KP=getelementptr inbounds i8,i8*%KF,i64 24
%KQ=bitcast i8*%KP to i32*
store i32 7,i32*%KQ,align 4
%KR=call i8*@sml_alloc(i32 inreg 60)#0
%KS=getelementptr inbounds i8,i8*%KR,i64 -4
%KT=bitcast i8*%KS to i32*
store i32 1342177336,i32*%KT,align 4
%KU=getelementptr inbounds i8,i8*%KR,i64 56
%KV=bitcast i8*%KU to i32*
store i32 1,i32*%KV,align 4
%KW=load i8*,i8**%i,align 8
%KX=bitcast i8*%KR to i8**
store i8*%KW,i8**%KX,align 8
call void@sml_raise(i8*inreg%KR)#1
unreachable
KY:
%KZ=bitcast i8*%KA to i8**
%K0=load i8*,i8**%KZ,align 8
%K1=load i8***,i8****%Kl,align 8
store i8*null,i8**%g,align 8
%K2=load i8**,i8***%K1,align 8
%K3=load i8*,i8**%K2,align 8
store i8*%K3,i8**%i,align 8
%K4=getelementptr inbounds i8,i8*%K0,i64 8
%K5=bitcast i8*%K4 to i8**
%K6=load i8*,i8**%K5,align 8
store i8*%K6,i8**%j,align 8
%K7=call i8*@sml_alloc(i32 inreg 20)#0
%K8=getelementptr inbounds i8,i8*%K7,i64 -4
%K9=bitcast i8*%K8 to i32*
store i32 1342177296,i32*%K9,align 4
store i8*%K7,i8**%g,align 8
%La=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Lb=bitcast i8*%K7 to i8**
store i8*%La,i8**%Lb,align 8
%Lc=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%Ld=getelementptr inbounds i8,i8*%K7,i64 8
%Le=bitcast i8*%Ld to i8**
store i8*%Lc,i8**%Le,align 8
%Lf=getelementptr inbounds i8,i8*%K7,i64 16
%Lg=bitcast i8*%Lf to i32*
store i32 3,i32*%Lg,align 4
%Lh=call i8*@sml_alloc(i32 inreg 20)#0
%Li=getelementptr inbounds i8,i8*%Lh,i64 -4
%Lj=bitcast i8*%Li to i32*
store i32 1342177296,i32*%Lj,align 4
%Lk=load i8*,i8**%g,align 8
%Ll=bitcast i8*%Lh to i8**
store i8*%Lk,i8**%Ll,align 8
%Lm=load i8*,i8**%h,align 8
%Ln=getelementptr inbounds i8,i8*%Lh,i64 8
%Lo=bitcast i8*%Ln to i8**
store i8*%Lm,i8**%Lo,align 8
%Lp=getelementptr inbounds i8,i8*%Lh,i64 16
%Lq=bitcast i8*%Lp to i32*
store i32 3,i32*%Lq,align 4
%Lr=call fastcc i8*@_SMLFN12TypedCalcCon10TPEXEXNTAGE(i8*inreg%Lh)
ret i8*%Lr
Ls:
store i8*null,i8**%m,align 8
store i8*null,i8**%p,align 8
%Lt=getelementptr inbounds i8,i8*%A,i64 8
%Lu=bitcast i8*%Lt to i8**
%Lv=load i8*,i8**%Lu,align 8
store i8*%Lv,i8**%g,align 8
%Lw=getelementptr inbounds i8,i8*%Lv,i64 8
%Lx=bitcast i8*%Lw to i8**
%Ly=load i8*,i8**%Lx,align 8
store i8*%Ly,i8**%h,align 8
%Lz=call fastcc i8*@_SMLFN5ExnID3Map4findE(i32 inreg 1,i32 inreg 8)
%LA=getelementptr inbounds i8,i8*%Lz,i64 16
%LB=bitcast i8*%LA to i8*(i8*,i8*)**
%LC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%LB,align 8
%LD=bitcast i8*%Lz to i8**
%LE=load i8*,i8**%LD,align 8
store i8*%LE,i8**%j,align 8
%LF=bitcast i8**%l to i8***
%LG=load i8**,i8***%LF,align 8
store i8*null,i8**%l,align 8
%LH=load i8*,i8**%LG,align 8
%LI=getelementptr inbounds i8,i8*%LH,i64 24
%LJ=bitcast i8*%LI to i8**
%LK=load i8*,i8**%LJ,align 8
store i8*%LK,i8**%i,align 8
%LL=bitcast i8**%g to i32***
%LM=load i32**,i32***%LL,align 8
%LN=load i32*,i32**%LM,align 8
%LO=load i32,i32*%LN,align 4
%LP=call i8*@sml_alloc(i32 inreg 20)#0
%LQ=getelementptr inbounds i8,i8*%LP,i64 -4
%LR=bitcast i8*%LQ to i32*
store i32 1342177296,i32*%LR,align 4
%LS=getelementptr inbounds i8,i8*%LP,i64 12
%LT=bitcast i8*%LS to i32*
store i32 0,i32*%LT,align 1
%LU=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%LV=bitcast i8*%LP to i8**
store i8*%LU,i8**%LV,align 8
%LW=getelementptr inbounds i8,i8*%LP,i64 8
%LX=bitcast i8*%LW to i32*
store i32%LO,i32*%LX,align 4
%LY=getelementptr inbounds i8,i8*%LP,i64 16
%LZ=bitcast i8*%LY to i32*
store i32 1,i32*%LZ,align 4
%L0=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%L1=call fastcc i8*%LC(i8*inreg%L0,i8*inreg%LP)
%L2=icmp eq i8*%L1,null
br i1%L2,label%L3,label%Mp
L3:
store i8*null,i8**%h,align 8
%L4=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%L4,i8**%g,align 8
%L5=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bN,i64 0,i32 2)to i8*))
store i8*%L5,i8**%h,align 8
%L6=call i8*@sml_alloc(i32 inreg 28)#0
%L7=getelementptr inbounds i8,i8*%L6,i64 -4
%L8=bitcast i8*%L7 to i32*
store i32 1342177304,i32*%L8,align 4
store i8*%L6,i8**%i,align 8
%L9=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Ma=bitcast i8*%L6 to i8**
store i8*%L9,i8**%Ma,align 8
%Mb=getelementptr inbounds i8,i8*%L6,i64 8
%Mc=bitcast i8*%Mb to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%Mc,align 8
%Md=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Me=getelementptr inbounds i8,i8*%L6,i64 16
%Mf=bitcast i8*%Me to i8**
store i8*%Md,i8**%Mf,align 8
%Mg=getelementptr inbounds i8,i8*%L6,i64 24
%Mh=bitcast i8*%Mg to i32*
store i32 7,i32*%Mh,align 4
%Mi=call i8*@sml_alloc(i32 inreg 60)#0
%Mj=getelementptr inbounds i8,i8*%Mi,i64 -4
%Mk=bitcast i8*%Mj to i32*
store i32 1342177336,i32*%Mk,align 4
%Ml=getelementptr inbounds i8,i8*%Mi,i64 56
%Mm=bitcast i8*%Ml to i32*
store i32 1,i32*%Mm,align 4
%Mn=load i8*,i8**%i,align 8
%Mo=bitcast i8*%Mi to i8**
store i8*%Mn,i8**%Mo,align 8
call void@sml_raise(i8*inreg%Mi)#1
unreachable
Mp:
%Mq=bitcast i8*%L1 to i8**
%Mr=load i8*,i8**%Mq,align 8
%Ms=bitcast i8**%g to i8***
%Mt=load i8**,i8***%Ms,align 8
store i8*null,i8**%g,align 8
%Mu=load i8*,i8**%Mt,align 8
%Mv=bitcast i8*%Mu to i32*
%Mw=load i32,i32*%Mv,align 4
%Mx=getelementptr inbounds i8,i8*%Mu,i64 8
%My=bitcast i8*%Mx to i8**
%Mz=load i8*,i8**%My,align 8
store i8*%Mz,i8**%i,align 8
%MA=getelementptr inbounds i8,i8*%Mr,i64 16
%MB=bitcast i8*%MA to i8**
%MC=load i8*,i8**%MB,align 8
store i8*%MC,i8**%j,align 8
%MD=call i8*@sml_alloc(i32 inreg 28)#0
%ME=getelementptr inbounds i8,i8*%MD,i64 -4
%MF=bitcast i8*%ME to i32*
store i32 1342177304,i32*%MF,align 4
store i8*%MD,i8**%g,align 8
%MG=getelementptr inbounds i8,i8*%MD,i64 4
%MH=bitcast i8*%MG to i32*
store i32 0,i32*%MH,align 1
%MI=bitcast i8*%MD to i32*
store i32%Mw,i32*%MI,align 4
%MJ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%MK=getelementptr inbounds i8,i8*%MD,i64 8
%ML=bitcast i8*%MK to i8**
store i8*%MJ,i8**%ML,align 8
%MM=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%MN=getelementptr inbounds i8,i8*%MD,i64 16
%MO=bitcast i8*%MN to i8**
store i8*%MM,i8**%MO,align 8
%MP=getelementptr inbounds i8,i8*%MD,i64 24
%MQ=bitcast i8*%MP to i32*
store i32 6,i32*%MQ,align 4
%MR=call i8*@sml_alloc(i32 inreg 20)#0
%MS=getelementptr inbounds i8,i8*%MR,i64 -4
%MT=bitcast i8*%MS to i32*
store i32 1342177296,i32*%MT,align 4
%MU=load i8*,i8**%g,align 8
%MV=bitcast i8*%MR to i8**
store i8*%MU,i8**%MV,align 8
%MW=load i8*,i8**%h,align 8
%MX=getelementptr inbounds i8,i8*%MR,i64 8
%MY=bitcast i8*%MX to i8**
store i8*%MW,i8**%MY,align 8
%MZ=getelementptr inbounds i8,i8*%MR,i64 16
%M0=bitcast i8*%MZ to i32*
store i32 3,i32*%M0,align 4
%M1=call fastcc i8*@_SMLFN12TypedCalcCon8TPEXNTAGE(i8*inreg%MR)
ret i8*%M1
M2:
%M3=getelementptr inbounds i8,i8*%A,i64 8
%M4=bitcast i8*%M3 to i8**
%M5=load i8*,i8**%M4,align 8
store i8*%M5,i8**%h,align 8
%M6=getelementptr inbounds i8,i8*%M5,i64 16
%M7=bitcast i8*%M6 to i8**
%M8=load i8*,i8**%M7,align 8
store i8*%M8,i8**%i,align 8
%M9=call fastcc i8*@_SMLLN17PolyTyElimination13analyzeExnConE_1130(i8*inreg%z)
%Na=getelementptr inbounds i8,i8*%M9,i64 16
%Nb=bitcast i8*%Na to i8*(i8*,i8*)**
%Nc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Nb,align 8
%Nd=bitcast i8*%M9 to i8**
%Ne=load i8*,i8**%Nd,align 8
%Nf=load i8*,i8**%h,align 8
%Ng=getelementptr inbounds i8,i8*%Nf,i64 8
%Nh=bitcast i8*%Ng to i8**
%Ni=load i8*,i8**%Nh,align 8
%Nj=call fastcc i8*%Nc(i8*inreg%Ne,i8*inreg%Ni)
%Nk=bitcast i8*%Nj to i8**
%Nl=load i8*,i8**%Nk,align 8
store i8*%Nl,i8**%g,align 8
%Nm=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Nn=getelementptr inbounds i8,i8*%Nm,i64 16
%No=bitcast i8*%Nn to i8*(i8*,i8*)**
%Np=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%No,align 8
%Nq=bitcast i8*%Nm to i8**
%Nr=load i8*,i8**%Nq,align 8
store i8*%Nr,i8**%j,align 8
%Ns=call i8*@sml_alloc(i32 inreg 28)#0
%Nt=getelementptr inbounds i8,i8*%Ns,i64 -4
%Nu=bitcast i8*%Nt to i32*
store i32 1342177304,i32*%Nu,align 4
store i8*%Ns,i8**%k,align 8
%Nv=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%Nw=bitcast i8*%Ns to i8**
store i8*%Nv,i8**%Nw,align 8
%Nx=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%Ny=getelementptr inbounds i8,i8*%Ns,i64 8
%Nz=bitcast i8*%Ny to i8**
store i8*%Nx,i8**%Nz,align 8
%NA=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%NB=getelementptr inbounds i8,i8*%Ns,i64 16
%NC=bitcast i8*%NB to i8**
store i8*%NA,i8**%NC,align 8
%ND=getelementptr inbounds i8,i8*%Ns,i64 24
%NE=bitcast i8*%ND to i32*
store i32 7,i32*%NE,align 4
%NF=call i8*@sml_alloc(i32 inreg 28)#0
%NG=getelementptr inbounds i8,i8*%NF,i64 -4
%NH=bitcast i8*%NG to i32*
store i32 1342177304,i32*%NH,align 4
%NI=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%NJ=bitcast i8*%NF to i8**
store i8*%NI,i8**%NJ,align 8
%NK=getelementptr inbounds i8,i8*%NF,i64 8
%NL=bitcast i8*%NK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1205 to void(...)*),void(...)**%NL,align 8
%NM=getelementptr inbounds i8,i8*%NF,i64 16
%NN=bitcast i8*%NM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1205 to void(...)*),void(...)**%NN,align 8
%NO=getelementptr inbounds i8,i8*%NF,i64 24
%NP=bitcast i8*%NO to i32*
store i32 -2147483647,i32*%NP,align 4
%NQ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%NR=call fastcc i8*%Np(i8*inreg%NQ,i8*inreg%NF)
%NS=getelementptr inbounds i8,i8*%NR,i64 16
%NT=bitcast i8*%NS to i8*(i8*,i8*)**
%NU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%NT,align 8
%NV=bitcast i8*%NR to i8**
%NW=load i8*,i8**%NV,align 8
%NX=bitcast i8**%h to i8***
%NY=load i8**,i8***%NX,align 8
store i8*null,i8**%h,align 8
%NZ=load i8*,i8**%NY,align 8
%N0=call fastcc i8*%NU(i8*inreg%NW,i8*inreg%NZ)
store i8*%N0,i8**%h,align 8
%N1=call i8*@sml_alloc(i32 inreg 28)#0
%N2=getelementptr inbounds i8,i8*%N1,i64 -4
%N3=bitcast i8*%N2 to i32*
store i32 1342177304,i32*%N3,align 4
%N4=load i8*,i8**%h,align 8
%N5=bitcast i8*%N1 to i8**
store i8*%N4,i8**%N5,align 8
%N6=load i8*,i8**%g,align 8
%N7=getelementptr inbounds i8,i8*%N1,i64 8
%N8=bitcast i8*%N7 to i8**
store i8*%N6,i8**%N8,align 8
%N9=load i8*,i8**%i,align 8
%Oa=getelementptr inbounds i8,i8*%N1,i64 16
%Ob=bitcast i8*%Oa to i8**
store i8*%N9,i8**%Ob,align 8
%Oc=getelementptr inbounds i8,i8*%N1,i64 24
%Od=bitcast i8*%Oc to i32*
store i32 7,i32*%Od,align 4
%Oe=call fastcc i8*@_SMLFN12TypedCalcCon14TPEXNCONSTRUCTE(i8*inreg%N1)
ret i8*%Oe
Of:
%Og=load i8*,i8**@_SMLZN12TypedCalcCon7TPERRORE,align 8
ret i8*%Og
Oh:
%Oi=getelementptr inbounds i8,i8*%A,i64 8
%Oj=bitcast i8*%Oi to i8**
%Ok=load i8*,i8**%Oj,align 8
store i8*%Ok,i8**%h,align 8
%Ol=getelementptr inbounds i8,i8*%Ok,i64 32
%Om=bitcast i8*%Ol to i8**
%On=load i8*,i8**%Om,align 8
store i8*%On,i8**%j,align 8
%Oo=bitcast i8*%Ok to i8**
%Op=load i8*,i8**%Oo,align 8
%Oq=load i8*,i8**%p,align 8
%Or=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%Oq,i8*inreg%x,i8*inreg%z,i8*inreg%Op)
store i8*%Or,i8**%g,align 8
%Os=load i8*,i8**%h,align 8
%Ot=getelementptr inbounds i8,i8*%Os,i64 8
%Ou=bitcast i8*%Ot to i8**
%Ov=load i8*,i8**%Ou,align 8
%Ow=load i8*,i8**%l,align 8
%Ox=load i8*,i8**%m,align 8
%Oy=load i8*,i8**%p,align 8
%Oz=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%Oy,i8*inreg%Ox,i8*inreg%Ow,i8*inreg%Ov)
store i8*%Oz,i8**%i,align 8
%OA=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%OB=getelementptr inbounds i8,i8*%OA,i64 16
%OC=bitcast i8*%OB to i8*(i8*,i8*)**
%OD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%OC,align 8
%OE=bitcast i8*%OA to i8**
%OF=load i8*,i8**%OE,align 8
store i8*%OF,i8**%k,align 8
%OG=load i8*,i8**%p,align 8
%OH=getelementptr inbounds i8,i8*%OG,i64 8
%OI=bitcast i8*%OH to i8**
%OJ=load i8*,i8**%OI,align 8
%OK=load i8*,i8**%m,align 8
%OL=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%OJ,i8*inreg%OK)
%OM=getelementptr inbounds i8,i8*%OL,i64 16
%ON=bitcast i8*%OM to i8*(i8*,i8*)**
%OO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ON,align 8
%OP=bitcast i8*%OL to i8**
%OQ=load i8*,i8**%OP,align 8
%OR=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%OS=call fastcc i8*%OO(i8*inreg%OQ,i8*inreg%OR)
%OT=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%OU=call fastcc i8*%OD(i8*inreg%OT,i8*inreg%OS)
%OV=getelementptr inbounds i8,i8*%OU,i64 16
%OW=bitcast i8*%OV to i8*(i8*,i8*)**
%OX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%OW,align 8
%OY=bitcast i8*%OU to i8**
%OZ=load i8*,i8**%OY,align 8
%O0=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%O1=getelementptr inbounds i8,i8*%O0,i64 24
%O2=bitcast i8*%O1 to i8**
%O3=load i8*,i8**%O2,align 8
%O4=call fastcc i8*%OX(i8*inreg%OZ,i8*inreg%O3)
store i8*%O4,i8**%h,align 8
%O5=bitcast i8**%p to i8***
%O6=load i8**,i8***%O5,align 8
store i8*null,i8**%p,align 8
%O7=load i8*,i8**%O6,align 8
%O8=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%O9=call fastcc i8*@_SMLLN17PolyTyElimination6exportE_1116(i8*inreg%O7,i8*inreg%O8)
%Pa=getelementptr inbounds i8,i8*%O9,i64 16
%Pb=bitcast i8*%Pa to i8*(i8*,i8*)**
%Pc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Pb,align 8
%Pd=bitcast i8*%O9 to i8**
%Pe=load i8*,i8**%Pd,align 8
%Pf=load i8*,i8**%i,align 8
%Pg=getelementptr inbounds i8,i8*%Pf,i64 8
%Ph=bitcast i8*%Pg to i8**
%Pi=load i8*,i8**%Ph,align 8
%Pj=call fastcc i8*%Pc(i8*inreg%Pe,i8*inreg%Pi)
%Pk=call i8*@sml_alloc(i32 inreg 36)#0
%Pl=getelementptr inbounds i8,i8*%Pk,i64 -4
%Pm=bitcast i8*%Pl to i32*
store i32 1342177312,i32*%Pm,align 4
%Pn=load i8*,i8**%g,align 8
%Po=bitcast i8*%Pk to i8**
store i8*%Pn,i8**%Po,align 8
%Pp=load i8*,i8**%i,align 8
%Pq=getelementptr inbounds i8,i8*%Pk,i64 8
%Pr=bitcast i8*%Pq to i8**
store i8*%Pp,i8**%Pr,align 8
%Ps=load i8*,i8**%h,align 8
%Pt=getelementptr inbounds i8,i8*%Pk,i64 16
%Pu=bitcast i8*%Pt to i8**
store i8*%Ps,i8**%Pu,align 8
%Pv=load i8*,i8**%j,align 8
%Pw=getelementptr inbounds i8,i8*%Pk,i64 24
%Px=bitcast i8*%Pw to i8**
store i8*%Pv,i8**%Px,align 8
%Py=getelementptr inbounds i8,i8*%Pk,i64 32
%Pz=bitcast i8*%Py to i32*
store i32 15,i32*%Pz,align 4
%PA=call fastcc i8*@_SMLFN12TypedCalcCon18TPDYNAMICEXISTTAPPE(i8*inreg%Pk)
ret i8*%PA
PB:
%PC=getelementptr inbounds i8,i8*%A,i64 8
%PD=bitcast i8*%PC to i8**
%PE=load i8*,i8**%PD,align 8
store i8*%PE,i8**%n,align 8
%PF=getelementptr inbounds i8,i8*%PE,i64 40
%PG=bitcast i8*%PF to i8**
%PH=load i8*,i8**%PG,align 8
store i8*%PH,i8**%o,align 8
%PI=getelementptr inbounds i8,i8*%PE,i64 24
%PJ=bitcast i8*%PI to i8**
%PK=load i8*,i8**%PJ,align 8
%PL=load i8*,i8**%p,align 8
%PM=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%PL,i8*inreg%x,i8*inreg%z,i8*inreg%PK)
store i8*%PM,i8**%g,align 8
%PN=load i8*,i8**%p,align 8
%PO=getelementptr inbounds i8,i8*%PN,i64 8
%PP=bitcast i8*%PO to i8**
%PQ=load i8*,i8**%PP,align 8
%PR=load i8*,i8**%m,align 8
%PS=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%PQ,i8*inreg%PR)
%PT=getelementptr inbounds i8,i8*%PS,i64 16
%PU=bitcast i8*%PT to i8*(i8*,i8*)**
%PV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%PU,align 8
%PW=bitcast i8*%PS to i8**
%PX=load i8*,i8**%PW,align 8
%PY=load i8*,i8**%l,align 8
%PZ=call fastcc i8*%PV(i8*inreg%PX,i8*inreg%PY)
%P0=getelementptr inbounds i8,i8*%PZ,i64 16
%P1=bitcast i8*%P0 to i8*(i8*,i8*)**
%P2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%P1,align 8
%P3=bitcast i8*%PZ to i8**
%P4=load i8*,i8**%P3,align 8
%P5=load i8*,i8**%n,align 8
%P6=getelementptr inbounds i8,i8*%P5,i64 32
%P7=bitcast i8*%P6 to i8**
%P8=load i8*,i8**%P7,align 8
%P9=call fastcc i8*%P2(i8*inreg%P4,i8*inreg%P8)
store i8*%P9,i8**%h,align 8
%Qa=bitcast i8**%n to i8***
%Qb=load i8**,i8***%Qa,align 8
%Qc=load i8*,i8**%Qb,align 8
%Qd=load i8*,i8**%l,align 8
%Qe=load i8*,i8**%m,align 8
%Qf=load i8*,i8**%p,align 8
%Qg=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%Qf,i8*inreg%Qe,i8*inreg%Qd,i8*inreg%Qc)
store i8*%Qg,i8**%i,align 8
%Qh=load i8*,i8**%p,align 8
%Qi=getelementptr inbounds i8,i8*%Qh,i64 8
%Qj=bitcast i8*%Qi to i8**
%Qk=load i8*,i8**%Qj,align 8
%Ql=load i8*,i8**%m,align 8
%Qm=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%Qk,i8*inreg%Ql)
%Qn=getelementptr inbounds i8,i8*%Qm,i64 16
%Qo=bitcast i8*%Qn to i8*(i8*,i8*)**
%Qp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Qo,align 8
%Qq=bitcast i8*%Qm to i8**
%Qr=load i8*,i8**%Qq,align 8
%Qs=load i8*,i8**%l,align 8
%Qt=call fastcc i8*%Qp(i8*inreg%Qr,i8*inreg%Qs)
%Qu=getelementptr inbounds i8,i8*%Qt,i64 16
%Qv=bitcast i8*%Qu to i8*(i8*,i8*)**
%Qw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Qv,align 8
%Qx=bitcast i8*%Qt to i8**
%Qy=load i8*,i8**%Qx,align 8
%Qz=load i8*,i8**%n,align 8
%QA=getelementptr inbounds i8,i8*%Qz,i64 8
%QB=bitcast i8*%QA to i8**
%QC=load i8*,i8**%QB,align 8
%QD=call fastcc i8*%Qw(i8*inreg%Qy,i8*inreg%QC)
store i8*%QD,i8**%j,align 8
%QE=load i8*,i8**%p,align 8
%QF=getelementptr inbounds i8,i8*%QE,i64 8
%QG=bitcast i8*%QF to i8**
%QH=load i8*,i8**%QG,align 8
%QI=load i8*,i8**%m,align 8
%QJ=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%QH,i8*inreg%QI)
%QK=getelementptr inbounds i8,i8*%QJ,i64 16
%QL=bitcast i8*%QK to i8*(i8*,i8*)**
%QM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%QL,align 8
%QN=bitcast i8*%QJ to i8**
%QO=load i8*,i8**%QN,align 8
%QP=load i8*,i8**%l,align 8
%QQ=call fastcc i8*%QM(i8*inreg%QO,i8*inreg%QP)
%QR=getelementptr inbounds i8,i8*%QQ,i64 16
%QS=bitcast i8*%QR to i8*(i8*,i8*)**
%QT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%QS,align 8
%QU=bitcast i8*%QQ to i8**
%QV=load i8*,i8**%QU,align 8
%QW=load i8*,i8**%n,align 8
%QX=getelementptr inbounds i8,i8*%QW,i64 16
%QY=bitcast i8*%QX to i8**
%QZ=load i8*,i8**%QY,align 8
%Q0=call fastcc i8*%QT(i8*inreg%QV,i8*inreg%QZ)
store i8*%Q0,i8**%k,align 8
%Q1=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%Q2=getelementptr inbounds i8,i8*%Q1,i64 8
%Q3=bitcast i8*%Q2 to i8**
%Q4=load i8*,i8**%Q3,align 8
%Q5=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%Q6=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%Q4,i8*inreg%Q5)
%Q7=getelementptr inbounds i8,i8*%Q6,i64 16
%Q8=bitcast i8*%Q7 to i8*(i8*,i8*)**
%Q9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q8,align 8
%Ra=bitcast i8*%Q6 to i8**
%Rb=load i8*,i8**%Ra,align 8
%Rc=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%Rd=call fastcc i8*%Q9(i8*inreg%Rb,i8*inreg%Rc)
%Re=getelementptr inbounds i8,i8*%Rd,i64 16
%Rf=bitcast i8*%Re to i8*(i8*,i8*)**
%Rg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Rf,align 8
%Rh=bitcast i8*%Rd to i8**
%Ri=load i8*,i8**%Rh,align 8
%Rj=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%Rk=getelementptr inbounds i8,i8*%Rj,i64 48
%Rl=bitcast i8*%Rk to i8**
%Rm=load i8*,i8**%Rl,align 8
%Rn=call fastcc i8*%Rg(i8*inreg%Ri,i8*inreg%Rm)
store i8*%Rn,i8**%l,align 8
%Ro=call i8*@sml_alloc(i32 inreg 60)#0
%Rp=getelementptr inbounds i8,i8*%Ro,i64 -4
%Rq=bitcast i8*%Rp to i32*
store i32 1342177336,i32*%Rq,align 4
%Rr=load i8*,i8**%i,align 8
%Rs=bitcast i8*%Ro to i8**
store i8*%Rr,i8**%Rs,align 8
%Rt=load i8*,i8**%j,align 8
%Ru=getelementptr inbounds i8,i8*%Ro,i64 8
%Rv=bitcast i8*%Ru to i8**
store i8*%Rt,i8**%Rv,align 8
%Rw=load i8*,i8**%k,align 8
%Rx=getelementptr inbounds i8,i8*%Ro,i64 16
%Ry=bitcast i8*%Rx to i8**
store i8*%Rw,i8**%Ry,align 8
%Rz=load i8*,i8**%g,align 8
%RA=getelementptr inbounds i8,i8*%Ro,i64 24
%RB=bitcast i8*%RA to i8**
store i8*%Rz,i8**%RB,align 8
%RC=load i8*,i8**%h,align 8
%RD=getelementptr inbounds i8,i8*%Ro,i64 32
%RE=bitcast i8*%RD to i8**
store i8*%RC,i8**%RE,align 8
%RF=load i8*,i8**%o,align 8
%RG=getelementptr inbounds i8,i8*%Ro,i64 40
%RH=bitcast i8*%RG to i8**
store i8*%RF,i8**%RH,align 8
%RI=load i8*,i8**%l,align 8
%RJ=getelementptr inbounds i8,i8*%Ro,i64 48
%RK=bitcast i8*%RJ to i8**
store i8*%RI,i8**%RK,align 8
%RL=getelementptr inbounds i8,i8*%Ro,i64 56
%RM=bitcast i8*%RL to i32*
store i32 127,i32*%RM,align 4
%RN=call fastcc i8*@_SMLFN12TypedCalcCon13TPDYNAMICCASEE(i8*inreg%Ro)
ret i8*%RN
RO:
%RP=getelementptr inbounds i8,i8*%A,i64 8
%RQ=bitcast i8*%RP to i8**
%RR=load i8*,i8**%RQ,align 8
store i8*%RR,i8**%i,align 8
%RS=getelementptr inbounds i8,i8*%RR,i64 24
%RT=bitcast i8*%RS to i8**
%RU=load i8*,i8**%RT,align 8
store i8*%RU,i8**%j,align 8
%RV=getelementptr inbounds i8,i8*%RR,i64 8
%RW=bitcast i8*%RV to i8**
%RX=load i8*,i8**%RW,align 8
%RY=bitcast i8*%RX to i32*
%RZ=load i32,i32*%RY,align 4
%R0=getelementptr inbounds i8,i8*%RX,i64 8
%R1=bitcast i8*%R0 to i8**
%R2=load i8*,i8**%R1,align 8
store i8*%R2,i8**%h,align 8
%R3=load i8*,i8**%p,align 8
%R4=getelementptr inbounds i8,i8*%R3,i64 8
%R5=bitcast i8*%R4 to i8**
%R6=load i8*,i8**%R5,align 8
%R7=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%R6,i8*inreg%x)
%R8=getelementptr inbounds i8,i8*%R7,i64 16
%R9=bitcast i8*%R8 to i8*(i8*,i8*)**
%Sa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%R9,align 8
%Sb=bitcast i8*%R7 to i8**
%Sc=load i8*,i8**%Sb,align 8
%Sd=load i8*,i8**%l,align 8
%Se=call fastcc i8*%Sa(i8*inreg%Sc,i8*inreg%Sd)
%Sf=getelementptr inbounds i8,i8*%Se,i64 16
%Sg=bitcast i8*%Sf to i8*(i8*,i8*)**
%Sh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Sg,align 8
%Si=bitcast i8*%Se to i8**
%Sj=load i8*,i8**%Si,align 8
%Sk=load i8*,i8**%i,align 8
%Sl=getelementptr inbounds i8,i8*%Sk,i64 8
%Sm=bitcast i8*%Sl to i8**
%Sn=load i8*,i8**%Sm,align 8
%So=getelementptr inbounds i8,i8*%Sn,i64 16
%Sp=bitcast i8*%So to i8**
%Sq=load i8*,i8**%Sp,align 8
%Sr=call fastcc i8*%Sh(i8*inreg%Sj,i8*inreg%Sq)
store i8*%Sr,i8**%k,align 8
%Ss=call i8*@sml_alloc(i32 inreg 28)#0
%St=getelementptr inbounds i8,i8*%Ss,i64 -4
%Su=bitcast i8*%St to i32*
store i32 1342177304,i32*%Su,align 4
store i8*%Ss,i8**%g,align 8
%Sv=getelementptr inbounds i8,i8*%Ss,i64 4
%Sw=bitcast i8*%Sv to i32*
store i32 0,i32*%Sw,align 1
%Sx=bitcast i8*%Ss to i32*
store i32%RZ,i32*%Sx,align 4
%Sy=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Sz=getelementptr inbounds i8,i8*%Ss,i64 8
%SA=bitcast i8*%Sz to i8**
store i8*%Sy,i8**%SA,align 8
%SB=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%SC=getelementptr inbounds i8,i8*%Ss,i64 16
%SD=bitcast i8*%SC to i8**
store i8*%SB,i8**%SD,align 8
%SE=getelementptr inbounds i8,i8*%Ss,i64 24
%SF=bitcast i8*%SE to i32*
store i32 6,i32*%SF,align 4
%SG=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%SH=getelementptr inbounds i8,i8*%SG,i64 16
%SI=bitcast i8*%SH to i8*(i8*,i8*)**
%SJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%SI,align 8
%SK=bitcast i8*%SG to i8**
%SL=load i8*,i8**%SK,align 8
store i8*%SL,i8**%k,align 8
%SM=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%SN=getelementptr inbounds i8,i8*%SM,i64 16
%SO=bitcast i8*%SN to i8*(i8*,i8*)**
%SP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%SO,align 8
%SQ=bitcast i8*%SM to i8**
%SR=load i8*,i8**%SQ,align 8
store i8*%SR,i8**%h,align 8
%SS=load i8*,i8**%p,align 8
%ST=getelementptr inbounds i8,i8*%SS,i64 8
%SU=bitcast i8*%ST to i8**
%SV=load i8*,i8**%SU,align 8
%SW=load i8*,i8**%m,align 8
%SX=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%SV,i8*inreg%SW)
%SY=getelementptr inbounds i8,i8*%SX,i64 16
%SZ=bitcast i8*%SY to i8*(i8*,i8*)**
%S0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%SZ,align 8
%S1=bitcast i8*%SX to i8**
%S2=load i8*,i8**%S1,align 8
%S3=load i8*,i8**%l,align 8
%S4=call fastcc i8*%S0(i8*inreg%S2,i8*inreg%S3)
%S5=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%S6=call fastcc i8*%SP(i8*inreg%S5,i8*inreg%S4)
%S7=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%S8=call fastcc i8*%SJ(i8*inreg%S7,i8*inreg%S6)
%S9=getelementptr inbounds i8,i8*%S8,i64 16
%Ta=bitcast i8*%S9 to i8*(i8*,i8*)**
%Tb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Ta,align 8
%Tc=bitcast i8*%S8 to i8**
%Td=load i8*,i8**%Tc,align 8
%Te=load i8*,i8**%i,align 8
%Tf=getelementptr inbounds i8,i8*%Te,i64 16
%Tg=bitcast i8*%Tf to i8**
%Th=load i8*,i8**%Tg,align 8
%Ti=call fastcc i8*%Tb(i8*inreg%Td,i8*inreg%Th)
store i8*%Ti,i8**%h,align 8
%Tj=bitcast i8**%p to i8***
%Tk=load i8**,i8***%Tj,align 8
%Tl=load i8*,i8**%Tk,align 8
%Tm=load i8*,i8**%m,align 8
%Tn=call fastcc i8*@_SMLLN17PolyTyElimination6exportE_1116(i8*inreg%Tl,i8*inreg%Tm)
%To=getelementptr inbounds i8,i8*%Tn,i64 16
%Tp=bitcast i8*%To to i8*(i8*,i8*)**
%Tq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Tp,align 8
%Tr=bitcast i8*%Tn to i8**
%Ts=load i8*,i8**%Tr,align 8
%Tt=load i8*,i8**%g,align 8
%Tu=getelementptr inbounds i8,i8*%Tt,i64 16
%Tv=bitcast i8*%Tu to i8**
%Tw=load i8*,i8**%Tv,align 8
%Tx=call fastcc i8*%Tq(i8*inreg%Ts,i8*inreg%Tw)
%Ty=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Tz=getelementptr inbounds i8,i8*%Ty,i64 16
%TA=bitcast i8*%Tz to i8*(i8*,i8*)**
%TB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%TA,align 8
%TC=bitcast i8*%Ty to i8**
%TD=load i8*,i8**%TC,align 8
store i8*%TD,i8**%k,align 8
%TE=call i8*@sml_alloc(i32 inreg 28)#0
%TF=getelementptr inbounds i8,i8*%TE,i64 -4
%TG=bitcast i8*%TF to i32*
store i32 1342177304,i32*%TG,align 4
store i8*%TE,i8**%n,align 8
%TH=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%TI=bitcast i8*%TE to i8**
store i8*%TH,i8**%TI,align 8
%TJ=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%TK=getelementptr inbounds i8,i8*%TE,i64 8
%TL=bitcast i8*%TK to i8**
store i8*%TJ,i8**%TL,align 8
%TM=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%TN=getelementptr inbounds i8,i8*%TE,i64 16
%TO=bitcast i8*%TN to i8**
store i8*%TM,i8**%TO,align 8
%TP=getelementptr inbounds i8,i8*%TE,i64 24
%TQ=bitcast i8*%TP to i32*
store i32 7,i32*%TQ,align 4
%TR=call i8*@sml_alloc(i32 inreg 28)#0
%TS=getelementptr inbounds i8,i8*%TR,i64 -4
%TT=bitcast i8*%TS to i32*
store i32 1342177304,i32*%TT,align 4
%TU=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%TV=bitcast i8*%TR to i8**
store i8*%TU,i8**%TV,align 8
%TW=getelementptr inbounds i8,i8*%TR,i64 8
%TX=bitcast i8*%TW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1204 to void(...)*),void(...)**%TX,align 8
%TY=getelementptr inbounds i8,i8*%TR,i64 16
%TZ=bitcast i8*%TY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10analyzeExpE_1204 to void(...)*),void(...)**%TZ,align 8
%T0=getelementptr inbounds i8,i8*%TR,i64 24
%T1=bitcast i8*%T0 to i32*
store i32 -2147483647,i32*%T1,align 4
%T2=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%T3=call fastcc i8*%TB(i8*inreg%T2,i8*inreg%TR)
%T4=getelementptr inbounds i8,i8*%T3,i64 16
%T5=bitcast i8*%T4 to i8*(i8*,i8*)**
%T6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T5,align 8
%T7=bitcast i8*%T3 to i8**
%T8=load i8*,i8**%T7,align 8
%T9=bitcast i8**%i to i8***
%Ua=load i8**,i8***%T9,align 8
store i8*null,i8**%i,align 8
%Ub=load i8*,i8**%Ua,align 8
%Uc=call fastcc i8*%T6(i8*inreg%T8,i8*inreg%Ub)
store i8*%Uc,i8**%i,align 8
%Ud=call i8*@sml_alloc(i32 inreg 36)#0
%Ue=getelementptr inbounds i8,i8*%Ud,i64 -4
%Uf=bitcast i8*%Ue to i32*
store i32 1342177312,i32*%Uf,align 4
%Ug=load i8*,i8**%i,align 8
%Uh=bitcast i8*%Ud to i8**
store i8*%Ug,i8**%Uh,align 8
%Ui=load i8*,i8**%g,align 8
%Uj=getelementptr inbounds i8,i8*%Ud,i64 8
%Uk=bitcast i8*%Uj to i8**
store i8*%Ui,i8**%Uk,align 8
%Ul=load i8*,i8**%h,align 8
%Um=getelementptr inbounds i8,i8*%Ud,i64 16
%Un=bitcast i8*%Um to i8**
store i8*%Ul,i8**%Un,align 8
%Uo=load i8*,i8**%j,align 8
%Up=getelementptr inbounds i8,i8*%Ud,i64 24
%Uq=bitcast i8*%Up to i8**
store i8*%Uo,i8**%Uq,align 8
%Ur=getelementptr inbounds i8,i8*%Ud,i64 32
%Us=bitcast i8*%Ur to i32*
store i32 15,i32*%Us,align 4
%Ut=call fastcc i8*@_SMLFN12TypedCalcCon15TPDATACONSTRUCTE(i8*inreg%Ud)
ret i8*%Ut
Uu:
%Uv=getelementptr inbounds i8,i8*%A,i64 8
%Uw=bitcast i8*%Uv to i8**
%Ux=load i8*,i8**%Uw,align 8
store i8*%Ux,i8**%g,align 8
%Uy=bitcast i8*%Ux to i8**
%Uz=load i8*,i8**%Uy,align 8
store i8*%Uz,i8**%h,align 8
%UA=getelementptr inbounds i8,i8*%Ux,i64 8
%UB=bitcast i8*%UA to i8**
%UC=load i8*,i8**%UB,align 8
store i8*%UC,i8**%i,align 8
%UD=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%UE=getelementptr inbounds i8,i8*%UD,i64 8
%UF=bitcast i8*%UE to i8**
%UG=load i8*,i8**%UF,align 8
store i8*null,i8**%m,align 8
%UH=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%UG,i8*inreg%x)
%UI=getelementptr inbounds i8,i8*%UH,i64 16
%UJ=bitcast i8*%UI to i8*(i8*,i8*)**
%UK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%UJ,align 8
%UL=bitcast i8*%UH to i8**
%UM=load i8*,i8**%UL,align 8
%UN=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%UO=call fastcc i8*%UK(i8*inreg%UM,i8*inreg%UN)
%UP=getelementptr inbounds i8,i8*%UO,i64 16
%UQ=bitcast i8*%UP to i8*(i8*,i8*)**
%UR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%UQ,align 8
%US=bitcast i8*%UO to i8**
%UT=load i8*,i8**%US,align 8
%UU=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%UV=getelementptr inbounds i8,i8*%UU,i64 16
%UW=bitcast i8*%UV to i8**
%UX=load i8*,i8**%UW,align 8
%UY=call fastcc i8*%UR(i8*inreg%UT,i8*inreg%UX)
store i8*%UY,i8**%g,align 8
%UZ=call i8*@sml_alloc(i32 inreg 28)#0
%U0=getelementptr inbounds i8,i8*%UZ,i64 -4
%U1=bitcast i8*%U0 to i32*
store i32 1342177304,i32*%U1,align 4
%U2=load i8*,i8**%h,align 8
%U3=bitcast i8*%UZ to i8**
store i8*%U2,i8**%U3,align 8
%U4=load i8*,i8**%i,align 8
%U5=getelementptr inbounds i8,i8*%UZ,i64 8
%U6=bitcast i8*%U5 to i8**
store i8*%U4,i8**%U6,align 8
%U7=load i8*,i8**%g,align 8
%U8=getelementptr inbounds i8,i8*%UZ,i64 16
%U9=bitcast i8*%U8 to i8**
store i8*%U7,i8**%U9,align 8
%Va=getelementptr inbounds i8,i8*%UZ,i64 24
%Vb=bitcast i8*%Va to i32*
store i32 7,i32*%Vb,align 4
%Vc=call fastcc i8*@_SMLFN12TypedCalcCon10TPCONSTANTE(i8*inreg%UZ)
ret i8*%Vc
Vd:
%Ve=getelementptr inbounds i8,i8*%A,i64 8
%Vf=bitcast i8*%Ve to i8**
%Vg=load i8*,i8**%Vf,align 8
store i8*%Vg,i8**%g,align 8
%Vh=bitcast i8*%Vg to i8**
%Vi=load i8*,i8**%Vh,align 8
%Vj=getelementptr inbounds i8,i8*%Vi,i64 8
%Vk=bitcast i8*%Vj to i8**
%Vl=load i8*,i8**%Vk,align 8
store i8*%Vl,i8**%i,align 8
%Vm=getelementptr inbounds i8,i8*%Vg,i64 16
%Vn=bitcast i8*%Vm to i8**
%Vo=load i8*,i8**%Vn,align 8
store i8*%Vo,i8**%j,align 8
%Vp=bitcast i8*%Vg to i8***
%Vq=load i8**,i8***%Vp,align 8
%Vr=load i8*,i8**%Vq,align 8
%Vs=load i8*,i8**%p,align 8
%Vt=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%Vs,i8*inreg%x,i8*inreg%z,i8*inreg%Vr)
store i8*%Vt,i8**%h,align 8
%Vu=load i8*,i8**%p,align 8
%Vv=getelementptr inbounds i8,i8*%Vu,i64 8
%Vw=bitcast i8*%Vv to i8**
%Vx=load i8*,i8**%Vw,align 8
%Vy=load i8*,i8**%m,align 8
%Vz=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%Vx,i8*inreg%Vy)
%VA=getelementptr inbounds i8,i8*%Vz,i64 16
%VB=bitcast i8*%VA to i8*(i8*,i8*)**
%VC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%VB,align 8
%VD=bitcast i8*%Vz to i8**
%VE=load i8*,i8**%VD,align 8
%VF=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%VG=call fastcc i8*%VC(i8*inreg%VE,i8*inreg%VF)
%VH=getelementptr inbounds i8,i8*%VG,i64 16
%VI=bitcast i8*%VH to i8*(i8*,i8*)**
%VJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%VI,align 8
%VK=bitcast i8*%VG to i8**
%VL=load i8*,i8**%VK,align 8
%VM=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%VN=getelementptr inbounds i8,i8*%VM,i64 8
%VO=bitcast i8*%VN to i8**
%VP=load i8*,i8**%VO,align 8
%VQ=call fastcc i8*%VJ(i8*inreg%VL,i8*inreg%VP)
store i8*%VQ,i8**%g,align 8
%VR=bitcast i8**%p to i8***
%VS=load i8**,i8***%VR,align 8
%VT=load i8*,i8**%VS,align 8
%VU=load i8*,i8**%m,align 8
%VV=call fastcc i8*@_SMLLN17PolyTyElimination6exportE_1116(i8*inreg%VT,i8*inreg%VU)
%VW=getelementptr inbounds i8,i8*%VV,i64 16
%VX=bitcast i8*%VW to i8*(i8*,i8*)**
%VY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%VX,align 8
%VZ=bitcast i8*%VV to i8**
%V0=load i8*,i8**%VZ,align 8
%V1=load i8*,i8**%h,align 8
%V2=getelementptr inbounds i8,i8*%V1,i64 8
%V3=bitcast i8*%V2 to i8**
%V4=load i8*,i8**%V3,align 8
%V5=call fastcc i8*%VY(i8*inreg%V0,i8*inreg%V4)
%V6=load i8**,i8***%VR,align 8
store i8*null,i8**%p,align 8
%V7=load i8*,i8**%V6,align 8
%V8=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%V9=call fastcc i8*@_SMLLN17PolyTyElimination6exportE_1116(i8*inreg%V7,i8*inreg%V8)
%Wa=getelementptr inbounds i8,i8*%V9,i64 16
%Wb=bitcast i8*%Wa to i8*(i8*,i8*)**
%Wc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Wb,align 8
%Wd=bitcast i8*%V9 to i8**
%We=load i8*,i8**%Wd,align 8
%Wf=load i8*,i8**%g,align 8
%Wg=call fastcc i8*%Wc(i8*inreg%We,i8*inreg%Wf)
%Wh=call i8*@sml_alloc(i32 inreg 20)#0
%Wi=getelementptr inbounds i8,i8*%Wh,i64 -4
%Wj=bitcast i8*%Wi to i32*
store i32 1342177296,i32*%Wj,align 4
store i8*%Wh,i8**%k,align 8
%Wk=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Wl=bitcast i8*%Wh to i8**
store i8*%Wk,i8**%Wl,align 8
%Wm=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Wn=getelementptr inbounds i8,i8*%Wh,i64 8
%Wo=bitcast i8*%Wn to i8**
store i8*%Wm,i8**%Wo,align 8
%Wp=getelementptr inbounds i8,i8*%Wh,i64 16
%Wq=bitcast i8*%Wp to i32*
store i32 3,i32*%Wq,align 4
%Wr=call i8*@sml_alloc(i32 inreg 28)#0
%Ws=getelementptr inbounds i8,i8*%Wr,i64 -4
%Wt=bitcast i8*%Ws to i32*
store i32 1342177304,i32*%Wt,align 4
%Wu=load i8*,i8**%k,align 8
%Wv=bitcast i8*%Wr to i8**
store i8*%Wu,i8**%Wv,align 8
%Ww=load i8*,i8**%g,align 8
%Wx=getelementptr inbounds i8,i8*%Wr,i64 8
%Wy=bitcast i8*%Wx to i8**
store i8*%Ww,i8**%Wy,align 8
%Wz=load i8*,i8**%j,align 8
%WA=getelementptr inbounds i8,i8*%Wr,i64 16
%WB=bitcast i8*%WA to i8**
store i8*%Wz,i8**%WB,align 8
%WC=getelementptr inbounds i8,i8*%Wr,i64 24
%WD=bitcast i8*%WC to i32*
store i32 7,i32*%WD,align 4
%WE=call fastcc i8*@_SMLFN12TypedCalcCon6TPCASTE(i8*inreg%Wr)
ret i8*%WE
WF:
%WG=getelementptr inbounds i8,i8*%A,i64 8
%WH=bitcast i8*%WG to i8**
%WI=load i8*,i8**%WH,align 8
store i8*%WI,i8**%h,align 8
%WJ=getelementptr inbounds i8,i8*%WI,i64 24
%WK=bitcast i8*%WJ to i8**
%WL=load i8*,i8**%WK,align 8
store i8*%WL,i8**%n,align 8
%WM=getelementptr inbounds i8,i8*%WI,i64 40
%WN=bitcast i8*%WM to i8**
%WO=load i8*,i8**%WN,align 8
%WP=bitcast i8*%WO to i32*
%WQ=load i32,i32*%WP,align 4
switch i32%WQ,label%WR[
i32 1,label%acl
i32 0,label%ZI
i32 2,label%W9
]
WR:
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%n,align 8
store i8*null,i8**%p,align 8
call void@sml_matchcomp_bug()
%WS=load i8*,i8**@_SMLZ5Match,align 8
store i8*%WS,i8**%g,align 8
%WT=call i8*@sml_alloc(i32 inreg 20)#0
%WU=getelementptr inbounds i8,i8*%WT,i64 -4
%WV=bitcast i8*%WU to i32*
store i32 1342177296,i32*%WV,align 4
store i8*%WT,i8**%h,align 8
%WW=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%WX=bitcast i8*%WT to i8**
store i8*%WW,i8**%WX,align 8
%WY=getelementptr inbounds i8,i8*%WT,i64 8
%WZ=bitcast i8*%WY to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bW,i64 0,i32 2,i64 0),i8**%WZ,align 8
%W0=getelementptr inbounds i8,i8*%WT,i64 16
%W1=bitcast i8*%W0 to i32*
store i32 3,i32*%W1,align 4
%W2=call i8*@sml_alloc(i32 inreg 60)#0
%W3=getelementptr inbounds i8,i8*%W2,i64 -4
%W4=bitcast i8*%W3 to i32*
store i32 1342177336,i32*%W4,align 4
%W5=getelementptr inbounds i8,i8*%W2,i64 56
%W6=bitcast i8*%W5 to i32*
store i32 1,i32*%W6,align 4
%W7=load i8*,i8**%h,align 8
%W8=bitcast i8*%W2 to i8**
store i8*%W7,i8**%W8,align 8
call void@sml_raise(i8*inreg%W2)#1
unreachable
W9:
%Xa=getelementptr inbounds i8,i8*%WO,i64 8
%Xb=bitcast i8*%Xa to i8**
%Xc=load i8*,i8**%Xb,align 8
store i8*%Xc,i8**%i,align 8
%Xd=getelementptr inbounds i8,i8*%WI,i64 8
%Xe=bitcast i8*%Xd to i8**
%Xf=load i8*,i8**%Xe,align 8
%Xg=load i8*,i8**%p,align 8
%Xh=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%Xg,i8*inreg%x,i8*inreg%z,i8*inreg%Xf)
store i8*%Xh,i8**%g,align 8
%Xi=bitcast i8**%h to i8***
%Xj=load i8**,i8***%Xi,align 8
store i8*null,i8**%h,align 8
%Xk=load i8*,i8**%Xj,align 8
%Xl=load i8*,i8**%l,align 8
%Xm=load i8*,i8**%m,align 8
%Xn=load i8*,i8**%p,align 8
%Xo=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%Xn,i8*inreg%Xm,i8*inreg%Xl,i8*inreg%Xk)
store i8*%Xo,i8**%h,align 8
%Xp=load i8*,i8**%p,align 8
%Xq=getelementptr inbounds i8,i8*%Xp,i64 8
%Xr=bitcast i8*%Xq to i8**
%Xs=load i8*,i8**%Xr,align 8
store i8*%Xs,i8**%j,align 8
%Xt=call i8*@sml_alloc(i32 inreg 44)#0
%Xu=getelementptr inbounds i8,i8*%Xt,i64 -4
%Xv=bitcast i8*%Xu to i32*
store i32 1342177320,i32*%Xv,align 4
store i8*%Xt,i8**%k,align 8
%Xw=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%Xx=bitcast i8*%Xt to i8**
store i8*%Xw,i8**%Xx,align 8
%Xy=load i8*,i8**%m,align 8
%Xz=getelementptr inbounds i8,i8*%Xt,i64 8
%XA=bitcast i8*%Xz to i8**
store i8*%Xy,i8**%XA,align 8
%XB=load i8*,i8**%n,align 8
%XC=getelementptr inbounds i8,i8*%Xt,i64 16
%XD=bitcast i8*%XC to i8**
store i8*%XB,i8**%XD,align 8
%XE=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%XF=getelementptr inbounds i8,i8*%Xt,i64 24
%XG=bitcast i8*%XF to i8**
store i8*%XE,i8**%XG,align 8
%XH=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%XI=getelementptr inbounds i8,i8*%Xt,i64 32
%XJ=bitcast i8*%XI to i8**
store i8*%XH,i8**%XJ,align 8
%XK=getelementptr inbounds i8,i8*%Xt,i64 40
%XL=bitcast i8*%XK to i32*
store i32 31,i32*%XL,align 4
%XM=call i8*@sml_alloc(i32 inreg 28)#0
%XN=getelementptr inbounds i8,i8*%XM,i64 -4
%XO=bitcast i8*%XN to i32*
store i32 1342177304,i32*%XO,align 4
store i8*%XM,i8**%j,align 8
%XP=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%XQ=bitcast i8*%XM to i8**
store i8*%XP,i8**%XQ,align 8
%XR=getelementptr inbounds i8,i8*%XM,i64 8
%XS=bitcast i8*%XR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11analyzeRule_1198 to void(...)*),void(...)**%XS,align 8
%XT=getelementptr inbounds i8,i8*%XM,i64 16
%XU=bitcast i8*%XT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11analyzeRule_1198 to void(...)*),void(...)**%XU,align 8
%XV=getelementptr inbounds i8,i8*%XM,i64 24
%XW=bitcast i8*%XV to i32*
store i32 -2147483647,i32*%XW,align 4
%XX=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%XY=getelementptr inbounds i8,i8*%XX,i64 16
%XZ=bitcast i8*%XY to i8*(i8*,i8*)**
%X0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%XZ,align 8
%X1=bitcast i8*%XX to i8**
%X2=load i8*,i8**%X1,align 8
%X3=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%X4=call fastcc i8*%X0(i8*inreg%X2,i8*inreg%X3)
%X5=getelementptr inbounds i8,i8*%X4,i64 16
%X6=bitcast i8*%X5 to i8*(i8*,i8*)**
%X7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%X6,align 8
%X8=bitcast i8*%X4 to i8**
%X9=load i8*,i8**%X8,align 8
%Ya=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Yb=call fastcc i8*%X7(i8*inreg%X9,i8*inreg%Ya)
store i8*%Yb,i8**%i,align 8
%Yc=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Yd=getelementptr inbounds i8,i8*%Yc,i64 16
%Ye=bitcast i8*%Yd to i8*(i8*,i8*)**
%Yf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Ye,align 8
%Yg=bitcast i8*%Yc to i8**
%Yh=load i8*,i8**%Yg,align 8
%Yi=call fastcc i8*%Yf(i8*inreg%Yh,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bK,i64 0,i32 2)to i8*))
%Yj=getelementptr inbounds i8,i8*%Yi,i64 16
%Yk=bitcast i8*%Yj to i8*(i8*,i8*)**
%Yl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Yk,align 8
%Ym=bitcast i8*%Yi to i8**
%Yn=load i8*,i8**%Ym,align 8
%Yo=load i8*,i8**%i,align 8
%Yp=call fastcc i8*%Yl(i8*inreg%Yn,i8*inreg%Yo)
store i8*%Yp,i8**%k,align 8
%Yq=load i8*,i8**%g,align 8
%Yr=getelementptr inbounds i8,i8*%Yq,i64 8
%Ys=bitcast i8*%Yr to i8**
%Yt=load i8*,i8**%Ys,align 8
store i8*%Yt,i8**%j,align 8
%Yu=call i8*@sml_alloc(i32 inreg 20)#0
%Yv=getelementptr inbounds i8,i8*%Yu,i64 -4
%Yw=bitcast i8*%Yv to i32*
store i32 1342177296,i32*%Yw,align 4
store i8*%Yu,i8**%o,align 8
%Yx=load i8*,i8**%j,align 8
%Yy=bitcast i8*%Yu to i8**
store i8*%Yx,i8**%Yy,align 8
%Yz=getelementptr inbounds i8,i8*%Yu,i64 8
%YA=bitcast i8*%Yz to i8**
store i8*null,i8**%YA,align 8
%YB=getelementptr inbounds i8,i8*%Yu,i64 16
%YC=bitcast i8*%YB to i32*
store i32 3,i32*%YC,align 4
%YD=load i8*,i8**%h,align 8
%YE=getelementptr inbounds i8,i8*%YD,i64 8
%YF=bitcast i8*%YE to i8**
%YG=load i8*,i8**%YF,align 8
store i8*%YG,i8**%j,align 8
%YH=call i8*@sml_alloc(i32 inreg 20)#0
%YI=getelementptr inbounds i8,i8*%YH,i64 -4
%YJ=bitcast i8*%YI to i32*
store i32 1342177296,i32*%YJ,align 4
store i8*%YH,i8**%l,align 8
%YK=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%YL=bitcast i8*%YH to i8**
store i8*%YK,i8**%YL,align 8
%YM=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%YN=getelementptr inbounds i8,i8*%YH,i64 8
%YO=bitcast i8*%YN to i8**
store i8*%YM,i8**%YO,align 8
%YP=getelementptr inbounds i8,i8*%YH,i64 16
%YQ=bitcast i8*%YP to i32*
store i32 3,i32*%YQ,align 4
%YR=call i8*@sml_alloc(i32 inreg 20)#0
%YS=getelementptr inbounds i8,i8*%YR,i64 -4
%YT=bitcast i8*%YS to i32*
store i32 1342177296,i32*%YT,align 4
store i8*%YR,i8**%j,align 8
%YU=getelementptr inbounds i8,i8*%YR,i64 4
%YV=bitcast i8*%YU to i32*
store i32 0,i32*%YV,align 1
%YW=bitcast i8*%YR to i32*
store i32 6,i32*%YW,align 4
%YX=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%YY=getelementptr inbounds i8,i8*%YR,i64 8
%YZ=bitcast i8*%YY to i8**
store i8*%YX,i8**%YZ,align 8
%Y0=getelementptr inbounds i8,i8*%YR,i64 16
%Y1=bitcast i8*%Y0 to i32*
store i32 2,i32*%Y1,align 4
%Y2=call i8*@sml_alloc(i32 inreg 20)#0
%Y3=getelementptr inbounds i8,i8*%Y2,i64 -4
%Y4=bitcast i8*%Y3 to i32*
store i32 1342177296,i32*%Y4,align 4
%Y5=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%Y6=bitcast i8*%Y2 to i8**
store i8*%Y5,i8**%Y6,align 8
%Y7=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%Y8=getelementptr inbounds i8,i8*%Y2,i64 8
%Y9=bitcast i8*%Y8 to i8**
store i8*%Y7,i8**%Y9,align 8
%Za=getelementptr inbounds i8,i8*%Y2,i64 16
%Zb=bitcast i8*%Za to i32*
store i32 3,i32*%Zb,align 4
%Zc=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
call fastcc void@_SMLLN17PolyTyElimination8equalAllE_1050(i8*inreg%Zc,i8*inreg%Y2)
%Zd=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Ze=getelementptr inbounds i8,i8*%Zd,i64 16
%Zf=bitcast i8*%Ze to i8*(i8*,i8*)**
%Zg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Zf,align 8
%Zh=bitcast i8*%Zd to i8**
%Zi=load i8*,i8**%Zh,align 8
%Zj=call fastcc i8*%Zg(i8*inreg%Zi,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bL,i64 0,i32 2)to i8*))
%Zk=getelementptr inbounds i8,i8*%Zj,i64 16
%Zl=bitcast i8*%Zk to i8*(i8*,i8*)**
%Zm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Zl,align 8
%Zn=bitcast i8*%Zj to i8**
%Zo=load i8*,i8**%Zn,align 8
%Zp=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Zq=call fastcc i8*%Zm(i8*inreg%Zo,i8*inreg%Zp)
store i8*%Zq,i8**%i,align 8
%Zr=call i8*@sml_alloc(i32 inreg 36)#0
%Zs=getelementptr inbounds i8,i8*%Zr,i64 -4
%Zt=bitcast i8*%Zs to i32*
store i32 1342177312,i32*%Zt,align 4
%Zu=load i8*,i8**%h,align 8
%Zv=bitcast i8*%Zr to i8**
store i8*%Zu,i8**%Zv,align 8
%Zw=load i8*,i8**%g,align 8
%Zx=getelementptr inbounds i8,i8*%Zr,i64 8
%Zy=bitcast i8*%Zx to i8**
store i8*%Zw,i8**%Zy,align 8
%Zz=load i8*,i8**%n,align 8
%ZA=getelementptr inbounds i8,i8*%Zr,i64 16
%ZB=bitcast i8*%ZA to i8**
store i8*%Zz,i8**%ZB,align 8
%ZC=load i8*,i8**%i,align 8
%ZD=getelementptr inbounds i8,i8*%Zr,i64 24
%ZE=bitcast i8*%ZD to i8**
store i8*%ZC,i8**%ZE,align 8
%ZF=getelementptr inbounds i8,i8*%Zr,i64 32
%ZG=bitcast i8*%ZF to i32*
store i32 15,i32*%ZG,align 4
%ZH=call fastcc i8*@_SMLFN12TypedCalcCon16TPSWITCH__EXNCASEE(i8*inreg%Zr)
ret i8*%ZH
ZI:
%ZJ=getelementptr inbounds i8,i8*%WO,i64 8
%ZK=bitcast i8*%ZJ to i8**
%ZL=load i8*,i8**%ZK,align 8
store i8*%ZL,i8**%i,align 8
%ZM=getelementptr inbounds i8,i8*%WI,i64 8
%ZN=bitcast i8*%ZM to i8**
%ZO=load i8*,i8**%ZN,align 8
%ZP=load i8*,i8**%p,align 8
%ZQ=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%ZP,i8*inreg%x,i8*inreg%z,i8*inreg%ZO)
store i8*%ZQ,i8**%g,align 8
%ZR=bitcast i8**%h to i8***
%ZS=load i8**,i8***%ZR,align 8
store i8*null,i8**%h,align 8
%ZT=load i8*,i8**%ZS,align 8
%ZU=load i8*,i8**%l,align 8
%ZV=load i8*,i8**%m,align 8
%ZW=load i8*,i8**%p,align 8
%ZX=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%ZW,i8*inreg%ZV,i8*inreg%ZU,i8*inreg%ZT)
store i8*%ZX,i8**%h,align 8
%ZY=bitcast i8**%p to i8***
%ZZ=load i8**,i8***%ZY,align 8
%Z0=load i8*,i8**%ZZ,align 8
store i8*%Z0,i8**%j,align 8
%Z1=getelementptr inbounds i8*,i8**%ZZ,i64 1
%Z2=load i8*,i8**%Z1,align 8
store i8*%Z2,i8**%k,align 8
%Z3=call i8*@sml_alloc(i32 inreg 52)#0
%Z4=getelementptr inbounds i8,i8*%Z3,i64 -4
%Z5=bitcast i8*%Z4 to i32*
store i32 1342177328,i32*%Z5,align 4
store i8*%Z3,i8**%o,align 8
%Z6=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%Z7=bitcast i8*%Z3 to i8**
store i8*%Z6,i8**%Z7,align 8
%Z8=load i8*,i8**%m,align 8
%Z9=getelementptr inbounds i8,i8*%Z3,i64 8
%aaa=bitcast i8*%Z9 to i8**
store i8*%Z8,i8**%aaa,align 8
%aab=load i8*,i8**%n,align 8
%aac=getelementptr inbounds i8,i8*%Z3,i64 16
%aad=bitcast i8*%aac to i8**
store i8*%aab,i8**%aad,align 8
%aae=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aaf=getelementptr inbounds i8,i8*%Z3,i64 24
%aag=bitcast i8*%aaf to i8**
store i8*%aae,i8**%aag,align 8
%aah=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%aai=getelementptr inbounds i8,i8*%Z3,i64 32
%aaj=bitcast i8*%aai to i8**
store i8*%aah,i8**%aaj,align 8
%aak=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%aal=getelementptr inbounds i8,i8*%Z3,i64 40
%aam=bitcast i8*%aal to i8**
store i8*%aak,i8**%aam,align 8
%aan=getelementptr inbounds i8,i8*%Z3,i64 48
%aao=bitcast i8*%aan to i32*
store i32 63,i32*%aao,align 4
%aap=call i8*@sml_alloc(i32 inreg 28)#0
%aaq=getelementptr inbounds i8,i8*%aap,i64 -4
%aar=bitcast i8*%aaq to i32*
store i32 1342177304,i32*%aar,align 4
store i8*%aap,i8**%j,align 8
%aas=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%aat=bitcast i8*%aap to i8**
store i8*%aas,i8**%aat,align 8
%aau=getelementptr inbounds i8,i8*%aap,i64 8
%aav=bitcast i8*%aau to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11analyzeRule_1192 to void(...)*),void(...)**%aav,align 8
%aaw=getelementptr inbounds i8,i8*%aap,i64 16
%aax=bitcast i8*%aaw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11analyzeRule_1192 to void(...)*),void(...)**%aax,align 8
%aay=getelementptr inbounds i8,i8*%aap,i64 24
%aaz=bitcast i8*%aay to i32*
store i32 -2147483647,i32*%aaz,align 4
%aaA=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aaB=getelementptr inbounds i8,i8*%aaA,i64 16
%aaC=bitcast i8*%aaB to i8*(i8*,i8*)**
%aaD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aaC,align 8
%aaE=bitcast i8*%aaA to i8**
%aaF=load i8*,i8**%aaE,align 8
%aaG=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aaH=call fastcc i8*%aaD(i8*inreg%aaF,i8*inreg%aaG)
%aaI=getelementptr inbounds i8,i8*%aaH,i64 16
%aaJ=bitcast i8*%aaI to i8*(i8*,i8*)**
%aaK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aaJ,align 8
%aaL=bitcast i8*%aaH to i8**
%aaM=load i8*,i8**%aaL,align 8
%aaN=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aaO=call fastcc i8*%aaK(i8*inreg%aaM,i8*inreg%aaN)
store i8*%aaO,i8**%i,align 8
%aaP=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aaQ=getelementptr inbounds i8,i8*%aaP,i64 16
%aaR=bitcast i8*%aaQ to i8*(i8*,i8*)**
%aaS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aaR,align 8
%aaT=bitcast i8*%aaP to i8**
%aaU=load i8*,i8**%aaT,align 8
%aaV=call fastcc i8*%aaS(i8*inreg%aaU,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bI,i64 0,i32 2)to i8*))
%aaW=getelementptr inbounds i8,i8*%aaV,i64 16
%aaX=bitcast i8*%aaW to i8*(i8*,i8*)**
%aaY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aaX,align 8
%aaZ=bitcast i8*%aaV to i8**
%aa0=load i8*,i8**%aaZ,align 8
%aa1=load i8*,i8**%i,align 8
%aa2=call fastcc i8*%aaY(i8*inreg%aa0,i8*inreg%aa1)
store i8*%aa2,i8**%k,align 8
%aa3=load i8*,i8**%g,align 8
%aa4=getelementptr inbounds i8,i8*%aa3,i64 8
%aa5=bitcast i8*%aa4 to i8**
%aa6=load i8*,i8**%aa5,align 8
store i8*%aa6,i8**%j,align 8
%aa7=call i8*@sml_alloc(i32 inreg 20)#0
%aa8=getelementptr inbounds i8,i8*%aa7,i64 -4
%aa9=bitcast i8*%aa8 to i32*
store i32 1342177296,i32*%aa9,align 4
store i8*%aa7,i8**%o,align 8
%aba=load i8*,i8**%j,align 8
%abb=bitcast i8*%aa7 to i8**
store i8*%aba,i8**%abb,align 8
%abc=getelementptr inbounds i8,i8*%aa7,i64 8
%abd=bitcast i8*%abc to i8**
store i8*null,i8**%abd,align 8
%abe=getelementptr inbounds i8,i8*%aa7,i64 16
%abf=bitcast i8*%abe to i32*
store i32 3,i32*%abf,align 4
%abg=load i8*,i8**%h,align 8
%abh=getelementptr inbounds i8,i8*%abg,i64 8
%abi=bitcast i8*%abh to i8**
%abj=load i8*,i8**%abi,align 8
store i8*%abj,i8**%j,align 8
%abk=call i8*@sml_alloc(i32 inreg 20)#0
%abl=getelementptr inbounds i8,i8*%abk,i64 -4
%abm=bitcast i8*%abl to i32*
store i32 1342177296,i32*%abm,align 4
store i8*%abk,i8**%l,align 8
%abn=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%abo=bitcast i8*%abk to i8**
store i8*%abn,i8**%abo,align 8
%abp=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%abq=getelementptr inbounds i8,i8*%abk,i64 8
%abr=bitcast i8*%abq to i8**
store i8*%abp,i8**%abr,align 8
%abs=getelementptr inbounds i8,i8*%abk,i64 16
%abt=bitcast i8*%abs to i32*
store i32 3,i32*%abt,align 4
%abu=call i8*@sml_alloc(i32 inreg 20)#0
%abv=getelementptr inbounds i8,i8*%abu,i64 -4
%abw=bitcast i8*%abv to i32*
store i32 1342177296,i32*%abw,align 4
store i8*%abu,i8**%j,align 8
%abx=getelementptr inbounds i8,i8*%abu,i64 4
%aby=bitcast i8*%abx to i32*
store i32 0,i32*%aby,align 1
%abz=bitcast i8*%abu to i32*
store i32 6,i32*%abz,align 4
%abA=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%abB=getelementptr inbounds i8,i8*%abu,i64 8
%abC=bitcast i8*%abB to i8**
store i8*%abA,i8**%abC,align 8
%abD=getelementptr inbounds i8,i8*%abu,i64 16
%abE=bitcast i8*%abD to i32*
store i32 2,i32*%abE,align 4
%abF=call i8*@sml_alloc(i32 inreg 20)#0
%abG=getelementptr inbounds i8,i8*%abF,i64 -4
%abH=bitcast i8*%abG to i32*
store i32 1342177296,i32*%abH,align 4
%abI=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%abJ=bitcast i8*%abF to i8**
store i8*%abI,i8**%abJ,align 8
%abK=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%abL=getelementptr inbounds i8,i8*%abF,i64 8
%abM=bitcast i8*%abL to i8**
store i8*%abK,i8**%abM,align 8
%abN=getelementptr inbounds i8,i8*%abF,i64 16
%abO=bitcast i8*%abN to i32*
store i32 3,i32*%abO,align 4
%abP=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
call fastcc void@_SMLLN17PolyTyElimination8equalAllE_1050(i8*inreg%abP,i8*inreg%abF)
%abQ=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%abR=getelementptr inbounds i8,i8*%abQ,i64 16
%abS=bitcast i8*%abR to i8*(i8*,i8*)**
%abT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%abS,align 8
%abU=bitcast i8*%abQ to i8**
%abV=load i8*,i8**%abU,align 8
%abW=call fastcc i8*%abT(i8*inreg%abV,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bJ,i64 0,i32 2)to i8*))
%abX=getelementptr inbounds i8,i8*%abW,i64 16
%abY=bitcast i8*%abX to i8*(i8*,i8*)**
%abZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%abY,align 8
%ab0=bitcast i8*%abW to i8**
%ab1=load i8*,i8**%ab0,align 8
%ab2=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ab3=call fastcc i8*%abZ(i8*inreg%ab1,i8*inreg%ab2)
store i8*%ab3,i8**%i,align 8
%ab4=call i8*@sml_alloc(i32 inreg 36)#0
%ab5=getelementptr inbounds i8,i8*%ab4,i64 -4
%ab6=bitcast i8*%ab5 to i32*
store i32 1342177312,i32*%ab6,align 4
%ab7=load i8*,i8**%h,align 8
%ab8=bitcast i8*%ab4 to i8**
store i8*%ab7,i8**%ab8,align 8
%ab9=load i8*,i8**%g,align 8
%aca=getelementptr inbounds i8,i8*%ab4,i64 8
%acb=bitcast i8*%aca to i8**
store i8*%ab9,i8**%acb,align 8
%acc=load i8*,i8**%n,align 8
%acd=getelementptr inbounds i8,i8*%ab4,i64 16
%ace=bitcast i8*%acd to i8**
store i8*%acc,i8**%ace,align 8
%acf=load i8*,i8**%i,align 8
%acg=getelementptr inbounds i8,i8*%ab4,i64 24
%ach=bitcast i8*%acg to i8**
store i8*%acf,i8**%ach,align 8
%aci=getelementptr inbounds i8,i8*%ab4,i64 32
%acj=bitcast i8*%aci to i32*
store i32 15,i32*%acj,align 4
%ack=call fastcc i8*@_SMLFN12TypedCalcCon16TPSWITCH__CONCASEE(i8*inreg%ab4)
ret i8*%ack
acl:
%acm=getelementptr inbounds i8,i8*%WO,i64 8
%acn=bitcast i8*%acm to i8**
%aco=load i8*,i8**%acn,align 8
store i8*%aco,i8**%i,align 8
%acp=getelementptr inbounds i8,i8*%WI,i64 8
%acq=bitcast i8*%acp to i8**
%acr=load i8*,i8**%acq,align 8
%acs=load i8*,i8**%p,align 8
%act=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%acs,i8*inreg%x,i8*inreg%z,i8*inreg%acr)
store i8*%act,i8**%g,align 8
%acu=bitcast i8**%h to i8***
%acv=load i8**,i8***%acu,align 8
store i8*null,i8**%h,align 8
%acw=load i8*,i8**%acv,align 8
%acx=load i8*,i8**%l,align 8
%acy=load i8*,i8**%m,align 8
%acz=load i8*,i8**%p,align 8
%acA=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%acz,i8*inreg%acy,i8*inreg%acx,i8*inreg%acw)
store i8*%acA,i8**%h,align 8
%acB=load i8*,i8**%p,align 8
%acC=getelementptr inbounds i8,i8*%acB,i64 8
%acD=bitcast i8*%acC to i8**
%acE=load i8*,i8**%acD,align 8
store i8*%acE,i8**%j,align 8
%acF=call i8*@sml_alloc(i32 inreg 36)#0
%acG=getelementptr inbounds i8,i8*%acF,i64 -4
%acH=bitcast i8*%acG to i32*
store i32 1342177312,i32*%acH,align 4
store i8*%acF,i8**%k,align 8
%acI=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%acJ=bitcast i8*%acF to i8**
store i8*%acI,i8**%acJ,align 8
%acK=load i8*,i8**%m,align 8
%acL=getelementptr inbounds i8,i8*%acF,i64 8
%acM=bitcast i8*%acL to i8**
store i8*%acK,i8**%acM,align 8
%acN=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%acO=getelementptr inbounds i8,i8*%acF,i64 16
%acP=bitcast i8*%acO to i8**
store i8*%acN,i8**%acP,align 8
%acQ=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%acR=getelementptr inbounds i8,i8*%acF,i64 24
%acS=bitcast i8*%acR to i8**
store i8*%acQ,i8**%acS,align 8
%acT=getelementptr inbounds i8,i8*%acF,i64 32
%acU=bitcast i8*%acT to i32*
store i32 15,i32*%acU,align 4
%acV=call i8*@sml_alloc(i32 inreg 28)#0
%acW=getelementptr inbounds i8,i8*%acV,i64 -4
%acX=bitcast i8*%acW to i32*
store i32 1342177304,i32*%acX,align 4
store i8*%acV,i8**%j,align 8
%acY=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%acZ=bitcast i8*%acV to i8**
store i8*%acY,i8**%acZ,align 8
%ac0=getelementptr inbounds i8,i8*%acV,i64 8
%ac1=bitcast i8*%ac0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11analyzeRule_1184 to void(...)*),void(...)**%ac1,align 8
%ac2=getelementptr inbounds i8,i8*%acV,i64 16
%ac3=bitcast i8*%ac2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11analyzeRule_1184 to void(...)*),void(...)**%ac3,align 8
%ac4=getelementptr inbounds i8,i8*%acV,i64 24
%ac5=bitcast i8*%ac4 to i32*
store i32 -2147483647,i32*%ac5,align 4
%ac6=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ac7=getelementptr inbounds i8,i8*%ac6,i64 16
%ac8=bitcast i8*%ac7 to i8*(i8*,i8*)**
%ac9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ac8,align 8
%ada=bitcast i8*%ac6 to i8**
%adb=load i8*,i8**%ada,align 8
%adc=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%add=call fastcc i8*%ac9(i8*inreg%adb,i8*inreg%adc)
%ade=getelementptr inbounds i8,i8*%add,i64 16
%adf=bitcast i8*%ade to i8*(i8*,i8*)**
%adg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%adf,align 8
%adh=bitcast i8*%add to i8**
%adi=load i8*,i8**%adh,align 8
%adj=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%adk=call fastcc i8*%adg(i8*inreg%adi,i8*inreg%adj)
store i8*%adk,i8**%i,align 8
%adl=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%adm=getelementptr inbounds i8,i8*%adl,i64 16
%adn=bitcast i8*%adm to i8*(i8*,i8*)**
%ado=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%adn,align 8
%adp=bitcast i8*%adl to i8**
%adq=load i8*,i8**%adp,align 8
%adr=call fastcc i8*%ado(i8*inreg%adq,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bH,i64 0,i32 2)to i8*))
%ads=getelementptr inbounds i8,i8*%adr,i64 16
%adt=bitcast i8*%ads to i8*(i8*,i8*)**
%adu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%adt,align 8
%adv=bitcast i8*%adr to i8**
%adw=load i8*,i8**%adv,align 8
%adx=load i8*,i8**%i,align 8
%ady=call fastcc i8*%adu(i8*inreg%adw,i8*inreg%adx)
store i8*%ady,i8**%j,align 8
%adz=load i8*,i8**%h,align 8
%adA=getelementptr inbounds i8,i8*%adz,i64 8
%adB=bitcast i8*%adA to i8**
%adC=load i8*,i8**%adB,align 8
store i8*%adC,i8**%k,align 8
%adD=call i8*@sml_alloc(i32 inreg 20)#0
%adE=getelementptr inbounds i8,i8*%adD,i64 -4
%adF=bitcast i8*%adE to i32*
store i32 1342177296,i32*%adF,align 4
%adG=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%adH=bitcast i8*%adD to i8**
store i8*%adG,i8**%adH,align 8
%adI=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%adJ=getelementptr inbounds i8,i8*%adD,i64 8
%adK=bitcast i8*%adJ to i8**
store i8*%adI,i8**%adK,align 8
%adL=getelementptr inbounds i8,i8*%adD,i64 16
%adM=bitcast i8*%adL to i32*
store i32 3,i32*%adM,align 4
%adN=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
call fastcc void@_SMLLN17PolyTyElimination8equalAllE_1050(i8*inreg%adN,i8*inreg%adD)
%adO=call i8*@sml_alloc(i32 inreg 36)#0
%adP=getelementptr inbounds i8,i8*%adO,i64 -4
%adQ=bitcast i8*%adP to i32*
store i32 1342177312,i32*%adQ,align 4
%adR=load i8*,i8**%h,align 8
%adS=bitcast i8*%adO to i8**
store i8*%adR,i8**%adS,align 8
%adT=load i8*,i8**%g,align 8
%adU=getelementptr inbounds i8,i8*%adO,i64 8
%adV=bitcast i8*%adU to i8**
store i8*%adT,i8**%adV,align 8
%adW=load i8*,i8**%n,align 8
%adX=getelementptr inbounds i8,i8*%adO,i64 16
%adY=bitcast i8*%adX to i8**
store i8*%adW,i8**%adY,align 8
%adZ=load i8*,i8**%i,align 8
%ad0=getelementptr inbounds i8,i8*%adO,i64 24
%ad1=bitcast i8*%ad0 to i8**
store i8*%adZ,i8**%ad1,align 8
%ad2=getelementptr inbounds i8,i8*%adO,i64 32
%ad3=bitcast i8*%ad2 to i32*
store i32 15,i32*%ad3,align 4
%ad4=call fastcc i8*@_SMLFN12TypedCalcCon18TPSWITCH__CONSTCASEE(i8*inreg%adO)
ret i8*%ad4
ad5:
%ad6=getelementptr inbounds i8,i8*%A,i64 8
%ad7=bitcast i8*%ad6 to i8**
%ad8=load i8*,i8**%ad7,align 8
store i8*%ad8,i8**%h,align 8
%ad9=bitcast i8*%ad8 to i32*
%aea=load i32,i32*%ad9,align 4
%aeb=getelementptr inbounds i8,i8*%ad8,i64 24
%aec=bitcast i8*%aeb to i8**
%aed=load i8*,i8**%aec,align 8
store i8*%aed,i8**%k,align 8
%aee=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aef=getelementptr inbounds i8,i8*%aee,i64 16
%aeg=bitcast i8*%aef to i8*(i8*,i8*)**
%aeh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aeg,align 8
%aei=bitcast i8*%aee to i8**
%aej=load i8*,i8**%aei,align 8
store i8*%aej,i8**%g,align 8
%aek=call i8*@sml_alloc(i32 inreg 28)#0
%ael=getelementptr inbounds i8,i8*%aek,i64 -4
%aem=bitcast i8*%ael to i32*
store i32 1342177304,i32*%aem,align 4
store i8*%aek,i8**%i,align 8
%aen=load i8*,i8**%l,align 8
%aeo=bitcast i8*%aek to i8**
store i8*%aen,i8**%aeo,align 8
%aep=load i8*,i8**%m,align 8
%aeq=getelementptr inbounds i8,i8*%aek,i64 8
%aer=bitcast i8*%aeq to i8**
store i8*%aep,i8**%aer,align 8
%aes=load i8*,i8**%p,align 8
%aet=getelementptr inbounds i8,i8*%aek,i64 16
%aeu=bitcast i8*%aet to i8**
store i8*%aes,i8**%aeu,align 8
%aev=getelementptr inbounds i8,i8*%aek,i64 24
%aew=bitcast i8*%aev to i32*
store i32 7,i32*%aew,align 4
%aex=call i8*@sml_alloc(i32 inreg 28)#0
%aey=getelementptr inbounds i8,i8*%aex,i64 -4
%aez=bitcast i8*%aey to i32*
store i32 1342177304,i32*%aez,align 4
%aeA=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aeB=bitcast i8*%aex to i8**
store i8*%aeA,i8**%aeB,align 8
%aeC=getelementptr inbounds i8,i8*%aex,i64 8
%aeD=bitcast i8*%aeC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7expList_1181 to void(...)*),void(...)**%aeD,align 8
%aeE=getelementptr inbounds i8,i8*%aex,i64 16
%aeF=bitcast i8*%aeE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7expList_1181 to void(...)*),void(...)**%aeF,align 8
%aeG=getelementptr inbounds i8,i8*%aex,i64 24
%aeH=bitcast i8*%aeG to i32*
store i32 -2147483647,i32*%aeH,align 4
%aeI=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aeJ=call fastcc i8*%aeh(i8*inreg%aeI,i8*inreg%aex)
%aeK=getelementptr inbounds i8,i8*%aeJ,i64 16
%aeL=bitcast i8*%aeK to i8*(i8*,i8*)**
%aeM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aeL,align 8
%aeN=bitcast i8*%aeJ to i8**
%aeO=load i8*,i8**%aeN,align 8
%aeP=load i8*,i8**%h,align 8
%aeQ=getelementptr inbounds i8,i8*%aeP,i64 8
%aeR=bitcast i8*%aeQ to i8**
%aeS=load i8*,i8**%aeR,align 8
%aeT=call fastcc i8*%aeM(i8*inreg%aeO,i8*inreg%aeS)
store i8*%aeT,i8**%g,align 8
%aeU=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aeV=getelementptr inbounds i8,i8*%aeU,i64 40
%aeW=bitcast i8*%aeV to i8**
%aeX=load i8*,i8**%aeW,align 8
%aeY=load i8*,i8**%l,align 8
%aeZ=load i8*,i8**%m,align 8
%ae0=load i8*,i8**%p,align 8
store i8*null,i8**%l,align 8
store i8*null,i8**%p,align 8
%ae1=call fastcc i8*@_SMLLN17PolyTyElimination16analyzeMatchListE_1167(i8*inreg%ae0,i8*inreg%aeZ,i8*inreg%aeY,i8*inreg%aeX)
%ae2=bitcast i8*%ae1 to i8**
%ae3=load i8*,i8**%ae2,align 8
store i8*%ae3,i8**%h,align 8
%ae4=getelementptr inbounds i8,i8*%ae1,i64 8
%ae5=bitcast i8*%ae4 to i8***
%ae6=load i8**,i8***%ae5,align 8
%ae7=load i8*,i8**%ae6,align 8
store i8*%ae7,i8**%i,align 8
%ae8=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%ae9=call fastcc i8*@_SMLLN17PolyTyElimination9equalListE_1048(i8*inreg%ae8)
%afa=getelementptr inbounds i8,i8*%ae9,i64 16
%afb=bitcast i8*%afa to i8*(i8*,i8*)**
%afc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%afb,align 8
%afd=bitcast i8*%ae9 to i8**
%afe=load i8*,i8**%afd,align 8
store i8*%afe,i8**%l,align 8
%aff=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%afg=getelementptr inbounds i8,i8*%aff,i64 16
%afh=bitcast i8*%afg to i8*(i8*,i8*)**
%afi=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%afh,align 8
%afj=bitcast i8*%aff to i8**
%afk=load i8*,i8**%afj,align 8
%afl=call fastcc i8*%afi(i8*inreg%afk,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bG,i64 0,i32 2)to i8*))
%afm=getelementptr inbounds i8,i8*%afl,i64 16
%afn=bitcast i8*%afm to i8*(i8*,i8*)**
%afo=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%afn,align 8
%afp=bitcast i8*%afl to i8**
%afq=load i8*,i8**%afp,align 8
%afr=load i8*,i8**%g,align 8
%afs=call fastcc i8*%afo(i8*inreg%afq,i8*inreg%afr)
store i8*%afs,i8**%j,align 8
%aft=call i8*@sml_alloc(i32 inreg 20)#0
%afu=getelementptr inbounds i8,i8*%aft,i64 -4
%afv=bitcast i8*%afu to i32*
store i32 1342177296,i32*%afv,align 4
%afw=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%afx=bitcast i8*%aft to i8**
store i8*%afw,i8**%afx,align 8
%afy=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%afz=getelementptr inbounds i8,i8*%aft,i64 8
%afA=bitcast i8*%afz to i8**
store i8*%afy,i8**%afA,align 8
%afB=getelementptr inbounds i8,i8*%aft,i64 16
%afC=bitcast i8*%afB to i32*
store i32 3,i32*%afC,align 4
%afD=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%afE=call fastcc i8*%afc(i8*inreg%afD,i8*inreg%aft)
%afF=call i8*@sml_alloc(i32 inreg 36)#0
%afG=bitcast i8*%afF to i32*
%afH=getelementptr inbounds i8,i8*%afF,i64 -4
%afI=bitcast i8*%afH to i32*
store i32 1342177312,i32*%afI,align 4
%afJ=getelementptr inbounds i8,i8*%afF,i64 4
%afK=bitcast i8*%afJ to i32*
store i32 0,i32*%afK,align 1
store i32%aea,i32*%afG,align 4
%afL=load i8*,i8**%g,align 8
%afM=getelementptr inbounds i8,i8*%afF,i64 8
%afN=bitcast i8*%afM to i8**
store i8*%afL,i8**%afN,align 8
%afO=load i8*,i8**%k,align 8
%afP=getelementptr inbounds i8,i8*%afF,i64 16
%afQ=bitcast i8*%afP to i8**
store i8*%afO,i8**%afQ,align 8
%afR=load i8*,i8**%h,align 8
%afS=getelementptr inbounds i8,i8*%afF,i64 24
%afT=bitcast i8*%afS to i8**
store i8*%afR,i8**%afT,align 8
%afU=getelementptr inbounds i8,i8*%afF,i64 32
%afV=bitcast i8*%afU to i32*
store i32 14,i32*%afV,align 4
%afW=call fastcc i8*@_SMLFN12TypedCalcCon7TPCASEME(i8*inreg%afF)
ret i8*%afW
afX:
%afY=getelementptr inbounds i8,i8*%A,i64 8
%afZ=bitcast i8*%afY to i8**
%af0=load i8*,i8**%afZ,align 8
store i8*%af0,i8**%h,align 8
%af1=getelementptr inbounds i8,i8*%af0,i64 24
%af2=bitcast i8*%af1 to i8**
%af3=load i8*,i8**%af2,align 8
store i8*%af3,i8**%j,align 8
%af4=getelementptr inbounds i8,i8*%af0,i64 8
%af5=bitcast i8*%af4 to i8**
%af6=load i8*,i8**%af5,align 8
%af7=load i8*,i8**%p,align 8
%af8=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%af7,i8*inreg%x,i8*inreg%z,i8*inreg%af6)
store i8*%af8,i8**%g,align 8
%af9=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aga=getelementptr inbounds i8,i8*%af9,i64 16
%agb=bitcast i8*%aga to i8*(i8*,i8*)**
%agc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%agb,align 8
%agd=bitcast i8*%af9 to i8**
%age=load i8*,i8**%agd,align 8
store i8*%age,i8**%i,align 8
%agf=call i8*@sml_alloc(i32 inreg 28)#0
%agg=getelementptr inbounds i8,i8*%agf,i64 -4
%agh=bitcast i8*%agg to i32*
store i32 1342177304,i32*%agh,align 4
store i8*%agf,i8**%k,align 8
%agi=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%agj=bitcast i8*%agf to i8**
store i8*%agi,i8**%agj,align 8
%agk=load i8*,i8**%m,align 8
%agl=getelementptr inbounds i8,i8*%agf,i64 8
%agm=bitcast i8*%agl to i8**
store i8*%agk,i8**%agm,align 8
%agn=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%ago=getelementptr inbounds i8,i8*%agf,i64 16
%agp=bitcast i8*%ago to i8**
store i8*%agn,i8**%agp,align 8
%agq=getelementptr inbounds i8,i8*%agf,i64 24
%agr=bitcast i8*%agq to i32*
store i32 7,i32*%agr,align 4
%ags=call i8*@sml_alloc(i32 inreg 28)#0
%agt=getelementptr inbounds i8,i8*%ags,i64 -4
%agu=bitcast i8*%agt to i32*
store i32 1342177304,i32*%agu,align 4
%agv=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%agw=bitcast i8*%ags to i8**
store i8*%agv,i8**%agw,align 8
%agx=getelementptr inbounds i8,i8*%ags,i64 8
%agy=bitcast i8*%agx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10argExpList_1174 to void(...)*),void(...)**%agy,align 8
%agz=getelementptr inbounds i8,i8*%ags,i64 16
%agA=bitcast i8*%agz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10argExpList_1174 to void(...)*),void(...)**%agA,align 8
%agB=getelementptr inbounds i8,i8*%ags,i64 24
%agC=bitcast i8*%agB to i32*
store i32 -2147483647,i32*%agC,align 4
%agD=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%agE=call fastcc i8*%agc(i8*inreg%agD,i8*inreg%ags)
%agF=getelementptr inbounds i8,i8*%agE,i64 16
%agG=bitcast i8*%agF to i8*(i8*,i8*)**
%agH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%agG,align 8
%agI=bitcast i8*%agE to i8**
%agJ=load i8*,i8**%agI,align 8
%agK=bitcast i8**%h to i8***
%agL=load i8**,i8***%agK,align 8
store i8*null,i8**%h,align 8
%agM=load i8*,i8**%agL,align 8
%agN=call fastcc i8*%agH(i8*inreg%agJ,i8*inreg%agM)
store i8*%agN,i8**%h,align 8
%agO=load i8*,i8**%g,align 8
%agP=getelementptr inbounds i8,i8*%agO,i64 8
%agQ=bitcast i8*%agP to i8**
%agR=load i8*,i8**%agQ,align 8
%agS=call fastcc i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg%agR)
%agT=icmp eq i8*%agS,null
br i1%agT,label%agY,label%agU
agU:
%agV=bitcast i8*%agS to i32*
%agW=load i32,i32*%agV,align 4
%agX=icmp eq i32%agW,6
br i1%agX,label%ahk,label%agY
agY:
store i8*null,i8**%h,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%j,align 8
%agZ=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%agZ,i8**%g,align 8
%ag0=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bF,i64 0,i32 2)to i8*))
store i8*%ag0,i8**%h,align 8
%ag1=call i8*@sml_alloc(i32 inreg 28)#0
%ag2=getelementptr inbounds i8,i8*%ag1,i64 -4
%ag3=bitcast i8*%ag2 to i32*
store i32 1342177304,i32*%ag3,align 4
store i8*%ag1,i8**%i,align 8
%ag4=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ag5=bitcast i8*%ag1 to i8**
store i8*%ag4,i8**%ag5,align 8
%ag6=getelementptr inbounds i8,i8*%ag1,i64 8
%ag7=bitcast i8*%ag6 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%ag7,align 8
%ag8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ag9=getelementptr inbounds i8,i8*%ag1,i64 16
%aha=bitcast i8*%ag9 to i8**
store i8*%ag8,i8**%aha,align 8
%ahb=getelementptr inbounds i8,i8*%ag1,i64 24
%ahc=bitcast i8*%ahb to i32*
store i32 7,i32*%ahc,align 4
%ahd=call i8*@sml_alloc(i32 inreg 60)#0
%ahe=getelementptr inbounds i8,i8*%ahd,i64 -4
%ahf=bitcast i8*%ahe to i32*
store i32 1342177336,i32*%ahf,align 4
%ahg=getelementptr inbounds i8,i8*%ahd,i64 56
%ahh=bitcast i8*%ahg to i32*
store i32 1,i32*%ahh,align 4
%ahi=load i8*,i8**%i,align 8
%ahj=bitcast i8*%ahd to i8**
store i8*%ahi,i8**%ahj,align 8
call void@sml_raise(i8*inreg%ahd)#1
unreachable
ahk:
%ahl=getelementptr inbounds i8,i8*%agS,i64 8
%ahm=bitcast i8*%ahl to i8***
%ahn=load i8**,i8***%ahm,align 8
%aho=load i8*,i8**%ahn,align 8
store i8*%aho,i8**%k,align 8
%ahp=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%ahq=call fastcc i8*@_SMLLN17PolyTyElimination9equalListE_1048(i8*inreg%ahp)
%ahr=getelementptr inbounds i8,i8*%ahq,i64 16
%ahs=bitcast i8*%ahr to i8*(i8*,i8*)**
%aht=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ahs,align 8
%ahu=bitcast i8*%ahq to i8**
%ahv=load i8*,i8**%ahu,align 8
store i8*%ahv,i8**%l,align 8
%ahw=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ahx=getelementptr inbounds i8,i8*%ahw,i64 16
%ahy=bitcast i8*%ahx to i8*(i8*,i8*)**
%ahz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ahy,align 8
%ahA=bitcast i8*%ahw to i8**
%ahB=load i8*,i8**%ahA,align 8
%ahC=call fastcc i8*%ahz(i8*inreg%ahB,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bD,i64 0,i32 2)to i8*))
%ahD=getelementptr inbounds i8,i8*%ahC,i64 16
%ahE=bitcast i8*%ahD to i8*(i8*,i8*)**
%ahF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ahE,align 8
%ahG=bitcast i8*%ahC to i8**
%ahH=load i8*,i8**%ahG,align 8
%ahI=load i8*,i8**%h,align 8
%ahJ=call fastcc i8*%ahF(i8*inreg%ahH,i8*inreg%ahI)
store i8*%ahJ,i8**%i,align 8
%ahK=call i8*@sml_alloc(i32 inreg 20)#0
%ahL=getelementptr inbounds i8,i8*%ahK,i64 -4
%ahM=bitcast i8*%ahL to i32*
store i32 1342177296,i32*%ahM,align 4
%ahN=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ahO=bitcast i8*%ahK to i8**
store i8*%ahN,i8**%ahO,align 8
%ahP=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ahQ=getelementptr inbounds i8,i8*%ahK,i64 8
%ahR=bitcast i8*%ahQ to i8**
store i8*%ahP,i8**%ahR,align 8
%ahS=getelementptr inbounds i8,i8*%ahK,i64 16
%ahT=bitcast i8*%ahS to i32*
store i32 3,i32*%ahT,align 4
%ahU=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%ahV=call fastcc i8*%aht(i8*inreg%ahU,i8*inreg%ahK)
%ahW=call i8*@sml_alloc(i32 inreg 28)#0
%ahX=getelementptr inbounds i8,i8*%ahW,i64 -4
%ahY=bitcast i8*%ahX to i32*
store i32 1342177304,i32*%ahY,align 4
%ahZ=load i8*,i8**%h,align 8
%ah0=bitcast i8*%ahW to i8**
store i8*%ahZ,i8**%ah0,align 8
%ah1=load i8*,i8**%g,align 8
%ah2=getelementptr inbounds i8,i8*%ahW,i64 8
%ah3=bitcast i8*%ah2 to i8**
store i8*%ah1,i8**%ah3,align 8
%ah4=load i8*,i8**%j,align 8
%ah5=getelementptr inbounds i8,i8*%ahW,i64 16
%ah6=bitcast i8*%ah5 to i8**
store i8*%ah4,i8**%ah6,align 8
%ah7=getelementptr inbounds i8,i8*%ahW,i64 24
%ah8=bitcast i8*%ah7 to i32*
store i32 7,i32*%ah8,align 4
%ah9=call fastcc i8*@_SMLFN12TypedCalcCon6TPAPPME(i8*inreg%ahW)
ret i8*%ah9
}
define internal fastcc i8*@_SMLLN17PolyTyElimination16analyzeMatchListE_1167(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%b,i8**%g,align 8
store i8*%c,i8**%f,align 8
store i8*%d,i8**%e,align 8
store i8*%a,i8**%i,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%n,label%m
m:
call void@sml_check(i32 inreg%k)
br label%n
n:
%o=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%h,align 8
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
store i8*%u,i8**%j,align 8
%x=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=load i8*,i8**%g,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%D=getelementptr inbounds i8,i8*%u,i64 16
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%u,i64 24
%G=bitcast i8*%F to i32*
store i32 7,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 28)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177304,i32*%J,align 4
%K=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%H,i64 8
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7matches_1236 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%H,i64 16
%P=bitcast i8*%O to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7matches_1236 to void(...)*),void(...)**%P,align 8
%Q=getelementptr inbounds i8,i8*%H,i64 24
%R=bitcast i8*%Q to i32*
store i32 -2147483647,i32*%R,align 4
%S=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%T=call fastcc i8*%r(i8*inreg%S,i8*inreg%H)
%U=getelementptr inbounds i8,i8*%T,i64 16
%V=bitcast i8*%U to i8*(i8*,i8*)**
%W=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%V,align 8
%X=bitcast i8*%T to i8**
%Y=load i8*,i8**%X,align 8
%Z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aa=call fastcc i8*%W(i8*inreg%Y,i8*inreg%Z)
store i8*%aa,i8**%e,align 8
%ab=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ac=getelementptr inbounds i8,i8*%ab,i64 16
%ad=bitcast i8*%ac to i8*(i8*,i8*)**
%ae=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ad,align 8
%af=bitcast i8*%ab to i8**
%ag=load i8*,i8**%af,align 8
%ah=call fastcc i8*%ae(i8*inreg%ag,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bY,i64 0,i32 2)to i8*))
%ai=getelementptr inbounds i8,i8*%ah,i64 16
%aj=bitcast i8*%ai to i8*(i8*,i8*)**
%ak=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aj,align 8
%al=bitcast i8*%ah to i8**
%am=load i8*,i8**%al,align 8
%an=load i8*,i8**%e,align 8
%ao=call fastcc i8*%ak(i8*inreg%am,i8*inreg%an)
store i8*%ao,i8**%f,align 8
%ap=icmp eq i8*%ao,null
br i1%ap,label%aq,label%aM
aq:
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
%ar=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%ar,i8**%e,align 8
%as=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b1,i64 0,i32 2)to i8*))
store i8*%as,i8**%f,align 8
%at=call i8*@sml_alloc(i32 inreg 28)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177304,i32*%av,align 4
store i8*%at,i8**%g,align 8
%aw=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ax=bitcast i8*%at to i8**
store i8*%aw,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%at,i64 8
%az=bitcast i8*%ay to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%az,align 8
%aA=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aB=getelementptr inbounds i8,i8*%at,i64 16
%aC=bitcast i8*%aB to i8**
store i8*%aA,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%at,i64 24
%aE=bitcast i8*%aD to i32*
store i32 7,i32*%aE,align 4
%aF=call i8*@sml_alloc(i32 inreg 60)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177336,i32*%aH,align 4
%aI=getelementptr inbounds i8,i8*%aF,i64 56
%aJ=bitcast i8*%aI to i32*
store i32 1,i32*%aJ,align 4
%aK=load i8*,i8**%g,align 8
%aL=bitcast i8*%aF to i8**
store i8*%aK,i8**%aL,align 8
call void@sml_raise(i8*inreg%aF)#1
unreachable
aM:
%aN=bitcast i8*%ao to i8**
%aO=load i8*,i8**%aN,align 8
store i8*%aO,i8**%h,align 8
%aP=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aQ=getelementptr inbounds i8,i8*%aP,i64 16
%aR=bitcast i8*%aQ to i8*(i8*,i8*)**
%aS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aR,align 8
%aT=bitcast i8*%aP to i8**
%aU=load i8*,i8**%aT,align 8
%aV=call fastcc i8*%aS(i8*inreg%aU,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bZ,i64 0,i32 2)to i8*))
%aW=getelementptr inbounds i8,i8*%aV,i64 16
%aX=bitcast i8*%aW to i8*(i8*,i8*)**
%aY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aX,align 8
%aZ=bitcast i8*%aV to i8**
%a0=load i8*,i8**%aZ,align 8
%a1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a2=call fastcc i8*%aY(i8*inreg%a0,i8*inreg%a1)
%a3=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
call fastcc void@_SMLLN17PolyTyElimination8equalAllE_1050(i8*inreg%a3,i8*inreg%a2)
%a4=call i8*@sml_alloc(i32 inreg 20)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177296,i32*%a6,align 4
%a7=load i8*,i8**%e,align 8
%a8=bitcast i8*%a4 to i8**
store i8*%a7,i8**%a8,align 8
%a9=load i8*,i8**%h,align 8
%ba=getelementptr inbounds i8,i8*%a4,i64 8
%bb=bitcast i8*%ba to i8**
store i8*%a9,i8**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a4,i64 16
%bd=bitcast i8*%bc to i32*
store i32 3,i32*%bd,align 4
ret i8*%a4
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12analyzeMatchE_1168(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
r:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%b,i8**%e,align 8
store i8*%c,i8**%g,align 8
store i8*%d,i8**%f,align 8
store i8*%a,i8**%k,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%p,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%e,align 8
br label%p
p:
%q=phi i8*[%o,%n],[%b,%r]
store i8*null,i8**%e,align 8
store i8*%q,i8**%h,align 8
%s=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%i,align 8
%y=load i8*,i8**%k,align 8
%z=getelementptr inbounds i8,i8*%y,i64 56
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%e,align 8
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177304,i32*%E,align 4
store i8*%C,i8**%j,align 8
%F=load i8*,i8**%g,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%h,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%C,i64 24
%O=bitcast i8*%N to i32*
store i32 7,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 28)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177304,i32*%R,align 4
%S=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%P,i64 8
%V=bitcast i8*%U to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4args_1247 to void(...)*),void(...)**%V,align 8
%W=getelementptr inbounds i8,i8*%P,i64 16
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4args_1247 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%P,i64 24
%Z=bitcast i8*%Y to i32*
store i32 -2147483647,i32*%Z,align 4
%aa=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ab=call fastcc i8*%v(i8*inreg%aa,i8*inreg%P)
%ac=getelementptr inbounds i8,i8*%ab,i64 16
%ad=bitcast i8*%ac to i8*(i8*,i8*)**
%ae=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ad,align 8
%af=bitcast i8*%ab to i8**
%ag=load i8*,i8**%af,align 8
%ah=bitcast i8**%f to i8***
%ai=load i8**,i8***%ah,align 8
%aj=load i8*,i8**%ai,align 8
%ak=call fastcc i8*%ae(i8*inreg%ag,i8*inreg%aj)
store i8*%ak,i8**%e,align 8
%al=call fastcc i8*@_SMLFN12TypedCalcCon7patVarsE(i8*inreg%ak)
%am=call fastcc i8*@_SMLFN12TypedCalcCon6varEnvE(i8*inreg%al)
store i8*%am,i8**%i,align 8
%an=bitcast i8**%g to i8***
%ao=load i8**,i8***%an,align 8
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%j,align 8
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
%at=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aw=getelementptr inbounds i8,i8*%aq,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%aq,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%aq)
store i8*%aA,i8**%i,align 8
%aB=load i8*,i8**%g,align 8
%aC=getelementptr inbounds i8,i8*%aB,i64 8
%aD=bitcast i8*%aC to i8**
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%g,align 8
%aF=call i8*@sml_alloc(i32 inreg 20)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177296,i32*%aH,align 4
%aI=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aJ=bitcast i8*%aF to i8**
store i8*%aI,i8**%aJ,align 8
%aK=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aL=getelementptr inbounds i8,i8*%aF,i64 8
%aM=bitcast i8*%aL to i8**
store i8*%aK,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aF,i64 16
%aO=bitcast i8*%aN to i32*
store i32 3,i32*%aO,align 4
%aP=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aQ=getelementptr inbounds i8,i8*%aP,i64 8
%aR=bitcast i8*%aQ to i8**
%aS=load i8*,i8**%aR,align 8
%aT=load i8*,i8**%h,align 8
%aU=load i8*,i8**%k,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%aV=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%aU,i8*inreg%aT,i8*inreg%aF,i8*inreg%aS)
store i8*%aV,i8**%f,align 8
%aW=call i8*@sml_alloc(i32 inreg 20)#0
%aX=getelementptr inbounds i8,i8*%aW,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177296,i32*%aY,align 4
%aZ=load i8*,i8**%e,align 8
%a0=bitcast i8*%aW to i8**
store i8*%aZ,i8**%a0,align 8
%a1=load i8*,i8**%f,align 8
%a2=getelementptr inbounds i8,i8*%aW,i64 8
%a3=bitcast i8*%a2 to i8**
store i8*%a1,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aW,i64 16
%a5=bitcast i8*%a4 to i32*
store i32 3,i32*%a5,align 4
ret i8*%aW
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14analyzeMonoLetE_1169(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
t:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%b,i8**%e,align 8
store i8*%c,i8**%g,align 8
store i8*%d,i8**%f,align 8
store i8*%a,i8**%l,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%r,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%f,align 8
%q=load i8*,i8**%e,align 8
br label%r
r:
%s=phi i8*[%q,%o],[%b,%t]
%u=phi i8*[%p,%o],[%d,%t]
store i8*null,i8**%e,align 8
store i8*%s,i8**%i,align 8
%v=icmp eq i8*%u,null
br i1%v,label%w,label%G
w:
store i8*null,i8**%f,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%l,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=bitcast i8*%x to i8**
store i8*null,i8**%A,align 8
%B=load i8*,i8**%g,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%x
G:
%H=bitcast i8*%u to i8**
%I=load i8*,i8**%H,align 8
%J=getelementptr inbounds i8,i8*%I,i64 8
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
%M=load i8*,i8**%g,align 8
%N=load i8*,i8**%l,align 8
%O=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%N,i8*inreg%s,i8*inreg%M,i8*inreg%L)
store i8*%O,i8**%h,align 8
%P=bitcast i8**%f to i8****
%Q=load i8***,i8****%P,align 8
%R=load i8**,i8***%Q,align 8
%S=load i8*,i8**%R,align 8
%T=bitcast i8*%S to i32*
%U=load i32,i32*%T,align 4
%V=getelementptr inbounds i8,i8*%S,i64 4
%W=bitcast i8*%V to i32*
%X=load i32,i32*%W,align 4
%Y=getelementptr inbounds i8,i8*%S,i64 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
store i8*%aa,i8**%j,align 8
%ab=getelementptr inbounds i8,i8*%O,i64 8
%ac=bitcast i8*%ab to i8**
%ad=load i8*,i8**%ac,align 8
store i8*%ad,i8**%k,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=bitcast i8*%ae to i32*
%ag=getelementptr inbounds i8,i8*%ae,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177304,i32*%ah,align 4
store i8*%ae,i8**%e,align 8
store i32%U,i32*%af,align 4
%ai=getelementptr inbounds i8,i8*%ae,i64 4
%aj=bitcast i8*%ai to i32*
store i32%X,i32*%aj,align 4
%ak=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%al=getelementptr inbounds i8,i8*%ae,i64 8
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ao=getelementptr inbounds i8,i8*%ae,i64 16
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ae,i64 24
%ar=bitcast i8*%aq to i32*
store i32 6,i32*%ar,align 4
%as=call i8*@sml_alloc(i32 inreg 20)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177296,i32*%au,align 4
%av=load i8*,i8**%e,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%as,i64 8
%ay=bitcast i8*%ax to i8**
store i8*null,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%as,i64 16
%aA=bitcast i8*%az to i32*
store i32 3,i32*%aA,align 4
%aB=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%as)
store i8*%aB,i8**%j,align 8
%aC=bitcast i8**%g to i8***
%aD=load i8**,i8***%aC,align 8
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%k,align 8
%aF=call i8*@sml_alloc(i32 inreg 20)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177296,i32*%aH,align 4
%aI=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%aJ=bitcast i8*%aF to i8**
store i8*%aI,i8**%aJ,align 8
%aK=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aL=getelementptr inbounds i8,i8*%aF,i64 8
%aM=bitcast i8*%aL to i8**
store i8*%aK,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aF,i64 16
%aO=bitcast i8*%aN to i32*
store i32 3,i32*%aO,align 4
%aP=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%aF)
store i8*%aP,i8**%j,align 8
%aQ=load i8*,i8**%g,align 8
%aR=getelementptr inbounds i8,i8*%aQ,i64 8
%aS=bitcast i8*%aR to i8**
%aT=load i8*,i8**%aS,align 8
store i8*%aT,i8**%g,align 8
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
%aX=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aY=bitcast i8*%aU to i8**
store i8*%aX,i8**%aY,align 8
%aZ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a0=getelementptr inbounds i8,i8*%aU,i64 8
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aU,i64 16
%a3=bitcast i8*%a2 to i32*
store i32 3,i32*%a3,align 4
%a4=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a5=getelementptr inbounds i8,i8*%a4,i64 8
%a6=bitcast i8*%a5 to i8**
%a7=load i8*,i8**%a6,align 8
%a8=load i8*,i8**%i,align 8
%a9=load i8*,i8**%l,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%l,align 8
%ba=call fastcc i8*@_SMLLN17PolyTyElimination14analyzeMonoLetE_1169(i8*inreg%a9,i8*inreg%a8,i8*inreg%aU,i8*inreg%a7)
%bb=bitcast i8*%ba to i8**
%bc=load i8*,i8**%bb,align 8
store i8*%bc,i8**%f,align 8
%bd=getelementptr inbounds i8,i8*%ba,i64 8
%be=bitcast i8*%bd to i8**
%bf=load i8*,i8**%be,align 8
store i8*%bf,i8**%g,align 8
%bg=call i8*@sml_alloc(i32 inreg 20)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177296,i32*%bi,align 4
store i8*%bg,i8**%i,align 8
%bj=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bk=bitcast i8*%bg to i8**
store i8*%bj,i8**%bk,align 8
%bl=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bm=getelementptr inbounds i8,i8*%bg,i64 8
%bn=bitcast i8*%bm to i8**
store i8*%bl,i8**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bg,i64 16
%bp=bitcast i8*%bo to i32*
store i32 3,i32*%bp,align 4
%bq=call i8*@sml_alloc(i32 inreg 20)#0
%br=getelementptr inbounds i8,i8*%bq,i64 -4
%bs=bitcast i8*%br to i32*
store i32 1342177296,i32*%bs,align 4
store i8*%bq,i8**%e,align 8
%bt=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bu=bitcast i8*%bq to i8**
store i8*%bt,i8**%bu,align 8
%bv=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bw=getelementptr inbounds i8,i8*%bq,i64 8
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%bq,i64 16
%bz=bitcast i8*%by to i32*
store i32 3,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 20)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
%bD=load i8*,i8**%e,align 8
%bE=bitcast i8*%bA to i8**
store i8*%bD,i8**%bE,align 8
%bF=load i8*,i8**%g,align 8
%bG=getelementptr inbounds i8,i8*%bA,i64 8
%bH=bitcast i8*%bG to i8**
store i8*%bF,i8**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bA,i64 16
%bJ=bitcast i8*%bI to i32*
store i32 3,i32*%bJ,align 4
ret i8*%bA
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15analyzeDeclListE_1170(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
s:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%b,i8**%e,align 8
store i8*%c,i8**%g,align 8
store i8*%d,i8**%f,align 8
store i8*%a,i8**%k,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%q,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%f,align 8
%p=load i8*,i8**%e,align 8
br label%q
q:
%r=phi i8*[%p,%n],[%b,%s]
%t=phi i8*[%o,%n],[%d,%s]
store i8*null,i8**%e,align 8
store i8*%r,i8**%h,align 8
%u=icmp eq i8*%t,null
br i1%u,label%v,label%F
v:
store i8*null,i8**%f,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=bitcast i8*%w to i8**
store i8*null,i8**%z,align 8
%A=load i8*,i8**%g,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%w,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
ret i8*%w
F:
%G=bitcast i8*%t to i8**
%H=load i8*,i8**%G,align 8
%I=load i8*,i8**%g,align 8
%J=load i8*,i8**%k,align 8
%K=call fastcc i8*@_SMLLN17PolyTyElimination11analyzeDeclE_1171(i8*inreg%J,i8*inreg%r,i8*inreg%I,i8*inreg%H)
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%e,align 8
%N=getelementptr inbounds i8,i8*%K,i64 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%i,align 8
%Q=bitcast i8**%g to i8***
%R=load i8**,i8***%Q,align 8
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%j,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
%W=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%T)
store i8*%ad,i8**%i,align 8
%ae=load i8*,i8**%g,align 8
%af=getelementptr inbounds i8,i8*%ae,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
store i8*%ah,i8**%g,align 8
%ai=call i8*@sml_alloc(i32 inreg 20)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177296,i32*%ak,align 4
%al=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%am=bitcast i8*%ai to i8**
store i8*%al,i8**%am,align 8
%an=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ao=getelementptr inbounds i8,i8*%ai,i64 8
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ai,i64 16
%ar=bitcast i8*%aq to i32*
store i32 3,i32*%ar,align 4
%as=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%at=getelementptr inbounds i8,i8*%as,i64 8
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
%aw=load i8*,i8**%h,align 8
%ax=load i8*,i8**%k,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%ay=call fastcc i8*@_SMLLN17PolyTyElimination15analyzeDeclListE_1170(i8*inreg%ax,i8*inreg%aw,i8*inreg%ai,i8*inreg%av)
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%f,align 8
%aB=getelementptr inbounds i8,i8*%ay,i64 8
%aC=bitcast i8*%aB to i8**
%aD=load i8*,i8**%aC,align 8
store i8*%aD,i8**%g,align 8
%aE=call i8*@sml_alloc(i32 inreg 20)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177296,i32*%aG,align 4
store i8*%aE,i8**%h,align 8
%aH=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aI=bitcast i8*%aE to i8**
store i8*%aH,i8**%aI,align 8
%aJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aK=getelementptr inbounds i8,i8*%aE,i64 8
%aL=bitcast i8*%aK to i8**
store i8*%aJ,i8**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aE,i64 16
%aN=bitcast i8*%aM to i32*
store i32 3,i32*%aN,align 4
%aO=call i8*@sml_alloc(i32 inreg 20)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32 1342177296,i32*%aQ,align 4
%aR=load i8*,i8**%h,align 8
%aS=bitcast i8*%aO to i8**
store i8*%aR,i8**%aS,align 8
%aT=load i8*,i8**%g,align 8
%aU=getelementptr inbounds i8,i8*%aO,i64 8
%aV=bitcast i8*%aU to i8**
store i8*%aT,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aO,i64 16
%aX=bitcast i8*%aW to i32*
store i32 3,i32*%aX,align 4
ret i8*%aO
}
define internal fastcc i8*@_SMLLN17PolyTyElimination11analyzeDeclE_1171(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
s:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
store i8*%d,i8**%g,align 8
store i8*%a,i8**%k,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%q,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%g,align 8
%p=load i8*,i8**%e,align 8
br label%q
q:
%r=phi i8*[%p,%n],[%b,%s]
%t=phi i8*[%o,%n],[%d,%s]
store i8*%r,i8**%h,align 8
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
switch i32%v,label%w[
i32 1,label%mN
i32 2,label%ka
i32 3,label%iA
i32 4,label%g2
i32 5,label%fX
i32 0,label%e8
i32 6,label%d3
i32 7,label%dG
i32 8,label%ck
i32 9,label%bH
i32 10,label%al
i32 11,label%O
]
w:
store i8*null,i8**%f,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
call void@sml_matchcomp_bug()
%x=load i8*,i8**@_SMLZ5Match,align 8
store i8*%x,i8**%e,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
store i8*%y,i8**%f,align 8
%B=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@b6,i64 0,i32 2,i64 0),i8**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 60)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177336,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%H,i64 56
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=load i8*,i8**%f,align 8
%N=bitcast i8*%H to i8**
store i8*%M,i8**%N,align 8
call void@sml_raise(i8*inreg%H)#1
unreachable
O:
%P=getelementptr inbounds i8,i8*%t,i64 8
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
%S=getelementptr inbounds i8,i8*%R,i64 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%g,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=load i8*,i8**%f,align 8
%Y=load i8*,i8**%k,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%Z=call fastcc i8*@_SMLLN17PolyTyElimination15analyzeRecbindsE_1172(i8*inreg%Y,i8*inreg%r,i8*inreg%X,i8*inreg%W)
store i8*%Z,i8**%e,align 8
%aa=call i8*@sml_alloc(i32 inreg 20)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177296,i32*%ac,align 4
%ad=load i8*,i8**%e,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=load i8*,i8**%g,align 8
%ag=getelementptr inbounds i8,i8*%aa,i64 8
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%aa,i64 16
%aj=bitcast i8*%ai to i32*
store i32 3,i32*%aj,align 4
%ak=call fastcc i8*@_SMLFN12TypedCalcCon8TPVALRECE(i8*inreg%aa)
ret i8*%ak
al:
%am=getelementptr inbounds i8,i8*%t,i64 8
%an=bitcast i8*%am to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%i,align 8
%ap=getelementptr inbounds i8,i8*%ao,i64 16
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%j,align 8
%as=load i8*,i8**%k,align 8
%at=getelementptr inbounds i8,i8*%as,i64 48
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
%aw=call fastcc i8*@_SMLLN17PolyTyElimination13analyzeBtvEnvE_1150(i8*inreg%av,i8*inreg%r)
%ax=getelementptr inbounds i8,i8*%aw,i64 16
%ay=bitcast i8*%ax to i8*(i8*,i8*)**
%az=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ay,align 8
%aA=bitcast i8*%aw to i8**
%aB=load i8*,i8**%aA,align 8
%aC=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aD=call fastcc i8*%az(i8*inreg%aB,i8*inreg%aC)
%aE=getelementptr inbounds i8,i8*%aD,i64 16
%aF=bitcast i8*%aE to i8*(i8*,i8*)**
%aG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aF,align 8
%aH=bitcast i8*%aD to i8**
%aI=load i8*,i8**%aH,align 8
%aJ=bitcast i8**%i to i8***
%aK=load i8**,i8***%aJ,align 8
%aL=load i8*,i8**%aK,align 8
%aM=call fastcc i8*%aG(i8*inreg%aI,i8*inreg%aL)
store i8*%aM,i8**%f,align 8
%aN=bitcast i8*%aM to i8**
%aO=load i8*,i8**%aN,align 8
store i8*%aO,i8**%e,align 8
%aP=load i8*,i8**%k,align 8
%aQ=getelementptr inbounds i8,i8*%aP,i64 40
%aR=bitcast i8*%aQ to i8**
%aS=load i8*,i8**%aR,align 8
%aT=load i8*,i8**%h,align 8
%aU=call fastcc i8*@_SMLLN17PolyTyElimination18analyzeConstraintsE_1147(i8*inreg%aS,i8*inreg%aT)
%aV=getelementptr inbounds i8,i8*%aU,i64 16
%aW=bitcast i8*%aV to i8*(i8*,i8*)**
%aX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aW,align 8
%aY=bitcast i8*%aU to i8**
%aZ=load i8*,i8**%aY,align 8
%a0=load i8*,i8**%f,align 8
%a1=getelementptr inbounds i8,i8*%a0,i64 8
%a2=bitcast i8*%a1 to i8**
%a3=load i8*,i8**%a2,align 8
%a4=call fastcc i8*%aX(i8*inreg%aZ,i8*inreg%a3)
%a5=getelementptr inbounds i8,i8*%a4,i64 16
%a6=bitcast i8*%a5 to i8*(i8*,i8*)**
%a7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a6,align 8
%a8=bitcast i8*%a4 to i8**
%a9=load i8*,i8**%a8,align 8
%ba=load i8*,i8**%i,align 8
%bb=getelementptr inbounds i8,i8*%ba,i64 8
%bc=bitcast i8*%bb to i8**
%bd=load i8*,i8**%bc,align 8
%be=call fastcc i8*%a7(i8*inreg%a9,i8*inreg%bd)
store i8*%be,i8**%g,align 8
%bf=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bg=getelementptr inbounds i8,i8*%bf,i64 8
%bh=bitcast i8*%bg to i8**
%bi=load i8*,i8**%bh,align 8
%bj=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bk=getelementptr inbounds i8,i8*%bj,i64 24
%bl=bitcast i8*%bk to i8**
%bm=load i8*,i8**%bl,align 8
%bn=load i8*,i8**%h,align 8
%bo=load i8*,i8**%k,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%bp=call fastcc i8*@_SMLLN17PolyTyElimination15analyzeRecbindsE_1172(i8*inreg%bo,i8*inreg%bn,i8*inreg%bi,i8*inreg%bm)
store i8*%bp,i8**%f,align 8
%bq=call i8*@sml_alloc(i32 inreg 36)#0
%br=getelementptr inbounds i8,i8*%bq,i64 -4
%bs=bitcast i8*%br to i32*
store i32 1342177312,i32*%bs,align 4
%bt=load i8*,i8**%e,align 8
%bu=bitcast i8*%bq to i8**
store i8*%bt,i8**%bu,align 8
%bv=load i8*,i8**%g,align 8
%bw=getelementptr inbounds i8,i8*%bq,i64 8
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=load i8*,i8**%j,align 8
%bz=getelementptr inbounds i8,i8*%bq,i64 16
%bA=bitcast i8*%bz to i8**
store i8*%by,i8**%bA,align 8
%bB=load i8*,i8**%f,align 8
%bC=getelementptr inbounds i8,i8*%bq,i64 24
%bD=bitcast i8*%bC to i8**
store i8*%bB,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bq,i64 32
%bF=bitcast i8*%bE to i32*
store i32 15,i32*%bF,align 4
%bG=call fastcc i8*@_SMLFN12TypedCalcCon12TPVALPOLYRECE(i8*inreg%bq)
ret i8*%bG
bH:
%bI=getelementptr inbounds i8,i8*%t,i64 8
%bJ=bitcast i8*%bI to i8**
%bK=load i8*,i8**%bJ,align 8
%bL=bitcast i8*%bK to i8**
%bM=bitcast i8*%bK to i8***
%bN=load i8**,i8***%bM,align 8
%bO=load i8*,i8**%bN,align 8
store i8*%bO,i8**%g,align 8
%bP=getelementptr inbounds i8,i8*%bK,i64 8
%bQ=bitcast i8*%bP to i8**
%bR=load i8*,i8**%bQ,align 8
store i8*%bR,i8**%i,align 8
%bS=load i8*,i8**%bL,align 8
%bT=getelementptr inbounds i8,i8*%bS,i64 8
%bU=bitcast i8*%bT to i8**
%bV=load i8*,i8**%bU,align 8
%bW=load i8*,i8**%f,align 8
%bX=load i8*,i8**%k,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%bY=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%bX,i8*inreg%r,i8*inreg%bW,i8*inreg%bV)
store i8*%bY,i8**%e,align 8
%bZ=call i8*@sml_alloc(i32 inreg 20)#0
%b0=getelementptr inbounds i8,i8*%bZ,i64 -4
%b1=bitcast i8*%b0 to i32*
store i32 1342177296,i32*%b1,align 4
store i8*%bZ,i8**%f,align 8
%b2=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b3=bitcast i8*%bZ to i8**
store i8*%b2,i8**%b3,align 8
%b4=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b5=getelementptr inbounds i8,i8*%bZ,i64 8
%b6=bitcast i8*%b5 to i8**
store i8*%b4,i8**%b6,align 8
%b7=getelementptr inbounds i8,i8*%bZ,i64 16
%b8=bitcast i8*%b7 to i32*
store i32 3,i32*%b8,align 4
%b9=call i8*@sml_alloc(i32 inreg 20)#0
%ca=getelementptr inbounds i8,i8*%b9,i64 -4
%cb=bitcast i8*%ca to i32*
store i32 1342177296,i32*%cb,align 4
%cc=load i8*,i8**%f,align 8
%cd=bitcast i8*%b9 to i8**
store i8*%cc,i8**%cd,align 8
%ce=load i8*,i8**%i,align 8
%cf=getelementptr inbounds i8,i8*%b9,i64 8
%cg=bitcast i8*%cf to i8**
store i8*%ce,i8**%cg,align 8
%ch=getelementptr inbounds i8,i8*%b9,i64 16
%ci=bitcast i8*%ch to i32*
store i32 3,i32*%ci,align 4
%cj=call fastcc i8*@_SMLFN12TypedCalcCon5TPVALE(i8*inreg%b9)
ret i8*%cj
ck:
%cl=getelementptr inbounds i8,i8*%t,i64 8
%cm=bitcast i8*%cl to i8**
%cn=load i8*,i8**%cm,align 8
store i8*%cn,i8**%i,align 8
%co=getelementptr inbounds i8,i8*%cn,i64 16
%cp=bitcast i8*%co to i8**
%cq=load i8*,i8**%cp,align 8
store i8*%cq,i8**%j,align 8
%cr=load i8*,i8**%k,align 8
%cs=getelementptr inbounds i8,i8*%cr,i64 48
%ct=bitcast i8*%cs to i8**
%cu=load i8*,i8**%ct,align 8
%cv=call fastcc i8*@_SMLLN17PolyTyElimination13analyzeBtvEnvE_1150(i8*inreg%cu,i8*inreg%r)
%cw=getelementptr inbounds i8,i8*%cv,i64 16
%cx=bitcast i8*%cw to i8*(i8*,i8*)**
%cy=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cx,align 8
%cz=bitcast i8*%cv to i8**
%cA=load i8*,i8**%cz,align 8
%cB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cC=call fastcc i8*%cy(i8*inreg%cA,i8*inreg%cB)
%cD=getelementptr inbounds i8,i8*%cC,i64 16
%cE=bitcast i8*%cD to i8*(i8*,i8*)**
%cF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cE,align 8
%cG=bitcast i8*%cC to i8**
%cH=load i8*,i8**%cG,align 8
%cI=bitcast i8**%i to i8***
%cJ=load i8**,i8***%cI,align 8
%cK=load i8*,i8**%cJ,align 8
%cL=call fastcc i8*%cF(i8*inreg%cH,i8*inreg%cK)
store i8*%cL,i8**%f,align 8
%cM=bitcast i8*%cL to i8**
%cN=load i8*,i8**%cM,align 8
store i8*%cN,i8**%e,align 8
%cO=load i8*,i8**%k,align 8
%cP=getelementptr inbounds i8,i8*%cO,i64 40
%cQ=bitcast i8*%cP to i8**
%cR=load i8*,i8**%cQ,align 8
%cS=load i8*,i8**%h,align 8
%cT=call fastcc i8*@_SMLLN17PolyTyElimination18analyzeConstraintsE_1147(i8*inreg%cR,i8*inreg%cS)
%cU=getelementptr inbounds i8,i8*%cT,i64 16
%cV=bitcast i8*%cU to i8*(i8*,i8*)**
%cW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cV,align 8
%cX=bitcast i8*%cT to i8**
%cY=load i8*,i8**%cX,align 8
%cZ=load i8*,i8**%f,align 8
%c0=getelementptr inbounds i8,i8*%cZ,i64 8
%c1=bitcast i8*%c0 to i8**
%c2=load i8*,i8**%c1,align 8
%c3=call fastcc i8*%cW(i8*inreg%cY,i8*inreg%c2)
%c4=getelementptr inbounds i8,i8*%c3,i64 16
%c5=bitcast i8*%c4 to i8*(i8*,i8*)**
%c6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c5,align 8
%c7=bitcast i8*%c3 to i8**
%c8=load i8*,i8**%c7,align 8
%c9=load i8*,i8**%i,align 8
%da=getelementptr inbounds i8,i8*%c9,i64 8
%db=bitcast i8*%da to i8**
%dc=load i8*,i8**%db,align 8
%dd=call fastcc i8*%c6(i8*inreg%c8,i8*inreg%dc)
store i8*%dd,i8**%g,align 8
%de=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%df=getelementptr inbounds i8,i8*%de,i64 8
%dg=bitcast i8*%df to i8**
%dh=load i8*,i8**%dg,align 8
%di=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%dj=getelementptr inbounds i8,i8*%di,i64 24
%dk=bitcast i8*%dj to i8**
%dl=load i8*,i8**%dk,align 8
%dm=load i8*,i8**%h,align 8
%dn=load i8*,i8**%k,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%do=call fastcc i8*@_SMLLN17PolyTyElimination18analyzeFunRecbindsE_1173(i8*inreg%dn,i8*inreg%dm,i8*inreg%dh,i8*inreg%dl)
store i8*%do,i8**%f,align 8
%dp=call i8*@sml_alloc(i32 inreg 36)#0
%dq=getelementptr inbounds i8,i8*%dp,i64 -4
%dr=bitcast i8*%dq to i32*
store i32 1342177312,i32*%dr,align 4
%ds=load i8*,i8**%e,align 8
%dt=bitcast i8*%dp to i8**
store i8*%ds,i8**%dt,align 8
%du=load i8*,i8**%g,align 8
%dv=getelementptr inbounds i8,i8*%dp,i64 8
%dw=bitcast i8*%dv to i8**
store i8*%du,i8**%dw,align 8
%dx=load i8*,i8**%j,align 8
%dy=getelementptr inbounds i8,i8*%dp,i64 16
%dz=bitcast i8*%dy to i8**
store i8*%dx,i8**%dz,align 8
%dA=load i8*,i8**%f,align 8
%dB=getelementptr inbounds i8,i8*%dp,i64 24
%dC=bitcast i8*%dB to i8**
store i8*%dA,i8**%dC,align 8
%dD=getelementptr inbounds i8,i8*%dp,i64 32
%dE=bitcast i8*%dD to i32*
store i32 15,i32*%dE,align 4
%dF=call fastcc i8*@_SMLFN12TypedCalcCon13TPPOLYFUNDECLE(i8*inreg%dp)
ret i8*%dF
dG:
%dH=getelementptr inbounds i8,i8*%t,i64 8
%dI=bitcast i8*%dH to i8**
%dJ=load i8*,i8**%dI,align 8
%dK=getelementptr inbounds i8,i8*%dJ,i64 8
%dL=bitcast i8*%dK to i8**
%dM=load i8*,i8**%dL,align 8
store i8*%dM,i8**%g,align 8
%dN=bitcast i8*%dJ to i8**
%dO=load i8*,i8**%dN,align 8
%dP=load i8*,i8**%f,align 8
%dQ=load i8*,i8**%k,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%dR=call fastcc i8*@_SMLLN17PolyTyElimination18analyzeFunRecbindsE_1173(i8*inreg%dQ,i8*inreg%r,i8*inreg%dP,i8*inreg%dO)
store i8*%dR,i8**%e,align 8
%dS=call i8*@sml_alloc(i32 inreg 20)#0
%dT=getelementptr inbounds i8,i8*%dS,i64 -4
%dU=bitcast i8*%dT to i32*
store i32 1342177296,i32*%dU,align 4
%dV=load i8*,i8**%e,align 8
%dW=bitcast i8*%dS to i8**
store i8*%dV,i8**%dW,align 8
%dX=load i8*,i8**%g,align 8
%dY=getelementptr inbounds i8,i8*%dS,i64 8
%dZ=bitcast i8*%dY to i8**
store i8*%dX,i8**%dZ,align 8
%d0=getelementptr inbounds i8,i8*%dS,i64 16
%d1=bitcast i8*%d0 to i32*
store i32 3,i32*%d1,align 4
%d2=call fastcc i8*@_SMLFN12TypedCalcCon9TPFUNDECLE(i8*inreg%dS)
ret i8*%d2
d3:
%d4=getelementptr inbounds i8,i8*%t,i64 8
%d5=bitcast i8*%d4 to i8**
%d6=load i8*,i8**%d5,align 8
store i8*%d6,i8**%e,align 8
%d7=bitcast i8*%d6 to i8***
%d8=load i8**,i8***%d7,align 8
%d9=load i8*,i8**%d8,align 8
store i8*%d9,i8**%g,align 8
%ea=getelementptr inbounds i8,i8*%d6,i64 8
%eb=bitcast i8*%ea to i8**
%ec=load i8*,i8**%eb,align 8
store i8*%ec,i8**%i,align 8
%ed=load i8*,i8**%k,align 8
%ee=getelementptr inbounds i8,i8*%ed,i64 8
%ef=bitcast i8*%ee to i8**
%eg=load i8*,i8**%ef,align 8
%eh=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%eg,i8*inreg%r)
%ei=getelementptr inbounds i8,i8*%eh,i64 16
%ej=bitcast i8*%ei to i8*(i8*,i8*)**
%ek=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ej,align 8
%el=bitcast i8*%eh to i8**
%em=load i8*,i8**%el,align 8
%en=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eo=call fastcc i8*%ek(i8*inreg%em,i8*inreg%en)
%ep=getelementptr inbounds i8,i8*%eo,i64 16
%eq=bitcast i8*%ep to i8*(i8*,i8*)**
%er=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eq,align 8
%es=bitcast i8*%eo to i8**
%et=load i8*,i8**%es,align 8
%eu=bitcast i8**%e to i8***
%ev=load i8**,i8***%eu,align 8
store i8*null,i8**%e,align 8
%ew=load i8*,i8**%ev,align 8
%ex=getelementptr inbounds i8,i8*%ew,i64 8
%ey=bitcast i8*%ex to i8**
%ez=load i8*,i8**%ey,align 8
%eA=call fastcc i8*%er(i8*inreg%et,i8*inreg%ez)
store i8*%eA,i8**%e,align 8
%eB=bitcast i8**%k to i8***
%eC=load i8**,i8***%eB,align 8
store i8*null,i8**%k,align 8
%eD=load i8*,i8**%eC,align 8
%eE=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%eF=call fastcc i8*@_SMLLN17PolyTyElimination6exportE_1116(i8*inreg%eD,i8*inreg%eE)
%eG=getelementptr inbounds i8,i8*%eF,i64 16
%eH=bitcast i8*%eG to i8*(i8*,i8*)**
%eI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eH,align 8
%eJ=bitcast i8*%eF to i8**
%eK=load i8*,i8**%eJ,align 8
%eL=load i8*,i8**%e,align 8
%eM=call fastcc i8*%eI(i8*inreg%eK,i8*inreg%eL)
%eN=call i8*@sml_alloc(i32 inreg 20)#0
%eO=getelementptr inbounds i8,i8*%eN,i64 -4
%eP=bitcast i8*%eO to i32*
store i32 1342177296,i32*%eP,align 4
store i8*%eN,i8**%f,align 8
%eQ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%eR=bitcast i8*%eN to i8**
store i8*%eQ,i8**%eR,align 8
%eS=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%eT=getelementptr inbounds i8,i8*%eN,i64 8
%eU=bitcast i8*%eT to i8**
store i8*%eS,i8**%eU,align 8
%eV=getelementptr inbounds i8,i8*%eN,i64 16
%eW=bitcast i8*%eV to i32*
store i32 3,i32*%eW,align 4
%eX=call i8*@sml_alloc(i32 inreg 20)#0
%eY=getelementptr inbounds i8,i8*%eX,i64 -4
%eZ=bitcast i8*%eY to i32*
store i32 1342177296,i32*%eZ,align 4
%e0=load i8*,i8**%f,align 8
%e1=bitcast i8*%eX to i8**
store i8*%e0,i8**%e1,align 8
%e2=load i8*,i8**%i,align 8
%e3=getelementptr inbounds i8,i8*%eX,i64 8
%e4=bitcast i8*%e3 to i8**
store i8*%e2,i8**%e4,align 8
%e5=getelementptr inbounds i8,i8*%eX,i64 16
%e6=bitcast i8*%e5 to i32*
store i32 3,i32*%e6,align 4
%e7=call fastcc i8*@_SMLFN12TypedCalcCon11TPEXTERNVARE(i8*inreg%eX)
ret i8*%e7
e8:
%e9=getelementptr inbounds i8,i8*%t,i64 8
%fa=bitcast i8*%e9 to i8**
%fb=load i8*,i8**%fa,align 8
store i8*%fb,i8**%e,align 8
%fc=bitcast i8*%fb to i8**
%fd=load i8*,i8**%fc,align 8
store i8*%fd,i8**%g,align 8
%fe=load i8*,i8**%k,align 8
%ff=getelementptr inbounds i8,i8*%fe,i64 8
%fg=bitcast i8*%ff to i8**
%fh=load i8*,i8**%fg,align 8
%fi=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%fh,i8*inreg%r)
%fj=getelementptr inbounds i8,i8*%fi,i64 16
%fk=bitcast i8*%fj to i8*(i8*,i8*)**
%fl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fk,align 8
%fm=bitcast i8*%fi to i8**
%fn=load i8*,i8**%fm,align 8
%fo=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fp=call fastcc i8*%fl(i8*inreg%fn,i8*inreg%fo)
%fq=getelementptr inbounds i8,i8*%fp,i64 16
%fr=bitcast i8*%fq to i8*(i8*,i8*)**
%fs=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fr,align 8
%ft=bitcast i8*%fp to i8**
%fu=load i8*,i8**%ft,align 8
%fv=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fw=getelementptr inbounds i8,i8*%fv,i64 8
%fx=bitcast i8*%fw to i8**
%fy=load i8*,i8**%fx,align 8
%fz=call fastcc i8*%fs(i8*inreg%fu,i8*inreg%fy)
store i8*%fz,i8**%e,align 8
%fA=bitcast i8**%k to i8***
%fB=load i8**,i8***%fA,align 8
store i8*null,i8**%k,align 8
%fC=load i8*,i8**%fB,align 8
%fD=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%fE=call fastcc i8*@_SMLLN17PolyTyElimination6exportE_1116(i8*inreg%fC,i8*inreg%fD)
%fF=getelementptr inbounds i8,i8*%fE,i64 16
%fG=bitcast i8*%fF to i8*(i8*,i8*)**
%fH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fG,align 8
%fI=bitcast i8*%fE to i8**
%fJ=load i8*,i8**%fI,align 8
%fK=load i8*,i8**%e,align 8
%fL=call fastcc i8*%fH(i8*inreg%fJ,i8*inreg%fK)
%fM=call i8*@sml_alloc(i32 inreg 20)#0
%fN=getelementptr inbounds i8,i8*%fM,i64 -4
%fO=bitcast i8*%fN to i32*
store i32 1342177296,i32*%fO,align 4
%fP=load i8*,i8**%g,align 8
%fQ=bitcast i8*%fM to i8**
store i8*%fP,i8**%fQ,align 8
%fR=load i8*,i8**%e,align 8
%fS=getelementptr inbounds i8,i8*%fM,i64 8
%fT=bitcast i8*%fS to i8**
store i8*%fR,i8**%fT,align 8
%fU=getelementptr inbounds i8,i8*%fM,i64 16
%fV=bitcast i8*%fU to i32*
store i32 3,i32*%fV,align 4
%fW=call fastcc i8*@_SMLFN12TypedCalcCon12TPBUILTINEXNE(i8*inreg%fM)
ret i8*%fW
fX:
%fY=getelementptr inbounds i8,i8*%t,i64 8
%fZ=bitcast i8*%fY to i8**
%f0=load i8*,i8**%fZ,align 8
store i8*%f0,i8**%e,align 8
%f1=bitcast i8*%f0 to i8***
%f2=load i8**,i8***%f1,align 8
%f3=load i8*,i8**%f2,align 8
store i8*%f3,i8**%g,align 8
%f4=getelementptr inbounds i8,i8*%f0,i64 8
%f5=bitcast i8*%f4 to i8**
%f6=load i8*,i8**%f5,align 8
store i8*%f6,i8**%i,align 8
%f7=load i8*,i8**%k,align 8
%f8=getelementptr inbounds i8,i8*%f7,i64 8
%f9=bitcast i8*%f8 to i8**
%ga=load i8*,i8**%f9,align 8
%gb=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%ga,i8*inreg%r)
%gc=getelementptr inbounds i8,i8*%gb,i64 16
%gd=bitcast i8*%gc to i8*(i8*,i8*)**
%ge=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gd,align 8
%gf=bitcast i8*%gb to i8**
%gg=load i8*,i8**%gf,align 8
%gh=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gi=call fastcc i8*%ge(i8*inreg%gg,i8*inreg%gh)
%gj=getelementptr inbounds i8,i8*%gi,i64 16
%gk=bitcast i8*%gj to i8*(i8*,i8*)**
%gl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gk,align 8
%gm=bitcast i8*%gi to i8**
%gn=load i8*,i8**%gm,align 8
%go=bitcast i8**%e to i8***
%gp=load i8**,i8***%go,align 8
store i8*null,i8**%e,align 8
%gq=load i8*,i8**%gp,align 8
%gr=getelementptr inbounds i8,i8*%gq,i64 8
%gs=bitcast i8*%gr to i8**
%gt=load i8*,i8**%gs,align 8
%gu=call fastcc i8*%gl(i8*inreg%gn,i8*inreg%gt)
store i8*%gu,i8**%e,align 8
%gv=bitcast i8**%k to i8***
%gw=load i8**,i8***%gv,align 8
store i8*null,i8**%k,align 8
%gx=load i8*,i8**%gw,align 8
%gy=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gz=call fastcc i8*@_SMLLN17PolyTyElimination6exportE_1116(i8*inreg%gx,i8*inreg%gy)
%gA=getelementptr inbounds i8,i8*%gz,i64 16
%gB=bitcast i8*%gA to i8*(i8*,i8*)**
%gC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gB,align 8
%gD=bitcast i8*%gz to i8**
%gE=load i8*,i8**%gD,align 8
%gF=load i8*,i8**%e,align 8
%gG=call fastcc i8*%gC(i8*inreg%gE,i8*inreg%gF)
%gH=call i8*@sml_alloc(i32 inreg 20)#0
%gI=getelementptr inbounds i8,i8*%gH,i64 -4
%gJ=bitcast i8*%gI to i32*
store i32 1342177296,i32*%gJ,align 4
store i8*%gH,i8**%f,align 8
%gK=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gL=bitcast i8*%gH to i8**
store i8*%gK,i8**%gL,align 8
%gM=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%gN=getelementptr inbounds i8,i8*%gH,i64 8
%gO=bitcast i8*%gN to i8**
store i8*%gM,i8**%gO,align 8
%gP=getelementptr inbounds i8,i8*%gH,i64 16
%gQ=bitcast i8*%gP to i32*
store i32 3,i32*%gQ,align 4
%gR=call i8*@sml_alloc(i32 inreg 20)#0
%gS=getelementptr inbounds i8,i8*%gR,i64 -4
%gT=bitcast i8*%gS to i32*
store i32 1342177296,i32*%gT,align 4
%gU=load i8*,i8**%f,align 8
%gV=bitcast i8*%gR to i8**
store i8*%gU,i8**%gV,align 8
%gW=load i8*,i8**%i,align 8
%gX=getelementptr inbounds i8,i8*%gR,i64 8
%gY=bitcast i8*%gX to i8**
store i8*%gW,i8**%gY,align 8
%gZ=getelementptr inbounds i8,i8*%gR,i64 16
%g0=bitcast i8*%gZ to i32*
store i32 3,i32*%g0,align 4
%g1=call fastcc i8*@_SMLFN12TypedCalcCon11TPEXTERNEXNE(i8*inreg%gR)
ret i8*%g1
g2:
%g3=getelementptr inbounds i8,i8*%t,i64 8
%g4=bitcast i8*%g3 to i8**
%g5=load i8*,i8**%g4,align 8
store i8*%g5,i8**%g,align 8
%g6=getelementptr inbounds i8,i8*%g5,i64 8
%g7=bitcast i8*%g6 to i8***
%g8=load i8**,i8***%g7,align 8
%g9=load i8*,i8**%g8,align 8
store i8*%g9,i8**%i,align 8
%ha=load i8*,i8**%k,align 8
%hb=getelementptr inbounds i8,i8*%ha,i64 8
%hc=bitcast i8*%hb to i8**
%hd=load i8*,i8**%hc,align 8
%he=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%hd,i8*inreg%r)
%hf=getelementptr inbounds i8,i8*%he,i64 16
%hg=bitcast i8*%hf to i8*(i8*,i8*)**
%hh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hg,align 8
%hi=bitcast i8*%he to i8**
%hj=load i8*,i8**%hi,align 8
%hk=load i8*,i8**%f,align 8
%hl=call fastcc i8*%hh(i8*inreg%hj,i8*inreg%hk)
%hm=getelementptr inbounds i8,i8*%hl,i64 16
%hn=bitcast i8*%hm to i8*(i8*,i8*)**
%ho=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hn,align 8
%hp=bitcast i8*%hl to i8**
%hq=load i8*,i8**%hp,align 8
%hr=load i8*,i8**%g,align 8
%hs=getelementptr inbounds i8,i8*%hr,i64 8
%ht=bitcast i8*%hs to i8**
%hu=load i8*,i8**%ht,align 8
%hv=getelementptr inbounds i8,i8*%hu,i64 8
%hw=bitcast i8*%hv to i8**
%hx=load i8*,i8**%hw,align 8
%hy=call fastcc i8*%ho(i8*inreg%hq,i8*inreg%hx)
store i8*%hy,i8**%e,align 8
%hz=bitcast i8**%g to i8***
%hA=load i8**,i8***%hz,align 8
store i8*null,i8**%g,align 8
%hB=load i8*,i8**%hA,align 8
%hC=load i8*,i8**%f,align 8
%hD=load i8*,i8**%h,align 8
%hE=load i8*,i8**%k,align 8
store i8*null,i8**%f,align 8
%hF=call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1166(i8*inreg%hE,i8*inreg%hD,i8*inreg%hC,i8*inreg%hB)
store i8*%hF,i8**%f,align 8
%hG=bitcast i8**%k to i8***
%hH=load i8**,i8***%hG,align 8
store i8*null,i8**%k,align 8
%hI=load i8*,i8**%hH,align 8
%hJ=load i8*,i8**%h,align 8
%hK=call fastcc i8*@_SMLLN17PolyTyElimination6exportE_1116(i8*inreg%hI,i8*inreg%hJ)
%hL=getelementptr inbounds i8,i8*%hK,i64 16
%hM=bitcast i8*%hL to i8*(i8*,i8*)**
%hN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hM,align 8
%hO=bitcast i8*%hK to i8**
%hP=load i8*,i8**%hO,align 8
%hQ=load i8*,i8**%e,align 8
%hR=call fastcc i8*%hN(i8*inreg%hP,i8*inreg%hQ)
%hS=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hT=call fastcc i8*@_SMLLN17PolyTyElimination5equalE_1041(i8*inreg%hS)
%hU=getelementptr inbounds i8,i8*%hT,i64 16
%hV=bitcast i8*%hU to i8*(i8*,i8*)**
%hW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hV,align 8
%hX=bitcast i8*%hT to i8**
%hY=load i8*,i8**%hX,align 8
store i8*%hY,i8**%h,align 8
%hZ=load i8*,i8**%f,align 8
%h0=getelementptr inbounds i8,i8*%hZ,i64 8
%h1=bitcast i8*%h0 to i8**
%h2=load i8*,i8**%h1,align 8
store i8*%h2,i8**%g,align 8
%h3=call i8*@sml_alloc(i32 inreg 20)#0
%h4=getelementptr inbounds i8,i8*%h3,i64 -4
%h5=bitcast i8*%h4 to i32*
store i32 1342177296,i32*%h5,align 4
%h6=load i8*,i8**%e,align 8
%h7=bitcast i8*%h3 to i8**
store i8*%h6,i8**%h7,align 8
%h8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%h9=getelementptr inbounds i8,i8*%h3,i64 8
%ia=bitcast i8*%h9 to i8**
store i8*%h8,i8**%ia,align 8
%ib=getelementptr inbounds i8,i8*%h3,i64 16
%ic=bitcast i8*%ib to i32*
store i32 3,i32*%ic,align 4
%id=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ie=call fastcc i8*%hW(i8*inreg%id,i8*inreg%h3)
%if=call i8*@sml_alloc(i32 inreg 20)#0
%ig=getelementptr inbounds i8,i8*%if,i64 -4
%ih=bitcast i8*%ig to i32*
store i32 1342177296,i32*%ih,align 4
store i8*%if,i8**%g,align 8
%ii=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ij=bitcast i8*%if to i8**
store i8*%ii,i8**%ij,align 8
%ik=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%il=getelementptr inbounds i8,i8*%if,i64 8
%im=bitcast i8*%il to i8**
store i8*%ik,i8**%im,align 8
%in=getelementptr inbounds i8,i8*%if,i64 16
%io=bitcast i8*%in to i32*
store i32 3,i32*%io,align 4
%ip=call i8*@sml_alloc(i32 inreg 20)#0
%iq=getelementptr inbounds i8,i8*%ip,i64 -4
%ir=bitcast i8*%iq to i32*
store i32 1342177296,i32*%ir,align 4
%is=load i8*,i8**%f,align 8
%it=bitcast i8*%ip to i8**
store i8*%is,i8**%it,align 8
%iu=load i8*,i8**%g,align 8
%iv=getelementptr inbounds i8,i8*%ip,i64 8
%iw=bitcast i8*%iv to i8**
store i8*%iu,i8**%iw,align 8
%ix=getelementptr inbounds i8,i8*%ip,i64 16
%iy=bitcast i8*%ix to i32*
store i32 3,i32*%iy,align 4
%iz=call fastcc i8*@_SMLFN12TypedCalcCon11TPEXPORTVARE(i8*inreg%ip)
ret i8*%iz
iA:
%iB=getelementptr inbounds i8,i8*%t,i64 8
%iC=bitcast i8*%iB to i8**
%iD=load i8*,i8**%iC,align 8
store i8*%iD,i8**%g,align 8
%iE=call fastcc i8*@_SMLFN5ExnID3Map4findE(i32 inreg 1,i32 inreg 8)
%iF=getelementptr inbounds i8,i8*%iE,i64 16
%iG=bitcast i8*%iF to i8*(i8*,i8*)**
%iH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%iG,align 8
%iI=bitcast i8*%iE to i8**
%iJ=load i8*,i8**%iI,align 8
store i8*%iJ,i8**%i,align 8
%iK=bitcast i8**%f to i8***
%iL=load i8**,i8***%iK,align 8
store i8*null,i8**%f,align 8
%iM=load i8*,i8**%iL,align 8
%iN=getelementptr inbounds i8,i8*%iM,i64 24
%iO=bitcast i8*%iN to i8**
%iP=load i8*,i8**%iO,align 8
store i8*%iP,i8**%e,align 8
%iQ=bitcast i8**%g to i32**
%iR=load i32*,i32**%iQ,align 8
%iS=load i32,i32*%iR,align 4
%iT=call i8*@sml_alloc(i32 inreg 20)#0
%iU=getelementptr inbounds i8,i8*%iT,i64 -4
%iV=bitcast i8*%iU to i32*
store i32 1342177296,i32*%iV,align 4
%iW=getelementptr inbounds i8,i8*%iT,i64 12
%iX=bitcast i8*%iW to i32*
store i32 0,i32*%iX,align 1
%iY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%iZ=bitcast i8*%iT to i8**
store i8*%iY,i8**%iZ,align 8
%i0=getelementptr inbounds i8,i8*%iT,i64 8
%i1=bitcast i8*%i0 to i32*
store i32%iS,i32*%i1,align 4
%i2=getelementptr inbounds i8,i8*%iT,i64 16
%i3=bitcast i8*%i2 to i32*
store i32 1,i32*%i3,align 4
%i4=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%i5=call fastcc i8*%iH(i8*inreg%i4,i8*inreg%iT)
%i6=icmp eq i8*%i5,null
br i1%i6,label%i7,label%jt
i7:
store i8*null,i8**%h,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%k,align 8
%i8=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%i8,i8**%e,align 8
%i9=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b5,i64 0,i32 2)to i8*))
store i8*%i9,i8**%f,align 8
%ja=call i8*@sml_alloc(i32 inreg 28)#0
%jb=getelementptr inbounds i8,i8*%ja,i64 -4
%jc=bitcast i8*%jb to i32*
store i32 1342177304,i32*%jc,align 4
store i8*%ja,i8**%g,align 8
%jd=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%je=bitcast i8*%ja to i8**
store i8*%jd,i8**%je,align 8
%jf=getelementptr inbounds i8,i8*%ja,i64 8
%jg=bitcast i8*%jf to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%jg,align 8
%jh=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ji=getelementptr inbounds i8,i8*%ja,i64 16
%jj=bitcast i8*%ji to i8**
store i8*%jh,i8**%jj,align 8
%jk=getelementptr inbounds i8,i8*%ja,i64 24
%jl=bitcast i8*%jk to i32*
store i32 7,i32*%jl,align 4
%jm=call i8*@sml_alloc(i32 inreg 60)#0
%jn=getelementptr inbounds i8,i8*%jm,i64 -4
%jo=bitcast i8*%jn to i32*
store i32 1342177336,i32*%jo,align 4
%jp=getelementptr inbounds i8,i8*%jm,i64 56
%jq=bitcast i8*%jp to i32*
store i32 1,i32*%jq,align 4
%jr=load i8*,i8**%g,align 8
%js=bitcast i8*%jm to i8**
store i8*%jr,i8**%js,align 8
call void@sml_raise(i8*inreg%jm)#1
unreachable
jt:
%ju=bitcast i8*%i5 to i8**
%jv=load i8*,i8**%ju,align 8
store i8*%jv,i8**%e,align 8
%jw=bitcast i8**%k to i8***
%jx=load i8**,i8***%jw,align 8
store i8*null,i8**%k,align 8
%jy=load i8*,i8**%jx,align 8
%jz=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%jA=call fastcc i8*@_SMLLN17PolyTyElimination6exportE_1116(i8*inreg%jy,i8*inreg%jz)
%jB=getelementptr inbounds i8,i8*%jA,i64 16
%jC=bitcast i8*%jB to i8*(i8*,i8*)**
%jD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jC,align 8
%jE=bitcast i8*%jA to i8**
%jF=load i8*,i8**%jE,align 8
%jG=load i8*,i8**%e,align 8
%jH=getelementptr inbounds i8,i8*%jG,i64 16
%jI=bitcast i8*%jH to i8**
%jJ=load i8*,i8**%jI,align 8
%jK=call fastcc i8*%jD(i8*inreg%jF,i8*inreg%jJ)
%jL=load i8*,i8**%e,align 8
%jM=getelementptr inbounds i8,i8*%jL,i64 16
%jN=bitcast i8*%jM to i8**
%jO=load i8*,i8**%jN,align 8
store i8*%jO,i8**%e,align 8
%jP=load i8*,i8**%g,align 8
%jQ=bitcast i8*%jP to i32*
%jR=load i32,i32*%jQ,align 4
store i8*null,i8**%g,align 8
%jS=getelementptr inbounds i8,i8*%jP,i64 8
%jT=bitcast i8*%jS to i8**
%jU=load i8*,i8**%jT,align 8
store i8*%jU,i8**%f,align 8
%jV=call i8*@sml_alloc(i32 inreg 28)#0
%jW=bitcast i8*%jV to i32*
%jX=getelementptr inbounds i8,i8*%jV,i64 -4
%jY=bitcast i8*%jX to i32*
store i32 1342177304,i32*%jY,align 4
%jZ=getelementptr inbounds i8,i8*%jV,i64 4
%j0=bitcast i8*%jZ to i32*
store i32 0,i32*%j0,align 1
store i32%jR,i32*%jW,align 4
%j1=load i8*,i8**%f,align 8
%j2=getelementptr inbounds i8,i8*%jV,i64 8
%j3=bitcast i8*%j2 to i8**
store i8*%j1,i8**%j3,align 8
%j4=load i8*,i8**%e,align 8
%j5=getelementptr inbounds i8,i8*%jV,i64 16
%j6=bitcast i8*%j5 to i8**
store i8*%j4,i8**%j6,align 8
%j7=getelementptr inbounds i8,i8*%jV,i64 24
%j8=bitcast i8*%j7 to i32*
store i32 6,i32*%j8,align 4
%j9=call fastcc i8*@_SMLFN12TypedCalcCon11TPEXPORTEXNE(i8*inreg%jV)
ret i8*%j9
ka:
%kb=getelementptr inbounds i8,i8*%t,i64 8
%kc=bitcast i8*%kb to i8**
%kd=load i8*,i8**%kc,align 8
store i8*%kd,i8**%g,align 8
%ke=getelementptr inbounds i8,i8*%kd,i64 8
%kf=bitcast i8*%ke to i8**
%kg=load i8*,i8**%kf,align 8
store i8*%kg,i8**%i,align 8
%kh=bitcast i8*%kd to i8***
%ki=load i8**,i8***%kh,align 8
%kj=load i8*,i8**%ki,align 8
%kk=bitcast i8*%kj to i32*
%kl=load i32,i32*%kk,align 4
%km=getelementptr inbounds i8,i8*%kj,i64 8
%kn=bitcast i8*%km to i8**
%ko=load i8*,i8**%kn,align 8
store i8*%ko,i8**%j,align 8
%kp=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%kq=getelementptr inbounds i8,i8*%kp,i64 8
%kr=bitcast i8*%kq to i8**
%ks=load i8*,i8**%kr,align 8
store i8*null,i8**%h,align 8
%kt=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%ks,i8*inreg%r)
%ku=getelementptr inbounds i8,i8*%kt,i64 16
%kv=bitcast i8*%ku to i8*(i8*,i8*)**
%kw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kv,align 8
%kx=bitcast i8*%kt to i8**
%ky=load i8*,i8**%kx,align 8
%kz=load i8*,i8**%f,align 8
%kA=call fastcc i8*%kw(i8*inreg%ky,i8*inreg%kz)
%kB=getelementptr inbounds i8,i8*%kA,i64 16
%kC=bitcast i8*%kB to i8*(i8*,i8*)**
%kD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kC,align 8
%kE=bitcast i8*%kA to i8**
%kF=load i8*,i8**%kE,align 8
%kG=bitcast i8**%g to i8****
%kH=load i8***,i8****%kG,align 8
%kI=load i8**,i8***%kH,align 8
%kJ=load i8*,i8**%kI,align 8
%kK=getelementptr inbounds i8,i8*%kJ,i64 16
%kL=bitcast i8*%kK to i8**
%kM=load i8*,i8**%kL,align 8
%kN=call fastcc i8*%kD(i8*inreg%kF,i8*inreg%kM)
store i8*%kN,i8**%h,align 8
%kO=call i8*@sml_alloc(i32 inreg 28)#0
%kP=getelementptr inbounds i8,i8*%kO,i64 -4
%kQ=bitcast i8*%kP to i32*
store i32 1342177304,i32*%kQ,align 4
store i8*%kO,i8**%e,align 8
%kR=getelementptr inbounds i8,i8*%kO,i64 4
%kS=bitcast i8*%kR to i32*
store i32 0,i32*%kS,align 1
%kT=bitcast i8*%kO to i32*
store i32%kl,i32*%kT,align 4
%kU=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%kV=getelementptr inbounds i8,i8*%kO,i64 8
%kW=bitcast i8*%kV to i8**
store i8*%kU,i8**%kW,align 8
%kX=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%kY=getelementptr inbounds i8,i8*%kO,i64 16
%kZ=bitcast i8*%kY to i8**
store i8*%kX,i8**%kZ,align 8
%k0=getelementptr inbounds i8,i8*%kO,i64 24
%k1=bitcast i8*%k0 to i32*
store i32 6,i32*%k1,align 4
%k2=call fastcc i8*@_SMLFN5VarID3Map4findE(i32 inreg 1,i32 inreg 8)
%k3=getelementptr inbounds i8,i8*%k2,i64 16
%k4=bitcast i8*%k3 to i8*(i8*,i8*)**
%k5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k4,align 8
%k6=bitcast i8*%k2 to i8**
%k7=load i8*,i8**%k6,align 8
store i8*%k7,i8**%h,align 8
%k8=bitcast i8**%f to i8***
%k9=load i8**,i8***%k8,align 8
%la=load i8*,i8**%k9,align 8
%lb=getelementptr inbounds i8,i8*%la,i64 32
%lc=bitcast i8*%lb to i8**
%ld=load i8*,i8**%lc,align 8
store i8*%ld,i8**%f,align 8
%le=bitcast i8**%g to i8***
%lf=load i8**,i8***%le,align 8
%lg=load i8*,i8**%lf,align 8
%lh=getelementptr inbounds i8,i8*%lg,i64 8
%li=bitcast i8*%lh to i32**
%lj=load i32*,i32**%li,align 8
%lk=load i32,i32*%lj,align 4
%ll=call i8*@sml_alloc(i32 inreg 20)#0
%lm=getelementptr inbounds i8,i8*%ll,i64 -4
%ln=bitcast i8*%lm to i32*
store i32 1342177296,i32*%ln,align 4
%lo=getelementptr inbounds i8,i8*%ll,i64 12
%lp=bitcast i8*%lo to i32*
store i32 0,i32*%lp,align 1
%lq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%lr=bitcast i8*%ll to i8**
store i8*%lq,i8**%lr,align 8
%ls=getelementptr inbounds i8,i8*%ll,i64 8
%lt=bitcast i8*%ls to i32*
store i32%lk,i32*%lt,align 4
%lu=getelementptr inbounds i8,i8*%ll,i64 16
%lv=bitcast i8*%lu to i32*
store i32 1,i32*%lv,align 4
%lw=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%lx=call fastcc i8*%k5(i8*inreg%lw,i8*inreg%ll)
%ly=icmp eq i8*%lx,null
br i1%ly,label%lz,label%lV
lz:
store i8*null,i8**%g,align 8
store i8*null,i8**%i,align 8
%lA=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%lA,i8**%e,align 8
%lB=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b3,i64 0,i32 2)to i8*))
store i8*%lB,i8**%f,align 8
%lC=call i8*@sml_alloc(i32 inreg 28)#0
%lD=getelementptr inbounds i8,i8*%lC,i64 -4
%lE=bitcast i8*%lD to i32*
store i32 1342177304,i32*%lE,align 4
store i8*%lC,i8**%g,align 8
%lF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%lG=bitcast i8*%lC to i8**
store i8*%lF,i8**%lG,align 8
%lH=getelementptr inbounds i8,i8*%lC,i64 8
%lI=bitcast i8*%lH to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%lI,align 8
%lJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%lK=getelementptr inbounds i8,i8*%lC,i64 16
%lL=bitcast i8*%lK to i8**
store i8*%lJ,i8**%lL,align 8
%lM=getelementptr inbounds i8,i8*%lC,i64 24
%lN=bitcast i8*%lM to i32*
store i32 7,i32*%lN,align 4
%lO=call i8*@sml_alloc(i32 inreg 60)#0
%lP=getelementptr inbounds i8,i8*%lO,i64 -4
%lQ=bitcast i8*%lP to i32*
store i32 1342177336,i32*%lQ,align 4
%lR=getelementptr inbounds i8,i8*%lO,i64 56
%lS=bitcast i8*%lR to i32*
store i32 1,i32*%lS,align 4
%lT=load i8*,i8**%g,align 8
%lU=bitcast i8*%lO to i8**
store i8*%lT,i8**%lU,align 8
call void@sml_raise(i8*inreg%lO)#1
unreachable
lV:
%lW=bitcast i8*%lx to i8**
%lX=load i8*,i8**%lW,align 8
%lY=load i8**,i8***%le,align 8
%lZ=load i8*,i8**%lY,align 8
%l0=getelementptr inbounds i8,i8*%lZ,i64 8
%l1=bitcast i8*%l0 to i8**
%l2=load i8*,i8**%l1,align 8
%l3=bitcast i8*%l2 to i32*
%l4=load i32,i32*%l3,align 4
%l5=getelementptr inbounds i8,i8*%l2,i64 4
%l6=bitcast i8*%l5 to i32*
%l7=load i32,i32*%l6,align 4
%l8=getelementptr inbounds i8,i8*%l2,i64 8
%l9=bitcast i8*%l8 to i8**
%ma=load i8*,i8**%l9,align 8
store i8*%ma,i8**%f,align 8
%mb=getelementptr inbounds i8,i8*%lX,i64 16
%mc=bitcast i8*%mb to i8**
%md=load i8*,i8**%mc,align 8
store i8*%md,i8**%g,align 8
%me=call i8*@sml_alloc(i32 inreg 28)#0
%mf=bitcast i8*%me to i32*
%mg=getelementptr inbounds i8,i8*%me,i64 -4
%mh=bitcast i8*%mg to i32*
store i32 1342177304,i32*%mh,align 4
store i32%l4,i32*%mf,align 4
%mi=getelementptr inbounds i8,i8*%me,i64 4
%mj=bitcast i8*%mi to i32*
store i32%l7,i32*%mj,align 4
%mk=load i8*,i8**%f,align 8
%ml=getelementptr inbounds i8,i8*%me,i64 8
%mm=bitcast i8*%ml to i8**
store i8*%mk,i8**%mm,align 8
%mn=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%mo=getelementptr inbounds i8,i8*%me,i64 16
%mp=bitcast i8*%mo to i8**
store i8*%mn,i8**%mp,align 8
%mq=getelementptr inbounds i8,i8*%me,i64 24
%mr=bitcast i8*%mq to i32*
store i32 6,i32*%mr,align 4
store i8*%me,i8**%f,align 8
%ms=call i8*@sml_alloc(i32 inreg 20)#0
%mt=getelementptr inbounds i8,i8*%ms,i64 -4
%mu=bitcast i8*%mt to i32*
store i32 1342177296,i32*%mu,align 4
store i8*%ms,i8**%g,align 8
%mv=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%mw=bitcast i8*%ms to i8**
store i8*%mv,i8**%mw,align 8
%mx=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%my=getelementptr inbounds i8,i8*%ms,i64 8
%mz=bitcast i8*%my to i8**
store i8*%mx,i8**%mz,align 8
%mA=getelementptr inbounds i8,i8*%ms,i64 16
%mB=bitcast i8*%mA to i32*
store i32 3,i32*%mB,align 4
%mC=call i8*@sml_alloc(i32 inreg 20)#0
%mD=getelementptr inbounds i8,i8*%mC,i64 -4
%mE=bitcast i8*%mD to i32*
store i32 1342177296,i32*%mE,align 4
%mF=load i8*,i8**%g,align 8
%mG=bitcast i8*%mC to i8**
store i8*%mF,i8**%mG,align 8
%mH=load i8*,i8**%i,align 8
%mI=getelementptr inbounds i8,i8*%mC,i64 8
%mJ=bitcast i8*%mI to i8**
store i8*%mH,i8**%mJ,align 8
%mK=getelementptr inbounds i8,i8*%mC,i64 16
%mL=bitcast i8*%mK to i32*
store i32 3,i32*%mL,align 4
%mM=call fastcc i8*@_SMLFN12TypedCalcCon9TPEXNTAGDE(i8*inreg%mC)
ret i8*%mM
mN:
%mO=getelementptr inbounds i8,i8*%t,i64 8
%mP=bitcast i8*%mO to i8**
%mQ=load i8*,i8**%mP,align 8
store i8*%mQ,i8**%e,align 8
%mR=getelementptr inbounds i8,i8*%mQ,i64 8
%mS=bitcast i8*%mR to i8**
%mT=load i8*,i8**%mS,align 8
store i8*%mT,i8**%g,align 8
%mU=bitcast i8*%mQ to i8**
%mV=load i8*,i8**%mU,align 8
%mW=bitcast i8*%mV to i32*
%mX=load i32,i32*%mW,align 4
%mY=getelementptr inbounds i8,i8*%mV,i64 8
%mZ=bitcast i8*%mY to i8**
%m0=load i8*,i8**%mZ,align 8
store i8*%m0,i8**%i,align 8
%m1=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%m2=getelementptr inbounds i8,i8*%m1,i64 8
%m3=bitcast i8*%m2 to i8**
%m4=load i8*,i8**%m3,align 8
store i8*null,i8**%h,align 8
%m5=call fastcc i8*@_SMLLN17PolyTyElimination9analyzeTyE_1119(i8*inreg%m4,i8*inreg%r)
%m6=getelementptr inbounds i8,i8*%m5,i64 16
%m7=bitcast i8*%m6 to i8*(i8*,i8*)**
%m8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m7,align 8
%m9=bitcast i8*%m5 to i8**
%na=load i8*,i8**%m9,align 8
%nb=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%nc=call fastcc i8*%m8(i8*inreg%na,i8*inreg%nb)
%nd=getelementptr inbounds i8,i8*%nc,i64 16
%ne=bitcast i8*%nd to i8*(i8*,i8*)**
%nf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ne,align 8
%ng=bitcast i8*%nc to i8**
%nh=load i8*,i8**%ng,align 8
%ni=bitcast i8**%e to i8***
%nj=load i8**,i8***%ni,align 8
store i8*null,i8**%e,align 8
%nk=load i8*,i8**%nj,align 8
%nl=getelementptr inbounds i8,i8*%nk,i64 16
%nm=bitcast i8*%nl to i8**
%nn=load i8*,i8**%nm,align 8
%no=call fastcc i8*%nf(i8*inreg%nh,i8*inreg%nn)
store i8*%no,i8**%f,align 8
%np=call i8*@sml_alloc(i32 inreg 28)#0
%nq=getelementptr inbounds i8,i8*%np,i64 -4
%nr=bitcast i8*%nq to i32*
store i32 1342177304,i32*%nr,align 4
store i8*%np,i8**%e,align 8
%ns=getelementptr inbounds i8,i8*%np,i64 4
%nt=bitcast i8*%ns to i32*
store i32 0,i32*%nt,align 1
%nu=bitcast i8*%np to i32*
store i32%mX,i32*%nu,align 4
%nv=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%nw=getelementptr inbounds i8,i8*%np,i64 8
%nx=bitcast i8*%nw to i8**
store i8*%nv,i8**%nx,align 8
%ny=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%nz=getelementptr inbounds i8,i8*%np,i64 16
%nA=bitcast i8*%nz to i8**
store i8*%ny,i8**%nA,align 8
%nB=getelementptr inbounds i8,i8*%np,i64 24
%nC=bitcast i8*%nB to i32*
store i32 6,i32*%nC,align 4
%nD=call i8*@sml_alloc(i32 inreg 20)#0
%nE=getelementptr inbounds i8,i8*%nD,i64 -4
%nF=bitcast i8*%nE to i32*
store i32 1342177296,i32*%nF,align 4
%nG=load i8*,i8**%e,align 8
%nH=bitcast i8*%nD to i8**
store i8*%nG,i8**%nH,align 8
%nI=load i8*,i8**%g,align 8
%nJ=getelementptr inbounds i8,i8*%nD,i64 8
%nK=bitcast i8*%nJ to i8**
store i8*%nI,i8**%nK,align 8
%nL=getelementptr inbounds i8,i8*%nD,i64 16
%nM=bitcast i8*%nL to i32*
store i32 3,i32*%nM,align 4
%nN=call fastcc i8*@_SMLFN12TypedCalcCon5TPEXDE(i8*inreg%nD)
ret i8*%nN
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15analyzeRecbindsE_1172(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%b,i8**%g,align 8
store i8*%c,i8**%f,align 8
store i8*%d,i8**%e,align 8
store i8*%a,i8**%j,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%o,label%n
n:
call void@sml_check(i32 inreg%l)
br label%o
o:
%p=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%i,align 8
%v=load i8*,i8**%j,align 8
%w=getelementptr inbounds i8,i8*%v,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%h,align 8
%z=call i8*@sml_alloc(i32 inreg 28)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177304,i32*%B,align 4
store i8*%z,i8**%k,align 8
%C=load i8*,i8**%f,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%g,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%z,i64 24
%L=bitcast i8*%K to i32*
store i32 7,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
%P=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL8recbinds_1257 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL8recbinds_1257 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 24
%W=bitcast i8*%V to i32*
store i32 -2147483647,i32*%W,align 4
%X=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Y=call fastcc i8*%s(i8*inreg%X,i8*inreg%M)
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
%ae=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%af=call fastcc i8*%ab(i8*inreg%ad,i8*inreg%ae)
store i8*%af,i8**%e,align 8
%ag=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ah=getelementptr inbounds i8,i8*%ag,i64 16
%ai=bitcast i8*%ah to i8*(i8*,i8*)**
%aj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ai,align 8
%ak=bitcast i8*%ag to i8**
%al=load i8*,i8**%ak,align 8
%am=call fastcc i8*%aj(i8*inreg%al,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b7,i64 0,i32 2)to i8*))
%an=getelementptr inbounds i8,i8*%am,i64 16
%ao=bitcast i8*%an to i8*(i8*,i8*)**
%ap=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ao,align 8
%aq=bitcast i8*%am to i8**
%ar=load i8*,i8**%aq,align 8
%as=load i8*,i8**%e,align 8
%at=call fastcc i8*%ap(i8*inreg%ar,i8*inreg%as)
%au=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%at)
store i8*%au,i8**%h,align 8
%av=bitcast i8**%f to i8***
%aw=load i8**,i8***%av,align 8
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%i,align 8
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
%aB=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aE=getelementptr inbounds i8,i8*%ay,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ay,i64 16
%aH=bitcast i8*%aG to i32*
store i32 3,i32*%aH,align 4
%aI=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%ay)
store i8*%aI,i8**%h,align 8
%aJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aK=getelementptr inbounds i8,i8*%aJ,i64 8
%aL=bitcast i8*%aK to i8**
%aM=load i8*,i8**%aL,align 8
store i8*%aM,i8**%i,align 8
%aN=call i8*@sml_alloc(i32 inreg 20)#0
%aO=getelementptr inbounds i8,i8*%aN,i64 -4
%aP=bitcast i8*%aO to i32*
store i32 1342177296,i32*%aP,align 4
store i8*%aN,i8**%f,align 8
%aQ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aR=bitcast i8*%aN to i8**
store i8*%aQ,i8**%aR,align 8
%aS=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aT=getelementptr inbounds i8,i8*%aN,i64 8
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aN,i64 16
%aW=bitcast i8*%aV to i32*
store i32 3,i32*%aW,align 4
%aX=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aY=getelementptr inbounds i8,i8*%aX,i64 16
%aZ=bitcast i8*%aY to i8*(i8*,i8*)**
%a0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aZ,align 8
%a1=bitcast i8*%aX to i8**
%a2=load i8*,i8**%a1,align 8
store i8*%a2,i8**%h,align 8
%a3=call i8*@sml_alloc(i32 inreg 28)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177304,i32*%a5,align 4
store i8*%a3,i8**%i,align 8
%a6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a9=getelementptr inbounds i8,i8*%a3,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 16
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a3,i64 24
%bf=bitcast i8*%be to i32*
store i32 7,i32*%bf,align 4
%bg=call i8*@sml_alloc(i32 inreg 28)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177304,i32*%bi,align 4
%bj=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bk=bitcast i8*%bg to i8**
store i8*%bj,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%bg,i64 8
%bm=bitcast i8*%bl to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15analyzeRecbindsE_1260 to void(...)*),void(...)**%bm,align 8
%bn=getelementptr inbounds i8,i8*%bg,i64 16
%bo=bitcast i8*%bn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15analyzeRecbindsE_1260 to void(...)*),void(...)**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bg,i64 24
%bq=bitcast i8*%bp to i32*
store i32 -2147483647,i32*%bq,align 4
%br=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bs=call fastcc i8*%a0(i8*inreg%br,i8*inreg%bg)
%bt=getelementptr inbounds i8,i8*%bs,i64 16
%bu=bitcast i8*%bt to i8*(i8*,i8*)**
%bv=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bu,align 8
%bw=bitcast i8*%bs to i8**
%bx=load i8*,i8**%bw,align 8
%by=load i8*,i8**%e,align 8
%bz=call fastcc i8*%bv(i8*inreg%bx,i8*inreg%by)
ret i8*%bz
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18analyzeFunRecbindsE_1173(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%b,i8**%g,align 8
store i8*%c,i8**%f,align 8
store i8*%d,i8**%e,align 8
store i8*%a,i8**%j,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%o,label%n
n:
call void@sml_check(i32 inreg%l)
br label%o
o:
%p=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%i,align 8
%v=load i8*,i8**%j,align 8
%w=getelementptr inbounds i8,i8*%v,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%h,align 8
%z=call i8*@sml_alloc(i32 inreg 28)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177304,i32*%B,align 4
store i8*%z,i8**%k,align 8
%C=load i8*,i8**%f,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%g,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%z,i64 24
%L=bitcast i8*%K to i32*
store i32 7,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
%P=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL8recbinds_1261 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL8recbinds_1261 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 24
%W=bitcast i8*%V to i32*
store i32 -2147483647,i32*%W,align 4
%X=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Y=call fastcc i8*%s(i8*inreg%X,i8*inreg%M)
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
%ae=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%af=call fastcc i8*%ab(i8*inreg%ad,i8*inreg%ae)
store i8*%af,i8**%e,align 8
%ag=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ah=getelementptr inbounds i8,i8*%ag,i64 16
%ai=bitcast i8*%ah to i8*(i8*,i8*)**
%aj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ai,align 8
%ak=bitcast i8*%ag to i8**
%al=load i8*,i8**%ak,align 8
%am=call fastcc i8*%aj(i8*inreg%al,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b8,i64 0,i32 2)to i8*))
%an=getelementptr inbounds i8,i8*%am,i64 16
%ao=bitcast i8*%an to i8*(i8*,i8*)**
%ap=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ao,align 8
%aq=bitcast i8*%am to i8**
%ar=load i8*,i8**%aq,align 8
%as=load i8*,i8**%e,align 8
%at=call fastcc i8*%ap(i8*inreg%ar,i8*inreg%as)
%au=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%at)
store i8*%au,i8**%h,align 8
%av=bitcast i8**%f to i8***
%aw=load i8**,i8***%av,align 8
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%i,align 8
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
%aB=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aE=getelementptr inbounds i8,i8*%ay,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ay,i64 16
%aH=bitcast i8*%aG to i32*
store i32 3,i32*%aH,align 4
%aI=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%ay)
store i8*%aI,i8**%h,align 8
%aJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aK=getelementptr inbounds i8,i8*%aJ,i64 8
%aL=bitcast i8*%aK to i8**
%aM=load i8*,i8**%aL,align 8
store i8*%aM,i8**%i,align 8
%aN=call i8*@sml_alloc(i32 inreg 20)#0
%aO=getelementptr inbounds i8,i8*%aN,i64 -4
%aP=bitcast i8*%aO to i32*
store i32 1342177296,i32*%aP,align 4
store i8*%aN,i8**%f,align 8
%aQ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aR=bitcast i8*%aN to i8**
store i8*%aQ,i8**%aR,align 8
%aS=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aT=getelementptr inbounds i8,i8*%aN,i64 8
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aN,i64 16
%aW=bitcast i8*%aV to i32*
store i32 3,i32*%aW,align 4
%aX=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aY=getelementptr inbounds i8,i8*%aX,i64 16
%aZ=bitcast i8*%aY to i8*(i8*,i8*)**
%a0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aZ,align 8
%a1=bitcast i8*%aX to i8**
%a2=load i8*,i8**%a1,align 8
store i8*%a2,i8**%h,align 8
%a3=call i8*@sml_alloc(i32 inreg 28)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177304,i32*%a5,align 4
store i8*%a3,i8**%i,align 8
%a6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a9=getelementptr inbounds i8,i8*%a3,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 16
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a3,i64 24
%bf=bitcast i8*%be to i32*
store i32 7,i32*%bf,align 4
%bg=call i8*@sml_alloc(i32 inreg 28)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177304,i32*%bi,align 4
%bj=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bk=bitcast i8*%bg to i8**
store i8*%bj,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%bg,i64 8
%bm=bitcast i8*%bl to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18analyzeFunRecbindsE_1264 to void(...)*),void(...)**%bm,align 8
%bn=getelementptr inbounds i8,i8*%bg,i64 16
%bo=bitcast i8*%bn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18analyzeFunRecbindsE_1264 to void(...)*),void(...)**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bg,i64 24
%bq=bitcast i8*%bp to i32*
store i32 -2147483647,i32*%bq,align 4
%br=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bs=call fastcc i8*%a0(i8*inreg%br,i8*inreg%bg)
%bt=getelementptr inbounds i8,i8*%bs,i64 16
%bu=bitcast i8*%bt to i8*(i8*,i8*)**
%bv=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bu,align 8
%bw=bitcast i8*%bs to i8**
%bx=load i8*,i8**%bw,align 8
%by=load i8*,i8**%e,align 8
%bz=call fastcc i8*%bv(i8*inreg%bx,i8*inreg%by)
ret i8*%bz
}
define internal fastcc i8*@_SMLL5graph_1271(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 8)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 805306376,i32*%i,align 4
store i8*%g,i8**%f,align 8
%j=bitcast i8*%g to i64*
store i64 0,i64*%j,align 1
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%e,align 8
%n=call i8*@sml_alloc(i32 inreg 20)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=bitcast i8*%n to i64*
store i64 0,i64*%q,align 4
%r=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to i8**
store i8*%r,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to i32*
store i32 2,i32*%v,align 4
%w=load i8*,i8**%f,align 8
%x=bitcast i8*%w to i8**
call void@sml_write(i8*inreg%w,i8**inreg%x,i8*inreg%n)#0
%y=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i32*
%B=load i32,i32*%A,align 4
%C=load i8*,i8**%c,align 8
%D=sext i32%B to i64
%E=getelementptr inbounds i8,i8*%C,i64%D
%F=bitcast i8*%E to i32*
%G=load i32,i32*%F,align 4
%H=call i8*@sml_alloc(i32 inreg 28)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177304,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%H,i64 12
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
%M=load i8*,i8**%f,align 8
%N=bitcast i8*%H to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%H,i64 8
%P=bitcast i8*%O to i32*
store i32%G,i32*%P,align 4
%Q=load i8*,i8**%c,align 8
%R=getelementptr inbounds i8,i8*%H,i64 16
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%H,i64 24
%U=bitcast i8*%T to i32*
store i32 5,i32*%U,align 4
ret i8*%H
}
define internal fastcc i8*@_SMLL3get_1276(i8*inreg%a)#5 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 60)#0
%c=getelementptr inbounds i8,i8*%b,i64 -4
%d=bitcast i8*%c to i32*
store i32 1342177336,i32*%d,align 4
%e=getelementptr inbounds i8,i8*%b,i64 56
%f=bitcast i8*%e to i32*
store i32 1,i32*%f,align 4
%g=bitcast i8*%b to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ce,i64 0,i32 2)to i8*),i8**%g,align 8
tail call void@sml_raise(i8*inreg%b)#1
unreachable
}
define internal fastcc i8*@_SMLL3new_1279(i8*inreg%a,i32 inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%c,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%f,label%h
f:
%g=bitcast i8*%a to i8**
br label%k
h:
call void@sml_check(i32 inreg%d)
%i=bitcast i8**%c to i8***
%j=load i8**,i8***%i,align 8
br label%k
k:
%l=phi i8**[%j,%h],[%g,%f]
%m=load i8*,i8**%l,align 8
%n=tail call fastcc i8*@_SMLL7getById_1273(i8*inreg%m,i32 inreg%b)
ret i8*%n
}
define internal fastcc i8*@_SMLL3get_1272(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i32*
%p=load i32,i32*%o,align 4
%q=getelementptr inbounds i8,i8*%m,i64 8
%r=bitcast i8*%q to i8***
%s=load i8**,i8***%r,align 8
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
switch i32%x,label%y[
i32 1,label%bf
i32 0,label%Q
]
y:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%z=load i8*,i8**@_SMLZ5Match,align 8
store i8*%z,i8**%c,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
store i8*%A,i8**%d,align 8
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@ch,i64 0,i32 2,i64 0),i8**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 60)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177336,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%J,i64 56
%N=bitcast i8*%M to i32*
store i32 1,i32*%N,align 4
%O=load i8*,i8**%d,align 8
%P=bitcast i8*%J to i8**
store i8*%O,i8**%P,align 8
call void@sml_raise(i8*inreg%J)#1
unreachable
Q:
%R=getelementptr inbounds i8,i8*%v,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
%U=getelementptr inbounds i8*,i8**%s,i64 1
%V=bitcast i8**%U to i32*
%W=load i32,i32*%V,align 4
%X=getelementptr inbounds i8*,i8**%s,i64 2
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%c,align 8
%Z=icmp eq i32%p,%W
br i1%Z,label%aa,label%aY
aa:
call void@sml_write(i8*inreg%t,i8**inreg%u,i8*inreg bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@cg,i64 0,i32 2)to i8*))#0
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i8*(i8*,i8*)**
%ad=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ac,align 8
%ae=bitcast i8*%T to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%f,align 8
%ag=call i8*@sml_alloc(i32 inreg 12)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177288,i32*%ai,align 4
store i8*%ag,i8**%g,align 8
%aj=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 8
%am=bitcast i8*%al to i32*
store i32 1,i32*%am,align 4
%an=call i8*@sml_alloc(i32 inreg 28)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177304,i32*%ap,align 4
store i8*%an,i8**%e,align 8
%aq=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%an,i64 8
%at=bitcast i8*%as to void(...)**
store void(...)*bitcast(i8*(i8*,i32)*@_SMLL3new_1279 to void(...)*),void(...)**%at,align 8
%au=getelementptr inbounds i8,i8*%an,i64 16
%av=bitcast i8*%au to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3new_1783 to void(...)*),void(...)**%av,align 8
%aw=getelementptr inbounds i8,i8*%an,i64 24
%ax=bitcast i8*%aw to i32*
store i32 -2147483647,i32*%ax,align 4
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
%aB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aE=getelementptr inbounds i8,i8*%ay,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ay,i64 16
%aH=bitcast i8*%aG to i32*
store i32 3,i32*%aH,align 4
%aI=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aJ=call fastcc i8*%ad(i8*inreg%aI,i8*inreg%ay)
store i8*%aJ,i8**%c,align 8
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 1,i32*%aL,align 4
%aQ=load i8*,i8**%c,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
%aV=load i8*,i8**%d,align 8
%aW=bitcast i8*%aV to i8**
call void@sml_write(i8*inreg%aV,i8**inreg%aW,i8*inreg%aK)#0
%aX=load i8*,i8**%c,align 8
ret i8*%aX
aY:
store i8*null,i8**%c,align 8
%aZ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a0=call fastcc i8*@_SMLL7getById_1273(i8*inreg%aZ,i32 inreg%W)
store i8*%a0,i8**%c,align 8
%a1=call i8*@sml_alloc(i32 inreg 20)#0
%a2=bitcast i8*%a1 to i32*
%a3=getelementptr inbounds i8,i8*%a1,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177296,i32*%a4,align 4
%a5=getelementptr inbounds i8,i8*%a1,i64 4
%a6=bitcast i8*%a5 to i32*
store i32 0,i32*%a6,align 1
store i32 1,i32*%a2,align 4
%a7=load i8*,i8**%c,align 8
%a8=getelementptr inbounds i8,i8*%a1,i64 8
%a9=bitcast i8*%a8 to i8**
store i8*%a7,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a1,i64 16
%bb=bitcast i8*%ba to i32*
store i32 2,i32*%bb,align 4
%bc=load i8*,i8**%d,align 8
%bd=bitcast i8*%bc to i8**
call void@sml_write(i8*inreg%bc,i8**inreg%bd,i8*inreg%a1)#0
%be=load i8*,i8**%c,align 8
ret i8*%be
bf:
%bg=getelementptr inbounds i8,i8*%v,i64 8
%bh=bitcast i8*%bg to i8**
%bi=load i8*,i8**%bh,align 8
ret i8*%bi
}
define internal fastcc i8*@_SMLL7getById_1273(i8*inreg%a,i32 inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%c,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177296,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%o,i64 12
%s=bitcast i8*%r to i32*
store i32 0,i32*%s,align 1
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=bitcast i8*%o to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i32*
store i32%b,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 1,i32*%y,align 4
%z=call fastcc i8*@_SMLLN17PolyTyElimination6MetaID3Map4findE_701(i8*inreg%o)
%A=icmp eq i8*%z,null
br i1%A,label%B,label%I
B:
store i8*null,i8**%d,align 8
%C=call i8*@sml_alloc(i32 inreg 60)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177336,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 56
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=bitcast i8*%C to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cj,i64 0,i32 2)to i8*),i8**%H,align 8
call void@sml_raise(i8*inreg%C)#1
unreachable
I:
%J=bitcast i8*%z to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%c,align 8
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=bitcast i8*%L to i32*
%N=getelementptr inbounds i8,i8*%L,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177296,i32*%O,align 4
%P=getelementptr inbounds i8,i8*%L,i64 4
%Q=bitcast i8*%P to i32*
store i32 0,i32*%Q,align 1
store i32%b,i32*%M,align 4
%R=load i8*,i8**%c,align 8
%S=getelementptr inbounds i8,i8*%L,i64 8
%T=bitcast i8*%S to i8**
store i8*%R,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 16
%V=bitcast i8*%U to i32*
store i32 2,i32*%V,align 4
%W=load i8*,i8**%d,align 8
%X=tail call fastcc i8*@_SMLL3get_1272(i8*inreg%W,i8*inreg%L)
ret i8*%X
}
define internal fastcc i8*@_SMLLN17PolyTyElimination8traverseE_1283(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLL3get_1272(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination8traverseE_1284(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%f,align 8
store i8*null,i8**%d,align 8
%q=getelementptr inbounds i8*,i8**%o,i64 1
%r=bitcast i8**%q to i32*
%s=load i32,i32*%r,align 4
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%d,align 8
%w=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i32*
store i32%s,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177304,i32*%E,align 4
%F=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5graph_1271 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5graph_1271 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 24
%M=bitcast i8*%L to i32*
store i32 -2147483647,i32*%M,align 4
%N=call fastcc i8*@_SMLLN17PolyTyElimination6MetaID3Map3mapE_709(i8*inreg%C)
%O=getelementptr inbounds i8,i8*%N,i64 16
%P=bitcast i8*%O to i8*(i8*,i8*)**
%Q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%P,align 8
%R=bitcast i8*%N to i8**
%S=load i8*,i8**%R,align 8
%T=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%U=call fastcc i8*%Q(i8*inreg%S,i8*inreg%T)
store i8*%U,i8**%d,align 8
%V=call i8*@sml_alloc(i32 inreg 12)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177288,i32*%X,align 4
store i8*%V,i8**%e,align 8
%Y=load i8*,i8**%d,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i32*
store i32 1,i32*%ab,align 4
%ac=call i8*@sml_alloc(i32 inreg 28)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177304,i32*%ae,align 4
%af=load i8*,i8**%e,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%ac,i64 8
%ai=bitcast i8*%ah to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3get_1272 to void(...)*),void(...)**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ac,i64 16
%ak=bitcast i8*%aj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3get_1272 to void(...)*),void(...)**%ak,align 8
%al=getelementptr inbounds i8,i8*%ac,i64 24
%am=bitcast i8*%al to i32*
store i32 -2147483647,i32*%am,align 4
%an=call i8*@sml_alloc(i32 inreg 28)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177304,i32*%ap,align 4
%aq=load i8*,i8**%e,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%an,i64 8
%at=bitcast i8*%as to void(...)**
store void(...)*bitcast(i8*(i8*,i32)*@_SMLL7getById_1273 to void(...)*),void(...)**%at,align 8
%au=getelementptr inbounds i8,i8*%an,i64 16
%av=bitcast i8*%au to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7getById_1784 to void(...)*),void(...)**%av,align 8
%aw=getelementptr inbounds i8,i8*%an,i64 24
%ax=bitcast i8*%aw to i32*
store i32 -2147483647,i32*%ax,align 4
%ay=call i8*@sml_alloc(i32 inreg 12)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177288,i32*%aA,align 4
store i8*%ay,i8**%f,align 8
%aB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%ay,i64 8
%aE=bitcast i8*%aD to i32*
store i32 1,i32*%aE,align 4
%aF=call i8*@sml_alloc(i32 inreg 28)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177304,i32*%aH,align 4
%aI=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aJ=bitcast i8*%aF to i8**
store i8*%aI,i8**%aJ,align 8
%aK=getelementptr inbounds i8,i8*%aF,i64 8
%aL=bitcast i8*%aK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8traverseE_1283 to void(...)*),void(...)**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aF,i64 16
%aN=bitcast i8*%aM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8traverseE_1283 to void(...)*),void(...)**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aF,i64 24
%aP=bitcast i8*%aO to i32*
store i32 -2147483647,i32*%aP,align 4
%aQ=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aQ)
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%aF,i8**%c,align 8
%aR=load atomic i32,i32*@sml_check_flag unordered,align 4
%aS=icmp eq i32%aR,0
br i1%aS,label%aU,label%aT
aT:
call void@sml_check(i32 inreg%aR)
br label%aU
aU:
%aV=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4mapiE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aW=getelementptr inbounds i8,i8*%aV,i64 16
%aX=bitcast i8*%aW to i8*(i8*,i8*)**
%aY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aX,align 8
%aZ=bitcast i8*%aV to i8**
%a0=load i8*,i8**%aZ,align 8
%a1=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a2=call fastcc i8*%aY(i8*inreg%a0,i8*inreg%a1)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aQ)
%a3=getelementptr inbounds i8,i8*%a2,i64 16
%a4=bitcast i8*%a3 to i8*(i8*,i8*)**
%a5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a4,align 8
%a6=bitcast i8*%a2 to i8**
%a7=load i8*,i8**%a6,align 8
%a8=load i8*,i8**%d,align 8
%a9=tail call fastcc i8*%a5(i8*inreg%a7,i8*inreg%a8)
ret i8*%a9
}
define internal fastcc i8*@_SMLLN17PolyTyElimination8traverseE_1285(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i32*
store i32%f,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 1,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
%s=load i8*,i8**%d,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8traverseE_1284 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8traverseE_1284 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 24
%z=bitcast i8*%y to i32*
store i32 -2147483647,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLN17PolyTyElimination8traverseE_1286(i32 inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=call i8*@sml_alloc(i32 inreg 12)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%c,i8**%b,align 8
store i32%a,i32*%d,align 4
%g=getelementptr inbounds i8,i8*%c,i64 8
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 4
%i=call i8*@sml_alloc(i32 inreg 28)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177304,i32*%k,align 4
%l=load i8*,i8**%b,align 8
%m=bitcast i8*%i to i8**
store i8*%l,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%i,i64 8
%o=bitcast i8*%n to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8traverseE_1285 to void(...)*),void(...)**%o,align 8
%p=getelementptr inbounds i8,i8*%i,i64 16
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8traverseE_1285 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%i,i64 24
%s=bitcast i8*%r to i32*
store i32 -2147483647,i32*%s,align 4
ret i8*%i
}
define internal fastcc i32@_SMLLN17PolyTyElimination5checkE_1290(i8*inreg%a,i32 inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%c,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%f,label%h
f:
%g=bitcast i8*%a to i8**
br label%k
h:
call void@sml_check(i32 inreg%d)
%i=bitcast i8**%c to i8***
%j=load i8**,i8***%i,align 8
br label%k
k:
%l=phi i8**[%j,%h],[%g,%f]
%m=load i8*,i8**%l,align 8
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 4)#0
%t=bitcast i8*%s to i32*
%u=getelementptr inbounds i8,i8*%s,i64 -4
%v=bitcast i8*%u to i32*
store i32 4,i32*%v,align 4
store i32%b,i32*%t,align 4
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=call fastcc i8*%p(i8*inreg%w,i8*inreg%s)
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i32*
%A=load i32,i32*%z,align 4
ret i32%A
}
define internal fastcc i8*@_SMLLN17PolyTyElimination5checkE_1292(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"personality i32(...)*@sml_personality{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=bitcast i8*%l to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
%u=getelementptr inbounds i8,i8*%r,i64 8
%v=bitcast i8*%u to i8***
%w=load i8**,i8***%v,align 8
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%d,align 8
%y=call i8*@sml_alloc(i32 inreg 12)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177288,i32*%A,align 4
store i8*%y,i8**%f,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 28)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
%I=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i32(i8*,i32)*@_SMLLN17PolyTyElimination5checkE_1290 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%F,i64 16
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination5checkE_1787 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 24
%P=bitcast i8*%O to i32*
store i32 -2147483647,i32*%P,align 4
%Q=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Set3mapE(i8*inreg%F)
to label%R unwind label%av
R:
%S=getelementptr inbounds i8,i8*%Q,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%Q to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%c,align 8
%X=load i8*,i8**%e,align 8
%Y=getelementptr inbounds i8,i8*%X,i64 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
%ab=load i8*,i8**%d,align 8
%ac=invoke fastcc i8*@_SMLLN17PolyTyElimination15getIdsInstancesE_1113(i8*inreg%aa,i8*inreg%ab)
to label%ad unwind label%av
ad:
%ae=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%af=invoke fastcc i8*%U(i8*inreg%ae,i8*inreg%ac)
to label%ag unwind label%av
ag:
store i8*%af,i8**%c,align 8
store i8*null,i8**%e,align 8
%ah=call i8*@sml_alloc(i32 inreg 28)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177304,i32*%aj,align 4
%ak=getelementptr inbounds i8,i8*%ah,i64 12
%al=bitcast i8*%ak to i32*
store i32 0,i32*%al,align 1
%am=load i8*,i8**%c,align 8
%an=bitcast i8*%ah to i8**
store i8*%am,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ah,i64 8
%ap=bitcast i8*%ao to i32*
store i32%t,i32*%ap,align 4
%aq=load i8*,i8**%d,align 8
%ar=getelementptr inbounds i8,i8*%ah,i64 16
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%ah,i64 24
%au=bitcast i8*%at to i32*
store i32 5,i32*%au,align 4
ret i8*%ah
av:
%aw=landingpad{i8*,i8*}
catch i8*null
%ax=extractvalue{i8*,i8*}%aw,1
%ay=bitcast i8*%ax to i8**
%az=load i8*,i8**%ay,align 8
store i8*null,i8**%d,align 8
store i8*%az,i8**%c,align 8
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
%aC=icmp eq i8*%aB,bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL1267,i64 0,i32 2)to i8*)
br i1%aC,label%aD,label%aU
aD:
%aE=bitcast i8**%e to i8***
%aF=load i8**,i8***%aE,align 8
store i8*null,i8**%e,align 8
%aG=load i8*,i8**%aF,align 8
store i8*%aG,i8**%c,align 8
%aH=call i8*@sml_alloc(i32 inreg 28)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177304,i32*%aJ,align 4
%aK=getelementptr inbounds i8,i8*%aH,i64 12
%aL=bitcast i8*%aK to i32*
store i32 0,i32*%aL,align 1
%aM=load i8*,i8**%c,align 8
%aN=bitcast i8*%aH to i8**
store i8*%aM,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aH,i64 8
%aP=bitcast i8*%aO to i32*
store i32%t,i32*%aP,align 4
%aQ=getelementptr inbounds i8,i8*%aH,i64 16
%aR=bitcast i8*%aQ to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ck,i64 0,i32 2)to i8*),i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aH,i64 24
%aT=bitcast i8*%aS to i32*
store i32 5,i32*%aT,align 4
ret i8*%aH
aU:
store i8*null,i8**%e,align 8
%aV=call i8*@sml_alloc(i32 inreg 60)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177336,i32*%aX,align 4
%aY=getelementptr inbounds i8,i8*%aV,i64 56
%aZ=bitcast i8*%aY to i32*
store i32 1,i32*%aZ,align 4
%a0=load i8*,i8**%c,align 8
%a1=bitcast i8*%aV to i8**
store i8*%a0,i8**%a1,align 8
call void@sml_raise(i8*inreg%aV)#1
unreachable
}
define internal fastcc i8*@_SMLLN17PolyTyElimination5checkE_1293(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLLN17PolyTyElimination8traverseE_1286(i32 inreg 0)
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%f,align 8
%r=bitcast i8**%c to i8***
%s=load i8**,i8***%r,align 8
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%e,align 8
%u=getelementptr inbounds i8*,i8**%s,i64 1
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%g,align 8
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
%J=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination5checkE_1292 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination5checkE_1292 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 24
%Q=bitcast i8*%P to i32*
store i32 -2147483647,i32*%Q,align 4
%R=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%S=call fastcc i8*%o(i8*inreg%R,i8*inreg%G)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%c,align 8
%Y=call fastcc i8*@_SMLLN17PolyTyElimination6MetaID3Map3mapE_709(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c,i64 0,i32 2)to i8*))
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
%ae=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%af=call fastcc i8*%ab(i8*inreg%ad,i8*inreg%ae)
%ag=load i8*,i8**%c,align 8
%ah=tail call fastcc i8*%V(i8*inreg%ag,i8*inreg%af)
ret i8*%ah
}
define internal fastcc i32@_SMLLN17PolyTyElimination6instOfE_1294(i8*inreg%a,i32 inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg 1,i32 inreg 8)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%d,align 8
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%r,i64 12
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 1
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=bitcast i8*%r to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i32*
store i32%b,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D=call fastcc i8*%l(i8*inreg%C,i8*inreg%r)
%E=icmp eq i8*%D,null
br i1%E,label%P,label%F
F:
%G=bitcast i8*%D to i8**
%H=load i8*,i8**%G,align 8
%I=icmp eq i8*%H,null
br i1%I,label%N,label%J
J:
%K=bitcast i8*%H to i32*
%L=load i32,i32*%K,align 4
%M=icmp eq i32%L,0
br i1%M,label%N,label%P
N:
%O=phi i32[1,%J],[0,%P],[1,%F]
ret i32%O
P:
br label%N
}
define internal fastcc i8*@_SMLLN17PolyTyElimination6instOfE_1299(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%l
i:
%j=bitcast i8*%a to i8**
%k=bitcast i8**%d to i8***
br label%o
l:
call void@sml_check(i32 inreg%g)
%m=bitcast i8**%d to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8***[%k,%i],[%m,%l]
%q=phi i8**[%j,%i],[%n,%l]
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=call i8*@sml_alloc(i32 inreg 12)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177288,i32*%u,align 4
store i8*%s,i8**%f,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i32*
store i32 1,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 28)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177304,i32*%B,align 4
%C=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i32(i8*,i32)*@_SMLLN17PolyTyElimination6instOfE_1294 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination6instOfE_1788 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 24
%J=bitcast i8*%I to i32*
store i32 -2147483647,i32*%J,align 4
%K=call fastcc i8*@_SMLFN14BoundTypeVarID3Set6existsE(i8*inreg%z)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%e,align 8
%Q=load i8*,i8**%c,align 8
%R=call fastcc i8*@_SMLFN11TypesBasics5EFBTVE(i8*inreg%Q)
%S=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%T=call fastcc i8*%N(i8*inreg%S,i8*inreg%R)
%U=bitcast i8*%T to i32*
%V=load i32,i32*%U,align 4
%W=icmp eq i32%V,0
br i1%W,label%Y,label%X
X:
ret i8*null
Y:
%Z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aa=call fastcc i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg%Z)
%ab=icmp eq i8*%aa,null
br i1%ab,label%ag,label%ac
ac:
%ad=bitcast i8*%aa to i32*
%ae=load i32,i32*%ad,align 4
%af=icmp eq i32%ae,1
br i1%af,label%at,label%ag
ag:
store i8*null,i8**%d,align 8
%ah=call fastcc i8*@_SMLFN16DynamicKindUtils8kindOfTyE(i8*inreg%aa)
store i8*%ah,i8**%c,align 8
%ai=call i8*@sml_alloc(i32 inreg 20)#0
%aj=bitcast i8*%ai to i32*
%ak=getelementptr inbounds i8,i8*%ai,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177296,i32*%al,align 4
%am=getelementptr inbounds i8,i8*%ai,i64 4
%an=bitcast i8*%am to i32*
store i32 0,i32*%an,align 1
store i32 2,i32*%aj,align 4
%ao=load i8*,i8**%c,align 8
%ap=getelementptr inbounds i8,i8*%ai,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%ai,i64 16
%as=bitcast i8*%ar to i32*
store i32 2,i32*%as,align 4
ret i8*%ai
at:
%au=getelementptr inbounds i8,i8*%aa,i64 4
%av=bitcast i8*%au to i32*
%aw=load i32,i32*%av,align 4
%ax=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg 1,i32 inreg 8)
%ay=getelementptr inbounds i8,i8*%ax,i64 16
%az=bitcast i8*%ay to i8*(i8*,i8*)**
%aA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%az,align 8
%aB=bitcast i8*%ax to i8**
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%e,align 8
%aD=load i8**,i8***%p,align 8
store i8*null,i8**%d,align 8
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%c,align 8
%aF=call i8*@sml_alloc(i32 inreg 20)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177296,i32*%aH,align 4
%aI=getelementptr inbounds i8,i8*%aF,i64 12
%aJ=bitcast i8*%aI to i32*
store i32 0,i32*%aJ,align 1
%aK=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aL=bitcast i8*%aF to i8**
store i8*%aK,i8**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aF,i64 8
%aN=bitcast i8*%aM to i32*
store i32%aw,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aF,i64 16
%aP=bitcast i8*%aO to i32*
store i32 1,i32*%aP,align 4
%aQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aR=call fastcc i8*%aA(i8*inreg%aQ,i8*inreg%aF)
%aS=icmp eq i8*%aR,null
br i1%aS,label%aT,label%bf
aT:
%aU=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%aU,i8**%c,align 8
%aV=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cm,i64 0,i32 2)to i8*))
store i8*%aV,i8**%d,align 8
%aW=call i8*@sml_alloc(i32 inreg 28)#0
%aX=getelementptr inbounds i8,i8*%aW,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177304,i32*%aY,align 4
store i8*%aW,i8**%e,align 8
%aZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a0=bitcast i8*%aW to i8**
store i8*%aZ,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aW,i64 8
%a2=bitcast i8*%a1 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%a2,align 8
%a3=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a4=getelementptr inbounds i8,i8*%aW,i64 16
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=getelementptr inbounds i8,i8*%aW,i64 24
%a7=bitcast i8*%a6 to i32*
store i32 7,i32*%a7,align 4
%a8=call i8*@sml_alloc(i32 inreg 60)#0
%a9=getelementptr inbounds i8,i8*%a8,i64 -4
%ba=bitcast i8*%a9 to i32*
store i32 1342177336,i32*%ba,align 4
%bb=getelementptr inbounds i8,i8*%a8,i64 56
%bc=bitcast i8*%bb to i32*
store i32 1,i32*%bc,align 4
%bd=load i8*,i8**%e,align 8
%be=bitcast i8*%a8 to i8**
store i8*%bd,i8**%be,align 8
call void@sml_raise(i8*inreg%a8)#1
unreachable
bf:
%bg=bitcast i8*%aR to i8**
%bh=load i8*,i8**%bg,align 8
ret i8*%bh
}
define internal fastcc i8*@_SMLLN17PolyTyElimination6instOfE_1300(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination6instOfE_1299 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination6instOfE_1299 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7lubInstE_1302(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
j:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=bitcast i8**%e to i8***
br label%h
h:
%i=phi i8*[%b,%j],[%bs,%br]
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%c,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%i,%h]
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=icmp eq i8*%r,null
br i1%s,label%O,label%t
t:
%u=bitcast i8*%r to i32*
%v=load i32,i32*%u,align 4
switch i32%v,label%w[
i32 1,label%bt
i32 2,label%Q
i32 0,label%O
]
w:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%x=load i8*,i8**@_SMLZ5Match,align 8
store i8*%x,i8**%c,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
store i8*%y,i8**%d,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cn,i64 0,i32 2,i64 0),i8**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 60)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177336,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%H,i64 56
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=load i8*,i8**%d,align 8
%N=bitcast i8*%H to i8**
store i8*%M,i8**%N,align 8
call void@sml_raise(i8*inreg%H)#1
unreachable
O:
%P=getelementptr inbounds i8,i8*%p,i64 8
br label%ds
Q:
%R=getelementptr inbounds i8,i8*%r,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%p,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=icmp eq i8*%W,null
br i1%X,label%ds,label%Y
Y:
%Z=bitcast i8*%W to i32*
%aa=load i32,i32*%Z,align 4
switch i32%aa,label%ab[
i32 1,label%aT
i32 2,label%at
i32 0,label%ds
]
ab:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%ac=load i8*,i8**@_SMLZ5Match,align 8
store i8*%ac,i8**%c,align 8
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
store i8*%ad,i8**%d,align 8
%ag=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cn,i64 0,i32 2,i64 0),i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=call i8*@sml_alloc(i32 inreg 60)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177336,i32*%ao,align 4
%ap=getelementptr inbounds i8,i8*%am,i64 56
%aq=bitcast i8*%ap to i32*
store i32 1,i32*%aq,align 4
%ar=load i8*,i8**%d,align 8
%as=bitcast i8*%am to i8**
store i8*%ar,i8**%as,align 8
call void@sml_raise(i8*inreg%am)#1
unreachable
at:
store i8*null,i8**%e,align 8
%au=getelementptr inbounds i8,i8*%W,i64 8
%av=bitcast i8*%au to i8**
%aw=load i8*,i8**%av,align 8
store i8*%aw,i8**%c,align 8
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
%aA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ax,i64 16
%aG=bitcast i8*%aF to i32*
store i32 3,i32*%aG,align 4
%aH=call fastcc i8*@_SMLFN16DynamicKindUtils7lubKindE(i8*inreg%ax)
store i8*%aH,i8**%c,align 8
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=bitcast i8*%aI to i32*
%aK=getelementptr inbounds i8,i8*%aI,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177296,i32*%aL,align 4
%aM=getelementptr inbounds i8,i8*%aI,i64 4
%aN=bitcast i8*%aM to i32*
store i32 0,i32*%aN,align 1
store i32 2,i32*%aJ,align 4
%aO=load i8*,i8**%c,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aI,i64 16
%aS=bitcast i8*%aR to i32*
store i32 2,i32*%aS,align 4
ret i8*%aI
aT:
%aU=getelementptr inbounds i8,i8*%W,i64 8
%aV=bitcast i8*%aU to i8**
%aW=load i8*,i8**%aV,align 8
store i8*%aW,i8**%c,align 8
%aX=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%aY=call fastcc i8*@_SMLLN17PolyTyElimination6instOfE_1300(i8*inreg%aX)
%aZ=getelementptr inbounds i8,i8*%aY,i64 16
%a0=bitcast i8*%aZ to i8*(i8*,i8*)**
%a1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a0,align 8
%a2=bitcast i8*%aY to i8**
%a3=load i8*,i8**%a2,align 8
%a4=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a5=call fastcc i8*%a1(i8*inreg%a3,i8*inreg%a4)
store i8*%a5,i8**%c,align 8
%a6=call i8*@sml_alloc(i32 inreg 20)#0
%a7=getelementptr inbounds i8,i8*%a6,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32 1342177296,i32*%a8,align 4
store i8*%a6,i8**%f,align 8
%a9=getelementptr inbounds i8,i8*%a6,i64 4
%ba=bitcast i8*%a9 to i32*
store i32 0,i32*%ba,align 1
%bb=bitcast i8*%a6 to i32*
store i32 2,i32*%bb,align 4
%bc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bd=getelementptr inbounds i8,i8*%a6,i64 8
%be=bitcast i8*%bd to i8**
store i8*%bc,i8**%be,align 8
%bf=getelementptr inbounds i8,i8*%a6,i64 16
%bg=bitcast i8*%bf to i32*
store i32 2,i32*%bg,align 4
%bh=call i8*@sml_alloc(i32 inreg 20)#0
%bi=getelementptr inbounds i8,i8*%bh,i64 -4
%bj=bitcast i8*%bi to i32*
store i32 1342177296,i32*%bj,align 4
%bk=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bl=bitcast i8*%bh to i8**
store i8*%bk,i8**%bl,align 8
%bm=load i8*,i8**%c,align 8
%bn=getelementptr inbounds i8,i8*%bh,i64 8
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bh,i64 16
%bq=bitcast i8*%bp to i32*
store i32 3,i32*%bq,align 4
store i8*%bh,i8**%c,align 8
br label%br
br:
%bs=phi i8*[%bh,%aT],[%ck,%bW],[%di,%cZ]
br label%h
bt:
%bu=getelementptr inbounds i8,i8*%r,i64 8
%bv=bitcast i8*%bu to i8**
%bw=load i8*,i8**%bv,align 8
store i8*%bw,i8**%c,align 8
%bx=getelementptr inbounds i8,i8*%p,i64 8
%by=bitcast i8*%bx to i8**
%bz=load i8*,i8**%by,align 8
%bA=icmp eq i8*%bz,null
br i1%bA,label%ds,label%bB
bB:
%bC=bitcast i8*%bz to i32*
%bD=load i32,i32*%bC,align 4
switch i32%bD,label%bE[
i32 1,label%cu
i32 2,label%bW
i32 0,label%ds
]
bE:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%bF=load i8*,i8**@_SMLZ5Match,align 8
store i8*%bF,i8**%c,align 8
%bG=call i8*@sml_alloc(i32 inreg 20)#0
%bH=getelementptr inbounds i8,i8*%bG,i64 -4
%bI=bitcast i8*%bH to i32*
store i32 1342177296,i32*%bI,align 4
store i8*%bG,i8**%d,align 8
%bJ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bK=bitcast i8*%bG to i8**
store i8*%bJ,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bG,i64 8
%bM=bitcast i8*%bL to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cn,i64 0,i32 2,i64 0),i8**%bM,align 8
%bN=getelementptr inbounds i8,i8*%bG,i64 16
%bO=bitcast i8*%bN to i32*
store i32 3,i32*%bO,align 4
%bP=call i8*@sml_alloc(i32 inreg 60)#0
%bQ=getelementptr inbounds i8,i8*%bP,i64 -4
%bR=bitcast i8*%bQ to i32*
store i32 1342177336,i32*%bR,align 4
%bS=getelementptr inbounds i8,i8*%bP,i64 56
%bT=bitcast i8*%bS to i32*
store i32 1,i32*%bT,align 4
%bU=load i8*,i8**%d,align 8
%bV=bitcast i8*%bP to i8**
store i8*%bU,i8**%bV,align 8
call void@sml_raise(i8*inreg%bP)#1
unreachable
bW:
%bX=getelementptr inbounds i8,i8*%bz,i64 8
%bY=bitcast i8*%bX to i8**
%bZ=load i8*,i8**%bY,align 8
store i8*%bZ,i8**%d,align 8
%b0=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%b1=call fastcc i8*@_SMLLN17PolyTyElimination6instOfE_1300(i8*inreg%b0)
%b2=getelementptr inbounds i8,i8*%b1,i64 16
%b3=bitcast i8*%b2 to i8*(i8*,i8*)**
%b4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b3,align 8
%b5=bitcast i8*%b1 to i8**
%b6=load i8*,i8**%b5,align 8
%b7=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b8=call fastcc i8*%b4(i8*inreg%b6,i8*inreg%b7)
store i8*%b8,i8**%c,align 8
%b9=call i8*@sml_alloc(i32 inreg 20)#0
%ca=getelementptr inbounds i8,i8*%b9,i64 -4
%cb=bitcast i8*%ca to i32*
store i32 1342177296,i32*%cb,align 4
store i8*%b9,i8**%f,align 8
%cc=getelementptr inbounds i8,i8*%b9,i64 4
%cd=bitcast i8*%cc to i32*
store i32 0,i32*%cd,align 1
%ce=bitcast i8*%b9 to i32*
store i32 2,i32*%ce,align 4
%cf=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cg=getelementptr inbounds i8,i8*%b9,i64 8
%ch=bitcast i8*%cg to i8**
store i8*%cf,i8**%ch,align 8
%ci=getelementptr inbounds i8,i8*%b9,i64 16
%cj=bitcast i8*%ci to i32*
store i32 2,i32*%cj,align 4
%ck=call i8*@sml_alloc(i32 inreg 20)#0
%cl=getelementptr inbounds i8,i8*%ck,i64 -4
%cm=bitcast i8*%cl to i32*
store i32 1342177296,i32*%cm,align 4
%cn=load i8*,i8**%c,align 8
%co=bitcast i8*%ck to i8**
store i8*%cn,i8**%co,align 8
%cp=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cq=getelementptr inbounds i8,i8*%ck,i64 8
%cr=bitcast i8*%cq to i8**
store i8*%cp,i8**%cr,align 8
%cs=getelementptr inbounds i8,i8*%ck,i64 16
%ct=bitcast i8*%cs to i32*
store i32 3,i32*%ct,align 4
store i8*%ck,i8**%c,align 8
br label%br
cu:
%cv=getelementptr inbounds i8,i8*%bz,i64 8
%cw=bitcast i8*%cv to i8**
%cx=load i8*,i8**%cw,align 8
store i8*%cx,i8**%d,align 8
%cy=load i8**,i8***%g,align 8
%cz=load i8*,i8**%cy,align 8
store i8*%cz,i8**%f,align 8
%cA=call i8*@sml_alloc(i32 inreg 20)#0
%cB=getelementptr inbounds i8,i8*%cA,i64 -4
%cC=bitcast i8*%cB to i32*
store i32 1342177296,i32*%cC,align 4
%cD=load i8*,i8**%c,align 8
%cE=bitcast i8*%cA to i8**
store i8*%cD,i8**%cE,align 8
%cF=load i8*,i8**%d,align 8
%cG=getelementptr inbounds i8,i8*%cA,i64 8
%cH=bitcast i8*%cG to i8**
store i8*%cF,i8**%cH,align 8
%cI=getelementptr inbounds i8,i8*%cA,i64 16
%cJ=bitcast i8*%cI to i32*
store i32 3,i32*%cJ,align 4
%cK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cL=call fastcc i32@_SMLLN17PolyTyElimination7equalTyE_1054(i8*inreg%cK,i8*inreg%cA)
%cM=icmp eq i32%cL,0
br i1%cM,label%cZ,label%cN
cN:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%cO=call i8*@sml_alloc(i32 inreg 20)#0
%cP=bitcast i8*%cO to i32*
%cQ=getelementptr inbounds i8,i8*%cO,i64 -4
%cR=bitcast i8*%cQ to i32*
store i32 1342177296,i32*%cR,align 4
%cS=getelementptr inbounds i8,i8*%cO,i64 4
%cT=bitcast i8*%cS to i32*
store i32 0,i32*%cT,align 1
store i32 1,i32*%cP,align 4
%cU=load i8*,i8**%c,align 8
%cV=getelementptr inbounds i8,i8*%cO,i64 8
%cW=bitcast i8*%cV to i8**
store i8*%cU,i8**%cW,align 8
%cX=getelementptr inbounds i8,i8*%cO,i64 16
%cY=bitcast i8*%cX to i32*
store i32 2,i32*%cY,align 4
ret i8*%cO
cZ:
%c0=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%c1=call fastcc i8*@_SMLLN17PolyTyElimination6instOfE_1300(i8*inreg%c0)
%c2=getelementptr inbounds i8,i8*%c1,i64 16
%c3=bitcast i8*%c2 to i8*(i8*,i8*)**
%c4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c3,align 8
%c5=bitcast i8*%c1 to i8**
%c6=load i8*,i8**%c5,align 8
%c7=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%c8=call fastcc i8*%c4(i8*inreg%c6,i8*inreg%c7)
store i8*%c8,i8**%c,align 8
%c9=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%da=call fastcc i8*@_SMLLN17PolyTyElimination6instOfE_1300(i8*inreg%c9)
%db=getelementptr inbounds i8,i8*%da,i64 16
%dc=bitcast i8*%db to i8*(i8*,i8*)**
%dd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dc,align 8
%de=bitcast i8*%da to i8**
%df=load i8*,i8**%de,align 8
%dg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dh=call fastcc i8*%dd(i8*inreg%df,i8*inreg%dg)
store i8*%dh,i8**%d,align 8
%di=call i8*@sml_alloc(i32 inreg 20)#0
%dj=getelementptr inbounds i8,i8*%di,i64 -4
%dk=bitcast i8*%dj to i32*
store i32 1342177296,i32*%dk,align 4
%dl=load i8*,i8**%c,align 8
%dm=bitcast i8*%di to i8**
store i8*%dl,i8**%dm,align 8
%dn=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%do=getelementptr inbounds i8,i8*%di,i64 8
%dp=bitcast i8*%do to i8**
store i8*%dn,i8**%dp,align 8
%dq=getelementptr inbounds i8,i8*%di,i64 16
%dr=bitcast i8*%dq to i32*
store i32 3,i32*%dr,align 4
store i8*%di,i8**%c,align 8
br label%br
ds:
%dt=phi i8*[%P,%O],[%p,%Y],[%p,%bB],[%p,%Q],[%p,%bt]
%du=bitcast i8*%dt to i8**
%dv=load i8*,i8**%du,align 8
ret i8*%dv
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7lubListE_1306(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
%h=bitcast i8**%f to i8***
br label%i
i:
%j=phi i8*[%V,%B],[%b,%k]
store i8*%j,i8**%c,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%p,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%c,align 8
br label%p
p:
%q=phi i8*[%o,%n],[%j,%i]
%r=icmp eq i8*%q,null
br i1%r,label%s,label%u
s:
%t=phi i8*[null,%p],[%w,%u]
ret i8*%t
u:
%v=bitcast i8*%q to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=getelementptr inbounds i8,i8*%q,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=icmp eq i8*%z,null
br i1%A,label%s,label%B
B:
%C=bitcast i8*%z to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%d,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%e,align 8
%H=load i8**,i8***%h,align 8
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%g,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
%M=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%J,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%U=call fastcc i8*@_SMLLN17PolyTyElimination7lubInstE_1302(i8*inreg%T,i8*inreg%J)
store i8*%U,i8**%c,align 8
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ab=getelementptr inbounds i8,i8*%V,i64 8
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%V,i64 16
%ae=bitcast i8*%ad to i32*
store i32 3,i32*%ae,align 4
br label%i
}
define internal fastcc i8*@_SMLL7instMap_1307(i8*inreg%a,i32 inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%c,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%f,label%h
f:
%g=bitcast i8*%a to i8**
br label%k
h:
call void@sml_check(i32 inreg%d)
%i=bitcast i8**%c to i8***
%j=load i8**,i8***%i,align 8
br label%k
k:
%l=phi i8**[%j,%h],[%g,%f]
%m=load i8*,i8**%l,align 8
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 4)#0
%t=bitcast i8*%s to i32*
%u=getelementptr inbounds i8,i8*%s,i64 -4
%v=bitcast i8*%u to i32*
store i32 4,i32*%v,align 4
store i32%b,i32*%t,align 4
%w=load i8*,i8**%c,align 8
%x=tail call fastcc i8*%p(i8*inreg%w,i8*inreg%s)
ret i8*%x
}
define internal fastcc i8*@_SMLL8btvKinds_1308(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=icmp eq i8*%a,null
br i1%c,label%h,label%d
d:
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=icmp eq i32%f,1
br i1%g,label%p,label%h
h:
%i=call i8*@sml_alloc(i32 inreg 12)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177288,i32*%k,align 4
%l=load i8*,i8**%b,align 8
%m=bitcast i8*%i to i8**
store i8*%l,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%i,i64 8
%o=bitcast i8*%n to i32*
store i32 1,i32*%o,align 4
ret i8*%i
p:
ret i8*null
}
define internal fastcc i8*@_SMLL5subst_1310(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
%e=icmp eq i8*%d,null
br i1%e,label%j,label%f
f:
%g=bitcast i8*%d to i32*
%h=load i32,i32*%g,align 4
%i=icmp eq i32%h,1
br i1%i,label%u,label%j
j:
%k=bitcast i8*%a to i32*
%l=load i32,i32*%k,align 4
%m=tail call i8*@sml_alloc(i32 inreg 12)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177288,i32*%p,align 4
store i32 1,i32*%n,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32%l,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%m,i64 8
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 4
ret i8*%m
u:
%v=getelementptr inbounds i8,i8*%d,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
ret i8*%x
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12evalInstanceE_1313(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%f,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%f,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
store i8*null,i8**%f,align 8
%o=icmp eq i8*%m,null
br i1%o,label%K,label%p
p:
%q=bitcast i8*%m to i32*
%r=load i32,i32*%q,align 4
switch i32%r,label%s[
i32 0,label%b4
i32 1,label%X
i32 2,label%K
]
s:
call void@sml_matchcomp_bug()
%t=load i8*,i8**@_SMLZ5Match,align 8
store i8*%t,i8**%e,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%f,align 8
%x=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cq,i64 0,i32 2,i64 0),i8**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 60)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177336,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%D,i64 56
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=load i8*,i8**%f,align 8
%J=bitcast i8*%D to i8**
store i8*%I,i8**%J,align 8
call void@sml_raise(i8*inreg%D)#1
unreachable
K:
%L=load i8*,i8**@_SMLZN11DynamicKind7topKindE,align 8
store i8*%L,i8**%e,align 8
%M=call i8*@sml_alloc(i32 inreg 20)#0
%N=bitcast i8*%M to i32*
%O=getelementptr inbounds i8,i8*%M,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
%Q=getelementptr inbounds i8,i8*%M,i64 4
%R=bitcast i8*%Q to i32*
store i32 0,i32*%R,align 1
store i32 2,i32*%N,align 4
%S=load i8*,i8**%e,align 8
%T=getelementptr inbounds i8,i8*%M,i64 8
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 16
%W=bitcast i8*%V to i32*
store i32 2,i32*%W,align 4
ret i8*%M
X:
%Y=getelementptr inbounds i8,i8*%m,i64 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
store i8*%aa,i8**%g,align 8
%ab=bitcast i8**%e to i8***
%ac=load i8**,i8***%ab,align 8
%ad=load i8*,i8**%ac,align 8
store i8*%ad,i8**%e,align 8
%ae=call i8*@sml_alloc(i32 inreg 12)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177288,i32*%ag,align 4
store i8*%ae,i8**%f,align 8
%ah=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ae,i64 8
%ak=bitcast i8*%aj to i32*
store i32 1,i32*%ak,align 4
%al=call i8*@sml_alloc(i32 inreg 28)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177304,i32*%an,align 4
%ao=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%al,i64 8
%ar=bitcast i8*%aq to void(...)**
store void(...)*bitcast(i8*(i8*,i32)*@_SMLL7instMap_1307 to void(...)*),void(...)**%ar,align 8
%as=getelementptr inbounds i8,i8*%al,i64 16
%at=bitcast i8*%as to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7instMap_1790 to void(...)*),void(...)**%at,align 8
%au=getelementptr inbounds i8,i8*%al,i64 24
%av=bitcast i8*%au to i32*
store i32 -2147483647,i32*%av,align 4
%aw=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aw)
%ax=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ax)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%al,i8**%c,align 8
%ay=call i8*@sml_alloc(i32 inreg 12)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177288,i32*%aA,align 4
store i8*%ay,i8**%d,align 8
%aB=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%ay,i64 8
%aE=bitcast i8*%aD to i32*
store i32 1,i32*%aE,align 4
%aF=call i8*@sml_alloc(i32 inreg 28)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177304,i32*%aH,align 4
%aI=load i8*,i8**%d,align 8
%aJ=bitcast i8*%aF to i8**
store i8*%aI,i8**%aJ,align 8
%aK=getelementptr inbounds i8,i8*%aF,i64 8
%aL=bitcast i8*%aK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map7fromSetE_686 to void(...)*),void(...)**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aF,i64 16
%aN=bitcast i8*%aM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map7fromSetE_686 to void(...)*),void(...)**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aF,i64 24
%aP=bitcast i8*%aO to i32*
store i32 -2147483647,i32*%aP,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aw)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ax)
%aQ=bitcast i8**%g to i8***
%aR=load i8**,i8***%aQ,align 8
%aS=load i8*,i8**%aR,align 8
%aT=call fastcc i8*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map7fromSetE_686(i8*inreg%aI,i8*inreg%aS)
store i8*%aT,i8**%e,align 8
%aU=call fastcc i8*@_SMLFN14BoundTypeVarID3Map10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aV=getelementptr inbounds i8,i8*%aU,i64 16
%aW=bitcast i8*%aV to i8*(i8*,i8*)**
%aX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aW,align 8
%aY=bitcast i8*%aU to i8**
%aZ=load i8*,i8**%aY,align 8
%a0=call fastcc i8*%aX(i8*inreg%aZ,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@co,i64 0,i32 2)to i8*))
%a1=getelementptr inbounds i8,i8*%a0,i64 16
%a2=bitcast i8*%a1 to i8*(i8*,i8*)**
%a3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a2,align 8
%a4=bitcast i8*%a0 to i8**
%a5=load i8*,i8**%a4,align 8
%a6=load i8*,i8**%e,align 8
%a7=call fastcc i8*%a3(i8*inreg%a5,i8*inreg%a6)
store i8*%a7,i8**%f,align 8
%a8=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4mapiE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%a9=getelementptr inbounds i8,i8*%a8,i64 16
%ba=bitcast i8*%a9 to i8*(i8*,i8*)**
%bb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ba,align 8
%bc=bitcast i8*%a8 to i8**
%bd=load i8*,i8**%bc,align 8
%be=call fastcc i8*%bb(i8*inreg%bd,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cp,i64 0,i32 2)to i8*))
%bf=getelementptr inbounds i8,i8*%be,i64 16
%bg=bitcast i8*%bf to i8*(i8*,i8*)**
%bh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bg,align 8
%bi=bitcast i8*%be to i8**
%bj=load i8*,i8**%bi,align 8
%bk=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bl=call fastcc i8*%bh(i8*inreg%bj,i8*inreg%bk)
%bm=call fastcc i8*@_SMLFN11TypesBasics10substBTvarE(i8*inreg%bl)
%bn=getelementptr inbounds i8,i8*%bm,i64 16
%bo=bitcast i8*%bn to i8*(i8*,i8*)**
%bp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bo,align 8
%bq=bitcast i8*%bm to i8**
%br=load i8*,i8**%bq,align 8
%bs=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bt=getelementptr inbounds i8,i8*%bs,i64 8
%bu=bitcast i8*%bt to i8**
%bv=load i8*,i8**%bu,align 8
%bw=call fastcc i8*%bp(i8*inreg%br,i8*inreg%bv)
store i8*%bw,i8**%e,align 8
%bx=call fastcc i8*@_SMLFN14BoundTypeVarID3Map7isEmptyE(i32 inreg 1,i32 inreg 8)
%by=getelementptr inbounds i8,i8*%bx,i64 16
%bz=bitcast i8*%by to i8*(i8*,i8*)**
%bA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bz,align 8
%bB=bitcast i8*%bx to i8**
%bC=load i8*,i8**%bB,align 8
%bD=load i8*,i8**%f,align 8
%bE=call fastcc i8*%bA(i8*inreg%bC,i8*inreg%bD)
%bF=bitcast i8*%bE to i32*
%bG=load i32,i32*%bF,align 4
%bH=icmp eq i32%bG,0
br i1%bH,label%bU,label%bI
bI:
store i8*null,i8**%f,align 8
%bJ=call i8*@sml_alloc(i32 inreg 20)#0
%bK=bitcast i8*%bJ to i32*
%bL=getelementptr inbounds i8,i8*%bJ,i64 -4
%bM=bitcast i8*%bL to i32*
store i32 1342177296,i32*%bM,align 4
%bN=getelementptr inbounds i8,i8*%bJ,i64 4
%bO=bitcast i8*%bN to i32*
store i32 0,i32*%bO,align 1
store i32 1,i32*%bK,align 4
%bP=load i8*,i8**%e,align 8
%bQ=getelementptr inbounds i8,i8*%bJ,i64 8
%bR=bitcast i8*%bQ to i8**
store i8*%bP,i8**%bR,align 8
%bS=getelementptr inbounds i8,i8*%bJ,i64 16
%bT=bitcast i8*%bS to i32*
store i32 2,i32*%bT,align 4
ret i8*%bJ
bU:
%bV=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bW=call fastcc i8*@_SMLLN17PolyTyElimination6instOfE_1300(i8*inreg%bV)
%bX=getelementptr inbounds i8,i8*%bW,i64 16
%bY=bitcast i8*%bX to i8*(i8*,i8*)**
%bZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bY,align 8
%b0=bitcast i8*%bW to i8**
%b1=load i8*,i8**%b0,align 8
%b2=load i8*,i8**%e,align 8
%b3=tail call fastcc i8*%bZ(i8*inreg%b1,i8*inreg%b2)
ret i8*%b3
b4:
%b5=getelementptr inbounds i8,i8*%m,i64 8
%b6=bitcast i8*%b5 to i8**
%b7=load i8*,i8**%b6,align 8
store i8*%b7,i8**%e,align 8
%b8=call i8*@sml_alloc(i32 inreg 20)#0
%b9=bitcast i8*%b8 to i32*
%ca=getelementptr inbounds i8,i8*%b8,i64 -4
%cb=bitcast i8*%ca to i32*
store i32 1342177296,i32*%cb,align 4
%cc=getelementptr inbounds i8,i8*%b8,i64 4
%cd=bitcast i8*%cc to i32*
store i32 0,i32*%cd,align 1
store i32 2,i32*%b9,align 4
%ce=load i8*,i8**%e,align 8
%cf=getelementptr inbounds i8,i8*%b8,i64 8
%cg=bitcast i8*%cf to i8**
store i8*%ce,i8**%cg,align 8
%ch=getelementptr inbounds i8,i8*%b8,i64 16
%ci=bitcast i8*%ch to i32*
store i32 2,i32*%ci,align 4
ret i8*%b8
}
define internal fastcc i8*@_SMLLN17PolyTyElimination8calcInstE_1316(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%e,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%o
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%f to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%l],[%k,%j]
store i8*null,i8**%f,align 8
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%g,align 8
%r=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%f,align 8
%x=bitcast i8**%e to i8***
%y=load i8**,i8***%x,align 8
%z=load i8*,i8**%y,align 8
%A=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%A)
%B=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%B)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%z,i8**%c,align 8
%C=call i8*@sml_alloc(i32 inreg 12)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177288,i32*%E,align 4
store i8*%C,i8**%d,align 8
%F=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to i32*
store i32 1,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 28)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177304,i32*%L,align 4
%M=load i8*,i8**%d,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12evalInstanceE_1313 to void(...)*),void(...)**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12evalInstanceE_1313 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%J,i64 24
%T=bitcast i8*%S to i32*
store i32 -2147483647,i32*%T,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%A)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%B)
%U=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%V=call fastcc i8*%u(i8*inreg%U,i8*inreg%J)
%W=getelementptr inbounds i8,i8*%V,i64 16
%X=bitcast i8*%W to i8*(i8*,i8*)**
%Y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%X,align 8
%Z=bitcast i8*%V to i8**
%aa=load i8*,i8**%Z,align 8
%ab=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ac=getelementptr inbounds i8,i8*%ab,i64 8
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
%af=getelementptr inbounds i8,i8*%ae,i64 16
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
%ai=call fastcc i8*%Y(i8*inreg%aa,i8*inreg%ah)
%aj=load i8*,i8**%g,align 8
%ak=tail call fastcc i8*@_SMLLN17PolyTyElimination7lubListE_1306(i8*inreg%aj,i8*inreg%ai)
ret i8*%ak
}
define internal fastcc i8*@_SMLLN17PolyTyElimination8calcInstE_1317(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLLN17PolyTyElimination8traverseE_1286(i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=bitcast i8**%c to i8***
%r=load i8**,i8***%q,align 8
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8calcInstE_1316 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8calcInstE_1316 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=call fastcc i8*%n(i8*inreg%L,i8*inreg%A)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
%S=load i8*,i8**%d,align 8
%T=tail call fastcc i8*%P(i8*inreg%R,i8*inreg%S)
ret i8*%T
}
define internal fastcc i8*@_SMLLN17PolyTyElimination8dummyExpE_1319(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call i8*@sml_save()#0
%m=call i8*@sml_load_intinf(i8*inreg getelementptr inbounds([2x i8],[2x i8]*@cr,i64 0,i64 0))#0
call void@sml_unsave()#0
store i8*%m,i8**%d,align 8
%n=call i8*@sml_alloc(i32 inreg 20)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
store i8*%n,i8**%e,align 8
%q=getelementptr inbounds i8,i8*%n,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
%s=bitcast i8*%n to i32*
store i32 1,i32*%s,align 4
%t=load i8*,i8**%d,align 8
%u=getelementptr inbounds i8,i8*%n,i64 8
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 16
%x=bitcast i8*%w to i32*
store i32 2,i32*%x,align 4
%y=load i8*,i8**@_SMLZN12BuiltinTypes7int32TyE,align 8
store i8*%y,i8**%d,align 8
%z=call i8*@sml_alloc(i32 inreg 28)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177304,i32*%B,align 4
%C=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%c,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%z,i64 24
%L=bitcast i8*%K to i32*
store i32 7,i32*%L,align 4
%M=call fastcc i8*@_SMLFN12TypedCalcCon10TPCONSTANTE(i8*inreg%z)
store i8*%M,i8**%d,align 8
%N=load i8*,i8**@_SMLZN12BuiltinTypes7int32TyE,align 8
store i8*%N,i8**%g,align 8
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
store i8*%O,i8**%e,align 8
%R=load i8*,i8**%d,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%U=getelementptr inbounds i8,i8*%O,i64 8
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%O,i64 16
%X=bitcast i8*%W to i32*
store i32 3,i32*%X,align 4
%Y=bitcast i8**%f to i32***
%Z=load i32**,i32***%Y,align 8
store i8*null,i8**%f,align 8
%aa=load i32*,i32**%Z,align 8
%ab=load i32,i32*%aa,align 4
%ac=load i8**,i8***bitcast(i8**@_SMLZN5Types8univKindE to i8***),align 8
%ad=load i8*,i8**%ac,align 8
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
store i8*%ae,i8**%f,align 8
%ah=getelementptr inbounds i8,i8*%ae,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
%aj=bitcast i8*%ae to i32*
store i32%ab,i32*%aj,align 4
%ak=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%al=getelementptr inbounds i8,i8*%ae,i64 8
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i32*
store i32 2,i32*%ao,align 4
%ap=call i8*@sml_alloc(i32 inreg 20)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177296,i32*%ar,align 4
store i8*%ap,i8**%d,align 8
%as=getelementptr inbounds i8,i8*%ap,i64 4
%at=bitcast i8*%as to i32*
store i32 0,i32*%at,align 1
%au=bitcast i8*%ap to i32*
store i32 3,i32*%au,align 4
%av=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aw=getelementptr inbounds i8,i8*%ap,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ap,i64 16
%az=bitcast i8*%ay to i32*
store i32 2,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 28)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177304,i32*%aC,align 4
%aD=load i8*,i8**%e,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%d,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=load i8*,i8**%c,align 8
%aJ=getelementptr inbounds i8,i8*%aA,i64 16
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aA,i64 24
%aM=bitcast i8*%aL to i32*
store i32 7,i32*%aM,align 4
%aN=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPCASTE(i8*inreg%aA)
ret i8*%aN
}
define internal fastcc i8*@_SMLLN17PolyTyElimination8dummyExpE_1320(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8dummyExpE_1319 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination8dummyExpE_1319 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1409(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1410(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1411(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLL7instMap_1417(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%n
j:
call void@sml_check(i32 inreg%f)
%k=load i8*,i8**%d,align 8
%l=bitcast i8**%c to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%j],[%i,%h]
%p=phi i8*[%k,%j],[%b,%h]
%q=getelementptr inbounds i8,i8*%p,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=bitcast i8*%p to i32*
%u=load i32,i32*%t,align 4
%v=load i8*,i8**%o,align 8
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 12
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i32*
store i32%u,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 1,i32*%J,align 4
%K=call fastcc i8*@_SMLLN17PolyTyElimination6MetaID3Map4findE_701(i8*inreg%z)
%L=icmp eq i8*%K,null
br i1%L,label%M,label%ai
M:
store i8*null,i8**%d,align 8
%N=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%N,i8**%c,align 8
%O=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cA,i64 0,i32 2)to i8*))
store i8*%O,i8**%d,align 8
%P=call i8*@sml_alloc(i32 inreg 28)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177304,i32*%R,align 4
store i8*%P,i8**%e,align 8
%S=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%P,i64 8
%V=bitcast i8*%U to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%V,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=getelementptr inbounds i8,i8*%P,i64 16
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%P,i64 24
%aa=bitcast i8*%Z to i32*
store i32 7,i32*%aa,align 4
%ab=call i8*@sml_alloc(i32 inreg 60)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177336,i32*%ad,align 4
%ae=getelementptr inbounds i8,i8*%ab,i64 56
%af=bitcast i8*%ae to i32*
store i32 1,i32*%af,align 4
%ag=load i8*,i8**%e,align 8
%ah=bitcast i8*%ab to i8**
store i8*%ag,i8**%ah,align 8
call void@sml_raise(i8*inreg%ab)#1
unreachable
ai:
%aj=bitcast i8*%K to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%c,align 8
%al=call i8*@sml_alloc(i32 inreg 20)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177296,i32*%an,align 4
%ao=load i8*,i8**%d,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=load i8*,i8**%c,align 8
%ar=getelementptr inbounds i8,i8*%al,i64 8
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%al,i64 16
%au=bitcast i8*%at to i32*
store i32 3,i32*%au,align 4
ret i8*%al
}
define internal fastcc i8*@_SMLL5subst_1418(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
%e=getelementptr inbounds i8,i8*%d,i64 8
%f=bitcast i8*%e to i8**
%g=load i8*,i8**%f,align 8
%h=icmp eq i8*%g,null
br i1%h,label%m,label%i
i:
%j=bitcast i8*%g to i32*
%k=load i32,i32*%j,align 4
%l=icmp eq i32%k,1
br i1%l,label%x,label%m
m:
%n=bitcast i8*%a to i32*
%o=load i32,i32*%n,align 4
%p=tail call i8*@sml_alloc(i32 inreg 12)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i32 1,i32*%q,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32%o,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
ret i8*%p
x:
%y=getelementptr inbounds i8,i8*%g,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
ret i8*%A
}
define internal fastcc i8*@_SMLL6envTmp_1420(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLL6btvEnv_1423(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%d,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=bitcast i8*%l to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=getelementptr inbounds i8,i8*%l,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=icmp eq i8*%u,null
br i1%v,label%R,label%w
w:
%x=bitcast i8*%u to i32*
%y=load i32,i32*%x,align 4
switch i32%y,label%z[
i32 1,label%R
i32 2,label%S
i32 0,label%R
]
z:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%A=load i8*,i8**@_SMLZ5Match,align 8
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%d,align 8
%E=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@cD,i64 0,i32 2,i64 0),i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 60)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177336,i32*%M,align 4
%N=getelementptr inbounds i8,i8*%K,i64 56
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
%P=load i8*,i8**%d,align 8
%Q=bitcast i8*%K to i8**
store i8*%P,i8**%Q,align 8
call void@sml_raise(i8*inreg%K)#1
unreachable
R:
ret i8*null
S:
%T=getelementptr inbounds i8,i8*%u,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%e,align 8
%W=bitcast i8**%c to i8***
%X=load i8**,i8***%W,align 8
store i8*null,i8**%c,align 8
%Y=load i8*,i8**%X,align 8
%Z=getelementptr inbounds i8,i8*%o,i64 16
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
%ac=call fastcc i8*@_SMLLN17PolyTyElimination15compileTvarKindE_1325(i8*inreg%Y,i8*inreg%ab)
store i8*%ac,i8**%c,align 8
%ad=call i8*@sml_alloc(i32 inreg 12)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177288,i32*%af,align 4
store i8*%ad,i8**%f,align 8
%ag=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to i32*
store i32 1,i32*%aj,align 4
%ak=call i8*@sml_alloc(i32 inreg 28)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177304,i32*%am,align 4
store i8*%ak,i8**%e,align 8
%an=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aq=getelementptr inbounds i8,i8*%ak,i64 8
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%ak,i64 16
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%ak,i64 24
%aw=bitcast i8*%av to i32*
store i32 7,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 12)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177288,i32*%az,align 4
%aA=load i8*,i8**%e,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%ax,i64 8
%aD=bitcast i8*%aC to i32*
store i32 1,i32*%aD,align 4
ret i8*%ax
}
define internal fastcc i8*@_SMLL3env_1424(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i32@_SMLLN17PolyTyElimination13compileBtvEnvE_1426(i8*inreg%a)#4 gc"smlsharp"{
m:
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
%e=icmp eq i8*%d,null
br i1%e,label%k,label%f
f:
%g=bitcast i8*%d to i32*
%h=load i32,i32*%g,align 4
%i=icmp ne i32%h,0
%j=zext i1%i to i32
br label%k
k:
%l=phi i32[%j,%f],[0,%m]
ret i32%l
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13compileBtvEnvE_1428(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%i,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%l,label%n
l:
%m=bitcast i8*%a to i8**
br label%r
n:
call void@sml_check(i32 inreg%j)
%o=load i8*,i8**%i,align 8
%p=bitcast i8**%h to i8***
%q=load i8**,i8***%p,align 8
br label%r
r:
%s=phi i8**[%q,%n],[%m,%l]
%t=phi i8*[%o,%n],[%b,%l]
%u=load i8*,i8**%s,align 8
%v=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%v)
%w=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%w)
%x=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%x)
%y=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%y)
%z=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%z)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%u,i8**%c,align 8
store i8*%t,i8**%d,align 8
%A=load atomic i32,i32*@sml_check_flag unordered,align 4
%B=icmp eq i32%A,0
br i1%B,label%F,label%C
C:
call void@sml_check(i32 inreg%A)
%D=load i8*,i8**%c,align 8
%E=load i8*,i8**%d,align 8
br label%F
F:
%G=phi i8*[%E,%C],[%t,%r]
%H=phi i8*[%D,%C],[%u,%r]
store i8*null,i8**%c,align 8
store i8*%H,i8**%f,align 8
%I=getelementptr inbounds i8,i8*%G,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%g,align 8
%L=getelementptr inbounds i8,i8*%G,i64 16
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
%O=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%H,i8*inreg%N)
store i8*%O,i8**%e,align 8
%P=bitcast i8**%d to i8****
%Q=load i8***,i8****%P,align 8
%R=load i8**,i8***%Q,align 8
%S=load i8*,i8**%R,align 8
%T=load i8*,i8**%f,align 8
%U=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%T,i8*inreg%S)
store i8*%U,i8**%c,align 8
%V=bitcast i8**%d to i8***
%W=load i8**,i8***%V,align 8
store i8*null,i8**%d,align 8
%X=load i8*,i8**%W,align 8
%Y=getelementptr inbounds i8,i8*%X,i64 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
%ab=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ac=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%ab,i8*inreg%aa)
store i8*%ac,i8**%d,align 8
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
store i8*%ad,i8**%f,align 8
%ag=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aj=getelementptr inbounds i8,i8*%ad,i64 8
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ad,i64 16
%am=bitcast i8*%al to i32*
store i32 3,i32*%am,align 4
%an=call i8*@sml_alloc(i32 inreg 28)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177304,i32*%ap,align 4
%aq=load i8*,i8**%f,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%g,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=load i8*,i8**%e,align 8
%aw=getelementptr inbounds i8,i8*%an,i64 16
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%an,i64 24
%az=bitcast i8*%ay to i32*
store i32 7,i32*%az,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%v)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%w)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%x)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%y)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%z)
ret i8*%an
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15compileTvarKindE_1429(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15compileTvarKindE_1430(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15compileTvarKindE_1431(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination20compileOprimSelectorE_1326(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15compileTvarKindE_1432(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination20compileOverloadMatchE_1434(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination20compileOverloadMatchE_1435(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination20compileOverloadMatchE_1436(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination20compileOverloadMatchE_1327(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination16compileBackendTyE_1438(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8***
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8****
%l=load i8***,i8****%k,align 8
br label%m
m:
%n=phi i8***[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8**,i8***%n,align 8
%q=load i8*,i8**%p,align 8
%r=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%q,i8*inreg%o)
ret i8*%r
}
define internal fastcc i8*@_SMLLN17PolyTyElimination16compileBackendTyE_1439(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8***
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8****
%l=load i8***,i8****%k,align 8
br label%m
m:
%n=phi i8***[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8**,i8***%n,align 8
%q=load i8*,i8**%p,align 8
%r=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%q,i8*inreg%o)
ret i8*%r
}
define internal fastcc i8*@_SMLLN17PolyTyElimination16compileBackendTyE_1444(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination16compileBackendTyE_1445(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination16compileBackendTyE_1446(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18compileCodeEntryTyE_1448(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8***
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8****
%l=load i8***,i8****%k,align 8
br label%m
m:
%n=phi i8***[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8**,i8***%n,align 8
%q=load i8*,i8**%p,align 8
%r=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%q,i8*inreg%o)
ret i8*%r
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
v:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
%q=alloca i8*,align 8
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
call void@llvm.gcroot(i8**%q,i8*null)#0
store i8*%a,i8**%m,align 8
%r=bitcast i8**%m to i8***
%s=bitcast i8**%o to i8***
br label%t
t:
%u=phi i8*[%a,%v],[%bs,%br]
%w=phi i8*[%b,%v],[%bt,%br]
store i8*%w,i8**%n,align 8
%x=load atomic i32,i32*@sml_check_flag unordered,align 4
%y=icmp eq i32%x,0
br i1%y,label%C,label%z
z:
call void@sml_check(i32 inreg%x)
%A=load i8*,i8**%n,align 8
%B=load i8*,i8**%m,align 8
br label%C
C:
%D=phi i8*[%B,%z],[%u,%t]
%E=phi i8*[%A,%z],[%w,%t]
store i8*%D,i8**%n,align 8
%F=icmp eq i8*%E,null
br i1%F,label%hv,label%G
G:
%H=bitcast i8*%E to i32*
%I=load i32,i32*%H,align 4
switch i32%I,label%J[
i32 9,label%o9
i32 0,label%hR
i32 4,label%hv
i32 3,label%gZ
i32 5,label%gt
i32 10,label%fE
i32 1,label%eN
i32 6,label%dK
i32 8,label%cY
i32 2,label%bY
i32 7,label%ab
]
J:
store i8*null,i8**%n,align 8
call void@sml_matchcomp_bug()
%K=load i8*,i8**@_SMLZ5Match,align 8
store i8*%K,i8**%m,align 8
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
store i8*%L,i8**%n,align 8
%O=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cy,i64 0,i32 2,i64 0),i8**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=call i8*@sml_alloc(i32 inreg 60)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177336,i32*%W,align 4
%X=getelementptr inbounds i8,i8*%U,i64 56
%Y=bitcast i8*%X to i32*
store i32 1,i32*%Y,align 4
%Z=load i8*,i8**%n,align 8
%aa=bitcast i8*%U to i8**
store i8*%Z,i8**%aa,align 8
call void@sml_raise(i8*inreg%U)#1
unreachable
ab:
%ac=getelementptr inbounds i8,i8*%E,i64 8
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%o,align 8
%af=getelementptr inbounds i8,i8*%ae,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
store i8*%ah,i8**%m,align 8
%ai=getelementptr inbounds i8,i8*%ae,i64 16
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%p,align 8
%al=call i8*@sml_alloc(i32 inreg 20)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177296,i32*%an,align 4
%ao=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%ar=getelementptr inbounds i8,i8*%al,i64 8
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%al,i64 16
%au=bitcast i8*%at to i32*
store i32 3,i32*%au,align 4
%av=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%aw=call fastcc i8*@_SMLLN17PolyTyElimination13compileBtvEnvE_1323(i8*inreg%av,i8*inreg%al)
store i8*%aw,i8**%m,align 8
%ax=getelementptr inbounds i8,i8*%aw,i64 8
%ay=bitcast i8*%ax to i8**
%az=load i8*,i8**%ay,align 8
%aA=icmp eq i8*%az,null
br i1%aA,label%aB,label%a3
aB:
%aC=bitcast i8*%aw to i32**
store i8*null,i8**%o,align 8
%aD=load i32*,i32**%aC,align 8
%aE=load i32,i32*%aD,align 4
%aF=load i8**,i8***bitcast(i8**@_SMLZN5Types8univKindE to i8***),align 8
%aG=load i8*,i8**%aF,align 8
store i8*%aG,i8**%m,align 8
%aH=call i8*@sml_alloc(i32 inreg 20)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177296,i32*%aJ,align 4
store i8*%aH,i8**%n,align 8
%aK=getelementptr inbounds i8,i8*%aH,i64 4
%aL=bitcast i8*%aK to i32*
store i32 0,i32*%aL,align 1
%aM=bitcast i8*%aH to i32*
store i32%aE,i32*%aM,align 4
%aN=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%aO=getelementptr inbounds i8,i8*%aH,i64 8
%aP=bitcast i8*%aO to i8**
store i8*%aN,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aH,i64 16
%aR=bitcast i8*%aQ to i32*
store i32 2,i32*%aR,align 4
%aS=call i8*@sml_alloc(i32 inreg 20)#0
%aT=bitcast i8*%aS to i32*
%aU=getelementptr inbounds i8,i8*%aS,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
%aW=getelementptr inbounds i8,i8*%aS,i64 4
%aX=bitcast i8*%aW to i32*
store i32 0,i32*%aX,align 1
store i32 3,i32*%aT,align 4
%aY=load i8*,i8**%n,align 8
%aZ=getelementptr inbounds i8,i8*%aS,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aS,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 2,i32*%a2,align 4
ret i8*%aS
a3:
%a4=bitcast i8*%az to i8**
%a5=load i8*,i8**%a4,align 8
%a6=bitcast i8*%a5 to i8**
%a7=load i8*,i8**%a6,align 8
store i8*%a7,i8**%n,align 8
%a8=getelementptr inbounds i8,i8*%a5,i64 8
%a9=bitcast i8*%a8 to i8**
%ba=load i8*,i8**%a9,align 8
store i8*%ba,i8**%p,align 8
%bb=call fastcc i8*@_SMLFN14BoundTypeVarID3Map7isEmptyE(i32 inreg 1,i32 inreg 8)
%bc=getelementptr inbounds i8,i8*%bb,i64 16
%bd=bitcast i8*%bc to i8*(i8*,i8*)**
%be=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bd,align 8
%bf=bitcast i8*%bb to i8**
%bg=load i8*,i8**%bf,align 8
%bh=load i8*,i8**%n,align 8
%bi=call fastcc i8*%be(i8*inreg%bg,i8*inreg%bh)
%bj=bitcast i8*%bi to i32*
%bk=load i32,i32*%bj,align 4
%bl=icmp eq i32%bk,0
br i1%bl,label%bu,label%bm
bm:
store i8*null,i8**%n,align 8
store i8*null,i8**%p,align 8
%bn=load i8**,i8***%r,align 8
store i8*null,i8**%m,align 8
%bo=load i8*,i8**%bn,align 8
%bp=load i8**,i8***%s,align 8
store i8*null,i8**%o,align 8
%bq=load i8*,i8**%bp,align 8
store i8*%bo,i8**%m,align 8
br label%br
br:
%bs=phi i8*[%bo,%bm],[%D,%f3]
%bt=phi i8*[%bq,%bm],[%f6,%f3]
br label%t
bu:
%bv=load i8**,i8***%r,align 8
store i8*null,i8**%m,align 8
%bw=load i8*,i8**%bv,align 8
%bx=load i8**,i8***%s,align 8
store i8*null,i8**%o,align 8
%by=load i8*,i8**%bx,align 8
%bz=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%bw,i8*inreg%by)
store i8*%bz,i8**%m,align 8
%bA=call i8*@sml_alloc(i32 inreg 28)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177304,i32*%bC,align 4
store i8*%bA,i8**%o,align 8
%bD=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%bE=bitcast i8*%bA to i8**
store i8*%bD,i8**%bE,align 8
%bF=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%bG=getelementptr inbounds i8,i8*%bA,i64 8
%bH=bitcast i8*%bG to i8**
store i8*%bF,i8**%bH,align 8
%bI=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%bJ=getelementptr inbounds i8,i8*%bA,i64 16
%bK=bitcast i8*%bJ to i8**
store i8*%bI,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bA,i64 24
%bM=bitcast i8*%bL to i32*
store i32 7,i32*%bM,align 4
%bN=call i8*@sml_alloc(i32 inreg 20)#0
%bO=bitcast i8*%bN to i32*
%bP=getelementptr inbounds i8,i8*%bN,i64 -4
%bQ=bitcast i8*%bP to i32*
store i32 1342177296,i32*%bQ,align 4
%bR=getelementptr inbounds i8,i8*%bN,i64 4
%bS=bitcast i8*%bR to i32*
store i32 0,i32*%bS,align 1
store i32 7,i32*%bO,align 4
%bT=load i8*,i8**%o,align 8
%bU=getelementptr inbounds i8,i8*%bN,i64 8
%bV=bitcast i8*%bU to i8**
store i8*%bT,i8**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bN,i64 16
%bX=bitcast i8*%bW to i32*
store i32 2,i32*%bX,align 4
ret i8*%bN
bY:
%bZ=getelementptr inbounds i8,i8*%E,i64 8
%b0=bitcast i8*%bZ to i8**
%b1=load i8*,i8**%b0,align 8
store i8*%b1,i8**%m,align 8
%b2=getelementptr inbounds i8,i8*%b1,i64 8
%b3=bitcast i8*%b2 to i8**
%b4=load i8*,i8**%b3,align 8
store i8*%b4,i8**%o,align 8
%b5=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%b6=getelementptr inbounds i8,i8*%b5,i64 16
%b7=bitcast i8*%b6 to i8*(i8*,i8*)**
%b8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b7,align 8
%b9=bitcast i8*%b5 to i8**
%ca=load i8*,i8**%b9,align 8
store i8*%ca,i8**%p,align 8
%cb=call i8*@sml_alloc(i32 inreg 12)#0
%cc=getelementptr inbounds i8,i8*%cb,i64 -4
%cd=bitcast i8*%cc to i32*
store i32 1342177288,i32*%cd,align 4
store i8*%cb,i8**%q,align 8
%ce=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%cf=bitcast i8*%cb to i8**
store i8*%ce,i8**%cf,align 8
%cg=getelementptr inbounds i8,i8*%cb,i64 8
%ch=bitcast i8*%cg to i32*
store i32 1,i32*%ch,align 4
%ci=call i8*@sml_alloc(i32 inreg 28)#0
%cj=getelementptr inbounds i8,i8*%ci,i64 -4
%ck=bitcast i8*%cj to i32*
store i32 1342177304,i32*%ck,align 4
%cl=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%cm=bitcast i8*%ci to i8**
store i8*%cl,i8**%cm,align 8
%cn=getelementptr inbounds i8,i8*%ci,i64 8
%co=bitcast i8*%cn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9compileTyE_1411 to void(...)*),void(...)**%co,align 8
%cp=getelementptr inbounds i8,i8*%ci,i64 16
%cq=bitcast i8*%cp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9compileTyE_1411 to void(...)*),void(...)**%cq,align 8
%cr=getelementptr inbounds i8,i8*%ci,i64 24
%cs=bitcast i8*%cr to i32*
store i32 -2147483647,i32*%cs,align 4
%ct=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%cu=call fastcc i8*%b8(i8*inreg%ct,i8*inreg%ci)
%cv=getelementptr inbounds i8,i8*%cu,i64 16
%cw=bitcast i8*%cv to i8*(i8*,i8*)**
%cx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cw,align 8
%cy=bitcast i8*%cu to i8**
%cz=load i8*,i8**%cy,align 8
%cA=load i8**,i8***%r,align 8
store i8*null,i8**%m,align 8
%cB=load i8*,i8**%cA,align 8
%cC=call fastcc i8*%cx(i8*inreg%cz,i8*inreg%cB)
store i8*%cC,i8**%m,align 8
%cD=call i8*@sml_alloc(i32 inreg 20)#0
%cE=getelementptr inbounds i8,i8*%cD,i64 -4
%cF=bitcast i8*%cE to i32*
store i32 1342177296,i32*%cF,align 4
store i8*%cD,i8**%n,align 8
%cG=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%cH=bitcast i8*%cD to i8**
store i8*%cG,i8**%cH,align 8
%cI=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%cJ=getelementptr inbounds i8,i8*%cD,i64 8
%cK=bitcast i8*%cJ to i8**
store i8*%cI,i8**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cD,i64 16
%cM=bitcast i8*%cL to i32*
store i32 3,i32*%cM,align 4
%cN=call i8*@sml_alloc(i32 inreg 20)#0
%cO=bitcast i8*%cN to i32*
%cP=getelementptr inbounds i8,i8*%cN,i64 -4
%cQ=bitcast i8*%cP to i32*
store i32 1342177296,i32*%cQ,align 4
%cR=getelementptr inbounds i8,i8*%cN,i64 4
%cS=bitcast i8*%cR to i32*
store i32 0,i32*%cS,align 1
store i32 2,i32*%cO,align 4
%cT=load i8*,i8**%n,align 8
%cU=getelementptr inbounds i8,i8*%cN,i64 8
%cV=bitcast i8*%cU to i8**
store i8*%cT,i8**%cV,align 8
%cW=getelementptr inbounds i8,i8*%cN,i64 16
%cX=bitcast i8*%cW to i32*
store i32 2,i32*%cX,align 4
ret i8*%cN
cY:
%cZ=getelementptr inbounds i8,i8*%E,i64 8
%c0=bitcast i8*%cZ to i8**
%c1=load i8*,i8**%c0,align 8
store i8*%c1,i8**%m,align 8
%c2=call fastcc i8*@_SMLFN11RecordLabel3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%c3=getelementptr inbounds i8,i8*%c2,i64 16
%c4=bitcast i8*%c3 to i8*(i8*,i8*)**
%c5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c4,align 8
%c6=bitcast i8*%c2 to i8**
%c7=load i8*,i8**%c6,align 8
store i8*%c7,i8**%o,align 8
%c8=call i8*@sml_alloc(i32 inreg 12)#0
%c9=getelementptr inbounds i8,i8*%c8,i64 -4
%da=bitcast i8*%c9 to i32*
store i32 1342177288,i32*%da,align 4
store i8*%c8,i8**%p,align 8
%db=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%dc=bitcast i8*%c8 to i8**
store i8*%db,i8**%dc,align 8
%dd=getelementptr inbounds i8,i8*%c8,i64 8
%de=bitcast i8*%dd to i32*
store i32 1,i32*%de,align 4
%df=call i8*@sml_alloc(i32 inreg 28)#0
%dg=getelementptr inbounds i8,i8*%df,i64 -4
%dh=bitcast i8*%dg to i32*
store i32 1342177304,i32*%dh,align 4
%di=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%dj=bitcast i8*%df to i8**
store i8*%di,i8**%dj,align 8
%dk=getelementptr inbounds i8,i8*%df,i64 8
%dl=bitcast i8*%dk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9compileTyE_1410 to void(...)*),void(...)**%dl,align 8
%dm=getelementptr inbounds i8,i8*%df,i64 16
%dn=bitcast i8*%dm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9compileTyE_1410 to void(...)*),void(...)**%dn,align 8
%do=getelementptr inbounds i8,i8*%df,i64 24
%dp=bitcast i8*%do to i32*
store i32 -2147483647,i32*%dp,align 4
%dq=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%dr=call fastcc i8*%c5(i8*inreg%dq,i8*inreg%df)
%ds=getelementptr inbounds i8,i8*%dr,i64 16
%dt=bitcast i8*%ds to i8*(i8*,i8*)**
%du=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dt,align 8
%dv=bitcast i8*%dr to i8**
%dw=load i8*,i8**%dv,align 8
%dx=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%dy=call fastcc i8*%du(i8*inreg%dw,i8*inreg%dx)
store i8*%dy,i8**%m,align 8
%dz=call i8*@sml_alloc(i32 inreg 20)#0
%dA=bitcast i8*%dz to i32*
%dB=getelementptr inbounds i8,i8*%dz,i64 -4
%dC=bitcast i8*%dB to i32*
store i32 1342177296,i32*%dC,align 4
%dD=getelementptr inbounds i8,i8*%dz,i64 4
%dE=bitcast i8*%dD to i32*
store i32 0,i32*%dE,align 1
store i32 8,i32*%dA,align 4
%dF=load i8*,i8**%m,align 8
%dG=getelementptr inbounds i8,i8*%dz,i64 8
%dH=bitcast i8*%dG to i8**
store i8*%dF,i8**%dH,align 8
%dI=getelementptr inbounds i8,i8*%dz,i64 16
%dJ=bitcast i8*%dI to i32*
store i32 2,i32*%dJ,align 4
ret i8*%dz
dK:
%dL=getelementptr inbounds i8,i8*%E,i64 8
%dM=bitcast i8*%dL to i8**
%dN=load i8*,i8**%dM,align 8
store i8*%dN,i8**%o,align 8
%dO=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%dP=getelementptr inbounds i8,i8*%dO,i64 16
%dQ=bitcast i8*%dP to i8*(i8*,i8*)**
%dR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dQ,align 8
%dS=bitcast i8*%dO to i8**
%dT=load i8*,i8**%dS,align 8
store i8*%dT,i8**%m,align 8
%dU=call i8*@sml_alloc(i32 inreg 12)#0
%dV=getelementptr inbounds i8,i8*%dU,i64 -4
%dW=bitcast i8*%dV to i32*
store i32 1342177288,i32*%dW,align 4
store i8*%dU,i8**%p,align 8
%dX=load i8*,i8**%n,align 8
%dY=bitcast i8*%dU to i8**
store i8*%dX,i8**%dY,align 8
%dZ=getelementptr inbounds i8,i8*%dU,i64 8
%d0=bitcast i8*%dZ to i32*
store i32 1,i32*%d0,align 4
%d1=call i8*@sml_alloc(i32 inreg 28)#0
%d2=getelementptr inbounds i8,i8*%d1,i64 -4
%d3=bitcast i8*%d2 to i32*
store i32 1342177304,i32*%d3,align 4
%d4=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%d5=bitcast i8*%d1 to i8**
store i8*%d4,i8**%d5,align 8
%d6=getelementptr inbounds i8,i8*%d1,i64 8
%d7=bitcast i8*%d6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9compileTyE_1409 to void(...)*),void(...)**%d7,align 8
%d8=getelementptr inbounds i8,i8*%d1,i64 16
%d9=bitcast i8*%d8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination9compileTyE_1409 to void(...)*),void(...)**%d9,align 8
%ea=getelementptr inbounds i8,i8*%d1,i64 24
%eb=bitcast i8*%ea to i32*
store i32 -2147483647,i32*%eb,align 4
%ec=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%ed=call fastcc i8*%dR(i8*inreg%ec,i8*inreg%d1)
%ee=getelementptr inbounds i8,i8*%ed,i64 16
%ef=bitcast i8*%ee to i8*(i8*,i8*)**
%eg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ef,align 8
%eh=bitcast i8*%ed to i8**
%ei=load i8*,i8**%eh,align 8
%ej=load i8**,i8***%s,align 8
%ek=load i8*,i8**%ej,align 8
%el=call fastcc i8*%eg(i8*inreg%ei,i8*inreg%ek)
store i8*%el,i8**%m,align 8
%em=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%en=getelementptr inbounds i8,i8*%em,i64 8
%eo=bitcast i8*%en to i8**
%ep=load i8*,i8**%eo,align 8
%eq=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%er=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%eq,i8*inreg%ep)
store i8*%er,i8**%n,align 8
%es=call i8*@sml_alloc(i32 inreg 20)#0
%et=getelementptr inbounds i8,i8*%es,i64 -4
%eu=bitcast i8*%et to i32*
store i32 1342177296,i32*%eu,align 4
store i8*%es,i8**%o,align 8
%ev=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%ew=bitcast i8*%es to i8**
store i8*%ev,i8**%ew,align 8
%ex=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%ey=getelementptr inbounds i8,i8*%es,i64 8
%ez=bitcast i8*%ey to i8**
store i8*%ex,i8**%ez,align 8
%eA=getelementptr inbounds i8,i8*%es,i64 16
%eB=bitcast i8*%eA to i32*
store i32 3,i32*%eB,align 4
%eC=call i8*@sml_alloc(i32 inreg 20)#0
%eD=bitcast i8*%eC to i32*
%eE=getelementptr inbounds i8,i8*%eC,i64 -4
%eF=bitcast i8*%eE to i32*
store i32 1342177296,i32*%eF,align 4
%eG=getelementptr inbounds i8,i8*%eC,i64 4
%eH=bitcast i8*%eG to i32*
store i32 0,i32*%eH,align 1
store i32 6,i32*%eD,align 4
%eI=load i8*,i8**%o,align 8
%eJ=getelementptr inbounds i8,i8*%eC,i64 8
%eK=bitcast i8*%eJ to i8**
store i8*%eI,i8**%eK,align 8
%eL=getelementptr inbounds i8,i8*%eC,i64 16
%eM=bitcast i8*%eL to i32*
store i32 2,i32*%eM,align 4
ret i8*%eC
eN:
%eO=getelementptr inbounds i8,i8*%E,i64 4
%eP=bitcast i8*%eO to i32*
%eQ=load i32,i32*%eP,align 4
%eR=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg 1,i32 inreg 8)
%eS=getelementptr inbounds i8,i8*%eR,i64 16
%eT=bitcast i8*%eS to i8*(i8*,i8*)**
%eU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eT,align 8
%eV=bitcast i8*%eR to i8**
%eW=load i8*,i8**%eV,align 8
store i8*%eW,i8**%o,align 8
%eX=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%eY=getelementptr inbounds i8,i8*%eX,i64 24
%eZ=bitcast i8*%eY to i8**
%e0=load i8*,i8**%eZ,align 8
store i8*%e0,i8**%m,align 8
%e1=call i8*@sml_alloc(i32 inreg 20)#0
%e2=getelementptr inbounds i8,i8*%e1,i64 -4
%e3=bitcast i8*%e2 to i32*
store i32 1342177296,i32*%e3,align 4
%e4=getelementptr inbounds i8,i8*%e1,i64 12
%e5=bitcast i8*%e4 to i32*
store i32 0,i32*%e5,align 1
%e6=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%e7=bitcast i8*%e1 to i8**
store i8*%e6,i8**%e7,align 8
%e8=getelementptr inbounds i8,i8*%e1,i64 8
%e9=bitcast i8*%e8 to i32*
store i32%eQ,i32*%e9,align 4
%fa=getelementptr inbounds i8,i8*%e1,i64 16
%fb=bitcast i8*%fa to i32*
store i32 1,i32*%fb,align 4
%fc=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%fd=call fastcc i8*%eU(i8*inreg%fc,i8*inreg%e1)
%fe=icmp eq i8*%fd,null
br i1%fe,label%ff,label%fB
ff:
%fg=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%fg,i8**%m,align 8
%fh=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cx,i64 0,i32 2)to i8*))
store i8*%fh,i8**%n,align 8
%fi=call i8*@sml_alloc(i32 inreg 28)#0
%fj=getelementptr inbounds i8,i8*%fi,i64 -4
%fk=bitcast i8*%fj to i32*
store i32 1342177304,i32*%fk,align 4
store i8*%fi,i8**%o,align 8
%fl=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%fm=bitcast i8*%fi to i8**
store i8*%fl,i8**%fm,align 8
%fn=getelementptr inbounds i8,i8*%fi,i64 8
%fo=bitcast i8*%fn to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%fo,align 8
%fp=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%fq=getelementptr inbounds i8,i8*%fi,i64 16
%fr=bitcast i8*%fq to i8**
store i8*%fp,i8**%fr,align 8
%fs=getelementptr inbounds i8,i8*%fi,i64 24
%ft=bitcast i8*%fs to i32*
store i32 7,i32*%ft,align 4
%fu=call i8*@sml_alloc(i32 inreg 60)#0
%fv=getelementptr inbounds i8,i8*%fu,i64 -4
%fw=bitcast i8*%fv to i32*
store i32 1342177336,i32*%fw,align 4
%fx=getelementptr inbounds i8,i8*%fu,i64 56
%fy=bitcast i8*%fx to i32*
store i32 1,i32*%fy,align 4
%fz=load i8*,i8**%o,align 8
%fA=bitcast i8*%fu to i8**
store i8*%fz,i8**%fA,align 8
call void@sml_raise(i8*inreg%fu)#1
unreachable
fB:
%fC=bitcast i8*%fd to i8**
%fD=load i8*,i8**%fC,align 8
ret i8*%fD
fE:
%fF=getelementptr inbounds i8,i8*%E,i64 8
%fG=bitcast i8*%fF to i8***
%fH=load i8**,i8***%fG,align 8
%fI=load i8*,i8**%fH,align 8
%fJ=bitcast i8*%fI to i32*
%fK=load i32,i32*%fJ,align 4
switch i32%fK,label%fL[
i32 1,label%f7
i32 0,label%f3
]
fL:
store i8*null,i8**%n,align 8
call void@sml_matchcomp_bug()
%fM=load i8*,i8**@_SMLZ5Match,align 8
store i8*%fM,i8**%m,align 8
%fN=call i8*@sml_alloc(i32 inreg 20)#0
%fO=getelementptr inbounds i8,i8*%fN,i64 -4
%fP=bitcast i8*%fO to i32*
store i32 1342177296,i32*%fP,align 4
store i8*%fN,i8**%n,align 8
%fQ=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%fR=bitcast i8*%fN to i8**
store i8*%fQ,i8**%fR,align 8
%fS=getelementptr inbounds i8,i8*%fN,i64 8
%fT=bitcast i8*%fS to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cy,i64 0,i32 2,i64 0),i8**%fT,align 8
%fU=getelementptr inbounds i8,i8*%fN,i64 16
%fV=bitcast i8*%fU to i32*
store i32 3,i32*%fV,align 4
%fW=call i8*@sml_alloc(i32 inreg 60)#0
%fX=getelementptr inbounds i8,i8*%fW,i64 -4
%fY=bitcast i8*%fX to i32*
store i32 1342177336,i32*%fY,align 4
%fZ=getelementptr inbounds i8,i8*%fW,i64 56
%f0=bitcast i8*%fZ to i32*
store i32 1,i32*%f0,align 4
%f1=load i8*,i8**%n,align 8
%f2=bitcast i8*%fW to i8**
store i8*%f1,i8**%f2,align 8
call void@sml_raise(i8*inreg%fW)#1
unreachable
f3:
%f4=getelementptr inbounds i8,i8*%fI,i64 8
%f5=bitcast i8*%f4 to i8**
%f6=load i8*,i8**%f5,align 8
br label%br
f7:
store i8*null,i8**%n,align 8
%f8=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%f8,i8**%m,align 8
%f9=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cv,i64 0,i32 2)to i8*))
store i8*%f9,i8**%n,align 8
%ga=call i8*@sml_alloc(i32 inreg 28)#0
%gb=getelementptr inbounds i8,i8*%ga,i64 -4
%gc=bitcast i8*%gb to i32*
store i32 1342177304,i32*%gc,align 4
store i8*%ga,i8**%o,align 8
%gd=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%ge=bitcast i8*%ga to i8**
store i8*%gd,i8**%ge,align 8
%gf=getelementptr inbounds i8,i8*%ga,i64 8
%gg=bitcast i8*%gf to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%gg,align 8
%gh=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%gi=getelementptr inbounds i8,i8*%ga,i64 16
%gj=bitcast i8*%gi to i8**
store i8*%gh,i8**%gj,align 8
%gk=getelementptr inbounds i8,i8*%ga,i64 24
%gl=bitcast i8*%gk to i32*
store i32 7,i32*%gl,align 4
%gm=call i8*@sml_alloc(i32 inreg 60)#0
%gn=getelementptr inbounds i8,i8*%gm,i64 -4
%go=bitcast i8*%gn to i32*
store i32 1342177336,i32*%go,align 4
%gp=getelementptr inbounds i8,i8*%gm,i64 56
%gq=bitcast i8*%gp to i32*
store i32 1,i32*%gq,align 4
%gr=load i8*,i8**%o,align 8
%gs=bitcast i8*%gm to i8**
store i8*%gr,i8**%gs,align 8
call void@sml_raise(i8*inreg%gm)#1
unreachable
gt:
%gu=getelementptr inbounds i8,i8*%E,i64 8
%gv=bitcast i8*%gu to i8**
%gw=load i8*,i8**%gv,align 8
%gx=bitcast i8*%gw to i32*
%gy=load i32,i32*%gx,align 4
%gz=getelementptr inbounds i8,i8*%gw,i64 8
%gA=bitcast i8*%gz to i8**
%gB=load i8*,i8**%gA,align 8
store i8*null,i8**%n,align 8
%gC=call fastcc i8*@_SMLLN17PolyTyElimination11compileKindE_1331(i8*inreg%D,i8*inreg%gB)
store i8*%gC,i8**%m,align 8
%gD=call i8*@sml_alloc(i32 inreg 20)#0
%gE=getelementptr inbounds i8,i8*%gD,i64 -4
%gF=bitcast i8*%gE to i32*
store i32 1342177296,i32*%gF,align 4
store i8*%gD,i8**%n,align 8
%gG=getelementptr inbounds i8,i8*%gD,i64 4
%gH=bitcast i8*%gG to i32*
store i32 0,i32*%gH,align 1
%gI=bitcast i8*%gD to i32*
store i32%gy,i32*%gI,align 4
%gJ=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%gK=getelementptr inbounds i8,i8*%gD,i64 8
%gL=bitcast i8*%gK to i8**
store i8*%gJ,i8**%gL,align 8
%gM=getelementptr inbounds i8,i8*%gD,i64 16
%gN=bitcast i8*%gM to i32*
store i32 2,i32*%gN,align 4
%gO=call i8*@sml_alloc(i32 inreg 20)#0
%gP=bitcast i8*%gO to i32*
%gQ=getelementptr inbounds i8,i8*%gO,i64 -4
%gR=bitcast i8*%gQ to i32*
store i32 1342177296,i32*%gR,align 4
%gS=getelementptr inbounds i8,i8*%gO,i64 4
%gT=bitcast i8*%gS to i32*
store i32 0,i32*%gT,align 1
store i32 5,i32*%gP,align 4
%gU=load i8*,i8**%n,align 8
%gV=getelementptr inbounds i8,i8*%gO,i64 8
%gW=bitcast i8*%gV to i8**
store i8*%gU,i8**%gW,align 8
%gX=getelementptr inbounds i8,i8*%gO,i64 16
%gY=bitcast i8*%gX to i32*
store i32 2,i32*%gY,align 4
ret i8*%gO
gZ:
%g0=getelementptr inbounds i8,i8*%E,i64 8
%g1=bitcast i8*%g0 to i8**
%g2=load i8*,i8**%g1,align 8
%g3=bitcast i8*%g2 to i32*
%g4=load i32,i32*%g3,align 4
%g5=getelementptr inbounds i8,i8*%g2,i64 8
%g6=bitcast i8*%g5 to i8**
%g7=load i8*,i8**%g6,align 8
store i8*null,i8**%n,align 8
%g8=call fastcc i8*@_SMLLN17PolyTyElimination11compileKindE_1331(i8*inreg%D,i8*inreg%g7)
store i8*%g8,i8**%m,align 8
%g9=call i8*@sml_alloc(i32 inreg 20)#0
%ha=getelementptr inbounds i8,i8*%g9,i64 -4
%hb=bitcast i8*%ha to i32*
store i32 1342177296,i32*%hb,align 4
store i8*%g9,i8**%n,align 8
%hc=getelementptr inbounds i8,i8*%g9,i64 4
%hd=bitcast i8*%hc to i32*
store i32 0,i32*%hd,align 1
%he=bitcast i8*%g9 to i32*
store i32%g4,i32*%he,align 4
%hf=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%hg=getelementptr inbounds i8,i8*%g9,i64 8
%hh=bitcast i8*%hg to i8**
store i8*%hf,i8**%hh,align 8
%hi=getelementptr inbounds i8,i8*%g9,i64 16
%hj=bitcast i8*%hi to i32*
store i32 2,i32*%hj,align 4
%hk=call i8*@sml_alloc(i32 inreg 20)#0
%hl=bitcast i8*%hk to i32*
%hm=getelementptr inbounds i8,i8*%hk,i64 -4
%hn=bitcast i8*%hm to i32*
store i32 1342177296,i32*%hn,align 4
%ho=getelementptr inbounds i8,i8*%hk,i64 4
%hp=bitcast i8*%ho to i32*
store i32 0,i32*%hp,align 1
store i32 3,i32*%hl,align 4
%hq=load i8*,i8**%n,align 8
%hr=getelementptr inbounds i8,i8*%hk,i64 8
%hs=bitcast i8*%hr to i8**
store i8*%hq,i8**%hs,align 8
%ht=getelementptr inbounds i8,i8*%hk,i64 16
%hu=bitcast i8*%ht to i32*
store i32 2,i32*%hu,align 4
ret i8*%hk
hv:
store i8*null,i8**%n,align 8
%hw=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%hw,i8**%m,align 8
%hx=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ct,i64 0,i32 2)to i8*))
store i8*%hx,i8**%n,align 8
%hy=call i8*@sml_alloc(i32 inreg 28)#0
%hz=getelementptr inbounds i8,i8*%hy,i64 -4
%hA=bitcast i8*%hz to i32*
store i32 1342177304,i32*%hA,align 4
store i8*%hy,i8**%o,align 8
%hB=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%hC=bitcast i8*%hy to i8**
store i8*%hB,i8**%hC,align 8
%hD=getelementptr inbounds i8,i8*%hy,i64 8
%hE=bitcast i8*%hD to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%hE,align 8
%hF=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%hG=getelementptr inbounds i8,i8*%hy,i64 16
%hH=bitcast i8*%hG to i8**
store i8*%hF,i8**%hH,align 8
%hI=getelementptr inbounds i8,i8*%hy,i64 24
%hJ=bitcast i8*%hI to i32*
store i32 7,i32*%hJ,align 4
%hK=call i8*@sml_alloc(i32 inreg 60)#0
%hL=getelementptr inbounds i8,i8*%hK,i64 -4
%hM=bitcast i8*%hL to i32*
store i32 1342177336,i32*%hM,align 4
%hN=getelementptr inbounds i8,i8*%hK,i64 56
%hO=bitcast i8*%hN to i32*
store i32 1,i32*%hO,align 4
%hP=load i8*,i8**%o,align 8
%hQ=bitcast i8*%hK to i8**
store i8*%hP,i8**%hQ,align 8
call void@sml_raise(i8*inreg%hK)#1
unreachable
hR:
%hS=getelementptr inbounds i8,i8*%E,i64 8
%hT=bitcast i8*%hS to i8**
%hU=load i8*,i8**%hT,align 8
store i8*null,i8**%n,align 8
%hV=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hV)
%hW=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hW)
%hX=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hX)
%hY=bitcast i8**%i to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hY)
%hZ=bitcast i8**%j to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hZ)
%h0=bitcast i8**%k to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%h0)
%h1=bitcast i8**%l to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%h1)
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%D,i8**%f,align 8
store i8*%hU,i8**%g,align 8
%h2=load atomic i32,i32*@sml_check_flag unordered,align 4
%h3=icmp eq i32%h2,0
br i1%h3,label%h7,label%h4
h4:
call void@sml_check(i32 inreg%h2)
%h5=load i8*,i8**%g,align 8
%h6=load i8*,i8**%f,align 8
br label%h7
h7:
%h8=phi i8*[%h6,%h4],[%D,%hR]
%h9=phi i8*[%h5,%h4],[%hU,%hR]
store i8*null,i8**%g,align 8
store i8*%h8,i8**%h,align 8
%ia=bitcast i8*%h9 to i32*
%ib=load i32,i32*%ia,align 4
switch i32%ib,label%ic[
i32 6,label%oI
i32 5,label%oc
i32 4,label%nG
i32 1,label%nq
i32 3,label%na
i32 0,label%kY
i32 9,label%kX
i32 10,label%kW
i32 8,label%kV
i32 7,label%kT
i32 2,label%iu
]
ic:
store i8*null,i8**%h,align 8
call void@sml_matchcomp_bug()
%id=load i8*,i8**@_SMLZ5Match,align 8
store i8*%id,i8**%f,align 8
%ie=call i8*@sml_alloc(i32 inreg 20)#0
%if=getelementptr inbounds i8,i8*%ie,i64 -4
%ig=bitcast i8*%if to i32*
store i32 1342177296,i32*%ig,align 4
store i8*%ie,i8**%g,align 8
%ih=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ii=bitcast i8*%ie to i8**
store i8*%ih,i8**%ii,align 8
%ij=getelementptr inbounds i8,i8*%ie,i64 8
%ik=bitcast i8*%ij to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cM,i64 0,i32 2,i64 0),i8**%ik,align 8
%il=getelementptr inbounds i8,i8*%ie,i64 16
%im=bitcast i8*%il to i32*
store i32 3,i32*%im,align 4
%in=call i8*@sml_alloc(i32 inreg 60)#0
%io=getelementptr inbounds i8,i8*%in,i64 -4
%ip=bitcast i8*%io to i32*
store i32 1342177336,i32*%ip,align 4
%iq=getelementptr inbounds i8,i8*%in,i64 56
%ir=bitcast i8*%iq to i32*
store i32 1,i32*%ir,align 4
%is=load i8*,i8**%g,align 8
%it=bitcast i8*%in to i8**
store i8*%is,i8**%it,align 8
call void@sml_raise(i8*inreg%in)#1
unreachable
iu:
%iv=getelementptr inbounds i8,i8*%h9,i64 8
%iw=bitcast i8*%iv to i8**
%ix=load i8*,i8**%iw,align 8
store i8*%ix,i8**%i,align 8
%iy=getelementptr inbounds i8,i8*%ix,i64 8
%iz=bitcast i8*%iy to i8**
%iA=load i8*,i8**%iz,align 8
store i8*%iA,i8**%j,align 8
%iB=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%iC=getelementptr inbounds i8,i8*%iB,i64 16
%iD=bitcast i8*%iC to i8*(i8*,i8*)**
%iE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%iD,align 8
%iF=bitcast i8*%iB to i8**
%iG=load i8*,i8**%iF,align 8
store i8*%iG,i8**%f,align 8
%iH=call i8*@sml_alloc(i32 inreg 12)#0
%iI=getelementptr inbounds i8,i8*%iH,i64 -4
%iJ=bitcast i8*%iI to i32*
store i32 1342177288,i32*%iJ,align 4
store i8*%iH,i8**%g,align 8
%iK=load i8*,i8**%h,align 8
%iL=bitcast i8*%iH to i8**
store i8*%iK,i8**%iL,align 8
%iM=getelementptr inbounds i8,i8*%iH,i64 8
%iN=bitcast i8*%iM to i32*
store i32 1,i32*%iN,align 4
%iO=call i8*@sml_alloc(i32 inreg 28)#0
%iP=getelementptr inbounds i8,i8*%iO,i64 -4
%iQ=bitcast i8*%iP to i32*
store i32 1342177304,i32*%iQ,align 4
%iR=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%iS=bitcast i8*%iO to i8**
store i8*%iR,i8**%iS,align 8
%iT=getelementptr inbounds i8,i8*%iO,i64 8
%iU=bitcast i8*%iT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16compileBackendTyE_1444 to void(...)*),void(...)**%iU,align 8
%iV=getelementptr inbounds i8,i8*%iO,i64 16
%iW=bitcast i8*%iV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16compileBackendTyE_1444 to void(...)*),void(...)**%iW,align 8
%iX=getelementptr inbounds i8,i8*%iO,i64 24
%iY=bitcast i8*%iX to i32*
store i32 -2147483647,i32*%iY,align 4
%iZ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%i0=call fastcc i8*%iE(i8*inreg%iZ,i8*inreg%iO)
%i1=getelementptr inbounds i8,i8*%i0,i64 16
%i2=bitcast i8*%i1 to i8*(i8*,i8*)**
%i3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i2,align 8
%i4=bitcast i8*%i0 to i8**
%i5=load i8*,i8**%i4,align 8
%i6=bitcast i8**%i to i8***
%i7=load i8**,i8***%i6,align 8
%i8=load i8*,i8**%i7,align 8
%i9=call fastcc i8*%i3(i8*inreg%i5,i8*inreg%i8)
store i8*%i9,i8**%f,align 8
%ja=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jb=getelementptr inbounds i8,i8*%ja,i64 16
%jc=bitcast i8*%jb to i8*(i8*,i8*)**
%jd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jc,align 8
%je=bitcast i8*%ja to i8**
%jf=load i8*,i8**%je,align 8
store i8*%jf,i8**%k,align 8
%jg=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jh=getelementptr inbounds i8,i8*%jg,i64 16
%ji=bitcast i8*%jh to i8*(i8*,i8*)**
%jj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ji,align 8
%jk=bitcast i8*%jg to i8**
%jl=load i8*,i8**%jk,align 8
store i8*%jl,i8**%g,align 8
%jm=call i8*@sml_alloc(i32 inreg 12)#0
%jn=getelementptr inbounds i8,i8*%jm,i64 -4
%jo=bitcast i8*%jn to i32*
store i32 1342177288,i32*%jo,align 4
store i8*%jm,i8**%l,align 8
%jp=load i8*,i8**%h,align 8
%jq=bitcast i8*%jm to i8**
store i8*%jp,i8**%jq,align 8
%jr=getelementptr inbounds i8,i8*%jm,i64 8
%js=bitcast i8*%jr to i32*
store i32 1,i32*%js,align 4
%jt=call i8*@sml_alloc(i32 inreg 28)#0
%ju=getelementptr inbounds i8,i8*%jt,i64 -4
%jv=bitcast i8*%ju to i32*
store i32 1342177304,i32*%jv,align 4
%jw=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%jx=bitcast i8*%jt to i8**
store i8*%jw,i8**%jx,align 8
%jy=getelementptr inbounds i8,i8*%jt,i64 8
%jz=bitcast i8*%jy to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16compileBackendTyE_1445 to void(...)*),void(...)**%jz,align 8
%jA=getelementptr inbounds i8,i8*%jt,i64 16
%jB=bitcast i8*%jA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16compileBackendTyE_1445 to void(...)*),void(...)**%jB,align 8
%jC=getelementptr inbounds i8,i8*%jt,i64 24
%jD=bitcast i8*%jC to i32*
store i32 -2147483647,i32*%jD,align 4
%jE=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%jF=call fastcc i8*%jj(i8*inreg%jE,i8*inreg%jt)
%jG=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%jH=call fastcc i8*%jd(i8*inreg%jG,i8*inreg%jF)
%jI=getelementptr inbounds i8,i8*%jH,i64 16
%jJ=bitcast i8*%jI to i8*(i8*,i8*)**
%jK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jJ,align 8
%jL=bitcast i8*%jH to i8**
%jM=load i8*,i8**%jL,align 8
%jN=load i8*,i8**%i,align 8
%jO=getelementptr inbounds i8,i8*%jN,i64 24
%jP=bitcast i8*%jO to i8**
%jQ=load i8*,i8**%jP,align 8
%jR=call fastcc i8*%jK(i8*inreg%jM,i8*inreg%jQ)
store i8*%jR,i8**%g,align 8
%jS=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jT=getelementptr inbounds i8,i8*%jS,i64 16
%jU=bitcast i8*%jT to i8*(i8*,i8*)**
%jV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jU,align 8
%jW=bitcast i8*%jS to i8**
%jX=load i8*,i8**%jW,align 8
store i8*%jX,i8**%k,align 8
%jY=call i8*@sml_alloc(i32 inreg 12)#0
%jZ=getelementptr inbounds i8,i8*%jY,i64 -4
%j0=bitcast i8*%jZ to i32*
store i32 1342177288,i32*%j0,align 4
store i8*%jY,i8**%l,align 8
%j1=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%j2=bitcast i8*%jY to i8**
store i8*%j1,i8**%j2,align 8
%j3=getelementptr inbounds i8,i8*%jY,i64 8
%j4=bitcast i8*%j3 to i32*
store i32 1,i32*%j4,align 4
%j5=call i8*@sml_alloc(i32 inreg 28)#0
%j6=getelementptr inbounds i8,i8*%j5,i64 -4
%j7=bitcast i8*%j6 to i32*
store i32 1342177304,i32*%j7,align 4
%j8=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%j9=bitcast i8*%j5 to i8**
store i8*%j8,i8**%j9,align 8
%ka=getelementptr inbounds i8,i8*%j5,i64 8
%kb=bitcast i8*%ka to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16compileBackendTyE_1446 to void(...)*),void(...)**%kb,align 8
%kc=getelementptr inbounds i8,i8*%j5,i64 16
%kd=bitcast i8*%kc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16compileBackendTyE_1446 to void(...)*),void(...)**%kd,align 8
%ke=getelementptr inbounds i8,i8*%j5,i64 24
%kf=bitcast i8*%ke to i32*
store i32 -2147483647,i32*%kf,align 4
%kg=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%kh=call fastcc i8*%jV(i8*inreg%kg,i8*inreg%j5)
%ki=getelementptr inbounds i8,i8*%kh,i64 16
%kj=bitcast i8*%ki to i8*(i8*,i8*)**
%kk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kj,align 8
%kl=bitcast i8*%kh to i8**
%km=load i8*,i8**%kl,align 8
%kn=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ko=getelementptr inbounds i8,i8*%kn,i64 16
%kp=bitcast i8*%ko to i8**
%kq=load i8*,i8**%kp,align 8
%kr=call fastcc i8*%kk(i8*inreg%km,i8*inreg%kq)
store i8*%kr,i8**%h,align 8
%ks=call i8*@sml_alloc(i32 inreg 36)#0
%kt=getelementptr inbounds i8,i8*%ks,i64 -4
%ku=bitcast i8*%kt to i32*
store i32 1342177312,i32*%ku,align 4
store i8*%ks,i8**%i,align 8
%kv=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%kw=bitcast i8*%ks to i8**
store i8*%kv,i8**%kw,align 8
%kx=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ky=getelementptr inbounds i8,i8*%ks,i64 8
%kz=bitcast i8*%ky to i8**
store i8*%kx,i8**%kz,align 8
%kA=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%kB=getelementptr inbounds i8,i8*%ks,i64 16
%kC=bitcast i8*%kB to i8**
store i8*%kA,i8**%kC,align 8
%kD=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%kE=getelementptr inbounds i8,i8*%ks,i64 24
%kF=bitcast i8*%kE to i8**
store i8*%kD,i8**%kF,align 8
%kG=getelementptr inbounds i8,i8*%ks,i64 32
%kH=bitcast i8*%kG to i32*
store i32 15,i32*%kH,align 4
%kI=call i8*@sml_alloc(i32 inreg 20)#0
%kJ=bitcast i8*%kI to i32*
%kK=getelementptr inbounds i8,i8*%kI,i64 -4
%kL=bitcast i8*%kK to i32*
store i32 1342177296,i32*%kL,align 4
%kM=getelementptr inbounds i8,i8*%kI,i64 4
%kN=bitcast i8*%kM to i32*
store i32 0,i32*%kN,align 1
store i32 2,i32*%kJ,align 4
%kO=load i8*,i8**%i,align 8
%kP=getelementptr inbounds i8,i8*%kI,i64 8
%kQ=bitcast i8*%kP to i8**
store i8*%kO,i8**%kQ,align 8
%kR=getelementptr inbounds i8,i8*%kI,i64 16
%kS=bitcast i8*%kR to i32*
store i32 2,i32*%kS,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hV)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hW)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hX)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hY)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hZ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%h0)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%h1)
br label%oY
kT:
%kU=phi i8*[bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cL,i64 0,i32 2)to i8*),%h7],[bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cK,i64 0,i32 2)to i8*),%kV],[bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cJ,i64 0,i32 2)to i8*),%kW],[bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cI,i64 0,i32 2)to i8*),%kX]
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hV)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hW)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hX)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hY)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hZ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%h0)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%h1)
br label%oY
kV:
br label%kT
kW:
br label%kT
kX:
br label%kT
kY:
%kZ=getelementptr inbounds i8,i8*%h9,i64 8
%k0=bitcast i8*%kZ to i8**
%k1=load i8*,i8**%k0,align 8
store i8*%k1,i8**%i,align 8
%k2=getelementptr inbounds i8,i8*%k1,i64 8
%k3=bitcast i8*%k2 to i8**
%k4=load i8*,i8**%k3,align 8
store i8*%k4,i8**%j,align 8
%k5=getelementptr inbounds i8,i8*%k1,i64 16
%k6=bitcast i8*%k5 to i32*
%k7=load i32,i32*%k6,align 4
%k8=getelementptr inbounds i8,i8*%k1,i64 32
%k9=bitcast i8*%k8 to i8**
%la=load i8*,i8**%k9,align 8
store i8*%la,i8**%f,align 8
%lb=call i8*@sml_alloc(i32 inreg 20)#0
%lc=getelementptr inbounds i8,i8*%lb,i64 -4
%ld=bitcast i8*%lc to i32*
store i32 1342177296,i32*%ld,align 4
%le=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%lf=bitcast i8*%lb to i8**
store i8*%le,i8**%lf,align 8
%lg=getelementptr inbounds i8,i8*%lb,i64 8
%lh=bitcast i8*%lg to i8**
store i8*null,i8**%lh,align 8
%li=getelementptr inbounds i8,i8*%lb,i64 16
%lj=bitcast i8*%li to i32*
store i32 3,i32*%lj,align 4
%lk=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ll=call fastcc i8*@_SMLLN17PolyTyElimination13compileBtvEnvE_1323(i8*inreg%lk,i8*inreg%lb)
store i8*%ll,i8**%g,align 8
%lm=getelementptr inbounds i8,i8*%ll,i64 8
%ln=bitcast i8*%lm to i8**
%lo=load i8*,i8**%ln,align 8
%lp=icmp eq i8*%lo,null
br i1%lp,label%lq,label%ls
lq:
%lr=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
br label%lw
ls:
%lt=bitcast i8*%lo to i8***
%lu=load i8**,i8***%lt,align 8
%lv=load i8*,i8**%lu,align 8
br label%lw
lw:
%lx=phi i8*[%lv,%ls],[%lr,%lq]
store i8*%lx,i8**%f,align 8
%ly=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%lz=getelementptr inbounds i8,i8*%ly,i64 16
%lA=bitcast i8*%lz to i8*(i8*,i8*)**
%lB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%lA,align 8
%lC=bitcast i8*%ly to i8**
%lD=load i8*,i8**%lC,align 8
store i8*%lD,i8**%h,align 8
%lE=call i8*@sml_alloc(i32 inreg 12)#0
%lF=getelementptr inbounds i8,i8*%lE,i64 -4
%lG=bitcast i8*%lF to i32*
store i32 1342177288,i32*%lG,align 4
store i8*%lE,i8**%k,align 8
%lH=load i8*,i8**%g,align 8
%lI=bitcast i8*%lE to i8**
store i8*%lH,i8**%lI,align 8
%lJ=getelementptr inbounds i8,i8*%lE,i64 8
%lK=bitcast i8*%lJ to i32*
store i32 1,i32*%lK,align 4
%lL=call i8*@sml_alloc(i32 inreg 28)#0
%lM=getelementptr inbounds i8,i8*%lL,i64 -4
%lN=bitcast i8*%lM to i32*
store i32 1342177304,i32*%lN,align 4
%lO=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%lP=bitcast i8*%lL to i8**
store i8*%lO,i8**%lP,align 8
%lQ=getelementptr inbounds i8,i8*%lL,i64 8
%lR=bitcast i8*%lQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16compileBackendTyE_1438 to void(...)*),void(...)**%lR,align 8
%lS=getelementptr inbounds i8,i8*%lL,i64 16
%lT=bitcast i8*%lS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16compileBackendTyE_1438 to void(...)*),void(...)**%lT,align 8
%lU=getelementptr inbounds i8,i8*%lL,i64 24
%lV=bitcast i8*%lU to i32*
store i32 -2147483647,i32*%lV,align 4
%lW=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%lX=call fastcc i8*%lB(i8*inreg%lW,i8*inreg%lL)
%lY=getelementptr inbounds i8,i8*%lX,i64 16
%lZ=bitcast i8*%lY to i8*(i8*,i8*)**
%l0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%lZ,align 8
%l1=bitcast i8*%lX to i8**
%l2=load i8*,i8**%l1,align 8
%l3=bitcast i8**%i to i8***
%l4=load i8**,i8***%l3,align 8
%l5=load i8*,i8**%l4,align 8
%l6=call fastcc i8*%l0(i8*inreg%l2,i8*inreg%l5)
store i8*%l6,i8**%h,align 8
%l7=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l8=getelementptr inbounds i8,i8*%l7,i64 16
%l9=bitcast i8*%l8 to i8*(i8*,i8*)**
%ma=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%l9,align 8
%mb=bitcast i8*%l7 to i8**
%mc=load i8*,i8**%mb,align 8
store i8*%mc,i8**%k,align 8
%md=call i8*@sml_alloc(i32 inreg 12)#0
%me=getelementptr inbounds i8,i8*%md,i64 -4
%mf=bitcast i8*%me to i32*
store i32 1342177288,i32*%mf,align 4
store i8*%md,i8**%l,align 8
%mg=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%mh=bitcast i8*%md to i8**
store i8*%mg,i8**%mh,align 8
%mi=getelementptr inbounds i8,i8*%md,i64 8
%mj=bitcast i8*%mi to i32*
store i32 1,i32*%mj,align 4
%mk=call i8*@sml_alloc(i32 inreg 28)#0
%ml=getelementptr inbounds i8,i8*%mk,i64 -4
%mm=bitcast i8*%ml to i32*
store i32 1342177304,i32*%mm,align 4
%mn=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%mo=bitcast i8*%mk to i8**
store i8*%mn,i8**%mo,align 8
%mp=getelementptr inbounds i8,i8*%mk,i64 8
%mq=bitcast i8*%mp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16compileBackendTyE_1439 to void(...)*),void(...)**%mq,align 8
%mr=getelementptr inbounds i8,i8*%mk,i64 16
%ms=bitcast i8*%mr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination16compileBackendTyE_1439 to void(...)*),void(...)**%ms,align 8
%mt=getelementptr inbounds i8,i8*%mk,i64 24
%mu=bitcast i8*%mt to i32*
store i32 -2147483647,i32*%mu,align 4
%mv=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%mw=call fastcc i8*%ma(i8*inreg%mv,i8*inreg%mk)
%mx=getelementptr inbounds i8,i8*%mw,i64 16
%my=bitcast i8*%mx to i8*(i8*,i8*)**
%mz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%my,align 8
%mA=bitcast i8*%mw to i8**
%mB=load i8*,i8**%mA,align 8
%mC=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%mD=getelementptr inbounds i8,i8*%mC,i64 24
%mE=bitcast i8*%mD to i8**
%mF=load i8*,i8**%mE,align 8
%mG=call fastcc i8*%mz(i8*inreg%mB,i8*inreg%mF)
store i8*%mG,i8**%g,align 8
%mH=call i8*@sml_alloc(i32 inreg 44)#0
%mI=getelementptr inbounds i8,i8*%mH,i64 -4
%mJ=bitcast i8*%mI to i32*
store i32 1342177320,i32*%mJ,align 4
store i8*%mH,i8**%i,align 8
%mK=getelementptr inbounds i8,i8*%mH,i64 20
%mL=bitcast i8*%mK to i32*
store i32 0,i32*%mL,align 1
%mM=load i8*,i8**%h,align 8
%mN=bitcast i8*%mH to i8**
store i8*null,i8**%h,align 8
store i8*%mM,i8**%mN,align 8
%mO=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%mP=getelementptr inbounds i8,i8*%mH,i64 8
%mQ=bitcast i8*%mP to i8**
store i8*%mO,i8**%mQ,align 8
%mR=getelementptr inbounds i8,i8*%mH,i64 16
%mS=bitcast i8*%mR to i32*
store i32%k7,i32*%mS,align 4
%mT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%mU=getelementptr inbounds i8,i8*%mH,i64 24
%mV=bitcast i8*%mU to i8**
store i8*%mT,i8**%mV,align 8
%mW=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%mX=getelementptr inbounds i8,i8*%mH,i64 32
%mY=bitcast i8*%mX to i8**
store i8*%mW,i8**%mY,align 8
%mZ=getelementptr inbounds i8,i8*%mH,i64 40
%m0=bitcast i8*%mZ to i32*
store i32 27,i32*%m0,align 4
%m1=call i8*@sml_alloc(i32 inreg 20)#0
%m2=getelementptr inbounds i8,i8*%m1,i64 -4
%m3=bitcast i8*%m2 to i32*
store i32 1342177296,i32*%m3,align 4
%m4=bitcast i8*%m1 to i64*
store i64 0,i64*%m4,align 4
%m5=load i8*,i8**%i,align 8
%m6=getelementptr inbounds i8,i8*%m1,i64 8
%m7=bitcast i8*%m6 to i8**
store i8*%m5,i8**%m7,align 8
%m8=getelementptr inbounds i8,i8*%m1,i64 16
%m9=bitcast i8*%m8 to i32*
store i32 2,i32*%m9,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hV)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hW)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hX)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hY)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hZ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%h0)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%h1)
br label%oY
na:
%nb=getelementptr inbounds i8,i8*%h9,i64 8
%nc=bitcast i8*%nb to i8**
%nd=load i8*,i8**%nc,align 8
store i8*null,i8**%h,align 8
%ne=call fastcc i8*@_SMLLN17PolyTyElimination18compileCodeEntryTyE_1329(i8*inreg%h8,i8*inreg%nd)
store i8*%ne,i8**%f,align 8
%nf=call i8*@sml_alloc(i32 inreg 20)#0
%ng=bitcast i8*%nf to i32*
%nh=getelementptr inbounds i8,i8*%nf,i64 -4
%ni=bitcast i8*%nh to i32*
store i32 1342177296,i32*%ni,align 4
%nj=getelementptr inbounds i8,i8*%nf,i64 4
%nk=bitcast i8*%nj to i32*
store i32 0,i32*%nk,align 1
store i32 3,i32*%ng,align 4
%nl=load i8*,i8**%f,align 8
%nm=getelementptr inbounds i8,i8*%nf,i64 8
%nn=bitcast i8*%nm to i8**
store i8*%nl,i8**%nn,align 8
%no=getelementptr inbounds i8,i8*%nf,i64 16
%np=bitcast i8*%no to i32*
store i32 2,i32*%np,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hV)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hW)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hX)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hY)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hZ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%h0)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%h1)
br label%oY
nq:
%nr=getelementptr inbounds i8,i8*%h9,i64 8
%ns=bitcast i8*%nr to i8**
%nt=load i8*,i8**%ns,align 8
store i8*null,i8**%h,align 8
%nu=call fastcc i8*@_SMLLN17PolyTyElimination18compileCodeEntryTyE_1329(i8*inreg%h8,i8*inreg%nt)
store i8*%nu,i8**%f,align 8
%nv=call i8*@sml_alloc(i32 inreg 20)#0
%nw=bitcast i8*%nv to i32*
%nx=getelementptr inbounds i8,i8*%nv,i64 -4
%ny=bitcast i8*%nx to i32*
store i32 1342177296,i32*%ny,align 4
%nz=getelementptr inbounds i8,i8*%nv,i64 4
%nA=bitcast i8*%nz to i32*
store i32 0,i32*%nA,align 1
store i32 1,i32*%nw,align 4
%nB=load i8*,i8**%f,align 8
%nC=getelementptr inbounds i8,i8*%nv,i64 8
%nD=bitcast i8*%nC to i8**
store i8*%nB,i8**%nD,align 8
%nE=getelementptr inbounds i8,i8*%nv,i64 16
%nF=bitcast i8*%nE to i32*
store i32 2,i32*%nF,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hV)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hW)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hX)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hY)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hZ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%h0)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%h1)
br label%oY
nG:
%nH=getelementptr inbounds i8,i8*%h9,i64 8
%nI=bitcast i8*%nH to i8**
%nJ=load i8*,i8**%nI,align 8
%nK=bitcast i8*%nJ to i32*
%nL=load i32,i32*%nK,align 4
%nM=getelementptr inbounds i8,i8*%nJ,i64 8
%nN=bitcast i8*%nM to i8**
%nO=load i8*,i8**%nN,align 8
store i8*null,i8**%h,align 8
%nP=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%h8,i8*inreg%nO)
store i8*%nP,i8**%f,align 8
%nQ=call i8*@sml_alloc(i32 inreg 20)#0
%nR=getelementptr inbounds i8,i8*%nQ,i64 -4
%nS=bitcast i8*%nR to i32*
store i32 1342177296,i32*%nS,align 4
store i8*%nQ,i8**%g,align 8
%nT=getelementptr inbounds i8,i8*%nQ,i64 4
%nU=bitcast i8*%nT to i32*
store i32 0,i32*%nU,align 1
%nV=bitcast i8*%nQ to i32*
store i32%nL,i32*%nV,align 4
%nW=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%nX=getelementptr inbounds i8,i8*%nQ,i64 8
%nY=bitcast i8*%nX to i8**
store i8*%nW,i8**%nY,align 8
%nZ=getelementptr inbounds i8,i8*%nQ,i64 16
%n0=bitcast i8*%nZ to i32*
store i32 2,i32*%n0,align 4
%n1=call i8*@sml_alloc(i32 inreg 20)#0
%n2=bitcast i8*%n1 to i32*
%n3=getelementptr inbounds i8,i8*%n1,i64 -4
%n4=bitcast i8*%n3 to i32*
store i32 1342177296,i32*%n4,align 4
%n5=getelementptr inbounds i8,i8*%n1,i64 4
%n6=bitcast i8*%n5 to i32*
store i32 0,i32*%n6,align 1
store i32 4,i32*%n2,align 4
%n7=load i8*,i8**%g,align 8
%n8=getelementptr inbounds i8,i8*%n1,i64 8
%n9=bitcast i8*%n8 to i8**
store i8*%n7,i8**%n9,align 8
%oa=getelementptr inbounds i8,i8*%n1,i64 16
%ob=bitcast i8*%oa to i32*
store i32 2,i32*%ob,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hV)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hW)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hX)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hY)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hZ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%h0)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%h1)
br label%oY
oc:
%od=getelementptr inbounds i8,i8*%h9,i64 8
%oe=bitcast i8*%od to i8**
%of=load i8*,i8**%oe,align 8
%og=bitcast i8*%of to i32*
%oh=load i32,i32*%og,align 4
%oi=getelementptr inbounds i8,i8*%of,i64 8
%oj=bitcast i8*%oi to i8**
%ok=load i8*,i8**%oj,align 8
store i8*null,i8**%h,align 8
%ol=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%h8,i8*inreg%ok)
store i8*%ol,i8**%f,align 8
%om=call i8*@sml_alloc(i32 inreg 20)#0
%on=getelementptr inbounds i8,i8*%om,i64 -4
%oo=bitcast i8*%on to i32*
store i32 1342177296,i32*%oo,align 4
store i8*%om,i8**%g,align 8
%op=getelementptr inbounds i8,i8*%om,i64 4
%oq=bitcast i8*%op to i32*
store i32 0,i32*%oq,align 1
%or=bitcast i8*%om to i32*
store i32%oh,i32*%or,align 4
%os=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ot=getelementptr inbounds i8,i8*%om,i64 8
%ou=bitcast i8*%ot to i8**
store i8*%os,i8**%ou,align 8
%ov=getelementptr inbounds i8,i8*%om,i64 16
%ow=bitcast i8*%ov to i32*
store i32 2,i32*%ow,align 4
%ox=call i8*@sml_alloc(i32 inreg 20)#0
%oy=bitcast i8*%ox to i32*
%oz=getelementptr inbounds i8,i8*%ox,i64 -4
%oA=bitcast i8*%oz to i32*
store i32 1342177296,i32*%oA,align 4
%oB=getelementptr inbounds i8,i8*%ox,i64 4
%oC=bitcast i8*%oB to i32*
store i32 0,i32*%oC,align 1
store i32 5,i32*%oy,align 4
%oD=load i8*,i8**%g,align 8
%oE=getelementptr inbounds i8,i8*%ox,i64 8
%oF=bitcast i8*%oE to i8**
store i8*%oD,i8**%oF,align 8
%oG=getelementptr inbounds i8,i8*%ox,i64 16
%oH=bitcast i8*%oG to i32*
store i32 2,i32*%oH,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hV)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hW)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hX)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hY)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hZ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%h0)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%h1)
br label%oY
oI:
%oJ=getelementptr inbounds i8,i8*%h9,i64 8
%oK=bitcast i8*%oJ to i8**
%oL=load i8*,i8**%oK,align 8
store i8*null,i8**%h,align 8
%oM=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%h8,i8*inreg%oL)
store i8*%oM,i8**%f,align 8
%oN=call i8*@sml_alloc(i32 inreg 20)#0
%oO=bitcast i8*%oN to i32*
%oP=getelementptr inbounds i8,i8*%oN,i64 -4
%oQ=bitcast i8*%oP to i32*
store i32 1342177296,i32*%oQ,align 4
%oR=getelementptr inbounds i8,i8*%oN,i64 4
%oS=bitcast i8*%oR to i32*
store i32 0,i32*%oS,align 1
store i32 6,i32*%oO,align 4
%oT=load i8*,i8**%f,align 8
%oU=getelementptr inbounds i8,i8*%oN,i64 8
%oV=bitcast i8*%oU to i8**
store i8*%oT,i8**%oV,align 8
%oW=getelementptr inbounds i8,i8*%oN,i64 16
%oX=bitcast i8*%oW to i32*
store i32 2,i32*%oX,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hV)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hW)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hX)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hY)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hZ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%h0)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%h1)
br label%oY
oY:
%oZ=phi i8*[%kI,%iu],[%kU,%kT],[%m1,%lw],[%nf,%na],[%nv,%nq],[%n1,%nG],[%ox,%oc],[%oN,%oI]
store i8*%oZ,i8**%m,align 8
%o0=call i8*@sml_alloc(i32 inreg 20)#0
%o1=getelementptr inbounds i8,i8*%o0,i64 -4
%o2=bitcast i8*%o1 to i32*
store i32 1342177296,i32*%o2,align 4
%o3=bitcast i8*%o0 to i64*
store i64 0,i64*%o3,align 4
%o4=load i8*,i8**%m,align 8
%o5=getelementptr inbounds i8,i8*%o0,i64 8
%o6=bitcast i8*%o5 to i8**
store i8*%o4,i8**%o6,align 8
%o7=getelementptr inbounds i8,i8*%o0,i64 16
%o8=bitcast i8*%o7 to i32*
store i32 2,i32*%o8,align 4
ret i8*%o0
o9:
%pa=getelementptr inbounds i8,i8*%E,i64 8
%pb=bitcast i8*%pa to i8**
%pc=load i8*,i8**%pb,align 8
store i8*null,i8**%n,align 8
%pd=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%pd)
%pe=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%pe)
%pf=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%pf)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%D,i8**%c,align 8
store i8*%pc,i8**%d,align 8
%pg=load atomic i32,i32*@sml_check_flag unordered,align 4
%ph=icmp eq i32%pg,0
br i1%ph,label%pl,label%pi
pi:
call void@sml_check(i32 inreg%pg)
%pj=load i8*,i8**%d,align 8
%pk=load i8*,i8**%c,align 8
br label%pl
pl:
%pm=phi i8*[%pk,%pi],[%D,%o9]
%pn=phi i8*[%pj,%pi],[%pc,%o9]
%po=bitcast i8*%pn to i32*
%pp=load i32,i32*%po,align 4
switch i32%pp,label%pq[
i32 1,label%qX
i32 0,label%qu
i32 4,label%qe
i32 3,label%pY
i32 2,label%pI
]
pq:
call void@sml_matchcomp_bug()
%pr=load i8*,i8**@_SMLZ5Match,align 8
store i8*%pr,i8**%c,align 8
%ps=call i8*@sml_alloc(i32 inreg 20)#0
%pt=getelementptr inbounds i8,i8*%ps,i64 -4
%pu=bitcast i8*%pt to i32*
store i32 1342177296,i32*%pu,align 4
store i8*%ps,i8**%d,align 8
%pv=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%pw=bitcast i8*%ps to i8**
store i8*%pv,i8**%pw,align 8
%px=getelementptr inbounds i8,i8*%ps,i64 8
%py=bitcast i8*%px to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cN,i64 0,i32 2,i64 0),i8**%py,align 8
%pz=getelementptr inbounds i8,i8*%ps,i64 16
%pA=bitcast i8*%pz to i32*
store i32 3,i32*%pA,align 4
%pB=call i8*@sml_alloc(i32 inreg 60)#0
%pC=getelementptr inbounds i8,i8*%pB,i64 -4
%pD=bitcast i8*%pC to i32*
store i32 1342177336,i32*%pD,align 4
%pE=getelementptr inbounds i8,i8*%pB,i64 56
%pF=bitcast i8*%pE to i32*
store i32 1,i32*%pF,align 4
%pG=load i8*,i8**%d,align 8
%pH=bitcast i8*%pB to i8**
store i8*%pG,i8**%pH,align 8
call void@sml_raise(i8*inreg%pB)#1
unreachable
pI:
%pJ=getelementptr inbounds i8,i8*%pn,i64 8
%pK=bitcast i8*%pJ to i8**
%pL=load i8*,i8**%pK,align 8
%pM=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%pm,i8*inreg%pL)
store i8*%pM,i8**%c,align 8
%pN=call i8*@sml_alloc(i32 inreg 20)#0
%pO=bitcast i8*%pN to i32*
%pP=getelementptr inbounds i8,i8*%pN,i64 -4
%pQ=bitcast i8*%pP to i32*
store i32 1342177296,i32*%pQ,align 4
%pR=getelementptr inbounds i8,i8*%pN,i64 4
%pS=bitcast i8*%pR to i32*
store i32 0,i32*%pS,align 1
store i32 2,i32*%pO,align 4
%pT=load i8*,i8**%c,align 8
%pU=getelementptr inbounds i8,i8*%pN,i64 8
%pV=bitcast i8*%pU to i8**
store i8*%pT,i8**%pV,align 8
%pW=getelementptr inbounds i8,i8*%pN,i64 16
%pX=bitcast i8*%pW to i32*
store i32 2,i32*%pX,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%pd)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%pe)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%pf)
br label%rd
pY:
%pZ=getelementptr inbounds i8,i8*%pn,i64 8
%p0=bitcast i8*%pZ to i8**
%p1=load i8*,i8**%p0,align 8
%p2=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%pm,i8*inreg%p1)
store i8*%p2,i8**%c,align 8
%p3=call i8*@sml_alloc(i32 inreg 20)#0
%p4=bitcast i8*%p3 to i32*
%p5=getelementptr inbounds i8,i8*%p3,i64 -4
%p6=bitcast i8*%p5 to i32*
store i32 1342177296,i32*%p6,align 4
%p7=getelementptr inbounds i8,i8*%p3,i64 4
%p8=bitcast i8*%p7 to i32*
store i32 0,i32*%p8,align 1
store i32 3,i32*%p4,align 4
%p9=load i8*,i8**%c,align 8
%qa=getelementptr inbounds i8,i8*%p3,i64 8
%qb=bitcast i8*%qa to i8**
store i8*%p9,i8**%qb,align 8
%qc=getelementptr inbounds i8,i8*%p3,i64 16
%qd=bitcast i8*%qc to i32*
store i32 2,i32*%qd,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%pd)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%pe)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%pf)
br label%rd
qe:
%qf=getelementptr inbounds i8,i8*%pn,i64 8
%qg=bitcast i8*%qf to i8**
%qh=load i8*,i8**%qg,align 8
%qi=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%pm,i8*inreg%qh)
store i8*%qi,i8**%c,align 8
%qj=call i8*@sml_alloc(i32 inreg 20)#0
%qk=bitcast i8*%qj to i32*
%ql=getelementptr inbounds i8,i8*%qj,i64 -4
%qm=bitcast i8*%ql to i32*
store i32 1342177296,i32*%qm,align 4
%qn=getelementptr inbounds i8,i8*%qj,i64 4
%qo=bitcast i8*%qn to i32*
store i32 0,i32*%qo,align 1
store i32 4,i32*%qk,align 4
%qp=load i8*,i8**%c,align 8
%qq=getelementptr inbounds i8,i8*%qj,i64 8
%qr=bitcast i8*%qq to i8**
store i8*%qp,i8**%qr,align 8
%qs=getelementptr inbounds i8,i8*%qj,i64 16
%qt=bitcast i8*%qs to i32*
store i32 2,i32*%qt,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%pd)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%pe)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%pf)
br label%rd
qu:
%qv=getelementptr inbounds i8,i8*%pn,i64 8
%qw=bitcast i8*%qv to i8**
%qx=load i8*,i8**%qw,align 8
%qy=bitcast i8*%qx to i8**
%qz=load i8*,i8**%qy,align 8
store i8*%qz,i8**%d,align 8
%qA=getelementptr inbounds i8,i8*%qx,i64 8
%qB=bitcast i8*%qA to i8**
%qC=load i8*,i8**%qB,align 8
%qD=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%pm,i8*inreg%qC)
store i8*%qD,i8**%c,align 8
%qE=call i8*@sml_alloc(i32 inreg 20)#0
%qF=getelementptr inbounds i8,i8*%qE,i64 -4
%qG=bitcast i8*%qF to i32*
store i32 1342177296,i32*%qG,align 4
store i8*%qE,i8**%e,align 8
%qH=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%qI=bitcast i8*%qE to i8**
store i8*%qH,i8**%qI,align 8
%qJ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%qK=getelementptr inbounds i8,i8*%qE,i64 8
%qL=bitcast i8*%qK to i8**
store i8*%qJ,i8**%qL,align 8
%qM=getelementptr inbounds i8,i8*%qE,i64 16
%qN=bitcast i8*%qM to i32*
store i32 3,i32*%qN,align 4
%qO=call i8*@sml_alloc(i32 inreg 20)#0
%qP=getelementptr inbounds i8,i8*%qO,i64 -4
%qQ=bitcast i8*%qP to i32*
store i32 1342177296,i32*%qQ,align 4
%qR=bitcast i8*%qO to i64*
store i64 0,i64*%qR,align 4
%qS=load i8*,i8**%e,align 8
%qT=getelementptr inbounds i8,i8*%qO,i64 8
%qU=bitcast i8*%qT to i8**
store i8*%qS,i8**%qU,align 8
%qV=getelementptr inbounds i8,i8*%qO,i64 16
%qW=bitcast i8*%qV to i32*
store i32 2,i32*%qW,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%pd)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%pe)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%pf)
br label%rd
qX:
%qY=getelementptr inbounds i8,i8*%pn,i64 8
%qZ=bitcast i8*%qY to i8**
%q0=load i8*,i8**%qZ,align 8
%q1=call fastcc i8*@_SMLLN17PolyTyElimination20compileOprimSelectorE_1326(i8*inreg%pm,i8*inreg%q0)
store i8*%q1,i8**%c,align 8
%q2=call i8*@sml_alloc(i32 inreg 20)#0
%q3=bitcast i8*%q2 to i32*
%q4=getelementptr inbounds i8,i8*%q2,i64 -4
%q5=bitcast i8*%q4 to i32*
store i32 1342177296,i32*%q5,align 4
%q6=getelementptr inbounds i8,i8*%q2,i64 4
%q7=bitcast i8*%q6 to i32*
store i32 0,i32*%q7,align 1
store i32 1,i32*%q3,align 4
%q8=load i8*,i8**%c,align 8
%q9=getelementptr inbounds i8,i8*%q2,i64 8
%ra=bitcast i8*%q9 to i8**
store i8*%q8,i8**%ra,align 8
%rb=getelementptr inbounds i8,i8*%q2,i64 16
%rc=bitcast i8*%rb to i32*
store i32 2,i32*%rc,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%pd)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%pe)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%pf)
br label%rd
rd:
%re=phi i8*[%pN,%pI],[%p3,%pY],[%qj,%qe],[%qO,%qu],[%q2,%qX]
store i8*%re,i8**%m,align 8
%rf=call i8*@sml_alloc(i32 inreg 20)#0
%rg=bitcast i8*%rf to i32*
%rh=getelementptr inbounds i8,i8*%rf,i64 -4
%ri=bitcast i8*%rh to i32*
store i32 1342177296,i32*%ri,align 4
%rj=getelementptr inbounds i8,i8*%rf,i64 4
%rk=bitcast i8*%rj to i32*
store i32 0,i32*%rk,align 1
store i32 9,i32*%rg,align 4
%rl=load i8*,i8**%m,align 8
%rm=getelementptr inbounds i8,i8*%rf,i64 8
%rn=bitcast i8*%rm to i8**
store i8*%rl,i8**%rn,align 8
%ro=getelementptr inbounds i8,i8*%rf,i64 16
%rp=bitcast i8*%ro to i32*
store i32 2,i32*%rp,align 4
ret i8*%rf
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13compileBtvEnvE_1323(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
t:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%f,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%r,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%f,align 8
%q=load i8*,i8**%e,align 8
br label%r
r:
%s=phi i8*[%q,%o],[%a,%t]
%u=phi i8*[%p,%o],[%b,%t]
store i8*null,i8**%f,align 8
store i8*%u,i8**%i,align 8
store i8*null,i8**%e,align 8
store i8*%s,i8**%h,align 8
%v=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4mapiE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 12)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177288,i32*%D,align 4
store i8*%B,i8**%f,align 8
%E=load i8*,i8**%h,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 28)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177304,i32*%K,align 4
%L=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7instMap_1417 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7instMap_1417 to void(...)*),void(...)**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 24
%S=bitcast i8*%R to i32*
store i32 -2147483647,i32*%S,align 4
%T=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%U=call fastcc i8*%y(i8*inreg%T,i8*inreg%I)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=bitcast i8**%i to i8***
%ab=load i8**,i8***%aa,align 8
%ac=load i8*,i8**%ab,align 8
%ad=call fastcc i8*%X(i8*inreg%Z,i8*inreg%ac)
store i8*%ad,i8**%e,align 8
%ae=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4mapiE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%af=getelementptr inbounds i8,i8*%ae,i64 16
%ag=bitcast i8*%af to i8*(i8*,i8*)**
%ah=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ag,align 8
%ai=bitcast i8*%ae to i8**
%aj=load i8*,i8**%ai,align 8
%ak=call fastcc i8*%ah(i8*inreg%aj,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cB,i64 0,i32 2)to i8*))
%al=getelementptr inbounds i8,i8*%ak,i64 16
%am=bitcast i8*%al to i8*(i8*,i8*)**
%an=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%am,align 8
%ao=bitcast i8*%ak to i8**
%ap=load i8*,i8**%ao,align 8
%aq=load i8*,i8**%e,align 8
%ar=call fastcc i8*%an(i8*inreg%ap,i8*inreg%aq)
store i8*%ar,i8**%f,align 8
%as=load i8*,i8**%h,align 8
%at=bitcast i8*%as to i32*
%au=load i32,i32*%at,align 4
%av=getelementptr inbounds i8,i8*%as,i64 8
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%j,align 8
%ay=getelementptr inbounds i8,i8*%as,i64 16
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%k,align 8
%aB=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 1,i32 inreg 8)
%aC=getelementptr inbounds i8,i8*%aB,i64 16
%aD=bitcast i8*%aC to i8*(i8*,i8*)**
%aE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aD,align 8
%aF=bitcast i8*%aB to i8**
%aG=load i8*,i8**%aF,align 8
%aH=call fastcc i8*%aE(i8*inreg%aG,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cC,i64 0,i32 2)to i8*))
%aI=getelementptr inbounds i8,i8*%aH,i64 16
%aJ=bitcast i8*%aI to i8*(i8*,i8*)**
%aK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aJ,align 8
%aL=bitcast i8*%aH to i8**
%aM=load i8*,i8**%aL,align 8
store i8*%aM,i8**%l,align 8
%aN=load i8*,i8**%h,align 8
%aO=getelementptr inbounds i8,i8*%aN,i64 24
%aP=bitcast i8*%aO to i8**
%aQ=load i8*,i8**%aP,align 8
store i8*%aQ,i8**%g,align 8
%aR=call i8*@sml_alloc(i32 inreg 20)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177296,i32*%aT,align 4
%aU=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=load i8*,i8**%f,align 8
%aX=getelementptr inbounds i8,i8*%aR,i64 8
%aY=bitcast i8*%aX to i8**
store i8*%aW,i8**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aR,i64 16
%a0=bitcast i8*%aZ to i32*
store i32 3,i32*%a0,align 4
%a1=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%a2=call fastcc i8*%aK(i8*inreg%a1,i8*inreg%aR)
store i8*%a2,i8**%l,align 8
%a3=call i8*@sml_alloc(i32 inreg 36)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177312,i32*%a5,align 4
store i8*%a3,i8**%g,align 8
%a6=getelementptr inbounds i8,i8*%a3,i64 4
%a7=bitcast i8*%a6 to i32*
store i32 0,i32*%a7,align 1
%a8=bitcast i8*%a3 to i32*
store i32%au,i32*%a8,align 4
%a9=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 8
%bb=bitcast i8*%ba to i8**
store i8*%a9,i8**%bb,align 8
%bc=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bd=getelementptr inbounds i8,i8*%a3,i64 16
%be=bitcast i8*%bd to i8**
store i8*%bc,i8**%be,align 8
%bf=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%bg=getelementptr inbounds i8,i8*%a3,i64 24
%bh=bitcast i8*%bg to i8**
store i8*%bf,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%a3,i64 32
%bj=bitcast i8*%bi to i32*
store i32 14,i32*%bj,align 4
%bk=call fastcc i8*@_SMLFN14BoundTypeVarID3Map10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bl=getelementptr inbounds i8,i8*%bk,i64 16
%bm=bitcast i8*%bl to i8*(i8*,i8*)**
%bn=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bm,align 8
%bo=bitcast i8*%bk to i8**
%bp=load i8*,i8**%bo,align 8
store i8*%bp,i8**%j,align 8
%bq=call i8*@sml_alloc(i32 inreg 12)#0
%br=getelementptr inbounds i8,i8*%bq,i64 -4
%bs=bitcast i8*%br to i32*
store i32 1342177288,i32*%bs,align 4
store i8*%bq,i8**%k,align 8
%bt=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bu=bitcast i8*%bq to i8**
store i8*%bt,i8**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bq,i64 8
%bw=bitcast i8*%bv to i32*
store i32 1,i32*%bw,align 4
%bx=call i8*@sml_alloc(i32 inreg 28)#0
%by=getelementptr inbounds i8,i8*%bx,i64 -4
%bz=bitcast i8*%by to i32*
store i32 1342177304,i32*%bz,align 4
%bA=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bB=bitcast i8*%bx to i8**
store i8*%bA,i8**%bB,align 8
%bC=getelementptr inbounds i8,i8*%bx,i64 8
%bD=bitcast i8*%bC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6btvEnv_1423 to void(...)*),void(...)**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bx,i64 16
%bF=bitcast i8*%bE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6btvEnv_1423 to void(...)*),void(...)**%bF,align 8
%bG=getelementptr inbounds i8,i8*%bx,i64 24
%bH=bitcast i8*%bG to i32*
store i32 -2147483647,i32*%bH,align 4
%bI=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bJ=call fastcc i8*%bn(i8*inreg%bI,i8*inreg%bx)
%bK=getelementptr inbounds i8,i8*%bJ,i64 16
%bL=bitcast i8*%bK to i8*(i8*,i8*)**
%bM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bL,align 8
%bN=bitcast i8*%bJ to i8**
%bO=load i8*,i8**%bN,align 8
%bP=load i8*,i8**%e,align 8
%bQ=call fastcc i8*%bM(i8*inreg%bO,i8*inreg%bP)
store i8*%bQ,i8**%g,align 8
%bR=bitcast i8**%h to i32**
%bS=load i32*,i32**%bR,align 8
%bT=load i32,i32*%bS,align 4
%bU=call fastcc i8*@_SMLFN12TypedCalcCon6btvEnvE(i8*inreg%bQ)
store i8*%bU,i8**%j,align 8
%bV=load i8*,i8**%h,align 8
%bW=getelementptr inbounds i8,i8*%bV,i64 8
%bX=bitcast i8*%bW to i8**
%bY=load i8*,i8**%bX,align 8
store i8*%bY,i8**%k,align 8
%bZ=call i8*@sml_alloc(i32 inreg 20)#0
%b0=getelementptr inbounds i8,i8*%bZ,i64 -4
%b1=bitcast i8*%b0 to i32*
store i32 1342177296,i32*%b1,align 4
%b2=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%b3=bitcast i8*%bZ to i8**
store i8*%b2,i8**%b3,align 8
%b4=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%b5=getelementptr inbounds i8,i8*%bZ,i64 8
%b6=bitcast i8*%b5 to i8**
store i8*%b4,i8**%b6,align 8
%b7=getelementptr inbounds i8,i8*%bZ,i64 16
%b8=bitcast i8*%b7 to i32*
store i32 3,i32*%b8,align 4
%b9=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%bZ)
store i8*%b9,i8**%j,align 8
%ca=load i8*,i8**%h,align 8
%cb=getelementptr inbounds i8,i8*%ca,i64 16
%cc=bitcast i8*%cb to i8**
%cd=load i8*,i8**%cc,align 8
store i8*%cd,i8**%k,align 8
%ce=getelementptr inbounds i8,i8*%ca,i64 24
%cf=bitcast i8*%ce to i8**
%cg=load i8*,i8**%cf,align 8
store i8*%cg,i8**%l,align 8
%ch=call i8*@sml_alloc(i32 inreg 36)#0
%ci=bitcast i8*%ch to i32*
%cj=getelementptr inbounds i8,i8*%ch,i64 -4
%ck=bitcast i8*%cj to i32*
store i32 1342177312,i32*%ck,align 4
%cl=getelementptr inbounds i8,i8*%ch,i64 4
%cm=bitcast i8*%cl to i32*
store i32 0,i32*%cm,align 1
store i32%bT,i32*%ci,align 4
%cn=load i8*,i8**%j,align 8
%co=getelementptr inbounds i8,i8*%ch,i64 8
%cp=bitcast i8*%co to i8**
store i8*%cn,i8**%cp,align 8
%cq=load i8*,i8**%k,align 8
%cr=getelementptr inbounds i8,i8*%ch,i64 16
%cs=bitcast i8*%cr to i8**
store i8*%cq,i8**%cs,align 8
%ct=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%cu=getelementptr inbounds i8,i8*%ch,i64 24
%cv=bitcast i8*%cu to i8**
store i8*%ct,i8**%cv,align 8
%cw=getelementptr inbounds i8,i8*%ch,i64 32
%cx=bitcast i8*%cw to i32*
store i32 14,i32*%cx,align 4
%cy=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 1,i32 inreg 8)
%cz=getelementptr inbounds i8,i8*%cy,i64 16
%cA=bitcast i8*%cz to i8*(i8*,i8*)**
%cB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cA,align 8
%cC=bitcast i8*%cy to i8**
%cD=load i8*,i8**%cC,align 8
%cE=call fastcc i8*%cB(i8*inreg%cD,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cE,i64 0,i32 2)to i8*))
%cF=getelementptr inbounds i8,i8*%cE,i64 16
%cG=bitcast i8*%cF to i8*(i8*,i8*)**
%cH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cG,align 8
%cI=bitcast i8*%cE to i8**
%cJ=load i8*,i8**%cI,align 8
store i8*%cJ,i8**%l,align 8
%cK=load i8*,i8**%h,align 8
%cL=getelementptr inbounds i8,i8*%cK,i64 24
%cM=bitcast i8*%cL to i8**
%cN=load i8*,i8**%cM,align 8
store i8*%cN,i8**%h,align 8
%cO=call i8*@sml_alloc(i32 inreg 20)#0
%cP=getelementptr inbounds i8,i8*%cO,i64 -4
%cQ=bitcast i8*%cP to i32*
store i32 1342177296,i32*%cQ,align 4
%cR=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cS=bitcast i8*%cO to i8**
store i8*%cR,i8**%cS,align 8
%cT=load i8*,i8**%f,align 8
%cU=getelementptr inbounds i8,i8*%cO,i64 8
%cV=bitcast i8*%cU to i8**
store i8*%cT,i8**%cV,align 8
%cW=getelementptr inbounds i8,i8*%cO,i64 16
%cX=bitcast i8*%cW to i32*
store i32 3,i32*%cX,align 4
%cY=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%cZ=call fastcc i8*%cH(i8*inreg%cY,i8*inreg%cO)
store i8*%cZ,i8**%l,align 8
%c0=call i8*@sml_alloc(i32 inreg 36)#0
%c1=getelementptr inbounds i8,i8*%c0,i64 -4
%c2=bitcast i8*%c1 to i32*
store i32 1342177312,i32*%c2,align 4
store i8*%c0,i8**%h,align 8
%c3=getelementptr inbounds i8,i8*%c0,i64 4
%c4=bitcast i8*%c3 to i32*
store i32 0,i32*%c4,align 1
%c5=bitcast i8*%c0 to i32*
store i32%bT,i32*%c5,align 4
%c6=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%c7=getelementptr inbounds i8,i8*%c0,i64 8
%c8=bitcast i8*%c7 to i8**
store i8*%c6,i8**%c8,align 8
%c9=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%da=getelementptr inbounds i8,i8*%c0,i64 16
%db=bitcast i8*%da to i8**
store i8*%c9,i8**%db,align 8
%dc=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%dd=getelementptr inbounds i8,i8*%c0,i64 24
%de=bitcast i8*%dd to i8**
store i8*%dc,i8**%de,align 8
%df=getelementptr inbounds i8,i8*%c0,i64 32
%dg=bitcast i8*%df to i32*
store i32 14,i32*%dg,align 4
%dh=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%dh)
%di=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%di)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cF,i64 0,i32 2)to i8*),i8**%c,align 8
%dj=call i8*@sml_alloc(i32 inreg 12)#0
%dk=getelementptr inbounds i8,i8*%dj,i64 -4
%dl=bitcast i8*%dk to i32*
store i32 1342177288,i32*%dl,align 4
store i8*%dj,i8**%d,align 8
%dm=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dn=bitcast i8*%dj to i8**
store i8*%dm,i8**%dn,align 8
%do=getelementptr inbounds i8,i8*%dj,i64 8
%dp=bitcast i8*%do to i32*
store i32 1,i32*%dp,align 4
%dq=call i8*@sml_alloc(i32 inreg 28)#0
%dr=getelementptr inbounds i8,i8*%dq,i64 -4
%ds=bitcast i8*%dr to i32*
store i32 1342177304,i32*%ds,align 4
%dt=load i8*,i8**%d,align 8
%du=bitcast i8*%dq to i8**
store i8*%dt,i8**%du,align 8
%dv=getelementptr inbounds i8,i8*%dq,i64 8
%dw=bitcast i8*%dv to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map3allE_678 to void(...)*),void(...)**%dw,align 8
%dx=getelementptr inbounds i8,i8*%dq,i64 16
%dy=bitcast i8*%dx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map3allE_1688 to void(...)*),void(...)**%dy,align 8
%dz=getelementptr inbounds i8,i8*%dq,i64 24
%dA=bitcast i8*%dz to i32*
store i32 -2147483647,i32*%dA,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%dh)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%di)
%dB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dC=call fastcc i8*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map3allE_1688(i8*inreg%dt,i8*inreg%dB)
%dD=bitcast i8*%dC to i32*
%dE=load i32,i32*%dD,align 4
%dF=icmp eq i32%dE,0
br i1%dF,label%eB,label%dG
dG:
%dH=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%dI=getelementptr inbounds i8,i8*%dH,i64 16
%dJ=bitcast i8*%dI to i8*(i8*,i8*)**
%dK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dJ,align 8
%dL=bitcast i8*%dH to i8**
%dM=load i8*,i8**%dL,align 8
store i8*%dM,i8**%e,align 8
%dN=call i8*@sml_alloc(i32 inreg 12)#0
%dO=getelementptr inbounds i8,i8*%dN,i64 -4
%dP=bitcast i8*%dO to i32*
store i32 1342177288,i32*%dP,align 4
store i8*%dN,i8**%j,align 8
%dQ=load i8*,i8**%h,align 8
%dR=bitcast i8*%dN to i8**
store i8*%dQ,i8**%dR,align 8
%dS=getelementptr inbounds i8,i8*%dN,i64 8
%dT=bitcast i8*%dS to i32*
store i32 1,i32*%dT,align 4
%dU=call i8*@sml_alloc(i32 inreg 28)#0
%dV=getelementptr inbounds i8,i8*%dU,i64 -4
%dW=bitcast i8*%dV to i32*
store i32 1342177304,i32*%dW,align 4
%dX=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dY=bitcast i8*%dU to i8**
store i8*%dX,i8**%dY,align 8
%dZ=getelementptr inbounds i8,i8*%dU,i64 8
%d0=bitcast i8*%dZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13compileBtvEnvE_1428 to void(...)*),void(...)**%d0,align 8
%d1=getelementptr inbounds i8,i8*%dU,i64 16
%d2=bitcast i8*%d1 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13compileBtvEnvE_1428 to void(...)*),void(...)**%d2,align 8
%d3=getelementptr inbounds i8,i8*%dU,i64 24
%d4=bitcast i8*%d3 to i32*
store i32 -2147483647,i32*%d4,align 4
%d5=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%d6=call fastcc i8*%dK(i8*inreg%d5,i8*inreg%dU)
%d7=getelementptr inbounds i8,i8*%d6,i64 16
%d8=bitcast i8*%d7 to i8*(i8*,i8*)**
%d9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d8,align 8
%ea=bitcast i8*%d6 to i8**
%eb=load i8*,i8**%ea,align 8
%ec=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ed=getelementptr inbounds i8,i8*%ec,i64 8
%ee=bitcast i8*%ed to i8**
%ef=load i8*,i8**%ee,align 8
%eg=call fastcc i8*%d9(i8*inreg%eb,i8*inreg%ef)
store i8*%eg,i8**%e,align 8
%eh=call i8*@sml_alloc(i32 inreg 28)#0
%ei=getelementptr inbounds i8,i8*%eh,i64 -4
%ej=bitcast i8*%ei to i32*
store i32 1342177304,i32*%ej,align 4
store i8*%eh,i8**%i,align 8
%ek=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%el=bitcast i8*%eh to i8**
store i8*%ek,i8**%el,align 8
%em=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%en=getelementptr inbounds i8,i8*%eh,i64 8
%eo=bitcast i8*%en to i8**
store i8*%em,i8**%eo,align 8
%ep=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eq=getelementptr inbounds i8,i8*%eh,i64 16
%er=bitcast i8*%eq to i8**
store i8*%ep,i8**%er,align 8
%es=getelementptr inbounds i8,i8*%eh,i64 24
%et=bitcast i8*%es to i32*
store i32 7,i32*%et,align 4
%eu=call i8*@sml_alloc(i32 inreg 12)#0
%ev=getelementptr inbounds i8,i8*%eu,i64 -4
%ew=bitcast i8*%ev to i32*
store i32 1342177288,i32*%ew,align 4
%ex=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ey=bitcast i8*%eu to i8**
store i8*%ex,i8**%ey,align 8
%ez=getelementptr inbounds i8,i8*%eu,i64 8
%eA=bitcast i8*%ez to i32*
store i32 1,i32*%eA,align 4
br label%eC
eB:
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%i,align 8
br label%eC
eC:
%eD=phi i8*[null,%eB],[%eu,%dG]
store i8*%eD,i8**%e,align 8
%eE=call i8*@sml_alloc(i32 inreg 20)#0
%eF=getelementptr inbounds i8,i8*%eE,i64 -4
%eG=bitcast i8*%eF to i32*
store i32 1342177296,i32*%eG,align 4
%eH=load i8*,i8**%h,align 8
%eI=bitcast i8*%eE to i8**
store i8*%eH,i8**%eI,align 8
%eJ=load i8*,i8**%e,align 8
%eK=getelementptr inbounds i8,i8*%eE,i64 8
%eL=bitcast i8*%eK to i8**
store i8*%eJ,i8**%eL,align 8
%eM=getelementptr inbounds i8,i8*%eE,i64 16
%eN=bitcast i8*%eM to i32*
store i32 3,i32*%eN,align 4
ret i8*%eE
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15compileTvarKindE_1325(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%m,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%d,align 8
%l=load i8*,i8**%c,align 8
br label%m
m:
%n=phi i8*[%l,%j],[%a,%o]
%p=phi i8*[%k,%j],[%b,%o]
store i8*%n,i8**%d,align 8
%q=icmp eq i8*%p,null
br i1%q,label%aI,label%r
r:
%s=bitcast i8*%p to i32*
%t=load i32,i32*%s,align 4
switch i32%t,label%u[
i32 0,label%ch
i32 1,label%aJ
i32 3,label%aI
i32 2,label%M
]
u:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%v=load i8*,i8**@_SMLZ5Match,align 8
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%d,align 8
%z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cG,i64 0,i32 2,i64 0),i8**%C,align 8
%D=getelementptr inbounds i8,i8*%w,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 60)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177336,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%F,i64 56
%J=bitcast i8*%I to i32*
store i32 1,i32*%J,align 4
%K=load i8*,i8**%d,align 8
%L=bitcast i8*%F to i8**
store i8*%K,i8**%L,align 8
call void@sml_raise(i8*inreg%F)#1
unreachable
M:
%N=getelementptr inbounds i8,i8*%p,i64 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%c,align 8
%Q=call fastcc i8*@_SMLFN11RecordLabel3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%e,align 8
%W=call i8*@sml_alloc(i32 inreg 12)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177288,i32*%Y,align 4
store i8*%W,i8**%f,align 8
%Z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%W,i64 8
%ac=bitcast i8*%ab to i32*
store i32 1,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 28)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177304,i32*%af,align 4
%ag=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15compileTvarKindE_1432 to void(...)*),void(...)**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 16
%al=bitcast i8*%ak to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15compileTvarKindE_1432 to void(...)*),void(...)**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 24
%an=bitcast i8*%am to i32*
store i32 -2147483647,i32*%an,align 4
%ao=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ap=call fastcc i8*%T(i8*inreg%ao,i8*inreg%ad)
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=call fastcc i8*%as(i8*inreg%au,i8*inreg%av)
store i8*%aw,i8**%c,align 8
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=bitcast i8*%ax to i32*
%az=getelementptr inbounds i8,i8*%ax,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
%aB=getelementptr inbounds i8,i8*%ax,i64 4
%aC=bitcast i8*%aB to i32*
store i32 0,i32*%aC,align 1
store i32 2,i32*%ay,align 4
%aD=load i8*,i8**%c,align 8
%aE=getelementptr inbounds i8,i8*%ax,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 16
%aH=bitcast i8*%aG to i32*
store i32 2,i32*%aH,align 4
ret i8*%ax
aI:
ret i8*null
aJ:
%aK=getelementptr inbounds i8,i8*%p,i64 8
%aL=bitcast i8*%aK to i8**
%aM=load i8*,i8**%aL,align 8
store i8*%aM,i8**%e,align 8
%aN=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aO=getelementptr inbounds i8,i8*%aN,i64 16
%aP=bitcast i8*%aO to i8*(i8*,i8*)**
%aQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aP,align 8
%aR=bitcast i8*%aN to i8**
%aS=load i8*,i8**%aR,align 8
store i8*%aS,i8**%c,align 8
%aT=call i8*@sml_alloc(i32 inreg 12)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177288,i32*%aV,align 4
store i8*%aT,i8**%f,align 8
%aW=load i8*,i8**%d,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aT,i64 8
%aZ=bitcast i8*%aY to i32*
store i32 1,i32*%aZ,align 4
%a0=call i8*@sml_alloc(i32 inreg 28)#0
%a1=getelementptr inbounds i8,i8*%a0,i64 -4
%a2=bitcast i8*%a1 to i32*
store i32 1342177304,i32*%a2,align 4
%a3=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a4=bitcast i8*%a0 to i8**
store i8*%a3,i8**%a4,align 8
%a5=getelementptr inbounds i8,i8*%a0,i64 8
%a6=bitcast i8*%a5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15compileTvarKindE_1430 to void(...)*),void(...)**%a6,align 8
%a7=getelementptr inbounds i8,i8*%a0,i64 16
%a8=bitcast i8*%a7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15compileTvarKindE_1430 to void(...)*),void(...)**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a0,i64 24
%ba=bitcast i8*%a9 to i32*
store i32 -2147483647,i32*%ba,align 4
%bb=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bc=call fastcc i8*%aQ(i8*inreg%bb,i8*inreg%a0)
%bd=getelementptr inbounds i8,i8*%bc,i64 16
%be=bitcast i8*%bd to i8*(i8*,i8*)**
%bf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%be,align 8
%bg=bitcast i8*%bc to i8**
%bh=load i8*,i8**%bg,align 8
%bi=bitcast i8**%e to i8***
%bj=load i8**,i8***%bi,align 8
%bk=load i8*,i8**%bj,align 8
%bl=call fastcc i8*%bf(i8*inreg%bh,i8*inreg%bk)
store i8*%bl,i8**%c,align 8
%bm=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bn=getelementptr inbounds i8,i8*%bm,i64 16
%bo=bitcast i8*%bn to i8*(i8*,i8*)**
%bp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bo,align 8
%bq=bitcast i8*%bm to i8**
%br=load i8*,i8**%bq,align 8
store i8*%br,i8**%f,align 8
%bs=call i8*@sml_alloc(i32 inreg 12)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177288,i32*%bu,align 4
store i8*%bs,i8**%g,align 8
%bv=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bw=bitcast i8*%bs to i8**
store i8*%bv,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bs,i64 8
%by=bitcast i8*%bx to i32*
store i32 1,i32*%by,align 4
%bz=call i8*@sml_alloc(i32 inreg 28)#0
%bA=getelementptr inbounds i8,i8*%bz,i64 -4
%bB=bitcast i8*%bA to i32*
store i32 1342177304,i32*%bB,align 4
%bC=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bD=bitcast i8*%bz to i8**
store i8*%bC,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bz,i64 8
%bF=bitcast i8*%bE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15compileTvarKindE_1431 to void(...)*),void(...)**%bF,align 8
%bG=getelementptr inbounds i8,i8*%bz,i64 16
%bH=bitcast i8*%bG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15compileTvarKindE_1431 to void(...)*),void(...)**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bz,i64 24
%bJ=bitcast i8*%bI to i32*
store i32 -2147483647,i32*%bJ,align 4
%bK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bL=call fastcc i8*%bp(i8*inreg%bK,i8*inreg%bz)
%bM=getelementptr inbounds i8,i8*%bL,i64 16
%bN=bitcast i8*%bM to i8*(i8*,i8*)**
%bO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bN,align 8
%bP=bitcast i8*%bL to i8**
%bQ=load i8*,i8**%bP,align 8
%bR=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bS=getelementptr inbounds i8,i8*%bR,i64 8
%bT=bitcast i8*%bS to i8**
%bU=load i8*,i8**%bT,align 8
%bV=call fastcc i8*%bO(i8*inreg%bQ,i8*inreg%bU)
store i8*%bV,i8**%d,align 8
%bW=call i8*@sml_alloc(i32 inreg 20)#0
%bX=getelementptr inbounds i8,i8*%bW,i64 -4
%bY=bitcast i8*%bX to i32*
store i32 1342177296,i32*%bY,align 4
store i8*%bW,i8**%e,align 8
%bZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b0=bitcast i8*%bW to i8**
store i8*%bZ,i8**%b0,align 8
%b1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b2=getelementptr inbounds i8,i8*%bW,i64 8
%b3=bitcast i8*%b2 to i8**
store i8*%b1,i8**%b3,align 8
%b4=getelementptr inbounds i8,i8*%bW,i64 16
%b5=bitcast i8*%b4 to i32*
store i32 3,i32*%b5,align 4
%b6=call i8*@sml_alloc(i32 inreg 20)#0
%b7=bitcast i8*%b6 to i32*
%b8=getelementptr inbounds i8,i8*%b6,i64 -4
%b9=bitcast i8*%b8 to i32*
store i32 1342177296,i32*%b9,align 4
%ca=getelementptr inbounds i8,i8*%b6,i64 4
%cb=bitcast i8*%ca to i32*
store i32 0,i32*%cb,align 1
store i32 1,i32*%b7,align 4
%cc=load i8*,i8**%e,align 8
%cd=getelementptr inbounds i8,i8*%b6,i64 8
%ce=bitcast i8*%cd to i8**
store i8*%cc,i8**%ce,align 8
%cf=getelementptr inbounds i8,i8*%b6,i64 16
%cg=bitcast i8*%cf to i32*
store i32 2,i32*%cg,align 4
ret i8*%b6
ch:
%ci=getelementptr inbounds i8,i8*%p,i64 8
%cj=bitcast i8*%ci to i8**
%ck=load i8*,i8**%cj,align 8
store i8*%ck,i8**%c,align 8
%cl=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cm=getelementptr inbounds i8,i8*%cl,i64 16
%cn=bitcast i8*%cm to i8*(i8*,i8*)**
%co=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cn,align 8
%cp=bitcast i8*%cl to i8**
%cq=load i8*,i8**%cp,align 8
store i8*%cq,i8**%e,align 8
%cr=call i8*@sml_alloc(i32 inreg 12)#0
%cs=getelementptr inbounds i8,i8*%cr,i64 -4
%ct=bitcast i8*%cs to i32*
store i32 1342177288,i32*%ct,align 4
store i8*%cr,i8**%f,align 8
%cu=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cv=bitcast i8*%cr to i8**
store i8*%cu,i8**%cv,align 8
%cw=getelementptr inbounds i8,i8*%cr,i64 8
%cx=bitcast i8*%cw to i32*
store i32 1,i32*%cx,align 4
%cy=call i8*@sml_alloc(i32 inreg 28)#0
%cz=getelementptr inbounds i8,i8*%cy,i64 -4
%cA=bitcast i8*%cz to i32*
store i32 1342177304,i32*%cA,align 4
%cB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cC=bitcast i8*%cy to i8**
store i8*%cB,i8**%cC,align 8
%cD=getelementptr inbounds i8,i8*%cy,i64 8
%cE=bitcast i8*%cD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15compileTvarKindE_1429 to void(...)*),void(...)**%cE,align 8
%cF=getelementptr inbounds i8,i8*%cy,i64 16
%cG=bitcast i8*%cF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15compileTvarKindE_1429 to void(...)*),void(...)**%cG,align 8
%cH=getelementptr inbounds i8,i8*%cy,i64 24
%cI=bitcast i8*%cH to i32*
store i32 -2147483647,i32*%cI,align 4
%cJ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cK=call fastcc i8*%co(i8*inreg%cJ,i8*inreg%cy)
%cL=getelementptr inbounds i8,i8*%cK,i64 16
%cM=bitcast i8*%cL to i8*(i8*,i8*)**
%cN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cM,align 8
%cO=bitcast i8*%cK to i8**
%cP=load i8*,i8**%cO,align 8
%cQ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cR=call fastcc i8*%cN(i8*inreg%cP,i8*inreg%cQ)
store i8*%cR,i8**%c,align 8
%cS=call i8*@sml_alloc(i32 inreg 20)#0
%cT=getelementptr inbounds i8,i8*%cS,i64 -4
%cU=bitcast i8*%cT to i32*
store i32 1342177296,i32*%cU,align 4
%cV=bitcast i8*%cS to i64*
store i64 0,i64*%cV,align 4
%cW=load i8*,i8**%c,align 8
%cX=getelementptr inbounds i8,i8*%cS,i64 8
%cY=bitcast i8*%cX to i8**
store i8*%cW,i8**%cY,align 8
%cZ=getelementptr inbounds i8,i8*%cS,i64 16
%c0=bitcast i8*%cZ to i32*
store i32 2,i32*%c0,align 4
ret i8*%cS
}
define internal fastcc i8*@_SMLLN17PolyTyElimination20compileOprimSelectorE_1326(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
store i8*null,i8**%c,align 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=getelementptr inbounds i8,i8*%m,i64 16
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=getelementptr inbounds i8,i8*%m,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination20compileOverloadMatchE_1327(i8*inreg%k,i8*inreg%u)
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 28)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177304,i32*%y,align 4
%z=getelementptr inbounds i8,i8*%w,i64 20
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 1
%B=load i8*,i8**%d,align 8
%C=bitcast i8*%w to i8**
store i8*%B,i8**%C,align 8
%D=load i8*,i8**%c,align 8
%E=getelementptr inbounds i8,i8*%w,i64 8
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%w,i64 16
%H=bitcast i8*%G to i32*
store i32%r,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%w,i64 24
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLN17PolyTyElimination20compileOverloadMatchE_1327(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%n,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%d,align 8
%m=load i8*,i8**%c,align 8
br label%n
n:
%o=phi i8*[%m,%k],[%a,%p]
%q=phi i8*[%l,%k],[%b,%p]
store i8*%o,i8**%d,align 8
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
switch i32%s,label%t[
i32 1,label%b4
i32 2,label%aV
i32 0,label%L
]
t:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%u=load i8*,i8**@_SMLZ5Match,align 8
store i8*%u,i8**%c,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%d,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cH,i64 0,i32 2,i64 0),i8**%B,align 8
%C=getelementptr inbounds i8,i8*%v,i64 16
%D=bitcast i8*%C to i32*
store i32 3,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 60)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177336,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%E,i64 56
%I=bitcast i8*%H to i32*
store i32 1,i32*%I,align 4
%J=load i8*,i8**%d,align 8
%K=bitcast i8*%E to i8**
store i8*%J,i8**%K,align 8
call void@sml_raise(i8*inreg%E)#1
unreachable
L:
%M=getelementptr inbounds i8,i8*%q,i64 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%e,align 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
%R=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%o,i8*inreg%Q)
store i8*%R,i8**%c,align 8
%S=call fastcc i8*@_SMLFN5TypID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%f,align 8
%Y=call i8*@sml_alloc(i32 inreg 12)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177288,i32*%aa,align 4
store i8*%Y,i8**%g,align 8
%ab=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
%af=call i8*@sml_alloc(i32 inreg 28)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177304,i32*%ah,align 4
%ai=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination20compileOverloadMatchE_1436 to void(...)*),void(...)**%al,align 8
%am=getelementptr inbounds i8,i8*%af,i64 16
%an=bitcast i8*%am to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination20compileOverloadMatchE_1436 to void(...)*),void(...)**%an,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 24
%ap=bitcast i8*%ao to i32*
store i32 -2147483647,i32*%ap,align 4
%aq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ar=call fastcc i8*%V(i8*inreg%aq,i8*inreg%af)
%as=getelementptr inbounds i8,i8*%ar,i64 16
%at=bitcast i8*%as to i8*(i8*,i8*)**
%au=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%at,align 8
%av=bitcast i8*%ar to i8**
%aw=load i8*,i8**%av,align 8
%ax=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ay=getelementptr inbounds i8,i8*%ax,i64 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
%aB=call fastcc i8*%au(i8*inreg%aw,i8*inreg%aA)
store i8*%aB,i8**%d,align 8
%aC=call i8*@sml_alloc(i32 inreg 20)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177296,i32*%aE,align 4
store i8*%aC,i8**%e,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=bitcast i8*%aC to i8**
store i8*%aF,i8**%aG,align 8
%aH=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aI=getelementptr inbounds i8,i8*%aC,i64 8
%aJ=bitcast i8*%aI to i8**
store i8*%aH,i8**%aJ,align 8
%aK=getelementptr inbounds i8,i8*%aC,i64 16
%aL=bitcast i8*%aK to i32*
store i32 3,i32*%aL,align 4
%aM=call i8*@sml_alloc(i32 inreg 20)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177296,i32*%aO,align 4
%aP=bitcast i8*%aM to i64*
store i64 0,i64*%aP,align 4
%aQ=load i8*,i8**%e,align 8
%aR=getelementptr inbounds i8,i8*%aM,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aM,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aM
aV:
%aW=getelementptr inbounds i8,i8*%q,i64 8
%aX=bitcast i8*%aW to i8**
%aY=load i8*,i8**%aX,align 8
store i8*%aY,i8**%c,align 8
%aZ=getelementptr inbounds i8,i8*%aY,i64 8
%a0=bitcast i8*%aZ to i8**
%a1=load i8*,i8**%a0,align 8
store i8*%a1,i8**%e,align 8
%a2=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%a3=getelementptr inbounds i8,i8*%a2,i64 16
%a4=bitcast i8*%a3 to i8*(i8*,i8*)**
%a5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a4,align 8
%a6=bitcast i8*%a2 to i8**
%a7=load i8*,i8**%a6,align 8
store i8*%a7,i8**%g,align 8
%a8=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%a9=getelementptr inbounds i8,i8*%a8,i64 16
%ba=bitcast i8*%a9 to i8*(i8*,i8*)**
%bb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ba,align 8
%bc=bitcast i8*%a8 to i8**
%bd=load i8*,i8**%bc,align 8
store i8*%bd,i8**%f,align 8
%be=call i8*@sml_alloc(i32 inreg 12)#0
%bf=getelementptr inbounds i8,i8*%be,i64 -4
%bg=bitcast i8*%bf to i32*
store i32 1342177288,i32*%bg,align 4
store i8*%be,i8**%h,align 8
%bh=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bi=bitcast i8*%be to i8**
store i8*%bh,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%be,i64 8
%bk=bitcast i8*%bj to i32*
store i32 1,i32*%bk,align 4
%bl=call i8*@sml_alloc(i32 inreg 28)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177304,i32*%bn,align 4
%bo=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bp=bitcast i8*%bl to i8**
store i8*%bo,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bl,i64 8
%br=bitcast i8*%bq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination20compileOverloadMatchE_1435 to void(...)*),void(...)**%br,align 8
%bs=getelementptr inbounds i8,i8*%bl,i64 16
%bt=bitcast i8*%bs to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination20compileOverloadMatchE_1435 to void(...)*),void(...)**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bl,i64 24
%bv=bitcast i8*%bu to i32*
store i32 -2147483647,i32*%bv,align 4
%bw=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bx=call fastcc i8*%bb(i8*inreg%bw,i8*inreg%bl)
%by=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bz=call fastcc i8*%a5(i8*inreg%by,i8*inreg%bx)
%bA=getelementptr inbounds i8,i8*%bz,i64 16
%bB=bitcast i8*%bA to i8*(i8*,i8*)**
%bC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bB,align 8
%bD=bitcast i8*%bz to i8**
%bE=load i8*,i8**%bD,align 8
%bF=bitcast i8**%c to i8***
%bG=load i8**,i8***%bF,align 8
store i8*null,i8**%c,align 8
%bH=load i8*,i8**%bG,align 8
%bI=call fastcc i8*%bC(i8*inreg%bE,i8*inreg%bH)
store i8*%bI,i8**%c,align 8
%bJ=call i8*@sml_alloc(i32 inreg 20)#0
%bK=getelementptr inbounds i8,i8*%bJ,i64 -4
%bL=bitcast i8*%bK to i32*
store i32 1342177296,i32*%bL,align 4
store i8*%bJ,i8**%d,align 8
%bM=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bN=bitcast i8*%bJ to i8**
store i8*%bM,i8**%bN,align 8
%bO=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bP=getelementptr inbounds i8,i8*%bJ,i64 8
%bQ=bitcast i8*%bP to i8**
store i8*%bO,i8**%bQ,align 8
%bR=getelementptr inbounds i8,i8*%bJ,i64 16
%bS=bitcast i8*%bR to i32*
store i32 3,i32*%bS,align 4
%bT=call i8*@sml_alloc(i32 inreg 20)#0
%bU=bitcast i8*%bT to i32*
%bV=getelementptr inbounds i8,i8*%bT,i64 -4
%bW=bitcast i8*%bV to i32*
store i32 1342177296,i32*%bW,align 4
%bX=getelementptr inbounds i8,i8*%bT,i64 4
%bY=bitcast i8*%bX to i32*
store i32 0,i32*%bY,align 1
store i32 2,i32*%bU,align 4
%bZ=load i8*,i8**%d,align 8
%b0=getelementptr inbounds i8,i8*%bT,i64 8
%b1=bitcast i8*%b0 to i8**
store i8*%bZ,i8**%b1,align 8
%b2=getelementptr inbounds i8,i8*%bT,i64 16
%b3=bitcast i8*%b2 to i32*
store i32 2,i32*%b3,align 4
ret i8*%bT
b4:
%b5=getelementptr inbounds i8,i8*%q,i64 8
%b6=bitcast i8*%b5 to i8**
%b7=load i8*,i8**%b6,align 8
store i8*%b7,i8**%c,align 8
%b8=bitcast i8*%b7 to i8**
%b9=load i8*,i8**%b8,align 8
store i8*%b9,i8**%e,align 8
%ca=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cb=getelementptr inbounds i8,i8*%ca,i64 16
%cc=bitcast i8*%cb to i8*(i8*,i8*)**
%cd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cc,align 8
%ce=bitcast i8*%ca to i8**
%cf=load i8*,i8**%ce,align 8
store i8*%cf,i8**%g,align 8
%cg=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ch=getelementptr inbounds i8,i8*%cg,i64 16
%ci=bitcast i8*%ch to i8*(i8*,i8*)**
%cj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ci,align 8
%ck=bitcast i8*%cg to i8**
%cl=load i8*,i8**%ck,align 8
store i8*%cl,i8**%f,align 8
%cm=call i8*@sml_alloc(i32 inreg 12)#0
%cn=getelementptr inbounds i8,i8*%cm,i64 -4
%co=bitcast i8*%cn to i32*
store i32 1342177288,i32*%co,align 4
store i8*%cm,i8**%h,align 8
%cp=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cq=bitcast i8*%cm to i8**
store i8*%cp,i8**%cq,align 8
%cr=getelementptr inbounds i8,i8*%cm,i64 8
%cs=bitcast i8*%cr to i32*
store i32 1,i32*%cs,align 4
%ct=call i8*@sml_alloc(i32 inreg 28)#0
%cu=getelementptr inbounds i8,i8*%ct,i64 -4
%cv=bitcast i8*%cu to i32*
store i32 1342177304,i32*%cv,align 4
%cw=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cx=bitcast i8*%ct to i8**
store i8*%cw,i8**%cx,align 8
%cy=getelementptr inbounds i8,i8*%ct,i64 8
%cz=bitcast i8*%cy to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination20compileOverloadMatchE_1434 to void(...)*),void(...)**%cz,align 8
%cA=getelementptr inbounds i8,i8*%ct,i64 16
%cB=bitcast i8*%cA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination20compileOverloadMatchE_1434 to void(...)*),void(...)**%cB,align 8
%cC=getelementptr inbounds i8,i8*%ct,i64 24
%cD=bitcast i8*%cC to i32*
store i32 -2147483647,i32*%cD,align 4
%cE=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cF=call fastcc i8*%cj(i8*inreg%cE,i8*inreg%ct)
%cG=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cH=call fastcc i8*%cd(i8*inreg%cG,i8*inreg%cF)
%cI=getelementptr inbounds i8,i8*%cH,i64 16
%cJ=bitcast i8*%cI to i8*(i8*,i8*)**
%cK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cJ,align 8
%cL=bitcast i8*%cH to i8**
%cM=load i8*,i8**%cL,align 8
%cN=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cO=getelementptr inbounds i8,i8*%cN,i64 8
%cP=bitcast i8*%cO to i8**
%cQ=load i8*,i8**%cP,align 8
%cR=call fastcc i8*%cK(i8*inreg%cM,i8*inreg%cQ)
store i8*%cR,i8**%c,align 8
%cS=call i8*@sml_alloc(i32 inreg 20)#0
%cT=getelementptr inbounds i8,i8*%cS,i64 -4
%cU=bitcast i8*%cT to i32*
store i32 1342177296,i32*%cU,align 4
store i8*%cS,i8**%d,align 8
%cV=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cW=bitcast i8*%cS to i8**
store i8*%cV,i8**%cW,align 8
%cX=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cY=getelementptr inbounds i8,i8*%cS,i64 8
%cZ=bitcast i8*%cY to i8**
store i8*%cX,i8**%cZ,align 8
%c0=getelementptr inbounds i8,i8*%cS,i64 16
%c1=bitcast i8*%c0 to i32*
store i32 3,i32*%c1,align 4
%c2=call i8*@sml_alloc(i32 inreg 20)#0
%c3=bitcast i8*%c2 to i32*
%c4=getelementptr inbounds i8,i8*%c2,i64 -4
%c5=bitcast i8*%c4 to i32*
store i32 1342177296,i32*%c5,align 4
%c6=getelementptr inbounds i8,i8*%c2,i64 4
%c7=bitcast i8*%c6 to i32*
store i32 0,i32*%c7,align 1
store i32 1,i32*%c3,align 4
%c8=load i8*,i8**%d,align 8
%c9=getelementptr inbounds i8,i8*%c2,i64 8
%da=bitcast i8*%c9 to i8**
store i8*%c8,i8**%da,align 8
%db=getelementptr inbounds i8,i8*%c2,i64 16
%dc=bitcast i8*%db to i32*
store i32 2,i32*%dc,align 4
ret i8*%c2
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18compileCodeEntryTyE_1329(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
store i8*%m,i8**%f,align 8
%o=getelementptr inbounds i8,i8*%m,i64 8
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=getelementptr inbounds i8,i8*%m,i64 24
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
%x=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
store i8*null,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=call fastcc i8*@_SMLLN17PolyTyElimination13compileBtvEnvE_1323(i8*inreg%D,i8*inreg%u)
store i8*%E,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%E,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
%I=icmp eq i8*%H,null
br i1%I,label%J,label%L
J:
%K=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
br label%P
L:
%M=bitcast i8*%H to i8***
%N=load i8**,i8***%M,align 8
%O=load i8*,i8**%N,align 8
br label%P
P:
%Q=phi i8*[%O,%L],[%K,%J]
store i8*%Q,i8**%c,align 8
%R=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%e,align 8
%X=call i8*@sml_alloc(i32 inreg 12)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177288,i32*%Z,align 4
store i8*%X,i8**%g,align 8
%aa=load i8*,i8**%d,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%X,i64 8
%ad=bitcast i8*%ac to i32*
store i32 1,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
%ah=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ae,i64 8
%ak=bitcast i8*%aj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18compileCodeEntryTyE_1448 to void(...)*),void(...)**%ak,align 8
%al=getelementptr inbounds i8,i8*%ae,i64 16
%am=bitcast i8*%al to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18compileCodeEntryTyE_1448 to void(...)*),void(...)**%am,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 24
%ao=bitcast i8*%an to i32*
store i32 -2147483647,i32*%ao,align 4
%ap=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aq=call fastcc i8*%U(i8*inreg%ap,i8*inreg%ae)
%ar=getelementptr inbounds i8,i8*%aq,i64 16
%as=bitcast i8*%ar to i8*(i8*,i8*)**
%at=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%as,align 8
%au=bitcast i8*%aq to i8**
%av=load i8*,i8**%au,align 8
%aw=bitcast i8**%f to i8***
%ax=load i8**,i8***%aw,align 8
%ay=load i8*,i8**%ax,align 8
%az=call fastcc i8*%at(i8*inreg%av,i8*inreg%ay)
store i8*%az,i8**%e,align 8
%aA=bitcast i8**%d to i8***
%aB=load i8**,i8***%aA,align 8
store i8*null,i8**%d,align 8
%aC=load i8*,i8**%aB,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=getelementptr inbounds i8,i8*%aD,i64 16
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
%aH=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%aC,i8*inreg%aG)
store i8*%aH,i8**%d,align 8
%aI=call i8*@sml_alloc(i32 inreg 36)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177312,i32*%aK,align 4
%aL=getelementptr inbounds i8,i8*%aI,i64 12
%aM=bitcast i8*%aL to i32*
store i32 0,i32*%aM,align 1
%aN=load i8*,i8**%e,align 8
%aO=bitcast i8*%aI to i8**
store i8*%aN,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 8
%aQ=bitcast i8*%aP to i32*
store i32%q,i32*%aQ,align 4
%aR=load i8*,i8**%d,align 8
%aS=getelementptr inbounds i8,i8*%aI,i64 16
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=load i8*,i8**%c,align 8
%aV=getelementptr inbounds i8,i8*%aI,i64 24
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aI,i64 32
%aY=bitcast i8*%aX to i32*
store i32 13,i32*%aY,align 4
ret i8*%aI
}
define internal fastcc i8*@_SMLLN17PolyTyElimination11compileKindE_1331(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%a,%m]
%n=phi i8*[%i,%h],[%b,%m]
store i8*null,i8**%c,align 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=getelementptr inbounds i8,i8*%n,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%e,align 8
%t=getelementptr inbounds i8,i8*%n,i64 16
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*@_SMLLN17PolyTyElimination15compileTvarKindE_1325(i8*inreg%l,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%d,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%e,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=load i8*,i8**%c,align 8
%G=getelementptr inbounds i8,i8*%x,i64 16
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%x,i64 24
%J=bitcast i8*%I to i32*
store i32 7,i32*%J,align 4
ret i8*%x
}
define internal fastcc i8*@_SMLL13dynamicKindOf_1452(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
store i8*null,i8**%b,align 8
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%n,label%N
n:
%o=call fastcc i8*@_SMLFN16DynamicKindUtils16kindOfStaticKindE(i8*inreg%i)
%p=icmp eq i8*%o,null
br i1%p,label%q,label%K
q:
%r=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%r,i8**%b,align 8
%s=call i8*@sml_alloc(i32 inreg 28)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177304,i32*%u,align 4
store i8*%s,i8**%c,align 8
%v=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@cO,i64 0,i32 2,i64 0),i8**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@cP,i64 0,i32 2,i64 0),i8**%A,align 8
%B=getelementptr inbounds i8,i8*%s,i64 24
%C=bitcast i8*%B to i32*
store i32 7,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 60)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177336,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%D,i64 56
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=load i8*,i8**%c,align 8
%J=bitcast i8*%D to i8**
store i8*%I,i8**%J,align 8
call void@sml_raise(i8*inreg%D)#1
unreachable
K:
%L=bitcast i8*%o to i8**
%M=load i8*,i8**%L,align 8
ret i8*%M
N:
%O=bitcast i8*%l to i8**
%P=load i8*,i8**%O,align 8
ret i8*%P
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9benchmarkE_1454(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%e,label%p
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%p,label%j
j:
%k=load i32,i32*@dQ,align 8
%l=add nsw i32%k,1
store i32%l,i32*@dQ,align 8
%m=tail call i8*@sml_alloc(i32 inreg 12)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177288,i32*%o,align 4
call void@llvm.memset.p0i8.i64(i8*%m,i8 0,i64 12,i1 false)
ret i8*%m
p:
ret i8*null
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9benchmarkE_1456(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=icmp eq i8*%m,null
br i1%n,label%o,label%p
o:
ret i8*null
p:
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%b,align 8
%s=getelementptr inbounds i8,i8*%j,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=icmp eq i8*%u,null
br i1%v,label%w,label%z
w:
%x=load i32,i32*@dI,align 8
%y=add nsw i32%x,1
store i32%y,i32*@dI,align 8
ret i8*null
z:
%A=bitcast i8*%u to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%c,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=load i8*,i8**%b,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=call fastcc i32@_SMLFN16DynamicKindUtils6eqKindE(i8*inreg%C)
%N=icmp eq i32%M,0
br i1%N,label%R,label%O
O:
%P=load i32,i32*@dS,align 8
%Q=add nsw i32%P,1
store i32%Q,i32*@dS,align 8
ret i8*null
R:
%S=load i32,i32*@dJ,align 8
%T=add nsw i32%S,1
store i32%T,i32*@dJ,align 8
%U=load i8*,i8**%b,align 8
%V=getelementptr inbounds i8,i8*%U,i64 8
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
%Y=icmp eq i8*%X,null
br i1%Y,label%Z,label%at
Z:
%aa=load i8*,i8**%c,align 8
%ab=getelementptr inbounds i8,i8*%aa,i64 8
%ac=bitcast i8*%ab to i8**
%ad=load i8*,i8**%ac,align 8
%ae=icmp eq i8*%ad,null
br i1%ae,label%at,label%af
af:
%ag=call fastcc i32@_SMLFN12RuntimeTypes7getSizeE(i8*inreg%ad)
switch i32%ag,label%at[
i32 1,label%aq
i32 2,label%an
i32 4,label%ak
i32 8,label%ah
]
ah:
%ai=load i32,i32*@dP,align 8
%aj=add nsw i32%ai,1
store i32%aj,i32*@dP,align 8
br label%at
ak:
%al=load i32,i32*@dO,align 8
%am=add nsw i32%al,1
store i32%am,i32*@dO,align 8
br label%at
an:
%ao=load i32,i32*@dN,align 8
%ap=add nsw i32%ao,1
store i32%ap,i32*@dN,align 8
br label%at
aq:
%ar=load i32,i32*@dM,align 8
%as=add nsw i32%ar,1
store i32%as,i32*@dM,align 8
br label%at
at:
%au=load i8*,i8**%b,align 8
%av=getelementptr inbounds i8,i8*%au,i64 16
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
%ay=icmp eq i8*%ax,null
br i1%ay,label%az,label%aP
az:
%aA=load i8*,i8**%c,align 8
%aB=getelementptr inbounds i8,i8*%aA,i64 16
%aC=bitcast i8*%aB to i8**
%aD=load i8*,i8**%aC,align 8
%aE=icmp eq i8*%aD,null
br i1%aE,label%aP,label%aF
aF:
%aG=bitcast i8*%aD to i32*
%aH=load i32,i32*%aG,align 4
%aI=icmp eq i32%aH,0
br i1%aI,label%aM,label%aJ
aJ:
%aK=load i32,i32*@dL,align 8
%aL=add nsw i32%aK,1
store i32%aL,i32*@dL,align 8
br label%aP
aM:
%aN=load i32,i32*@dK,align 8
%aO=add nsw i32%aN,1
store i32%aO,i32*@dK,align 8
br label%aP
aP:
%aQ=call fastcc i8*@_SMLFN11RecordLabel3Map9mergeWithE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%aR=getelementptr inbounds i8,i8*%aQ,i64 16
%aS=bitcast i8*%aR to i8*(i8*,i8*)**
%aT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aS,align 8
%aU=bitcast i8*%aQ to i8**
%aV=load i8*,i8**%aU,align 8
%aW=call fastcc i8*%aT(i8*inreg%aV,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cR,i64 0,i32 2)to i8*))
%aX=getelementptr inbounds i8,i8*%aW,i64 16
%aY=bitcast i8*%aX to i8*(i8*,i8*)**
%aZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aY,align 8
%a0=bitcast i8*%aW to i8**
%a1=load i8*,i8**%a0,align 8
store i8*%a1,i8**%d,align 8
%a2=bitcast i8**%b to i8***
%a3=load i8**,i8***%a2,align 8
%a4=load i8*,i8**%a3,align 8
store i8*%a4,i8**%b,align 8
%a5=bitcast i8**%c to i8***
%a6=load i8**,i8***%a5,align 8
%a7=load i8*,i8**%a6,align 8
store i8*%a7,i8**%c,align 8
%a8=call i8*@sml_alloc(i32 inreg 20)#0
%a9=getelementptr inbounds i8,i8*%a8,i64 -4
%ba=bitcast i8*%a9 to i32*
store i32 1342177296,i32*%ba,align 4
%bb=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bc=bitcast i8*%a8 to i8**
store i8*%bb,i8**%bc,align 8
%bd=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%be=getelementptr inbounds i8,i8*%a8,i64 8
%bf=bitcast i8*%be to i8**
store i8*%bd,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%a8,i64 16
%bh=bitcast i8*%bg to i32*
store i32 3,i32*%bh,align 4
%bi=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bj=call fastcc i8*%aZ(i8*inreg%bi,i8*inreg%a8)
ret i8*null
}
define internal fastcc void@_SMLLN17PolyTyElimination9benchmarkE_1458(i8*inreg%a)#4 gc"smlsharp"{
%b=load i32,i32*@dR,align 8
%c=add nsw i32%b,1
store i32%c,i32*@dR,align 8
ret void
}
define internal fastcc void@_SMLLN17PolyTyElimination9benchmarkE_1460(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=icmp eq i8*%n,null
br i1%o,label%p,label%G
p:
%q=call fastcc i8*@_SMLFN14BoundTypeVarID3Map3appE(i32 inreg 1,i32 inreg 8)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%t(i8*inreg%v,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cT,i64 0,i32 2)to i8*))
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
%C=bitcast i8**%b to i8***
%D=load i8**,i8***%C,align 8
store i8*null,i8**%b,align 8
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%z(i8*inreg%B,i8*inreg%E)
ret void
G:
%H=bitcast i8*%n to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%c,align 8
%J=call fastcc i8*@_SMLFN14BoundTypeVarID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=call fastcc i8*%M(i8*inreg%O,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cQ,i64 0,i32 2)to i8*))
%Q=getelementptr inbounds i8,i8*%P,i64 16
%R=bitcast i8*%Q to i8*(i8*,i8*)**
%S=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%R,align 8
%T=bitcast i8*%P to i8**
%U=load i8*,i8**%T,align 8
%V=bitcast i8**%b to i8***
%W=load i8**,i8***%V,align 8
store i8*null,i8**%b,align 8
%X=load i8*,i8**%W,align 8
%Y=call fastcc i8*%S(i8*inreg%U,i8*inreg%X)
store i8*%Y,i8**%b,align 8
%Z=call fastcc i8*@_SMLFN14BoundTypeVarID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aa=getelementptr inbounds i8,i8*%Z,i64 16
%ab=bitcast i8*%aa to i8*(i8*,i8*)**
%ac=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ab,align 8
%ad=bitcast i8*%Z to i8**
%ae=load i8*,i8**%ad,align 8
%af=call fastcc i8*%ac(i8*inreg%ae,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cQ,i64 0,i32 2)to i8*))
%ag=getelementptr inbounds i8,i8*%af,i64 16
%ah=bitcast i8*%ag to i8*(i8*,i8*)**
%ai=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ah,align 8
%aj=bitcast i8*%af to i8**
%ak=load i8*,i8**%aj,align 8
%al=bitcast i8**%c to i8***
%am=load i8**,i8***%al,align 8
store i8*null,i8**%c,align 8
%an=load i8*,i8**%am,align 8
%ao=call fastcc i8*%ai(i8*inreg%ak,i8*inreg%an)
store i8*%ao,i8**%c,align 8
%ap=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9mergeWithE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
%av=call fastcc i8*%as(i8*inreg%au,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cS,i64 0,i32 2)to i8*))
%aw=getelementptr inbounds i8,i8*%av,i64 16
%ax=bitcast i8*%aw to i8*(i8*,i8*)**
%ay=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ax,align 8
%az=bitcast i8*%av to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%d,align 8
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
%aE=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aB,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 3,i32*%aK,align 4
%aL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aM=call fastcc i8*%ay(i8*inreg%aL,i8*inreg%aB)
ret void
}
define internal fastcc i8*@_SMLLN17PolyTyElimination5multiE_1462(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination5multiE_1464(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%l,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLN17PolyTyElimination5multiE_1466(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cU,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
store i8*%u,i8**%c,align 8
%v=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*%y(i8*inreg%A,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cV,i64 0,i32 2)to i8*))
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
%H=load i8*,i8**@_SMLZN12TypedCalcCon8emptyEnvE,align 8
%I=call fastcc i8*%E(i8*inreg%G,i8*inreg%H)
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
%O=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%P=call fastcc i8*%L(i8*inreg%N,i8*inreg%O)
store i8*%P,i8**%b,align 8
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
%T=load i8*,i8**%c,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=load i8*,i8**%b,align 8
%W=getelementptr inbounds i8,i8*%Q,i64 8
%X=bitcast i8*%W to i8**
store i8*%V,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%Q,i64 16
%Z=bitcast i8*%Y to i32*
store i32 3,i32*%Z,align 4
ret i8*%Q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12compileFFItyE_1475(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination12compileFFItyE_1468(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12compileFFItyE_1476(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination12compileFFItyE_1468(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12compileFFItyE_1477(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination12compileFFItyE_1468(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12compileFFItyE_1478(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
store i8*null,i8**%c,align 8
%r=load i8*,i8**%n,align 8
%s=getelementptr inbounds i8,i8*%o,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination12compileFFItyE_1468(i8*inreg%r,i8*inreg%u)
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%d,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12compileFFItyE_1468(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
r:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%p,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%d,align 8
%o=load i8*,i8**%c,align 8
br label%p
p:
%q=phi i8*[%o,%m],[%a,%r]
%s=phi i8*[%n,%m],[%b,%r]
store i8*%q,i8**%e,align 8
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
switch i32%u,label%v[
i32 0,label%dt
i32 1,label%aY
i32 2,label%N
]
v:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%w=load i8*,i8**@_SMLZ5Match,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%d,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cW,i64 0,i32 2,i64 0),i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 60)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177336,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%G,i64 56
%K=bitcast i8*%J to i32*
store i32 1,i32*%K,align 4
%L=load i8*,i8**%d,align 8
%M=bitcast i8*%G to i8**
store i8*%L,i8**%M,align 8
call void@sml_raise(i8*inreg%G)#1
unreachable
N:
%O=getelementptr inbounds i8,i8*%s,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%c,align 8
%R=getelementptr inbounds i8,i8*%Q,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%d,align 8
%U=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%f,align 8
%aa=call i8*@sml_alloc(i32 inreg 12)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177288,i32*%ac,align 4
store i8*%aa,i8**%g,align 8
%ad=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%aa,i64 8
%ag=bitcast i8*%af to i32*
store i32 1,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 28)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177304,i32*%aj,align 4
%ak=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ah,i64 8
%an=bitcast i8*%am to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12compileFFItyE_1478 to void(...)*),void(...)**%an,align 8
%ao=getelementptr inbounds i8,i8*%ah,i64 16
%ap=bitcast i8*%ao to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12compileFFItyE_1478 to void(...)*),void(...)**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ah,i64 24
%ar=bitcast i8*%aq to i32*
store i32 -2147483647,i32*%ar,align 4
%as=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%at=call fastcc i8*%X(i8*inreg%as,i8*inreg%ah)
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
%az=bitcast i8**%c to i8***
%aA=load i8**,i8***%az,align 8
store i8*null,i8**%c,align 8
%aB=load i8*,i8**%aA,align 8
%aC=call fastcc i8*%aw(i8*inreg%ay,i8*inreg%aB)
store i8*%aC,i8**%c,align 8
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
store i8*%aD,i8**%e,align 8
%aG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aD,i64 16
%aM=bitcast i8*%aL to i32*
store i32 3,i32*%aM,align 4
%aN=call i8*@sml_alloc(i32 inreg 20)#0
%aO=bitcast i8*%aN to i32*
%aP=getelementptr inbounds i8,i8*%aN,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32 1342177296,i32*%aQ,align 4
%aR=getelementptr inbounds i8,i8*%aN,i64 4
%aS=bitcast i8*%aR to i32*
store i32 0,i32*%aS,align 1
store i32 2,i32*%aO,align 4
%aT=load i8*,i8**%e,align 8
%aU=getelementptr inbounds i8,i8*%aN,i64 8
%aV=bitcast i8*%aU to i8**
store i8*%aT,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aN,i64 16
%aX=bitcast i8*%aW to i32*
store i32 2,i32*%aX,align 4
ret i8*%aN
aY:
%aZ=getelementptr inbounds i8,i8*%s,i64 8
%a0=bitcast i8*%aZ to i8**
%a1=load i8*,i8**%a0,align 8
store i8*%a1,i8**%f,align 8
%a2=bitcast i8*%a1 to i8**
%a3=load i8*,i8**%a2,align 8
store i8*%a3,i8**%g,align 8
%a4=getelementptr inbounds i8,i8*%a1,i64 32
%a5=bitcast i8*%a4 to i8**
%a6=load i8*,i8**%a5,align 8
store i8*%a6,i8**%h,align 8
%a7=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%a8=getelementptr inbounds i8,i8*%a7,i64 16
%a9=bitcast i8*%a8 to i8*(i8*,i8*)**
%ba=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a9,align 8
%bb=bitcast i8*%a7 to i8**
%bc=load i8*,i8**%bb,align 8
store i8*%bc,i8**%c,align 8
%bd=call i8*@sml_alloc(i32 inreg 12)#0
%be=getelementptr inbounds i8,i8*%bd,i64 -4
%bf=bitcast i8*%be to i32*
store i32 1342177288,i32*%bf,align 4
store i8*%bd,i8**%d,align 8
%bg=load i8*,i8**%e,align 8
%bh=bitcast i8*%bd to i8**
store i8*%bg,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%bd,i64 8
%bj=bitcast i8*%bi to i32*
store i32 1,i32*%bj,align 4
%bk=call i8*@sml_alloc(i32 inreg 28)#0
%bl=getelementptr inbounds i8,i8*%bk,i64 -4
%bm=bitcast i8*%bl to i32*
store i32 1342177304,i32*%bm,align 4
%bn=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bo=bitcast i8*%bk to i8**
store i8*%bn,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bk,i64 8
%bq=bitcast i8*%bp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12compileFFItyE_1475 to void(...)*),void(...)**%bq,align 8
%br=getelementptr inbounds i8,i8*%bk,i64 16
%bs=bitcast i8*%br to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12compileFFItyE_1475 to void(...)*),void(...)**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bk,i64 24
%bu=bitcast i8*%bt to i32*
store i32 -2147483647,i32*%bu,align 4
%bv=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bw=call fastcc i8*%ba(i8*inreg%bv,i8*inreg%bk)
%bx=getelementptr inbounds i8,i8*%bw,i64 16
%by=bitcast i8*%bx to i8*(i8*,i8*)**
%bz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%by,align 8
%bA=bitcast i8*%bw to i8**
%bB=load i8*,i8**%bA,align 8
%bC=load i8*,i8**%f,align 8
%bD=getelementptr inbounds i8,i8*%bC,i64 8
%bE=bitcast i8*%bD to i8**
%bF=load i8*,i8**%bE,align 8
%bG=call fastcc i8*%bz(i8*inreg%bB,i8*inreg%bF)
store i8*%bG,i8**%c,align 8
%bH=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bI=getelementptr inbounds i8,i8*%bH,i64 16
%bJ=bitcast i8*%bI to i8*(i8*,i8*)**
%bK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bJ,align 8
%bL=bitcast i8*%bH to i8**
%bM=load i8*,i8**%bL,align 8
store i8*%bM,i8**%i,align 8
%bN=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bO=getelementptr inbounds i8,i8*%bN,i64 16
%bP=bitcast i8*%bO to i8*(i8*,i8*)**
%bQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bP,align 8
%bR=bitcast i8*%bN to i8**
%bS=load i8*,i8**%bR,align 8
store i8*%bS,i8**%d,align 8
%bT=call i8*@sml_alloc(i32 inreg 12)#0
%bU=getelementptr inbounds i8,i8*%bT,i64 -4
%bV=bitcast i8*%bU to i32*
store i32 1342177288,i32*%bV,align 4
store i8*%bT,i8**%j,align 8
%bW=load i8*,i8**%e,align 8
%bX=bitcast i8*%bT to i8**
store i8*%bW,i8**%bX,align 8
%bY=getelementptr inbounds i8,i8*%bT,i64 8
%bZ=bitcast i8*%bY to i32*
store i32 1,i32*%bZ,align 4
%b0=call i8*@sml_alloc(i32 inreg 28)#0
%b1=getelementptr inbounds i8,i8*%b0,i64 -4
%b2=bitcast i8*%b1 to i32*
store i32 1342177304,i32*%b2,align 4
%b3=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%b4=bitcast i8*%b0 to i8**
store i8*%b3,i8**%b4,align 8
%b5=getelementptr inbounds i8,i8*%b0,i64 8
%b6=bitcast i8*%b5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12compileFFItyE_1476 to void(...)*),void(...)**%b6,align 8
%b7=getelementptr inbounds i8,i8*%b0,i64 16
%b8=bitcast i8*%b7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12compileFFItyE_1476 to void(...)*),void(...)**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b0,i64 24
%ca=bitcast i8*%b9 to i32*
store i32 -2147483647,i32*%ca,align 4
%cb=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cc=call fastcc i8*%bQ(i8*inreg%cb,i8*inreg%b0)
%cd=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ce=call fastcc i8*%bK(i8*inreg%cd,i8*inreg%cc)
%cf=getelementptr inbounds i8,i8*%ce,i64 16
%cg=bitcast i8*%cf to i8*(i8*,i8*)**
%ch=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cg,align 8
%ci=bitcast i8*%ce to i8**
%cj=load i8*,i8**%ci,align 8
%ck=load i8*,i8**%f,align 8
%cl=getelementptr inbounds i8,i8*%ck,i64 16
%cm=bitcast i8*%cl to i8**
%cn=load i8*,i8**%cm,align 8
%co=call fastcc i8*%ch(i8*inreg%cj,i8*inreg%cn)
store i8*%co,i8**%d,align 8
%cp=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cq=getelementptr inbounds i8,i8*%cp,i64 16
%cr=bitcast i8*%cq to i8*(i8*,i8*)**
%cs=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cr,align 8
%ct=bitcast i8*%cp to i8**
%cu=load i8*,i8**%ct,align 8
store i8*%cu,i8**%i,align 8
%cv=call i8*@sml_alloc(i32 inreg 12)#0
%cw=getelementptr inbounds i8,i8*%cv,i64 -4
%cx=bitcast i8*%cw to i32*
store i32 1342177288,i32*%cx,align 4
store i8*%cv,i8**%j,align 8
%cy=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cz=bitcast i8*%cv to i8**
store i8*%cy,i8**%cz,align 8
%cA=getelementptr inbounds i8,i8*%cv,i64 8
%cB=bitcast i8*%cA to i32*
store i32 1,i32*%cB,align 4
%cC=call i8*@sml_alloc(i32 inreg 28)#0
%cD=getelementptr inbounds i8,i8*%cC,i64 -4
%cE=bitcast i8*%cD to i32*
store i32 1342177304,i32*%cE,align 4
%cF=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cG=bitcast i8*%cC to i8**
store i8*%cF,i8**%cG,align 8
%cH=getelementptr inbounds i8,i8*%cC,i64 8
%cI=bitcast i8*%cH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12compileFFItyE_1477 to void(...)*),void(...)**%cI,align 8
%cJ=getelementptr inbounds i8,i8*%cC,i64 16
%cK=bitcast i8*%cJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination12compileFFItyE_1477 to void(...)*),void(...)**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cC,i64 24
%cM=bitcast i8*%cL to i32*
store i32 -2147483647,i32*%cM,align 4
%cN=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cO=call fastcc i8*%cs(i8*inreg%cN,i8*inreg%cC)
%cP=getelementptr inbounds i8,i8*%cO,i64 16
%cQ=bitcast i8*%cP to i8*(i8*,i8*)**
%cR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cQ,align 8
%cS=bitcast i8*%cO to i8**
%cT=load i8*,i8**%cS,align 8
%cU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cV=getelementptr inbounds i8,i8*%cU,i64 24
%cW=bitcast i8*%cV to i8**
%cX=load i8*,i8**%cW,align 8
%cY=call fastcc i8*%cR(i8*inreg%cT,i8*inreg%cX)
store i8*%cY,i8**%e,align 8
%cZ=call i8*@sml_alloc(i32 inreg 44)#0
%c0=getelementptr inbounds i8,i8*%cZ,i64 -4
%c1=bitcast i8*%c0 to i32*
store i32 1342177320,i32*%c1,align 4
store i8*%cZ,i8**%f,align 8
%c2=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%c3=bitcast i8*%cZ to i8**
store i8*%c2,i8**%c3,align 8
%c4=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%c5=getelementptr inbounds i8,i8*%cZ,i64 8
%c6=bitcast i8*%c5 to i8**
store i8*%c4,i8**%c6,align 8
%c7=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%c8=getelementptr inbounds i8,i8*%cZ,i64 16
%c9=bitcast i8*%c8 to i8**
store i8*%c7,i8**%c9,align 8
%da=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%db=getelementptr inbounds i8,i8*%cZ,i64 24
%dc=bitcast i8*%db to i8**
store i8*%da,i8**%dc,align 8
%dd=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%de=getelementptr inbounds i8,i8*%cZ,i64 32
%df=bitcast i8*%de to i8**
store i8*%dd,i8**%df,align 8
%dg=getelementptr inbounds i8,i8*%cZ,i64 40
%dh=bitcast i8*%dg to i32*
store i32 31,i32*%dh,align 4
%di=call i8*@sml_alloc(i32 inreg 20)#0
%dj=bitcast i8*%di to i32*
%dk=getelementptr inbounds i8,i8*%di,i64 -4
%dl=bitcast i8*%dk to i32*
store i32 1342177296,i32*%dl,align 4
%dm=getelementptr inbounds i8,i8*%di,i64 4
%dn=bitcast i8*%dm to i32*
store i32 0,i32*%dn,align 1
store i32 1,i32*%dj,align 4
%do=load i8*,i8**%f,align 8
%dp=getelementptr inbounds i8,i8*%di,i64 8
%dq=bitcast i8*%dp to i8**
store i8*%do,i8**%dq,align 8
%dr=getelementptr inbounds i8,i8*%di,i64 16
%ds=bitcast i8*%dr to i32*
store i32 2,i32*%ds,align 4
ret i8*%di
dt:
%du=getelementptr inbounds i8,i8*%s,i64 8
%dv=bitcast i8*%du to i8**
%dw=load i8*,i8**%dv,align 8
%dx=getelementptr inbounds i8,i8*%dw,i64 8
%dy=bitcast i8*%dx to i8**
%dz=load i8*,i8**%dy,align 8
store i8*%dz,i8**%d,align 8
%dA=bitcast i8*%dw to i8**
%dB=load i8*,i8**%dA,align 8
store i8*null,i8**%e,align 8
%dC=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%q,i8*inreg%dB)
store i8*%dC,i8**%c,align 8
%dD=call i8*@sml_alloc(i32 inreg 20)#0
%dE=getelementptr inbounds i8,i8*%dD,i64 -4
%dF=bitcast i8*%dE to i32*
store i32 1342177296,i32*%dF,align 4
store i8*%dD,i8**%e,align 8
%dG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dH=bitcast i8*%dD to i8**
store i8*%dG,i8**%dH,align 8
%dI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dJ=getelementptr inbounds i8,i8*%dD,i64 8
%dK=bitcast i8*%dJ to i8**
store i8*%dI,i8**%dK,align 8
%dL=getelementptr inbounds i8,i8*%dD,i64 16
%dM=bitcast i8*%dL to i32*
store i32 3,i32*%dM,align 4
%dN=call i8*@sml_alloc(i32 inreg 20)#0
%dO=getelementptr inbounds i8,i8*%dN,i64 -4
%dP=bitcast i8*%dO to i32*
store i32 1342177296,i32*%dP,align 4
%dQ=bitcast i8*%dN to i64*
store i64 0,i64*%dQ,align 4
%dR=load i8*,i8**%e,align 8
%dS=getelementptr inbounds i8,i8*%dN,i64 8
%dT=bitcast i8*%dS to i8**
store i8*%dR,i8**%dT,align 8
%dU=getelementptr inbounds i8,i8*%dN,i64 16
%dV=bitcast i8*%dU to i32*
store i32 2,i32*%dV,align 4
ret i8*%dN
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13compileExnConE_1489(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=bitcast i8*%l to i32*
%o=load i32,i32*%n,align 4
switch i32%o,label%p[
i32 0,label%bo
i32 1,label%H
]
p:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%d,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@c1,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=load i8*,i8**%d,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
H:
%I=getelementptr inbounds i8,i8*%l,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%c,align 8
%L=call fastcc i8*@_SMLFN5ExnID3Map4findE(i32 inreg 1,i32 inreg 8)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%e,align 8
%R=bitcast i8**%d to i8***
%S=load i8**,i8***%R,align 8
%T=load i8*,i8**%S,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 24
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%d,align 8
%aa=bitcast i8**%c to i32**
%ab=load i32*,i32**%aa,align 8
%ac=load i32,i32*%ab,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
%ag=getelementptr inbounds i8,i8*%ad,i64 12
%ah=bitcast i8*%ag to i32*
store i32 0,i32*%ah,align 1
%ai=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aj=bitcast i8*%ad to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i32*
store i32%ac,i32*%al,align 4
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 1,i32*%an,align 4
%ao=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ap=call fastcc i8*%O(i8*inreg%ao,i8*inreg%ad)
%aq=icmp eq i8*%ap,null
br i1%aq,label%ar,label%aN
ar:
%as=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%as,i8**%c,align 8
%at=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c0,i64 0,i32 2)to i8*))
store i8*%at,i8**%d,align 8
%au=call i8*@sml_alloc(i32 inreg 28)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177304,i32*%aw,align 4
store i8*%au,i8**%e,align 8
%ax=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ay=bitcast i8*%au to i8**
store i8*%ax,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%au,i64 8
%aA=bitcast i8*%az to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%aA,align 8
%aB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aC=getelementptr inbounds i8,i8*%au,i64 16
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%au,i64 24
%aF=bitcast i8*%aE to i32*
store i32 7,i32*%aF,align 4
%aG=call i8*@sml_alloc(i32 inreg 60)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177336,i32*%aI,align 4
%aJ=getelementptr inbounds i8,i8*%aG,i64 56
%aK=bitcast i8*%aJ to i32*
store i32 1,i32*%aK,align 4
%aL=load i8*,i8**%e,align 8
%aM=bitcast i8*%aG to i8**
store i8*%aL,i8**%aM,align 8
call void@sml_raise(i8*inreg%aG)#1
unreachable
aN:
%aO=bitcast i8*%ap to i8**
%aP=load i8*,i8**%aO,align 8
%aQ=load i8*,i8**%c,align 8
%aR=bitcast i8*%aQ to i32*
%aS=load i32,i32*%aR,align 4
%aT=getelementptr inbounds i8,i8*%aQ,i64 8
%aU=bitcast i8*%aT to i8**
%aV=load i8*,i8**%aU,align 8
store i8*%aV,i8**%c,align 8
%aW=getelementptr inbounds i8,i8*%aP,i64 16
%aX=bitcast i8*%aW to i8**
%aY=load i8*,i8**%aX,align 8
store i8*%aY,i8**%d,align 8
%aZ=call i8*@sml_alloc(i32 inreg 28)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177304,i32*%a1,align 4
store i8*%aZ,i8**%e,align 8
%a2=getelementptr inbounds i8,i8*%aZ,i64 4
%a3=bitcast i8*%a2 to i32*
store i32 0,i32*%a3,align 1
%a4=bitcast i8*%aZ to i32*
store i32%aS,i32*%a4,align 4
%a5=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a6=getelementptr inbounds i8,i8*%aZ,i64 8
%a7=bitcast i8*%a6 to i8**
store i8*%a5,i8**%a7,align 8
%a8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a9=getelementptr inbounds i8,i8*%aZ,i64 16
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%aZ,i64 24
%bc=bitcast i8*%bb to i32*
store i32 6,i32*%bc,align 4
%bd=call i8*@sml_alloc(i32 inreg 20)#0
%be=bitcast i8*%bd to i32*
%bf=getelementptr inbounds i8,i8*%bd,i64 -4
%bg=bitcast i8*%bf to i32*
store i32 1342177296,i32*%bg,align 4
%bh=getelementptr inbounds i8,i8*%bd,i64 4
%bi=bitcast i8*%bh to i32*
store i32 0,i32*%bi,align 1
store i32 1,i32*%be,align 4
%bj=load i8*,i8**%e,align 8
%bk=getelementptr inbounds i8,i8*%bd,i64 8
%bl=bitcast i8*%bk to i8**
store i8*%bj,i8**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bd,i64 16
%bn=bitcast i8*%bm to i32*
store i32 2,i32*%bn,align 4
ret i8*%bd
bo:
%bp=getelementptr inbounds i8,i8*%l,i64 8
%bq=bitcast i8*%bp to i8**
%br=load i8*,i8**%bq,align 8
store i8*%br,i8**%c,align 8
%bs=call fastcc i8*@_SMLFN13LongsymbolEnv4findE(i32 inreg 1,i32 inreg 8)
%bt=getelementptr inbounds i8,i8*%bs,i64 16
%bu=bitcast i8*%bt to i8*(i8*,i8*)**
%bv=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bu,align 8
%bw=bitcast i8*%bs to i8**
%bx=load i8*,i8**%bw,align 8
store i8*%bx,i8**%f,align 8
%by=bitcast i8**%d to i8***
%bz=load i8**,i8***%by,align 8
%bA=load i8*,i8**%bz,align 8
%bB=getelementptr inbounds i8,i8*%bA,i64 8
%bC=bitcast i8*%bB to i8**
%bD=load i8*,i8**%bC,align 8
%bE=getelementptr inbounds i8,i8*%bD,i64 8
%bF=bitcast i8*%bE to i8**
%bG=load i8*,i8**%bF,align 8
store i8*%bG,i8**%d,align 8
%bH=bitcast i8**%c to i8***
%bI=load i8**,i8***%bH,align 8
%bJ=load i8*,i8**%bI,align 8
store i8*%bJ,i8**%e,align 8
%bK=call i8*@sml_alloc(i32 inreg 20)#0
%bL=getelementptr inbounds i8,i8*%bK,i64 -4
%bM=bitcast i8*%bL to i32*
store i32 1342177296,i32*%bM,align 4
%bN=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bO=bitcast i8*%bK to i8**
store i8*%bN,i8**%bO,align 8
%bP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bQ=getelementptr inbounds i8,i8*%bK,i64 8
%bR=bitcast i8*%bQ to i8**
store i8*%bP,i8**%bR,align 8
%bS=getelementptr inbounds i8,i8*%bK,i64 16
%bT=bitcast i8*%bS to i32*
store i32 3,i32*%bT,align 4
%bU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bV=call fastcc i8*%bv(i8*inreg%bU,i8*inreg%bK)
%bW=icmp eq i8*%bV,null
br i1%bW,label%bX,label%cj
bX:
%bY=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%bY,i8**%c,align 8
%bZ=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cY,i64 0,i32 2)to i8*))
store i8*%bZ,i8**%d,align 8
%b0=call i8*@sml_alloc(i32 inreg 28)#0
%b1=getelementptr inbounds i8,i8*%b0,i64 -4
%b2=bitcast i8*%b1 to i32*
store i32 1342177304,i32*%b2,align 4
store i8*%b0,i8**%e,align 8
%b3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b4=bitcast i8*%b0 to i8**
store i8*%b3,i8**%b4,align 8
%b5=getelementptr inbounds i8,i8*%b0,i64 8
%b6=bitcast i8*%b5 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%b6,align 8
%b7=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b8=getelementptr inbounds i8,i8*%b0,i64 16
%b9=bitcast i8*%b8 to i8**
store i8*%b7,i8**%b9,align 8
%ca=getelementptr inbounds i8,i8*%b0,i64 24
%cb=bitcast i8*%ca to i32*
store i32 7,i32*%cb,align 4
%cc=call i8*@sml_alloc(i32 inreg 60)#0
%cd=getelementptr inbounds i8,i8*%cc,i64 -4
%ce=bitcast i8*%cd to i32*
store i32 1342177336,i32*%ce,align 4
%cf=getelementptr inbounds i8,i8*%cc,i64 56
%cg=bitcast i8*%cf to i32*
store i32 1,i32*%cg,align 4
%ch=load i8*,i8**%e,align 8
%ci=bitcast i8*%cc to i8**
store i8*%ch,i8**%ci,align 8
call void@sml_raise(i8*inreg%cc)#1
unreachable
cj:
%ck=bitcast i8*%bV to i8**
%cl=load i8*,i8**%ck,align 8
%cm=load i8**,i8***%bH,align 8
%cn=load i8*,i8**%cm,align 8
store i8*%cn,i8**%c,align 8
%co=getelementptr inbounds i8,i8*%cl,i64 8
%cp=bitcast i8*%co to i8**
%cq=load i8*,i8**%cp,align 8
store i8*%cq,i8**%d,align 8
%cr=call i8*@sml_alloc(i32 inreg 20)#0
%cs=getelementptr inbounds i8,i8*%cr,i64 -4
%ct=bitcast i8*%cs to i32*
store i32 1342177296,i32*%ct,align 4
store i8*%cr,i8**%e,align 8
%cu=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cv=bitcast i8*%cr to i8**
store i8*%cu,i8**%cv,align 8
%cw=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cx=getelementptr inbounds i8,i8*%cr,i64 8
%cy=bitcast i8*%cx to i8**
store i8*%cw,i8**%cy,align 8
%cz=getelementptr inbounds i8,i8*%cr,i64 16
%cA=bitcast i8*%cz to i32*
store i32 3,i32*%cA,align 4
%cB=call i8*@sml_alloc(i32 inreg 20)#0
%cC=getelementptr inbounds i8,i8*%cB,i64 -4
%cD=bitcast i8*%cC to i32*
store i32 1342177296,i32*%cD,align 4
%cE=bitcast i8*%cB to i64*
store i64 0,i64*%cE,align 4
%cF=load i8*,i8**%e,align 8
%cG=getelementptr inbounds i8,i8*%cB,i64 8
%cH=bitcast i8*%cG to i8**
store i8*%cF,i8**%cH,align 8
%cI=getelementptr inbounds i8,i8*%cB,i64 16
%cJ=bitcast i8*%cI to i32*
store i32 2,i32*%cJ,align 4
ret i8*%cB
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13compileExnConE_1490(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13compileExnConE_1489 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination13compileExnConE_1489 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compilePatE_1499(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compilePatE_1500(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination10compilePatE_1492(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compilePatE_1501(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination10compilePatE_1492(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compilePatE_1502(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination10compilePatE_1492(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compilePatE_1492(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%o,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%d,align 8
%n=load i8*,i8**%c,align 8
br label%o
o:
%p=phi i8*[%n,%l],[%a,%q]
%r=phi i8*[%m,%l],[%b,%q]
store i8*%p,i8**%d,align 8
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
switch i32%t,label%u[
i32 0,label%fu
i32 1,label%dM
i32 2,label%dK
i32 3,label%cF
i32 4,label%cb
i32 5,label%aM
i32 6,label%ah
i32 7,label%M
]
u:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%v=load i8*,i8**@_SMLZ5Match,align 8
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%d,align 8
%z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@c2,i64 0,i32 2,i64 0),i8**%C,align 8
%D=getelementptr inbounds i8,i8*%w,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 60)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177336,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%F,i64 56
%J=bitcast i8*%I to i32*
store i32 1,i32*%J,align 4
%K=load i8*,i8**%d,align 8
%L=bitcast i8*%F to i8**
store i8*%K,i8**%L,align 8
call void@sml_raise(i8*inreg%F)#1
unreachable
M:
%N=getelementptr inbounds i8,i8*%r,i64 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
%Q=getelementptr inbounds i8,i8*%P,i64 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%e,align 8
%T=bitcast i8*%P to i8**
%U=load i8*,i8**%T,align 8
store i8*null,i8**%d,align 8
%V=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%U)
store i8*%V,i8**%c,align 8
%W=call i8*@sml_alloc(i32 inreg 20)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177296,i32*%Y,align 4
%Z=load i8*,i8**%c,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=load i8*,i8**%e,align 8
%ac=getelementptr inbounds i8,i8*%W,i64 8
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%W,i64 16
%af=bitcast i8*%ae to i32*
store i32 3,i32*%af,align 4
%ag=tail call fastcc i8*@_SMLFN12TypedCalcCon9TPPATWILDE(i8*inreg%W)
ret i8*%ag
ah:
%ai=getelementptr inbounds i8,i8*%r,i64 8
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
%al=bitcast i8*%ak to i32*
%am=load i32,i32*%al,align 4
%an=getelementptr inbounds i8,i8*%ak,i64 4
%ao=bitcast i8*%an to i32*
%ap=load i32,i32*%ao,align 4
%aq=getelementptr inbounds i8,i8*%ak,i64 8
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%ak,i64 16
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
store i8*null,i8**%d,align 8
%aw=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%av)
store i8*%aw,i8**%d,align 8
%ax=call i8*@sml_alloc(i32 inreg 28)#0
%ay=bitcast i8*%ax to i32*
%az=getelementptr inbounds i8,i8*%ax,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177304,i32*%aA,align 4
store i32%am,i32*%ay,align 4
%aB=getelementptr inbounds i8,i8*%ax,i64 4
%aC=bitcast i8*%aB to i32*
store i32%ap,i32*%aC,align 4
%aD=load i8*,i8**%c,align 8
%aE=getelementptr inbounds i8,i8*%ax,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=load i8*,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%ax,i64 16
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%ax,i64 24
%aK=bitcast i8*%aJ to i32*
store i32 6,i32*%aK,align 4
%aL=tail call fastcc i8*@_SMLFN12TypedCalcCon8TPPATVARE(i8*inreg%ax)
ret i8*%aL
aM:
%aN=getelementptr inbounds i8,i8*%r,i64 8
%aO=bitcast i8*%aN to i8**
%aP=load i8*,i8**%aO,align 8
store i8*%aP,i8**%e,align 8
%aQ=getelementptr inbounds i8,i8*%aP,i64 8
%aR=bitcast i8*%aQ to i8**
%aS=load i8*,i8**%aR,align 8
store i8*%aS,i8**%f,align 8
%aT=getelementptr inbounds i8,i8*%p,i64 8
%aU=bitcast i8*%aT to i8***
%aV=load i8**,i8***%aU,align 8
%aW=load i8*,i8**%aV,align 8
store i8*%aW,i8**%c,align 8
%aX=call i8*@sml_alloc(i32 inreg 12)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177288,i32*%aZ,align 4
%a0=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a1=bitcast i8*%aX to i8**
store i8*%a0,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aX,i64 8
%a3=bitcast i8*%a2 to i32*
store i32 1,i32*%a3,align 4
%a4=call fastcc i8*@_SMLFN12TypedCalcCon11TPPATRECORDE(i8*inreg%aX)
%a5=getelementptr inbounds i8,i8*%a4,i64 16
%a6=bitcast i8*%a5 to i8*(i8*,i8*)**
%a7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a6,align 8
%a8=bitcast i8*%a4 to i8**
%a9=load i8*,i8**%a8,align 8
store i8*%a9,i8**%g,align 8
%ba=call fastcc i8*@_SMLFN11RecordLabel3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bb=getelementptr inbounds i8,i8*%ba,i64 16
%bc=bitcast i8*%bb to i8*(i8*,i8*)**
%bd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bc,align 8
%be=bitcast i8*%ba to i8**
%bf=load i8*,i8**%be,align 8
store i8*%bf,i8**%c,align 8
%bg=call i8*@sml_alloc(i32 inreg 12)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177288,i32*%bi,align 4
store i8*%bg,i8**%h,align 8
%bj=load i8*,i8**%d,align 8
%bk=bitcast i8*%bg to i8**
store i8*%bj,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%bg,i64 8
%bm=bitcast i8*%bl to i32*
store i32 1,i32*%bm,align 4
%bn=call i8*@sml_alloc(i32 inreg 28)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177304,i32*%bp,align 4
%bq=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%br=bitcast i8*%bn to i8**
store i8*%bq,i8**%br,align 8
%bs=getelementptr inbounds i8,i8*%bn,i64 8
%bt=bitcast i8*%bs to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compilePatE_1502 to void(...)*),void(...)**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bn,i64 16
%bv=bitcast i8*%bu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compilePatE_1502 to void(...)*),void(...)**%bv,align 8
%bw=getelementptr inbounds i8,i8*%bn,i64 24
%bx=bitcast i8*%bw to i32*
store i32 -2147483647,i32*%bx,align 4
%by=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bz=call fastcc i8*%bd(i8*inreg%by,i8*inreg%bn)
%bA=getelementptr inbounds i8,i8*%bz,i64 16
%bB=bitcast i8*%bA to i8*(i8*,i8*)**
%bC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bB,align 8
%bD=bitcast i8*%bz to i8**
%bE=load i8*,i8**%bD,align 8
%bF=bitcast i8**%e to i8***
%bG=load i8**,i8***%bF,align 8
%bH=load i8*,i8**%bG,align 8
%bI=call fastcc i8*%bC(i8*inreg%bE,i8*inreg%bH)
store i8*%bI,i8**%c,align 8
%bJ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bK=getelementptr inbounds i8,i8*%bJ,i64 16
%bL=bitcast i8*%bK to i8**
%bM=load i8*,i8**%bL,align 8
%bN=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bO=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%bN,i8*inreg%bM)
store i8*%bO,i8**%d,align 8
%bP=call i8*@sml_alloc(i32 inreg 12)#0
%bQ=getelementptr inbounds i8,i8*%bP,i64 -4
%bR=bitcast i8*%bQ to i32*
store i32 1342177288,i32*%bR,align 4
store i8*%bP,i8**%e,align 8
%bS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bT=bitcast i8*%bP to i8**
store i8*%bS,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bP,i64 8
%bV=bitcast i8*%bU to i32*
store i32 1,i32*%bV,align 4
%bW=call i8*@sml_alloc(i32 inreg 28)#0
%bX=getelementptr inbounds i8,i8*%bW,i64 -4
%bY=bitcast i8*%bX to i32*
store i32 1342177304,i32*%bY,align 4
%bZ=load i8*,i8**%c,align 8
%b0=bitcast i8*%bW to i8**
store i8*%bZ,i8**%b0,align 8
%b1=load i8*,i8**%f,align 8
%b2=getelementptr inbounds i8,i8*%bW,i64 8
%b3=bitcast i8*%b2 to i8**
store i8*%b1,i8**%b3,align 8
%b4=load i8*,i8**%e,align 8
%b5=getelementptr inbounds i8,i8*%bW,i64 16
%b6=bitcast i8*%b5 to i8**
store i8*%b4,i8**%b6,align 8
%b7=getelementptr inbounds i8,i8*%bW,i64 24
%b8=bitcast i8*%b7 to i32*
store i32 7,i32*%b8,align 4
%b9=load i8*,i8**%g,align 8
%ca=tail call fastcc i8*%a7(i8*inreg%b9,i8*inreg%bW)
ret i8*%ca
cb:
%cc=getelementptr inbounds i8,i8*%r,i64 8
%cd=bitcast i8*%cc to i8**
%ce=load i8*,i8**%cd,align 8
store i8*%ce,i8**%e,align 8
%cf=getelementptr inbounds i8,i8*%ce,i64 8
%cg=bitcast i8*%cf to i8**
%ch=load i8*,i8**%cg,align 8
store i8*%ch,i8**%f,align 8
%ci=bitcast i8*%ce to i8**
%cj=load i8*,i8**%ci,align 8
%ck=call fastcc i8*@_SMLLN17PolyTyElimination10compilePatE_1492(i8*inreg%p,i8*inreg%cj)
store i8*%ck,i8**%c,align 8
%cl=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cm=getelementptr inbounds i8,i8*%cl,i64 16
%cn=bitcast i8*%cm to i8**
%co=load i8*,i8**%cn,align 8
%cp=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cq=call fastcc i8*@_SMLLN17PolyTyElimination10compilePatE_1492(i8*inreg%cp,i8*inreg%co)
store i8*%cq,i8**%d,align 8
%cr=call i8*@sml_alloc(i32 inreg 28)#0
%cs=getelementptr inbounds i8,i8*%cr,i64 -4
%ct=bitcast i8*%cs to i32*
store i32 1342177304,i32*%ct,align 4
%cu=load i8*,i8**%c,align 8
%cv=bitcast i8*%cr to i8**
store i8*%cu,i8**%cv,align 8
%cw=load i8*,i8**%f,align 8
%cx=getelementptr inbounds i8,i8*%cr,i64 8
%cy=bitcast i8*%cx to i8**
store i8*%cw,i8**%cy,align 8
%cz=load i8*,i8**%d,align 8
%cA=getelementptr inbounds i8,i8*%cr,i64 16
%cB=bitcast i8*%cA to i8**
store i8*%cz,i8**%cB,align 8
%cC=getelementptr inbounds i8,i8*%cr,i64 24
%cD=bitcast i8*%cC to i32*
store i32 7,i32*%cD,align 4
%cE=tail call fastcc i8*@_SMLFN12TypedCalcCon12TPPATLAYEREDE(i8*inreg%cr)
ret i8*%cE
cF:
%cG=getelementptr inbounds i8,i8*%r,i64 8
%cH=bitcast i8*%cG to i8**
%cI=load i8*,i8**%cH,align 8
store i8*%cI,i8**%e,align 8
%cJ=getelementptr inbounds i8,i8*%cI,i64 16
%cK=bitcast i8*%cJ to i8**
%cL=load i8*,i8**%cK,align 8
store i8*%cL,i8**%f,align 8
%cM=call fastcc i8*@_SMLLN17PolyTyElimination13compileExnConE_1490(i8*inreg%p)
%cN=getelementptr inbounds i8,i8*%cM,i64 16
%cO=bitcast i8*%cN to i8*(i8*,i8*)**
%cP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cO,align 8
%cQ=bitcast i8*%cM to i8**
%cR=load i8*,i8**%cQ,align 8
%cS=load i8*,i8**%e,align 8
%cT=getelementptr inbounds i8,i8*%cS,i64 8
%cU=bitcast i8*%cT to i8**
%cV=load i8*,i8**%cU,align 8
%cW=call fastcc i8*%cP(i8*inreg%cR,i8*inreg%cV)
store i8*%cW,i8**%c,align 8
%cX=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cY=getelementptr inbounds i8,i8*%cX,i64 16
%cZ=bitcast i8*%cY to i8*(i8*,i8*)**
%c0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cZ,align 8
%c1=bitcast i8*%cX to i8**
%c2=load i8*,i8**%c1,align 8
store i8*%c2,i8**%g,align 8
%c3=call i8*@sml_alloc(i32 inreg 12)#0
%c4=getelementptr inbounds i8,i8*%c3,i64 -4
%c5=bitcast i8*%c4 to i32*
store i32 1342177288,i32*%c5,align 4
store i8*%c3,i8**%h,align 8
%c6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%c7=bitcast i8*%c3 to i8**
store i8*%c6,i8**%c7,align 8
%c8=getelementptr inbounds i8,i8*%c3,i64 8
%c9=bitcast i8*%c8 to i32*
store i32 1,i32*%c9,align 4
%da=call i8*@sml_alloc(i32 inreg 28)#0
%db=getelementptr inbounds i8,i8*%da,i64 -4
%dc=bitcast i8*%db to i32*
store i32 1342177304,i32*%dc,align 4
%dd=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%de=bitcast i8*%da to i8**
store i8*%dd,i8**%de,align 8
%df=getelementptr inbounds i8,i8*%da,i64 8
%dg=bitcast i8*%df to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compilePatE_1501 to void(...)*),void(...)**%dg,align 8
%dh=getelementptr inbounds i8,i8*%da,i64 16
%di=bitcast i8*%dh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compilePatE_1501 to void(...)*),void(...)**%di,align 8
%dj=getelementptr inbounds i8,i8*%da,i64 24
%dk=bitcast i8*%dj to i32*
store i32 -2147483647,i32*%dk,align 4
%dl=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dm=call fastcc i8*%c0(i8*inreg%dl,i8*inreg%da)
%dn=getelementptr inbounds i8,i8*%dm,i64 16
%do=bitcast i8*%dn to i8*(i8*,i8*)**
%dp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%do,align 8
%dq=bitcast i8*%dm to i8**
%dr=load i8*,i8**%dq,align 8
%ds=bitcast i8**%e to i8***
%dt=load i8**,i8***%ds,align 8
store i8*null,i8**%e,align 8
%du=load i8*,i8**%dt,align 8
%dv=call fastcc i8*%dp(i8*inreg%dr,i8*inreg%du)
store i8*%dv,i8**%d,align 8
%dw=call i8*@sml_alloc(i32 inreg 28)#0
%dx=getelementptr inbounds i8,i8*%dw,i64 -4
%dy=bitcast i8*%dx to i32*
store i32 1342177304,i32*%dy,align 4
%dz=load i8*,i8**%d,align 8
%dA=bitcast i8*%dw to i8**
store i8*%dz,i8**%dA,align 8
%dB=load i8*,i8**%c,align 8
%dC=getelementptr inbounds i8,i8*%dw,i64 8
%dD=bitcast i8*%dC to i8**
store i8*%dB,i8**%dD,align 8
%dE=load i8*,i8**%f,align 8
%dF=getelementptr inbounds i8,i8*%dw,i64 16
%dG=bitcast i8*%dF to i8**
store i8*%dE,i8**%dG,align 8
%dH=getelementptr inbounds i8,i8*%dw,i64 24
%dI=bitcast i8*%dH to i32*
store i32 7,i32*%dI,align 4
%dJ=tail call fastcc i8*@_SMLFN12TypedCalcCon17TPPATEXNCONSTRUCTE(i8*inreg%dw)
ret i8*%dJ
dK:
%dL=load i8*,i8**@_SMLZN12TypedCalcCon10TPPATERRORE,align 8
ret i8*%dL
dM:
%dN=getelementptr inbounds i8,i8*%r,i64 8
%dO=bitcast i8*%dN to i8**
%dP=load i8*,i8**%dO,align 8
store i8*%dP,i8**%e,align 8
%dQ=getelementptr inbounds i8,i8*%dP,i64 8
%dR=bitcast i8*%dQ to i8**
%dS=load i8*,i8**%dR,align 8
store i8*%dS,i8**%f,align 8
%dT=getelementptr inbounds i8,i8*%dP,i64 24
%dU=bitcast i8*%dT to i8**
%dV=load i8*,i8**%dU,align 8
store i8*%dV,i8**%g,align 8
%dW=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%dX=getelementptr inbounds i8,i8*%dW,i64 16
%dY=bitcast i8*%dX to i8*(i8*,i8*)**
%dZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dY,align 8
%d0=bitcast i8*%dW to i8**
%d1=load i8*,i8**%d0,align 8
store i8*%d1,i8**%h,align 8
%d2=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%d3=getelementptr inbounds i8,i8*%d2,i64 16
%d4=bitcast i8*%d3 to i8*(i8*,i8*)**
%d5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d4,align 8
%d6=bitcast i8*%d2 to i8**
%d7=load i8*,i8**%d6,align 8
store i8*%d7,i8**%c,align 8
%d8=call i8*@sml_alloc(i32 inreg 12)#0
%d9=getelementptr inbounds i8,i8*%d8,i64 -4
%ea=bitcast i8*%d9 to i32*
store i32 1342177288,i32*%ea,align 4
store i8*%d8,i8**%i,align 8
%eb=load i8*,i8**%d,align 8
%ec=bitcast i8*%d8 to i8**
store i8*%eb,i8**%ec,align 8
%ed=getelementptr inbounds i8,i8*%d8,i64 8
%ee=bitcast i8*%ed to i32*
store i32 1,i32*%ee,align 4
%ef=call i8*@sml_alloc(i32 inreg 28)#0
%eg=getelementptr inbounds i8,i8*%ef,i64 -4
%eh=bitcast i8*%eg to i32*
store i32 1342177304,i32*%eh,align 4
%ei=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ej=bitcast i8*%ef to i8**
store i8*%ei,i8**%ej,align 8
%ek=getelementptr inbounds i8,i8*%ef,i64 8
%el=bitcast i8*%ek to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compilePatE_1499 to void(...)*),void(...)**%el,align 8
%em=getelementptr inbounds i8,i8*%ef,i64 16
%en=bitcast i8*%em to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compilePatE_1499 to void(...)*),void(...)**%en,align 8
%eo=getelementptr inbounds i8,i8*%ef,i64 24
%ep=bitcast i8*%eo to i32*
store i32 -2147483647,i32*%ep,align 4
%eq=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%er=call fastcc i8*%d5(i8*inreg%eq,i8*inreg%ef)
%es=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%et=call fastcc i8*%dZ(i8*inreg%es,i8*inreg%er)
%eu=getelementptr inbounds i8,i8*%et,i64 16
%ev=bitcast i8*%eu to i8*(i8*,i8*)**
%ew=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ev,align 8
%ex=bitcast i8*%et to i8**
%ey=load i8*,i8**%ex,align 8
%ez=load i8*,i8**%e,align 8
%eA=getelementptr inbounds i8,i8*%ez,i64 16
%eB=bitcast i8*%eA to i8**
%eC=load i8*,i8**%eB,align 8
%eD=call fastcc i8*%ew(i8*inreg%ey,i8*inreg%eC)
store i8*%eD,i8**%c,align 8
%eE=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%eF=getelementptr inbounds i8,i8*%eE,i64 16
%eG=bitcast i8*%eF to i8*(i8*,i8*)**
%eH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eG,align 8
%eI=bitcast i8*%eE to i8**
%eJ=load i8*,i8**%eI,align 8
store i8*%eJ,i8**%h,align 8
%eK=call i8*@sml_alloc(i32 inreg 12)#0
%eL=getelementptr inbounds i8,i8*%eK,i64 -4
%eM=bitcast i8*%eL to i32*
store i32 1342177288,i32*%eM,align 4
store i8*%eK,i8**%i,align 8
%eN=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eO=bitcast i8*%eK to i8**
store i8*%eN,i8**%eO,align 8
%eP=getelementptr inbounds i8,i8*%eK,i64 8
%eQ=bitcast i8*%eP to i32*
store i32 1,i32*%eQ,align 4
%eR=call i8*@sml_alloc(i32 inreg 28)#0
%eS=getelementptr inbounds i8,i8*%eR,i64 -4
%eT=bitcast i8*%eS to i32*
store i32 1342177304,i32*%eT,align 4
%eU=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%eV=bitcast i8*%eR to i8**
store i8*%eU,i8**%eV,align 8
%eW=getelementptr inbounds i8,i8*%eR,i64 8
%eX=bitcast i8*%eW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compilePatE_1500 to void(...)*),void(...)**%eX,align 8
%eY=getelementptr inbounds i8,i8*%eR,i64 16
%eZ=bitcast i8*%eY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compilePatE_1500 to void(...)*),void(...)**%eZ,align 8
%e0=getelementptr inbounds i8,i8*%eR,i64 24
%e1=bitcast i8*%e0 to i32*
store i32 -2147483647,i32*%e1,align 4
%e2=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%e3=call fastcc i8*%eH(i8*inreg%e2,i8*inreg%eR)
%e4=getelementptr inbounds i8,i8*%e3,i64 16
%e5=bitcast i8*%e4 to i8*(i8*,i8*)**
%e6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%e5,align 8
%e7=bitcast i8*%e3 to i8**
%e8=load i8*,i8**%e7,align 8
%e9=bitcast i8**%e to i8***
%fa=load i8**,i8***%e9,align 8
store i8*null,i8**%e,align 8
%fb=load i8*,i8**%fa,align 8
%fc=call fastcc i8*%e6(i8*inreg%e8,i8*inreg%fb)
store i8*%fc,i8**%d,align 8
%fd=call i8*@sml_alloc(i32 inreg 36)#0
%fe=getelementptr inbounds i8,i8*%fd,i64 -4
%ff=bitcast i8*%fe to i32*
store i32 1342177312,i32*%ff,align 4
%fg=load i8*,i8**%d,align 8
%fh=bitcast i8*%fd to i8**
store i8*%fg,i8**%fh,align 8
%fi=load i8*,i8**%f,align 8
%fj=getelementptr inbounds i8,i8*%fd,i64 8
%fk=bitcast i8*%fj to i8**
store i8*%fi,i8**%fk,align 8
%fl=load i8*,i8**%c,align 8
%fm=getelementptr inbounds i8,i8*%fd,i64 16
%fn=bitcast i8*%fm to i8**
store i8*%fl,i8**%fn,align 8
%fo=load i8*,i8**%g,align 8
%fp=getelementptr inbounds i8,i8*%fd,i64 24
%fq=bitcast i8*%fp to i8**
store i8*%fo,i8**%fq,align 8
%fr=getelementptr inbounds i8,i8*%fd,i64 32
%fs=bitcast i8*%fr to i32*
store i32 15,i32*%fs,align 4
%ft=tail call fastcc i8*@_SMLFN12TypedCalcCon18TPPATDATACONSTRUCTE(i8*inreg%fd)
ret i8*%ft
fu:
%fv=getelementptr inbounds i8,i8*%r,i64 8
%fw=bitcast i8*%fv to i8**
%fx=load i8*,i8**%fw,align 8
%fy=bitcast i8*%fx to i8**
%fz=load i8*,i8**%fy,align 8
store i8*%fz,i8**%e,align 8
%fA=getelementptr inbounds i8,i8*%fx,i64 16
%fB=bitcast i8*%fA to i8**
%fC=load i8*,i8**%fB,align 8
store i8*%fC,i8**%f,align 8
%fD=getelementptr inbounds i8,i8*%fx,i64 8
%fE=bitcast i8*%fD to i8**
%fF=load i8*,i8**%fE,align 8
store i8*null,i8**%d,align 8
%fG=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%fF)
store i8*%fG,i8**%c,align 8
%fH=call i8*@sml_alloc(i32 inreg 28)#0
%fI=getelementptr inbounds i8,i8*%fH,i64 -4
%fJ=bitcast i8*%fI to i32*
store i32 1342177304,i32*%fJ,align 4
%fK=load i8*,i8**%e,align 8
%fL=bitcast i8*%fH to i8**
store i8*%fK,i8**%fL,align 8
%fM=load i8*,i8**%c,align 8
%fN=getelementptr inbounds i8,i8*%fH,i64 8
%fO=bitcast i8*%fN to i8**
store i8*%fM,i8**%fO,align 8
%fP=load i8*,i8**%f,align 8
%fQ=getelementptr inbounds i8,i8*%fH,i64 16
%fR=bitcast i8*%fQ to i8**
store i8*%fP,i8**%fR,align 8
%fS=getelementptr inbounds i8,i8*%fH,i64 24
%fT=bitcast i8*%fS to i32*
store i32 7,i32*%fT,align 4
%fU=tail call fastcc i8*@_SMLFN12TypedCalcCon13TPPATCONSTANTE(i8*inreg%fH)
ret i8*%fU
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileVarE_1507(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%b to i32*
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%c to i32**
%l=load i32*,i32**%k,align 8
br label%m
m:
%n=phi i32*[%l,%j],[%i,%h]
%o=load i32,i32*%n,align 4
%p=call fastcc i8*@_SMLFN5VarID3Map4findE(i32 inreg 1,i32 inreg 8)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=bitcast i8**%d to i8***
%w=load i8**,i8***%v,align 8
%x=load i8*,i8**%w,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=getelementptr inbounds i8,i8*%A,i64 32
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%d,align 8
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%E,i64 12
%I=bitcast i8*%H to i32*
store i32 0,i32*%I,align 1
%J=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%K=bitcast i8*%E to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 8
%M=bitcast i8*%L to i32*
store i32%o,i32*%M,align 4
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
%P=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Q=call fastcc i8*%s(i8*inreg%P,i8*inreg%E)
%R=icmp eq i8*%Q,null
br i1%R,label%S,label%aI
S:
store i8*null,i8**%c,align 8
%T=call fastcc i8*@_SMLFN5VarID8toStringE(i32 inreg%o)
store i8*%T,i8**%c,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=bitcast i8*%U to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@c3,i64 0,i32 2,i64 0),i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%U)
store i8*%ad,i8**%c,align 8
%ae=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%ae,i8**%d,align 8
%af=call i8*@sml_alloc(i32 inreg 20)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177296,i32*%ah,align 4
%ai=bitcast i8*%af to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@de,i64 0,i32 2,i64 0),i8**%ai,align 8
%aj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%af,i64 16
%an=bitcast i8*%am to i32*
store i32 3,i32*%an,align 4
%ao=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%af)
store i8*%ao,i8**%c,align 8
%ap=call i8*@sml_alloc(i32 inreg 28)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177304,i32*%ar,align 4
store i8*%ap,i8**%e,align 8
%as=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%at=bitcast i8*%ap to i8**
store i8*%as,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%ap,i64 8
%av=bitcast i8*%au to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%av,align 8
%aw=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ax=getelementptr inbounds i8,i8*%ap,i64 16
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%ap,i64 24
%aA=bitcast i8*%az to i32*
store i32 7,i32*%aA,align 4
%aB=call i8*@sml_alloc(i32 inreg 60)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177336,i32*%aD,align 4
%aE=getelementptr inbounds i8,i8*%aB,i64 56
%aF=bitcast i8*%aE to i32*
store i32 1,i32*%aF,align 4
%aG=load i8*,i8**%e,align 8
%aH=bitcast i8*%aB to i8**
store i8*%aG,i8**%aH,align 8
call void@sml_raise(i8*inreg%aB)#1
unreachable
aI:
%aJ=bitcast i8*%Q to i8**
%aK=load i8*,i8**%aJ,align 8
%aL=load i8*,i8**%c,align 8
%aM=bitcast i8*%aL to i32*
%aN=load i32,i32*%aM,align 4
%aO=getelementptr inbounds i8,i8*%aL,i64 4
%aP=bitcast i8*%aO to i32*
%aQ=load i32,i32*%aP,align 4
%aR=getelementptr inbounds i8,i8*%aL,i64 8
%aS=bitcast i8*%aR to i8**
%aT=load i8*,i8**%aS,align 8
store i8*%aT,i8**%c,align 8
%aU=getelementptr inbounds i8,i8*%aK,i64 16
%aV=bitcast i8*%aU to i8**
%aW=load i8*,i8**%aV,align 8
store i8*%aW,i8**%d,align 8
%aX=call i8*@sml_alloc(i32 inreg 28)#0
%aY=bitcast i8*%aX to i32*
%aZ=getelementptr inbounds i8,i8*%aX,i64 -4
%a0=bitcast i8*%aZ to i32*
store i32 1342177304,i32*%a0,align 4
store i32%aN,i32*%aY,align 4
%a1=getelementptr inbounds i8,i8*%aX,i64 4
%a2=bitcast i8*%a1 to i32*
store i32%aQ,i32*%a2,align 4
%a3=load i8*,i8**%c,align 8
%a4=getelementptr inbounds i8,i8*%aX,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=load i8*,i8**%d,align 8
%a7=getelementptr inbounds i8,i8*%aX,i64 16
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%aX,i64 24
%ba=bitcast i8*%a9 to i32*
store i32 6,i32*%ba,align 4
ret i8*%aX
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileVarE_1508(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileVarE_1507 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileVarE_1507 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1591(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1592(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1593(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination12compileMatchE_1511(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1594(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%l
i:
%j=bitcast i8*%a to i8**
%k=bitcast i8**%f to i8***
br label%p
l:
call void@sml_check(i32 inreg%g)
%m=load i8*,i8**%c,align 8
%n=bitcast i8**%f to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8***[%k,%i],[%n,%l]
%r=phi i8**[%j,%i],[%o,%l]
%s=phi i8*[%b,%i],[%m,%l]
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=load i8*,i8**%r,align 8
%x=getelementptr inbounds i8,i8*%s,i64 16
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%w,i8*inreg%z)
store i8*%A,i8**%d,align 8
%B=load i8**,i8***%q,align 8
store i8*null,i8**%f,align 8
%C=load i8*,i8**%B,align 8
%D=bitcast i8**%c to i8***
%E=load i8**,i8***%D,align 8
store i8*null,i8**%c,align 8
%F=load i8*,i8**%E,align 8
%G=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%C,i8*inreg%F)
store i8*%G,i8**%c,align 8
%H=call i8*@sml_alloc(i32 inreg 28)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177304,i32*%J,align 4
%K=load i8*,i8**%c,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=load i8*,i8**%e,align 8
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=load i8*,i8**%d,align 8
%Q=getelementptr inbounds i8,i8*%H,i64 16
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%H,i64 24
%T=bitcast i8*%S to i32*
store i32 7,i32*%T,align 4
ret i8*%H
}
define internal fastcc i8*@_SMLL9argVarOpt_1595(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=getelementptr inbounds i8,i8*%o,i64 4
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
store i8*null,i8**%c,align 8
%x=load i8*,i8**%n,align 8
%y=getelementptr inbounds i8,i8*%o,i64 16
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%x,i8*inreg%A)
store i8*%B,i8**%c,align 8
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177304,i32*%F,align 4
store i32%q,i32*%D,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32%t,i32*%H,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=load i8*,i8**%c,align 8
%M=getelementptr inbounds i8,i8*%C,i64 16
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%C,i64 24
%P=bitcast i8*%O to i32*
store i32 6,i32*%P,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1596(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1597(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%c,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%c,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%b,%q]
store i8*null,i8**%c,align 8
store i8*%p,i8**%e,align 8
%r=getelementptr inbounds i8,i8*%p,i64 16
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%g,align 8
%u=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%d,align 8
%A=bitcast i8**%h to i8***
%B=load i8**,i8***%A,align 8
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%c,align 8
%D=call i8*@sml_alloc(i32 inreg 12)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177288,i32*%F,align 4
store i8*%D,i8**%f,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to i32*
store i32 1,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 28)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177304,i32*%M,align 4
%N=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9argVarOpt_1595 to void(...)*),void(...)**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9argVarOpt_1595 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%K,i64 24
%U=bitcast i8*%T to i32*
store i32 -2147483647,i32*%U,align 4
%V=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%W=call fastcc i8*%x(i8*inreg%V,i8*inreg%K)
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=bitcast i8**%e to i8***
%ad=load i8**,i8***%ac,align 8
%ae=load i8*,i8**%ad,align 8
%af=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ae)
store i8*%af,i8**%c,align 8
%ag=icmp eq i8*%af,null
br i1%ag,label%at,label%ah
ah:
%ai=bitcast i8*%af to i8**
%aj=load i8*,i8**%ai,align 8
store i8*%aj,i8**%d,align 8
%ak=call i8*@sml_alloc(i32 inreg 20)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177296,i32*%am,align 4
%an=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ak,i64 8
%aq=bitcast i8*%ap to i8**
store i8*null,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%ak,i64 16
%as=bitcast i8*%ar to i32*
store i32 3,i32*%as,align 4
br label%at
at:
%au=phi i8*[%ak,%ah],[null,%o]
%av=load i8**,i8***%A,align 8
%aw=load i8*,i8**%av,align 8
store i8*%aw,i8**%f,align 8
%ax=bitcast i8*%aw to i32*
%ay=load i32,i32*%ax,align 4
%az=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%au)
store i8*%az,i8**%d,align 8
%aA=load i8**,i8***%A,align 8
%aB=load i8*,i8**%aA,align 8
%aC=getelementptr inbounds i8,i8*%aB,i64 8
%aD=bitcast i8*%aC to i8**
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%i,align 8
%aF=call i8*@sml_alloc(i32 inreg 20)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177296,i32*%aH,align 4
%aI=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aJ=bitcast i8*%aF to i8**
store i8*%aI,i8**%aJ,align 8
%aK=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aL=getelementptr inbounds i8,i8*%aF,i64 8
%aM=bitcast i8*%aL to i8**
store i8*%aK,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aF,i64 16
%aO=bitcast i8*%aN to i32*
store i32 3,i32*%aO,align 4
%aP=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%aF)
store i8*%aP,i8**%i,align 8
%aQ=load i8*,i8**%f,align 8
%aR=getelementptr inbounds i8,i8*%aQ,i64 16
%aS=bitcast i8*%aR to i8**
%aT=load i8*,i8**%aS,align 8
store i8*%aT,i8**%j,align 8
%aU=getelementptr inbounds i8,i8*%aQ,i64 24
%aV=bitcast i8*%aU to i8**
%aW=load i8*,i8**%aV,align 8
store i8*%aW,i8**%f,align 8
%aX=call i8*@sml_alloc(i32 inreg 36)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177312,i32*%aZ,align 4
store i8*%aX,i8**%d,align 8
%a0=getelementptr inbounds i8,i8*%aX,i64 4
%a1=bitcast i8*%a0 to i32*
store i32 0,i32*%a1,align 1
%a2=bitcast i8*%aX to i32*
store i32%ay,i32*%a2,align 4
%a3=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%a4=getelementptr inbounds i8,i8*%aX,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%a7=getelementptr inbounds i8,i8*%aX,i64 16
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ba=getelementptr inbounds i8,i8*%aX,i64 24
%bb=bitcast i8*%ba to i8**
store i8*%a9,i8**%bb,align 8
%bc=getelementptr inbounds i8,i8*%aX,i64 32
%bd=bitcast i8*%bc to i32*
store i32 14,i32*%bd,align 4
%be=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bf=getelementptr inbounds i8,i8*%be,i64 16
%bg=bitcast i8*%bf to i8*(i8*,i8*)**
%bh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bg,align 8
%bi=bitcast i8*%be to i8**
%bj=load i8*,i8**%bi,align 8
store i8*%bj,i8**%j,align 8
%bk=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bl=getelementptr inbounds i8,i8*%bk,i64 16
%bm=bitcast i8*%bl to i8*(i8*,i8*)**
%bn=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bm,align 8
%bo=bitcast i8*%bk to i8**
%bp=load i8*,i8**%bo,align 8
store i8*%bp,i8**%i,align 8
%bq=load i8**,i8***%A,align 8
store i8*null,i8**%h,align 8
%br=load i8*,i8**%bq,align 8
store i8*%br,i8**%f,align 8
%bs=call i8*@sml_alloc(i32 inreg 12)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177288,i32*%bu,align 4
store i8*%bs,i8**%h,align 8
%bv=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bw=bitcast i8*%bs to i8**
store i8*%bv,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bs,i64 8
%by=bitcast i8*%bx to i32*
store i32 1,i32*%by,align 4
%bz=call i8*@sml_alloc(i32 inreg 28)#0
%bA=getelementptr inbounds i8,i8*%bz,i64 -4
%bB=bitcast i8*%bA to i32*
store i32 1342177304,i32*%bB,align 4
%bC=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bD=bitcast i8*%bz to i8**
store i8*%bC,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bz,i64 8
%bF=bitcast i8*%bE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1596 to void(...)*),void(...)**%bF,align 8
%bG=getelementptr inbounds i8,i8*%bz,i64 16
%bH=bitcast i8*%bG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1596 to void(...)*),void(...)**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bz,i64 24
%bJ=bitcast i8*%bI to i32*
store i32 -2147483647,i32*%bJ,align 4
%bK=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bL=call fastcc i8*%bn(i8*inreg%bK,i8*inreg%bz)
%bM=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bN=call fastcc i8*%bh(i8*inreg%bM,i8*inreg%bL)
%bO=getelementptr inbounds i8,i8*%bN,i64 16
%bP=bitcast i8*%bO to i8*(i8*,i8*)**
%bQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bP,align 8
%bR=bitcast i8*%bN to i8**
%bS=load i8*,i8**%bR,align 8
%bT=load i8*,i8**%e,align 8
%bU=getelementptr inbounds i8,i8*%bT,i64 24
%bV=bitcast i8*%bU to i8**
%bW=load i8*,i8**%bV,align 8
%bX=call fastcc i8*%bQ(i8*inreg%bS,i8*inreg%bW)
store i8*%bX,i8**%f,align 8
%bY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bZ=getelementptr inbounds i8,i8*%bY,i64 8
%b0=bitcast i8*%bZ to i8**
%b1=load i8*,i8**%b0,align 8
%b2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b3=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%b2,i8*inreg%b1)
store i8*%b3,i8**%d,align 8
%b4=call i8*@sml_alloc(i32 inreg 36)#0
%b5=getelementptr inbounds i8,i8*%b4,i64 -4
%b6=bitcast i8*%b5 to i32*
store i32 1342177312,i32*%b6,align 4
%b7=load i8*,i8**%c,align 8
%b8=bitcast i8*%b4 to i8**
store i8*%b7,i8**%b8,align 8
%b9=load i8*,i8**%d,align 8
%ca=getelementptr inbounds i8,i8*%b4,i64 8
%cb=bitcast i8*%ca to i8**
store i8*%b9,i8**%cb,align 8
%cc=load i8*,i8**%g,align 8
%cd=getelementptr inbounds i8,i8*%b4,i64 16
%ce=bitcast i8*%cd to i8**
store i8*%cc,i8**%ce,align 8
%cf=load i8*,i8**%f,align 8
%cg=getelementptr inbounds i8,i8*%b4,i64 24
%ch=bitcast i8*%cg to i8**
store i8*%cf,i8**%ch,align 8
%ci=getelementptr inbounds i8,i8*%b4,i64 32
%cj=bitcast i8*%ci to i32*
store i32 15,i32*%cj,align 4
ret i8*%b4
}
define internal fastcc i8*@_SMLL9argVarOpt_1598(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=getelementptr inbounds i8,i8*%o,i64 4
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
store i8*null,i8**%c,align 8
%x=load i8*,i8**%n,align 8
%y=getelementptr inbounds i8,i8*%o,i64 16
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%x,i8*inreg%A)
store i8*%B,i8**%c,align 8
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177304,i32*%F,align 4
store i32%q,i32*%D,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32%t,i32*%H,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=load i8*,i8**%c,align 8
%M=getelementptr inbounds i8,i8*%C,i64 16
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%C,i64 24
%P=bitcast i8*%O to i32*
store i32 6,i32*%P,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1599(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%c,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%b,%p]
store i8*null,i8**%c,align 8
store i8*%o,i8**%e,align 8
%q=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=bitcast i8**%g to i8***
%x=load i8**,i8***%w,align 8
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 12)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177288,i32*%B,align 4
store i8*%z,i8**%f,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i32*
store i32 1,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
%J=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9argVarOpt_1598 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9argVarOpt_1598 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 24
%Q=bitcast i8*%P to i32*
store i32 -2147483647,i32*%Q,align 4
%R=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%S=call fastcc i8*%t(i8*inreg%R,i8*inreg%G)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
%Y=bitcast i8**%e to i8***
%Z=load i8**,i8***%Y,align 8
%aa=load i8*,i8**%Z,align 8
%ab=call fastcc i8*%V(i8*inreg%X,i8*inreg%aa)
store i8*%ab,i8**%c,align 8
%ac=icmp eq i8*%ab,null
br i1%ac,label%ap,label%ad
ad:
%ae=bitcast i8*%ab to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%d,align 8
%ag=call i8*@sml_alloc(i32 inreg 20)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 8
%am=bitcast i8*%al to i8**
store i8*null,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ag,i64 16
%ao=bitcast i8*%an to i32*
store i32 3,i32*%ao,align 4
br label%ap
ap:
%aq=phi i8*[%ag,%ad],[null,%n]
%ar=load i8**,i8***%w,align 8
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%f,align 8
%at=bitcast i8*%as to i32*
%au=load i32,i32*%at,align 4
%av=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%aq)
store i8*%av,i8**%d,align 8
%aw=load i8**,i8***%w,align 8
%ax=load i8*,i8**%aw,align 8
%ay=getelementptr inbounds i8,i8*%ax,i64 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%h,align 8
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
%aE=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aB,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 3,i32*%aK,align 4
%aL=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%aB)
store i8*%aL,i8**%h,align 8
%aM=load i8*,i8**%f,align 8
%aN=getelementptr inbounds i8,i8*%aM,i64 16
%aO=bitcast i8*%aN to i8**
%aP=load i8*,i8**%aO,align 8
store i8*%aP,i8**%i,align 8
%aQ=getelementptr inbounds i8,i8*%aM,i64 24
%aR=bitcast i8*%aQ to i8**
%aS=load i8*,i8**%aR,align 8
store i8*%aS,i8**%f,align 8
%aT=call i8*@sml_alloc(i32 inreg 36)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177312,i32*%aV,align 4
store i8*%aT,i8**%d,align 8
%aW=getelementptr inbounds i8,i8*%aT,i64 4
%aX=bitcast i8*%aW to i32*
store i32 0,i32*%aX,align 1
%aY=bitcast i8*%aT to i32*
store i32%au,i32*%aY,align 4
%aZ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a0=getelementptr inbounds i8,i8*%aT,i64 8
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%a3=getelementptr inbounds i8,i8*%aT,i64 16
%a4=bitcast i8*%a3 to i8**
store i8*%a2,i8**%a4,align 8
%a5=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a6=getelementptr inbounds i8,i8*%aT,i64 24
%a7=bitcast i8*%a6 to i8**
store i8*%a5,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%aT,i64 32
%a9=bitcast i8*%a8 to i32*
store i32 14,i32*%a9,align 4
%ba=load i8**,i8***%w,align 8
store i8*null,i8**%g,align 8
%bb=load i8*,i8**%ba,align 8
%bc=call fastcc i8*@_SMLLN17PolyTyElimination13compileExnConE_1490(i8*inreg%bb)
%bd=getelementptr inbounds i8,i8*%bc,i64 16
%be=bitcast i8*%bd to i8*(i8*,i8*)**
%bf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%be,align 8
%bg=bitcast i8*%bc to i8**
%bh=load i8*,i8**%bg,align 8
%bi=load i8*,i8**%e,align 8
%bj=getelementptr inbounds i8,i8*%bi,i64 16
%bk=bitcast i8*%bj to i8**
%bl=load i8*,i8**%bk,align 8
%bm=call fastcc i8*%bf(i8*inreg%bh,i8*inreg%bl)
store i8*%bm,i8**%f,align 8
%bn=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bo=getelementptr inbounds i8,i8*%bn,i64 8
%bp=bitcast i8*%bo to i8**
%bq=load i8*,i8**%bp,align 8
%br=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bs=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%br,i8*inreg%bq)
store i8*%bs,i8**%d,align 8
%bt=call i8*@sml_alloc(i32 inreg 28)#0
%bu=getelementptr inbounds i8,i8*%bt,i64 -4
%bv=bitcast i8*%bu to i32*
store i32 1342177304,i32*%bv,align 4
%bw=load i8*,i8**%c,align 8
%bx=bitcast i8*%bt to i8**
store i8*%bw,i8**%bx,align 8
%by=load i8*,i8**%d,align 8
%bz=getelementptr inbounds i8,i8*%bt,i64 8
%bA=bitcast i8*%bz to i8**
store i8*%by,i8**%bA,align 8
%bB=load i8*,i8**%f,align 8
%bC=getelementptr inbounds i8,i8*%bt,i64 16
%bD=bitcast i8*%bC to i8**
store i8*%bB,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bt,i64 24
%bF=bitcast i8*%bE to i32*
store i32 7,i32*%bF,align 4
ret i8*%bt
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1601(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1602(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1603(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1604(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1620(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLL10argVarList_1621(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=getelementptr inbounds i8,i8*%o,i64 4
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
store i8*null,i8**%c,align 8
%x=load i8*,i8**%n,align 8
%y=getelementptr inbounds i8,i8*%o,i64 16
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%x,i8*inreg%A)
store i8*%B,i8**%c,align 8
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177304,i32*%F,align 4
store i32%q,i32*%D,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32%t,i32*%H,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=load i8*,i8**%c,align 8
%M=getelementptr inbounds i8,i8*%C,i64 16
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%C,i64 24
%P=bitcast i8*%O to i32*
store i32 6,i32*%P,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLL10argVarList_1622(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=getelementptr inbounds i8,i8*%o,i64 4
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
store i8*null,i8**%c,align 8
%x=load i8*,i8**%n,align 8
%y=getelementptr inbounds i8,i8*%o,i64 16
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%x,i8*inreg%A)
store i8*%B,i8**%c,align 8
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177304,i32*%F,align 4
store i32%q,i32*%D,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32%t,i32*%H,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=load i8*,i8**%c,align 8
%M=getelementptr inbounds i8,i8*%C,i64 16
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%C,i64 24
%P=bitcast i8*%O to i32*
store i32 6,i32*%P,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLL10argVarList_1623(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=getelementptr inbounds i8,i8*%o,i64 4
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
store i8*null,i8**%c,align 8
%x=load i8*,i8**%n,align 8
%y=getelementptr inbounds i8,i8*%o,i64 16
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%x,i8*inreg%A)
store i8*%B,i8**%c,align 8
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177304,i32*%F,align 4
store i32%q,i32*%D,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32%t,i32*%H,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=load i8*,i8**%c,align 8
%M=getelementptr inbounds i8,i8*%C,i64 16
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%C,i64 24
%P=bitcast i8*%O to i32*
store i32 6,i32*%P,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1624(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1625(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1626(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1627(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLL10instTyList_1632(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLL10oldInstMap_1633(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i32*
%m=load i32,i32*%l,align 4
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%j,i64 16
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=call fastcc i8*@_SMLFN14BoundTypeVarID3Map6insertE(i32 inreg 1,i32 inreg 8)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%d,align 8
%z=call i8*@sml_alloc(i32 inreg 28)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177304,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 12
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i32*
store i32%m,i32*%H,align 4
%I=load i8*,i8**%b,align 8
%J=getelementptr inbounds i8,i8*%z,i64 16
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%z,i64 24
%M=bitcast i8*%L to i32*
store i32 5,i32*%M,align 4
%N=load i8*,i8**%d,align 8
%O=tail call fastcc i8*%w(i8*inreg%N,i8*inreg%z)
ret i8*%O
}
define internal fastcc i8*@_SMLL10newInstMap_1639(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%b to i32*
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i32**
%k=load i32*,i32**%j,align 8
br label%l
l:
%m=phi i32*[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i32,i32*%m,align 4
%o=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg 1,i32 inreg 8)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=bitcast i8**%c to i8***
%v=load i8**,i8***%u,align 8
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%x,i64 12
%B=bitcast i8*%A to i32*
store i32 0,i32*%B,align 1
%C=load i8*,i8**%c,align 8
%D=bitcast i8*%x to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 8
%F=bitcast i8*%E to i32*
store i32%n,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%x,i64 16
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=load i8*,i8**%d,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%x)
ret i8*%J
}
define internal fastcc i8*@_SMLL4args_1641(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination10compilePatE_1492(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination11compileDeclE_1646(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i32***
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=load i8*,i8**%c,align 8
%n=bitcast i8**%f to i32****
%o=load i32***,i32****%n,align 8
br label%p
p:
%q=phi i32***[%o,%l],[%k,%j]
%r=phi i8*[%m,%l],[%b,%j]
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=getelementptr inbounds i8,i8*%u,i64 4
%y=bitcast i8*%x to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%d,align 8
%D=load i32**,i32***%q,align 8
%E=load i32*,i32**%D,align 8
%F=load i32,i32*%E,align 4
%G=load i8**,i8***bitcast(i8**@_SMLZN5Types8univKindE to i8***),align 8
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%c,align 8
%I=call i8*@sml_alloc(i32 inreg 20)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177296,i32*%K,align 4
store i8*%I,i8**%e,align 8
%L=getelementptr inbounds i8,i8*%I,i64 4
%M=bitcast i8*%L to i32*
store i32 0,i32*%M,align 1
%N=bitcast i8*%I to i32*
store i32%F,i32*%N,align 4
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%I,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 16
%S=bitcast i8*%R to i32*
store i32 2,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%g,align 8
%W=getelementptr inbounds i8,i8*%T,i64 4
%X=bitcast i8*%W to i32*
store i32 0,i32*%X,align 1
%Y=bitcast i8*%T to i32*
store i32 3,i32*%Y,align 4
%Z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 16
%ad=bitcast i8*%ac to i32*
store i32 2,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=bitcast i8*%ae to i32*
%ag=getelementptr inbounds i8,i8*%ae,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177304,i32*%ah,align 4
store i8*%ae,i8**%c,align 8
store i32%w,i32*%af,align 4
%ai=getelementptr inbounds i8,i8*%ae,i64 4
%aj=bitcast i8*%ai to i32*
store i32%z,i32*%aj,align 4
%ak=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%al=getelementptr inbounds i8,i8*%ae,i64 8
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ao=getelementptr inbounds i8,i8*%ae,i64 16
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ae,i64 24
%ar=bitcast i8*%aq to i32*
store i32 6,i32*%ar,align 4
%as=bitcast i8**%f to i8****
%at=load i8***,i8****%as,align 8
%au=load i8**,i8***%at,align 8
%av=load i8*,i8**%au,align 8
%aw=call fastcc i8*@_SMLLN17PolyTyElimination8dummyExpE_1320(i8*inreg%av)
%ax=getelementptr inbounds i8,i8*%aw,i64 16
%ay=bitcast i8*%ax to i8*(i8*,i8*)**
%az=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ay,align 8
%aA=bitcast i8*%aw to i8**
%aB=load i8*,i8**%aA,align 8
%aC=load i8*,i8**%f,align 8
%aD=getelementptr inbounds i8,i8*%aC,i64 8
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
%aG=call fastcc i8*%az(i8*inreg%aB,i8*inreg%aF)
store i8*%aG,i8**%d,align 8
%aH=call i8*@sml_alloc(i32 inreg 20)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177296,i32*%aJ,align 4
store i8*%aH,i8**%e,align 8
%aK=load i8*,i8**%c,align 8
%aL=bitcast i8*%aH to i8**
store i8*%aK,i8**%aL,align 8
%aM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aN=getelementptr inbounds i8,i8*%aH,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aH,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 3,i32*%aQ,align 4
%aR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aS=getelementptr inbounds i8,i8*%aR,i64 8
%aT=bitcast i8*%aS to i8**
%aU=load i8*,i8**%aT,align 8
store i8*%aU,i8**%c,align 8
%aV=call i8*@sml_alloc(i32 inreg 20)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177296,i32*%aX,align 4
%aY=load i8*,i8**%e,align 8
%aZ=bitcast i8*%aV to i8**
store i8*%aY,i8**%aZ,align 8
%a0=load i8*,i8**%c,align 8
%a1=getelementptr inbounds i8,i8*%aV,i64 8
%a2=bitcast i8*%a1 to i8**
store i8*%a0,i8**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aV,i64 16
%a4=bitcast i8*%a3 to i32*
store i32 3,i32*%a4,align 4
%a5=tail call fastcc i8*@_SMLFN12TypedCalcCon5TPVALE(i8*inreg%aV)
ret i8*%a5
}
define internal fastcc i8*@_SMLLN17PolyTyElimination11compileDeclE_1647(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i32***
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=load i8*,i8**%c,align 8
%n=bitcast i8**%f to i32****
%o=load i32***,i32****%n,align 8
br label%p
p:
%q=phi i32***[%o,%l],[%k,%j]
%r=phi i8*[%m,%l],[%b,%j]
%s=getelementptr inbounds i8,i8*%r,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=getelementptr inbounds i8,i8*%u,i64 4
%y=bitcast i8*%x to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%d,align 8
%D=load i32**,i32***%q,align 8
%E=load i32*,i32**%D,align 8
%F=load i32,i32*%E,align 4
%G=load i8**,i8***bitcast(i8**@_SMLZN5Types8univKindE to i8***),align 8
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%c,align 8
%I=call i8*@sml_alloc(i32 inreg 20)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177296,i32*%K,align 4
store i8*%I,i8**%e,align 8
%L=getelementptr inbounds i8,i8*%I,i64 4
%M=bitcast i8*%L to i32*
store i32 0,i32*%M,align 1
%N=bitcast i8*%I to i32*
store i32%F,i32*%N,align 4
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%I,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 16
%S=bitcast i8*%R to i32*
store i32 2,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%g,align 8
%W=getelementptr inbounds i8,i8*%T,i64 4
%X=bitcast i8*%W to i32*
store i32 0,i32*%X,align 1
%Y=bitcast i8*%T to i32*
store i32 3,i32*%Y,align 4
%Z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 16
%ad=bitcast i8*%ac to i32*
store i32 2,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=bitcast i8*%ae to i32*
%ag=getelementptr inbounds i8,i8*%ae,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177304,i32*%ah,align 4
store i8*%ae,i8**%c,align 8
store i32%w,i32*%af,align 4
%ai=getelementptr inbounds i8,i8*%ae,i64 4
%aj=bitcast i8*%ai to i32*
store i32%z,i32*%aj,align 4
%ak=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%al=getelementptr inbounds i8,i8*%ae,i64 8
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ao=getelementptr inbounds i8,i8*%ae,i64 16
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ae,i64 24
%ar=bitcast i8*%aq to i32*
store i32 6,i32*%ar,align 4
%as=bitcast i8**%f to i8****
%at=load i8***,i8****%as,align 8
%au=load i8**,i8***%at,align 8
%av=load i8*,i8**%au,align 8
%aw=call fastcc i8*@_SMLLN17PolyTyElimination8dummyExpE_1320(i8*inreg%av)
%ax=getelementptr inbounds i8,i8*%aw,i64 16
%ay=bitcast i8*%ax to i8*(i8*,i8*)**
%az=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ay,align 8
%aA=bitcast i8*%aw to i8**
%aB=load i8*,i8**%aA,align 8
%aC=load i8*,i8**%f,align 8
%aD=getelementptr inbounds i8,i8*%aC,i64 8
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
%aG=call fastcc i8*%az(i8*inreg%aB,i8*inreg%aF)
store i8*%aG,i8**%d,align 8
%aH=call i8*@sml_alloc(i32 inreg 20)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177296,i32*%aJ,align 4
store i8*%aH,i8**%e,align 8
%aK=load i8*,i8**%c,align 8
%aL=bitcast i8*%aH to i8**
store i8*%aK,i8**%aL,align 8
%aM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aN=getelementptr inbounds i8,i8*%aH,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aH,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 3,i32*%aQ,align 4
%aR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aS=getelementptr inbounds i8,i8*%aR,i64 8
%aT=bitcast i8*%aS to i8**
%aU=load i8*,i8**%aT,align 8
store i8*%aU,i8**%c,align 8
%aV=call i8*@sml_alloc(i32 inreg 20)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177296,i32*%aX,align 4
%aY=load i8*,i8**%e,align 8
%aZ=bitcast i8*%aV to i8**
store i8*%aY,i8**%aZ,align 8
%a0=load i8*,i8**%c,align 8
%a1=getelementptr inbounds i8,i8*%aV,i64 8
%a2=bitcast i8*%a1 to i8**
store i8*%a0,i8**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aV,i64 16
%a4=bitcast i8*%a3 to i32*
store i32 3,i32*%a4,align 4
%a5=tail call fastcc i8*@_SMLFN12TypedCalcCon5TPVALE(i8*inreg%aV)
ret i8*%a5
}
define internal fastcc i8*@_SMLL8recbinds_1649(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%o
k:
call void@sml_check(i32 inreg%g)
%l=load i8*,i8**%d,align 8
%m=bitcast i8**%c to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%k],[%j,%i]
%q=phi i8*[%l,%k],[%b,%i]
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%q,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
%y=getelementptr inbounds i8,i8*%v,i64 4
%z=bitcast i8*%y to i32*
%A=load i32,i32*%z,align 4
%B=getelementptr inbounds i8,i8*%v,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%e,align 8
store i8*null,i8**%c,align 8
%E=load i8*,i8**%p,align 8
%F=getelementptr inbounds i8,i8*%v,i64 16
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%E,i8*inreg%H)
store i8*%I,i8**%f,align 8
%J=call i8*@sml_alloc(i32 inreg 28)#0
%K=bitcast i8*%J to i32*
%L=getelementptr inbounds i8,i8*%J,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177304,i32*%M,align 4
store i8*%J,i8**%c,align 8
store i32%x,i32*%K,align 4
%N=getelementptr inbounds i8,i8*%J,i64 4
%O=bitcast i8*%N to i32*
store i32%A,i32*%O,align 4
%P=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%T=getelementptr inbounds i8,i8*%J,i64 16
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%J,i64 24
%W=bitcast i8*%V to i32*
store i32 6,i32*%W,align 4
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
%aa=load i8*,i8**%d,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=load i8*,i8**%c,align 8
%ad=getelementptr inbounds i8,i8*%X,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%X,i64 16
%ag=bitcast i8*%af to i32*
store i32 3,i32*%ag,align 4
ret i8*%X
}
define internal fastcc i8*@_SMLL3env_1650(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15compileRecbindsE_1652(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=getelementptr inbounds i8,i8*%o,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
store i8*null,i8**%c,align 8
%s=load i8*,i8**%n,align 8
%t=bitcast i8*%o to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%s,i8*inreg%u)
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLL8recbinds_1653(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%o
k:
call void@sml_check(i32 inreg%g)
%l=load i8*,i8**%d,align 8
%m=bitcast i8**%c to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%k],[%j,%i]
%q=phi i8*[%l,%k],[%b,%i]
%r=getelementptr inbounds i8,i8*%q,i64 24
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=getelementptr inbounds i8,i8*%q,i64 16
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
%x=bitcast i8*%w to i32*
%y=load i32,i32*%x,align 4
%z=getelementptr inbounds i8,i8*%w,i64 4
%A=bitcast i8*%z to i32*
%B=load i32,i32*%A,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%e,align 8
store i8*null,i8**%c,align 8
%F=load i8*,i8**%p,align 8
%G=getelementptr inbounds i8,i8*%w,i64 16
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%F,i8*inreg%I)
store i8*%J,i8**%f,align 8
%K=call i8*@sml_alloc(i32 inreg 28)#0
%L=bitcast i8*%K to i32*
%M=getelementptr inbounds i8,i8*%K,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
store i8*%K,i8**%c,align 8
store i32%y,i32*%L,align 4
%O=getelementptr inbounds i8,i8*%K,i64 4
%P=bitcast i8*%O to i32*
store i32%B,i32*%P,align 4
%Q=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%R=getelementptr inbounds i8,i8*%K,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%U=getelementptr inbounds i8,i8*%K,i64 16
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%K,i64 24
%X=bitcast i8*%W to i32*
store i32 6,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 20)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177296,i32*%aa,align 4
%ab=load i8*,i8**%c,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=load i8*,i8**%d,align 8
%ae=getelementptr inbounds i8,i8*%Y,i64 8
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%Y,i64 16
%ah=bitcast i8*%ag to i32*
store i32 3,i32*%ah,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLL3env_1654(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18compileFunRecbindsE_1656(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN17PolyTyElimination12compileMatchE_1511(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18compileFunRecbindsE_1657(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%b to i8**
br label%o
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%c to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%l],[%k,%j]
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%f,align 8
%x=bitcast i8**%e to i8***
%y=load i8**,i8***%x,align 8
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%e,align 8
%A=call i8*@sml_alloc(i32 inreg 12)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177288,i32*%C,align 4
store i8*%A,i8**%g,align 8
%D=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 28)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177304,i32*%J,align 4
%K=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%H,i64 8
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18compileFunRecbindsE_1656 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%H,i64 16
%P=bitcast i8*%O to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18compileFunRecbindsE_1656 to void(...)*),void(...)**%P,align 8
%Q=getelementptr inbounds i8,i8*%H,i64 24
%R=bitcast i8*%Q to i32*
store i32 -2147483647,i32*%R,align 4
%S=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%T=call fastcc i8*%u(i8*inreg%S,i8*inreg%H)
%U=getelementptr inbounds i8,i8*%T,i64 16
%V=bitcast i8*%U to i8*(i8*,i8*)**
%W=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%V,align 8
%X=bitcast i8*%T to i8**
%Y=load i8*,i8**%X,align 8
%Z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aa=getelementptr inbounds i8,i8*%Z,i64 8
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
%ad=call fastcc i8*%W(i8*inreg%Y,i8*inreg%ac)
store i8*%ad,i8**%c,align 8
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=load i8*,i8**%d,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%c,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ae,i64 16
%an=bitcast i8*%am to i32*
store i32 3,i32*%an,align 4
ret i8*%ae
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"personality i32(...)*@sml_personality{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
%k=bitcast i8**%d to i8***
br label%l
l:
%m=phi i8*[%a,%n],[%nU,%nS]
%o=phi i8*[%b,%n],[%nY,%nS]
store i8*%m,i8**%c,align 8
store i8*%o,i8**%d,align 8
%p=load atomic i32,i32*@sml_check_flag unordered,align 4
%q=icmp eq i32%p,0
br i1%q,label%u,label%r
r:
call void@sml_check(i32 inreg%p)
%s=load i8*,i8**%d,align 8
%t=load i8*,i8**%c,align 8
br label%u
u:
%v=phi i8*[%t,%r],[%m,%l]
%w=phi i8*[%s,%r],[%o,%l]
store i8*%v,i8**%h,align 8
%x=icmp eq i8*%w,null
br i1%x,label%Ii,label%y
y:
%z=bitcast i8*%w to i32*
%A=load i32,i32*%z,align 4
switch i32%A,label%B[
i32 0,label%Sy
i32 2,label%QX
i32 37,label%Nq
i32 3,label%MD
i32 5,label%Mc
i32 6,label%Kv
i32 8,label%Jr
i32 9,label%Ik
i32 14,label%Ii
i32 16,label%He
i32 17,label%FD
i32 15,label%Ec
i32 18,label%CH
i32 19,label%Br
i32 22,label%A0
i32 21,label%z3
i32 1,label%xZ
i32 20,label%wk
i32 23,label%us
i32 4,label%sw
i32 39,label%rr
i32 25,label%qU
i32 26,label%p1
i32 27,label%pt
i32 28,label%oo
i32 29,label%mF
i32 30,label%ls
i32 31,label%kY
i32 32,label%kv
i32 33,label%jE
i32 35,label%iT
i32 36,label%iy
i32 38,label%ek
i32 40,label%d7
i32 24,label%dd
i32 7,label%cA
i32 10,label%bX
i32 11,label%bu
i32 12,label%a1
i32 13,label%ao
i32 34,label%T
]
B:
store i8*null,i8**%h,align 8
call void@sml_matchcomp_bug()
%C=load i8*,i8**@_SMLZ5Match,align 8
store i8*%C,i8**%c,align 8
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
store i8*%D,i8**%d,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@dc,i64 0,i32 2,i64 0),i8**%J,align 8
%K=getelementptr inbounds i8,i8*%D,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 60)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177336,i32*%O,align 4
%P=getelementptr inbounds i8,i8*%M,i64 56
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
%R=load i8*,i8**%d,align 8
%S=bitcast i8*%M to i8**
store i8*%R,i8**%S,align 8
call void@sml_raise(i8*inreg%M)#1
unreachable
T:
%U=getelementptr inbounds i8,i8*%w,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 8
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
store i8*null,i8**%h,align 8
%ac=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%v,i8*inreg%ab)
store i8*%ac,i8**%c,align 8
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
%ag=load i8*,i8**%c,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=load i8*,i8**%d,align 8
%aj=getelementptr inbounds i8,i8*%ad,i64 8
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ad,i64 16
%am=bitcast i8*%al to i32*
store i32 3,i32*%am,align 4
%an=tail call fastcc i8*@_SMLFN12TypedCalcCon9TPREIFYTYE(i8*inreg%ad)
ret i8*%an
ao:
%ap=getelementptr inbounds i8,i8*%w,i64 8
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%e,align 8
%as=getelementptr inbounds i8,i8*%ar,i64 24
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%f,align 8
%av=getelementptr inbounds i8,i8*%ar,i64 16
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
%ay=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%v,i8*inreg%ax)
store i8*%ay,i8**%c,align 8
%az=load i8*,i8**%e,align 8
%aA=getelementptr inbounds i8,i8*%az,i64 8
%aB=bitcast i8*%aA to i8**
%aC=load i8*,i8**%aB,align 8
%aD=load i8*,i8**%h,align 8
%aE=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%aD,i8*inreg%aC)
store i8*%aE,i8**%d,align 8
%aF=bitcast i8**%e to i8***
%aG=load i8**,i8***%aF,align 8
store i8*null,i8**%e,align 8
%aH=load i8*,i8**%aG,align 8
%aI=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aJ=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%aI,i8*inreg%aH)
store i8*%aJ,i8**%e,align 8
%aK=call i8*@sml_alloc(i32 inreg 36)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177312,i32*%aM,align 4
%aN=load i8*,i8**%e,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=load i8*,i8**%d,align 8
%aQ=getelementptr inbounds i8,i8*%aK,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=load i8*,i8**%c,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=load i8*,i8**%f,align 8
%aW=getelementptr inbounds i8,i8*%aK,i64 24
%aX=bitcast i8*%aW to i8**
store i8*%aV,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aK,i64 32
%aZ=bitcast i8*%aY to i32*
store i32 15,i32*%aZ,align 4
%a0=tail call fastcc i8*@_SMLFN12TypedCalcCon13TPDYNAMICVIEWE(i8*inreg%aK)
ret i8*%a0
a1:
%a2=getelementptr inbounds i8,i8*%w,i64 8
%a3=bitcast i8*%a2 to i8**
%a4=load i8*,i8**%a3,align 8
store i8*%a4,i8**%d,align 8
%a5=getelementptr inbounds i8,i8*%a4,i64 8
%a6=bitcast i8*%a5 to i8**
%a7=load i8*,i8**%a6,align 8
store i8*%a7,i8**%e,align 8
%a8=getelementptr inbounds i8,i8*%a4,i64 16
%a9=bitcast i8*%a8 to i8**
%ba=load i8*,i8**%a9,align 8
%bb=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%v,i8*inreg%ba)
store i8*%bb,i8**%c,align 8
%bc=load i8**,i8***%k,align 8
store i8*null,i8**%d,align 8
%bd=load i8*,i8**%bc,align 8
%be=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bf=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%be,i8*inreg%bd)
store i8*%bf,i8**%d,align 8
%bg=call i8*@sml_alloc(i32 inreg 28)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177304,i32*%bi,align 4
%bj=load i8*,i8**%d,align 8
%bk=bitcast i8*%bg to i8**
store i8*%bj,i8**%bk,align 8
%bl=load i8*,i8**%e,align 8
%bm=getelementptr inbounds i8,i8*%bg,i64 8
%bn=bitcast i8*%bm to i8**
store i8*%bl,i8**%bn,align 8
%bo=load i8*,i8**%c,align 8
%bp=getelementptr inbounds i8,i8*%bg,i64 16
%bq=bitcast i8*%bp to i8**
store i8*%bo,i8**%bq,align 8
%br=getelementptr inbounds i8,i8*%bg,i64 24
%bs=bitcast i8*%br to i32*
store i32 7,i32*%bs,align 4
%bt=tail call fastcc i8*@_SMLFN12TypedCalcCon12TPDYNAMICTOPE(i8*inreg%bg)
ret i8*%bt
bu:
%bv=getelementptr inbounds i8,i8*%w,i64 8
%bw=bitcast i8*%bv to i8**
%bx=load i8*,i8**%bw,align 8
store i8*%bx,i8**%d,align 8
%by=getelementptr inbounds i8,i8*%bx,i64 8
%bz=bitcast i8*%by to i8**
%bA=load i8*,i8**%bz,align 8
store i8*%bA,i8**%e,align 8
%bB=getelementptr inbounds i8,i8*%bx,i64 16
%bC=bitcast i8*%bB to i8**
%bD=load i8*,i8**%bC,align 8
%bE=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%v,i8*inreg%bD)
store i8*%bE,i8**%c,align 8
%bF=load i8**,i8***%k,align 8
store i8*null,i8**%d,align 8
%bG=load i8*,i8**%bF,align 8
%bH=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bI=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%bH,i8*inreg%bG)
store i8*%bI,i8**%d,align 8
%bJ=call i8*@sml_alloc(i32 inreg 28)#0
%bK=getelementptr inbounds i8,i8*%bJ,i64 -4
%bL=bitcast i8*%bK to i32*
store i32 1342177304,i32*%bL,align 4
%bM=load i8*,i8**%d,align 8
%bN=bitcast i8*%bJ to i8**
store i8*%bM,i8**%bN,align 8
%bO=load i8*,i8**%e,align 8
%bP=getelementptr inbounds i8,i8*%bJ,i64 8
%bQ=bitcast i8*%bP to i8**
store i8*%bO,i8**%bQ,align 8
%bR=load i8*,i8**%c,align 8
%bS=getelementptr inbounds i8,i8*%bJ,i64 16
%bT=bitcast i8*%bS to i8**
store i8*%bR,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bJ,i64 24
%bV=bitcast i8*%bU to i32*
store i32 7,i32*%bV,align 4
%bW=tail call fastcc i8*@_SMLFN12TypedCalcCon13TPDYNAMICNULLE(i8*inreg%bJ)
ret i8*%bW
bX:
%bY=getelementptr inbounds i8,i8*%w,i64 8
%bZ=bitcast i8*%bY to i8**
%b0=load i8*,i8**%bZ,align 8
store i8*%b0,i8**%e,align 8
%b1=getelementptr inbounds i8,i8*%b0,i64 24
%b2=bitcast i8*%b1 to i8**
%b3=load i8*,i8**%b2,align 8
store i8*%b3,i8**%f,align 8
%b4=getelementptr inbounds i8,i8*%b0,i64 16
%b5=bitcast i8*%b4 to i8**
%b6=load i8*,i8**%b5,align 8
%b7=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%v,i8*inreg%b6)
store i8*%b7,i8**%c,align 8
%b8=load i8*,i8**%e,align 8
%b9=getelementptr inbounds i8,i8*%b8,i64 8
%ca=bitcast i8*%b9 to i8**
%cb=load i8*,i8**%ca,align 8
%cc=load i8*,i8**%h,align 8
%cd=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%cc,i8*inreg%cb)
store i8*%cd,i8**%d,align 8
%ce=bitcast i8**%e to i8***
%cf=load i8**,i8***%ce,align 8
store i8*null,i8**%e,align 8
%cg=load i8*,i8**%cf,align 8
%ch=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ci=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%ch,i8*inreg%cg)
store i8*%ci,i8**%e,align 8
%cj=call i8*@sml_alloc(i32 inreg 36)#0
%ck=getelementptr inbounds i8,i8*%cj,i64 -4
%cl=bitcast i8*%ck to i32*
store i32 1342177312,i32*%cl,align 4
%cm=load i8*,i8**%e,align 8
%cn=bitcast i8*%cj to i8**
store i8*%cm,i8**%cn,align 8
%co=load i8*,i8**%d,align 8
%cp=getelementptr inbounds i8,i8*%cj,i64 8
%cq=bitcast i8*%cp to i8**
store i8*%co,i8**%cq,align 8
%cr=load i8*,i8**%c,align 8
%cs=getelementptr inbounds i8,i8*%cj,i64 16
%ct=bitcast i8*%cs to i8**
store i8*%cr,i8**%ct,align 8
%cu=load i8*,i8**%f,align 8
%cv=getelementptr inbounds i8,i8*%cj,i64 24
%cw=bitcast i8*%cv to i8**
store i8*%cu,i8**%cw,align 8
%cx=getelementptr inbounds i8,i8*%cj,i64 32
%cy=bitcast i8*%cx to i32*
store i32 15,i32*%cy,align 4
%cz=tail call fastcc i8*@_SMLFN12TypedCalcCon11TPDYNAMICISE(i8*inreg%cj)
ret i8*%cz
cA:
%cB=getelementptr inbounds i8,i8*%w,i64 8
%cC=bitcast i8*%cB to i8**
%cD=load i8*,i8**%cC,align 8
store i8*%cD,i8**%e,align 8
%cE=getelementptr inbounds i8,i8*%cD,i64 24
%cF=bitcast i8*%cE to i8**
%cG=load i8*,i8**%cF,align 8
store i8*%cG,i8**%f,align 8
%cH=getelementptr inbounds i8,i8*%cD,i64 16
%cI=bitcast i8*%cH to i8**
%cJ=load i8*,i8**%cI,align 8
%cK=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%v,i8*inreg%cJ)
store i8*%cK,i8**%c,align 8
%cL=load i8*,i8**%e,align 8
%cM=getelementptr inbounds i8,i8*%cL,i64 8
%cN=bitcast i8*%cM to i8**
%cO=load i8*,i8**%cN,align 8
%cP=load i8*,i8**%h,align 8
%cQ=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%cP,i8*inreg%cO)
store i8*%cQ,i8**%d,align 8
%cR=bitcast i8**%e to i8***
%cS=load i8**,i8***%cR,align 8
store i8*null,i8**%e,align 8
%cT=load i8*,i8**%cS,align 8
%cU=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cV=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%cU,i8*inreg%cT)
store i8*%cV,i8**%e,align 8
%cW=call i8*@sml_alloc(i32 inreg 36)#0
%cX=getelementptr inbounds i8,i8*%cW,i64 -4
%cY=bitcast i8*%cX to i32*
store i32 1342177312,i32*%cY,align 4
%cZ=load i8*,i8**%e,align 8
%c0=bitcast i8*%cW to i8**
store i8*%cZ,i8**%c0,align 8
%c1=load i8*,i8**%d,align 8
%c2=getelementptr inbounds i8,i8*%cW,i64 8
%c3=bitcast i8*%c2 to i8**
store i8*%c1,i8**%c3,align 8
%c4=load i8*,i8**%c,align 8
%c5=getelementptr inbounds i8,i8*%cW,i64 16
%c6=bitcast i8*%c5 to i8**
store i8*%c4,i8**%c6,align 8
%c7=load i8*,i8**%f,align 8
%c8=getelementptr inbounds i8,i8*%cW,i64 24
%c9=bitcast i8*%c8 to i8**
store i8*%c7,i8**%c9,align 8
%da=getelementptr inbounds i8,i8*%cW,i64 32
%db=bitcast i8*%da to i32*
store i32 15,i32*%db,align 4
%dc=tail call fastcc i8*@_SMLFN12TypedCalcCon9TPDYNAMICE(i8*inreg%cW)
ret i8*%dc
dd:
%de=getelementptr inbounds i8,i8*%w,i64 8
%df=bitcast i8*%de to i8**
%dg=load i8*,i8**%df,align 8
store i8*%dg,i8**%f,align 8
%dh=getelementptr inbounds i8,i8*%dg,i64 16
%di=bitcast i8*%dh to i32*
%dj=load i32,i32*%di,align 4
%dk=getelementptr inbounds i8,i8*%dg,i64 24
%dl=bitcast i8*%dk to i8**
%dm=load i8*,i8**%dl,align 8
store i8*%dm,i8**%g,align 8
%dn=bitcast i8*%dg to i8***
%do=load i8**,i8***%dn,align 8
%dp=load i8*,i8**%do,align 8
%dq=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%v,i8*inreg%dp)
store i8*%dq,i8**%c,align 8
%dr=bitcast i8**%f to i8***
%ds=load i8**,i8***%dr,align 8
%dt=load i8*,i8**%ds,align 8
%du=getelementptr inbounds i8,i8*%dt,i64 8
%dv=bitcast i8*%du to i8**
%dw=load i8*,i8**%dv,align 8
%dx=load i8*,i8**%h,align 8
%dy=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%dx,i8*inreg%dw)
store i8*%dy,i8**%d,align 8
%dz=call i8*@sml_alloc(i32 inreg 20)#0
%dA=getelementptr inbounds i8,i8*%dz,i64 -4
%dB=bitcast i8*%dA to i32*
store i32 1342177296,i32*%dB,align 4
store i8*%dz,i8**%e,align 8
%dC=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dD=bitcast i8*%dz to i8**
store i8*%dC,i8**%dD,align 8
%dE=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dF=getelementptr inbounds i8,i8*%dz,i64 8
%dG=bitcast i8*%dF to i8**
store i8*%dE,i8**%dG,align 8
%dH=getelementptr inbounds i8,i8*%dz,i64 16
%dI=bitcast i8*%dH to i32*
store i32 3,i32*%dI,align 4
%dJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dK=getelementptr inbounds i8,i8*%dJ,i64 32
%dL=bitcast i8*%dK to i8**
%dM=load i8*,i8**%dL,align 8
%dN=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dO=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%dN,i8*inreg%dM)
store i8*%dO,i8**%c,align 8
%dP=call i8*@sml_alloc(i32 inreg 36)#0
%dQ=getelementptr inbounds i8,i8*%dP,i64 -4
%dR=bitcast i8*%dQ to i32*
store i32 1342177312,i32*%dR,align 4
%dS=getelementptr inbounds i8,i8*%dP,i64 12
%dT=bitcast i8*%dS to i32*
store i32 0,i32*%dT,align 1
%dU=load i8*,i8**%e,align 8
%dV=bitcast i8*%dP to i8**
store i8*%dU,i8**%dV,align 8
%dW=getelementptr inbounds i8,i8*%dP,i64 8
%dX=bitcast i8*%dW to i32*
store i32%dj,i32*%dX,align 4
%dY=load i8*,i8**%g,align 8
%dZ=getelementptr inbounds i8,i8*%dP,i64 16
%d0=bitcast i8*%dZ to i8**
store i8*%dY,i8**%d0,align 8
%d1=load i8*,i8**%c,align 8
%d2=getelementptr inbounds i8,i8*%dP,i64 24
%d3=bitcast i8*%d2 to i8**
store i8*%d1,i8**%d3,align 8
%d4=getelementptr inbounds i8,i8*%dP,i64 32
%d5=bitcast i8*%d4 to i32*
store i32 13,i32*%d5,align 4
%d6=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPJOINE(i8*inreg%dP)
ret i8*%d6
d7:
%d8=getelementptr inbounds i8,i8*%w,i64 8
%d9=bitcast i8*%d8 to i8**
%ea=load i8*,i8**%d9,align 8
store i8*%ea,i8**%c,align 8
store i8*null,i8**%h,align 8
%eb=call fastcc i8*@_SMLLN17PolyTyElimination10compileVarE_1508(i8*inreg%v)
%ec=getelementptr inbounds i8,i8*%eb,i64 16
%ed=bitcast i8*%ec to i8*(i8*,i8*)**
%ee=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ed,align 8
%ef=bitcast i8*%eb to i8**
%eg=load i8*,i8**%ef,align 8
%eh=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ei=call fastcc i8*%ee(i8*inreg%eg,i8*inreg%eh)
%ej=tail call fastcc i8*@_SMLFN12TypedCalcCon5TPVARE(i8*inreg%ei)
ret i8*%ej
ek:
%el=getelementptr inbounds i8,i8*%w,i64 8
%em=bitcast i8*%el to i8**
%en=load i8*,i8**%em,align 8
store i8*%en,i8**%c,align 8
%eo=getelementptr inbounds i8,i8*%en,i64 24
%ep=bitcast i8*%eo to i8**
%eq=load i8*,i8**%ep,align 8
store i8*%eq,i8**%f,align 8
%er=getelementptr inbounds i8,i8*%en,i64 8
%es=bitcast i8*%er to i8**
%et=load i8*,i8**%es,align 8
%eu=call fastcc i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg%et)
%ev=icmp eq i8*%eu,null
br i1%ev,label%eA,label%ew
ew:
%ex=bitcast i8*%eu to i32*
%ey=load i32,i32*%ex,align 4
%ez=icmp eq i32%ey,7
br i1%ez,label%eW,label%eA
eA:
store i8*null,i8**%h,align 8
store i8*null,i8**%f,align 8
%eB=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%eB,i8**%c,align 8
%eC=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@db,i64 0,i32 2)to i8*))
store i8*%eC,i8**%d,align 8
%eD=call i8*@sml_alloc(i32 inreg 28)#0
%eE=getelementptr inbounds i8,i8*%eD,i64 -4
%eF=bitcast i8*%eE to i32*
store i32 1342177304,i32*%eF,align 4
store i8*%eD,i8**%e,align 8
%eG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%eH=bitcast i8*%eD to i8**
store i8*%eG,i8**%eH,align 8
%eI=getelementptr inbounds i8,i8*%eD,i64 8
%eJ=bitcast i8*%eI to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%eJ,align 8
%eK=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eL=getelementptr inbounds i8,i8*%eD,i64 16
%eM=bitcast i8*%eL to i8**
store i8*%eK,i8**%eM,align 8
%eN=getelementptr inbounds i8,i8*%eD,i64 24
%eO=bitcast i8*%eN to i32*
store i32 7,i32*%eO,align 4
%eP=call i8*@sml_alloc(i32 inreg 60)#0
%eQ=getelementptr inbounds i8,i8*%eP,i64 -4
%eR=bitcast i8*%eQ to i32*
store i32 1342177336,i32*%eR,align 4
%eS=getelementptr inbounds i8,i8*%eP,i64 56
%eT=bitcast i8*%eS to i32*
store i32 1,i32*%eT,align 4
%eU=load i8*,i8**%e,align 8
%eV=bitcast i8*%eP to i8**
store i8*%eU,i8**%eV,align 8
call void@sml_raise(i8*inreg%eP)#1
unreachable
eW:
%eX=getelementptr inbounds i8,i8*%eu,i64 8
%eY=bitcast i8*%eX to i8**
%eZ=load i8*,i8**%eY,align 8
store i8*%eZ,i8**%d,align 8
%e0=bitcast i8**%c to i8***
%e1=load i8**,i8***%e0,align 8
%e2=load i8*,i8**%e1,align 8
%e3=load i8*,i8**%h,align 8
%e4=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%e3,i8*inreg%e2)
store i8*%e4,i8**%e,align 8
%e5=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%e6=getelementptr inbounds i8,i8*%e5,i64 16
%e7=bitcast i8*%e6 to i8*(i8*,i8*)**
%e8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%e7,align 8
%e9=bitcast i8*%e5 to i8**
%fa=load i8*,i8**%e9,align 8
store i8*%fa,i8**%g,align 8
%fb=call i8*@sml_alloc(i32 inreg 12)#0
%fc=getelementptr inbounds i8,i8*%fb,i64 -4
%fd=bitcast i8*%fc to i32*
store i32 1342177288,i32*%fd,align 4
store i8*%fb,i8**%i,align 8
%fe=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ff=bitcast i8*%fb to i8**
store i8*%fe,i8**%ff,align 8
%fg=getelementptr inbounds i8,i8*%fb,i64 8
%fh=bitcast i8*%fg to i32*
store i32 1,i32*%fh,align 4
%fi=call i8*@sml_alloc(i32 inreg 28)#0
%fj=getelementptr inbounds i8,i8*%fi,i64 -4
%fk=bitcast i8*%fj to i32*
store i32 1342177304,i32*%fk,align 4
%fl=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%fm=bitcast i8*%fi to i8**
store i8*%fl,i8**%fm,align 8
%fn=getelementptr inbounds i8,i8*%fi,i64 8
%fo=bitcast i8*%fn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10instTyList_1632 to void(...)*),void(...)**%fo,align 8
%fp=getelementptr inbounds i8,i8*%fi,i64 16
%fq=bitcast i8*%fp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10instTyList_1632 to void(...)*),void(...)**%fq,align 8
%fr=getelementptr inbounds i8,i8*%fi,i64 24
%fs=bitcast i8*%fr to i32*
store i32 -2147483647,i32*%fs,align 4
%ft=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fu=call fastcc i8*%e8(i8*inreg%ft,i8*inreg%fi)
%fv=getelementptr inbounds i8,i8*%fu,i64 16
%fw=bitcast i8*%fv to i8*(i8*,i8*)**
%fx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fw,align 8
%fy=bitcast i8*%fu to i8**
%fz=load i8*,i8**%fy,align 8
%fA=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%fB=getelementptr inbounds i8,i8*%fA,i64 16
%fC=bitcast i8*%fB to i8**
%fD=load i8*,i8**%fC,align 8
%fE=call fastcc i8*%fx(i8*inreg%fz,i8*inreg%fD)
store i8*%fE,i8**%c,align 8
%fF=invoke fastcc i8*@_SMLFN8ListPair7foldlEqE(i32 inreg 0,i32 inreg 4,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
to label%fG unwind label%gz
fG:
%fH=getelementptr inbounds i8,i8*%fF,i64 16
%fI=bitcast i8*%fH to i8*(i8*,i8*)**
%fJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fI,align 8
%fK=bitcast i8*%fF to i8**
%fL=load i8*,i8**%fK,align 8
%fM=invoke fastcc i8*%fJ(i8*inreg%fL,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c9,i64 0,i32 2)to i8*))
to label%fN unwind label%gz
fN:
%fO=getelementptr inbounds i8,i8*%fM,i64 16
%fP=bitcast i8*%fO to i8*(i8*,i8*)**
%fQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fP,align 8
%fR=bitcast i8*%fM to i8**
%fS=load i8*,i8**%fR,align 8
store i8*%fS,i8**%g,align 8
%fT=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
to label%fU unwind label%gz
fU:
%fV=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fW=invoke fastcc i8*%fQ(i8*inreg%fV,i8*inreg%fT)
to label%fX unwind label%gz
fX:
%fY=getelementptr inbounds i8,i8*%fW,i64 16
%fZ=bitcast i8*%fY to i8*(i8*,i8*)**
%f0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fZ,align 8
%f1=bitcast i8*%fW to i8**
%f2=load i8*,i8**%f1,align 8
store i8*%f2,i8**%g,align 8
%f3=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map8listKeysE(i32 inreg 1,i32 inreg 8)
to label%f4 unwind label%gz
f4:
%f5=getelementptr inbounds i8,i8*%f3,i64 16
%f6=bitcast i8*%f5 to i8*(i8*,i8*)**
%f7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%f6,align 8
%f8=bitcast i8*%f3 to i8**
%f9=load i8*,i8**%f8,align 8
%ga=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gb=getelementptr inbounds i8,i8*%ga,i64 8
%gc=bitcast i8*%gb to i8**
%gd=load i8*,i8**%gc,align 8
%ge=invoke fastcc i8*%f7(i8*inreg%f9,i8*inreg%gd)
to label%gf unwind label%gz
gf:
store i8*%ge,i8**%d,align 8
%gg=call i8*@sml_alloc(i32 inreg 20)#0
%gh=getelementptr inbounds i8,i8*%gg,i64 -4
%gi=bitcast i8*%gh to i32*
store i32 1342177296,i32*%gi,align 4
%gj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gk=bitcast i8*%gg to i8**
store i8*%gj,i8**%gk,align 8
%gl=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%gm=getelementptr inbounds i8,i8*%gg,i64 8
%gn=bitcast i8*%gm to i8**
store i8*%gl,i8**%gn,align 8
%go=getelementptr inbounds i8,i8*%gg,i64 16
%gp=bitcast i8*%go to i32*
store i32 3,i32*%gp,align 4
%gq=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gr=invoke fastcc i8*%f0(i8*inreg%gq,i8*inreg%gg)
to label%gs unwind label%gz
gs:
store i8*%gr,i8**%g,align 8
%gt=load i8*,i8**%e,align 8
%gu=getelementptr inbounds i8,i8*%gt,i64 8
%gv=bitcast i8*%gu to i8**
%gw=load i8*,i8**%gv,align 8
%gx=call fastcc i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg%gw)
%gy=icmp eq i8*%gx,null
br i1%gy,label%hg,label%hc
gz:
%gA=landingpad{i8*,i8*}
catch i8*null
%gB=extractvalue{i8*,i8*}%gA,1
%gC=bitcast i8*%gB to i8**
%gD=load i8*,i8**%gC,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*%gD,i8**%c,align 8
%gE=bitcast i8*%gD to i8**
%gF=load i8*,i8**%gE,align 8
%gG=load i8*,i8**@_SMLZN8ListPair14UnequalLengthsE,align 8
%gH=icmp eq i8*%gF,%gG
br i1%gH,label%gI,label%g4
gI:
%gJ=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%gJ,i8**%c,align 8
%gK=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@db,i64 0,i32 2)to i8*))
store i8*%gK,i8**%d,align 8
%gL=call i8*@sml_alloc(i32 inreg 28)#0
%gM=getelementptr inbounds i8,i8*%gL,i64 -4
%gN=bitcast i8*%gM to i32*
store i32 1342177304,i32*%gN,align 4
store i8*%gL,i8**%e,align 8
%gO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%gP=bitcast i8*%gL to i8**
store i8*%gO,i8**%gP,align 8
%gQ=getelementptr inbounds i8,i8*%gL,i64 8
%gR=bitcast i8*%gQ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%gR,align 8
%gS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gT=getelementptr inbounds i8,i8*%gL,i64 16
%gU=bitcast i8*%gT to i8**
store i8*%gS,i8**%gU,align 8
%gV=getelementptr inbounds i8,i8*%gL,i64 24
%gW=bitcast i8*%gV to i32*
store i32 7,i32*%gW,align 4
%gX=call i8*@sml_alloc(i32 inreg 60)#0
%gY=getelementptr inbounds i8,i8*%gX,i64 -4
%gZ=bitcast i8*%gY to i32*
store i32 1342177336,i32*%gZ,align 4
%g0=getelementptr inbounds i8,i8*%gX,i64 56
%g1=bitcast i8*%g0 to i32*
store i32 1,i32*%g1,align 4
%g2=load i8*,i8**%e,align 8
%g3=bitcast i8*%gX to i8**
store i8*%g2,i8**%g3,align 8
call void@sml_raise(i8*inreg%gX)#1
unreachable
g4:
%g5=call i8*@sml_alloc(i32 inreg 60)#0
%g6=getelementptr inbounds i8,i8*%g5,i64 -4
%g7=bitcast i8*%g6 to i32*
store i32 1342177336,i32*%g7,align 4
%g8=getelementptr inbounds i8,i8*%g5,i64 56
%g9=bitcast i8*%g8 to i32*
store i32 1,i32*%g9,align 4
%ha=load i8*,i8**%c,align 8
%hb=bitcast i8*%g5 to i8**
store i8*%ha,i8**%hb,align 8
call void@sml_raise(i8*inreg%g5)#1
unreachable
hc:
%hd=bitcast i8*%gx to i32*
%he=load i32,i32*%hd,align 4
%hf=icmp eq i32%he,7
br i1%hf,label%hi,label%hg
hg:
%hh=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
br label%hp
hi:
%hj=getelementptr inbounds i8,i8*%gx,i64 8
%hk=bitcast i8*%hj to i8**
%hl=load i8*,i8**%hk,align 8
%hm=getelementptr inbounds i8,i8*%hl,i64 8
%hn=bitcast i8*%hm to i8**
%ho=load i8*,i8**%hn,align 8
br label%hp
hp:
%hq=phi i8*[%ho,%hi],[%hh,%hg]
store i8*%hq,i8**%c,align 8
%hr=call fastcc i8*@_SMLFN14BoundTypeVarID3Map11mapPartialiE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%hs=getelementptr inbounds i8,i8*%hr,i64 16
%ht=bitcast i8*%hs to i8*(i8*,i8*)**
%hu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ht,align 8
%hv=bitcast i8*%hr to i8**
%hw=load i8*,i8**%hv,align 8
store i8*%hw,i8**%d,align 8
%hx=call i8*@sml_alloc(i32 inreg 12)#0
%hy=getelementptr inbounds i8,i8*%hx,i64 -4
%hz=bitcast i8*%hy to i32*
store i32 1342177288,i32*%hz,align 4
store i8*%hx,i8**%h,align 8
%hA=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%hB=bitcast i8*%hx to i8**
store i8*%hA,i8**%hB,align 8
%hC=getelementptr inbounds i8,i8*%hx,i64 8
%hD=bitcast i8*%hC to i32*
store i32 1,i32*%hD,align 4
%hE=call i8*@sml_alloc(i32 inreg 28)#0
%hF=getelementptr inbounds i8,i8*%hE,i64 -4
%hG=bitcast i8*%hF to i32*
store i32 1342177304,i32*%hG,align 4
%hH=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hI=bitcast i8*%hE to i8**
store i8*%hH,i8**%hI,align 8
%hJ=getelementptr inbounds i8,i8*%hE,i64 8
%hK=bitcast i8*%hJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10newInstMap_1639 to void(...)*),void(...)**%hK,align 8
%hL=getelementptr inbounds i8,i8*%hE,i64 16
%hM=bitcast i8*%hL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10newInstMap_1639 to void(...)*),void(...)**%hM,align 8
%hN=getelementptr inbounds i8,i8*%hE,i64 24
%hO=bitcast i8*%hN to i32*
store i32 -2147483647,i32*%hO,align 4
%hP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hQ=call fastcc i8*%hu(i8*inreg%hP,i8*inreg%hE)
%hR=getelementptr inbounds i8,i8*%hQ,i64 16
%hS=bitcast i8*%hR to i8*(i8*,i8*)**
%hT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hS,align 8
%hU=bitcast i8*%hQ to i8**
%hV=load i8*,i8**%hU,align 8
%hW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%hX=call fastcc i8*%hT(i8*inreg%hV,i8*inreg%hW)
store i8*%hX,i8**%c,align 8
%hY=call fastcc i8*@_SMLFN14BoundTypeVarID3Map7isEmptyE(i32 inreg 1,i32 inreg 8)
%hZ=getelementptr inbounds i8,i8*%hY,i64 16
%h0=bitcast i8*%hZ to i8*(i8*,i8*)**
%h1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%h0,align 8
%h2=bitcast i8*%hY to i8**
%h3=load i8*,i8**%h2,align 8
%h4=load i8*,i8**%c,align 8
%h5=call fastcc i8*%h1(i8*inreg%h3,i8*inreg%h4)
%h6=bitcast i8*%h5 to i32*
%h7=load i32,i32*%h6,align 4
%h8=icmp eq i32%h7,0
br i1%h8,label%ib,label%h9
h9:
%ia=load i8*,i8**%e,align 8
ret i8*%ia
ib:
%ic=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%id=getelementptr inbounds i8,i8*%ic,i64 16
%ie=bitcast i8*%id to i8*(i8*,i8*)**
%if=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ie,align 8
%ig=bitcast i8*%ic to i8**
%ih=load i8*,i8**%ig,align 8
%ii=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ij=call fastcc i8*%if(i8*inreg%ih,i8*inreg%ii)
store i8*%ij,i8**%c,align 8
%ik=call i8*@sml_alloc(i32 inreg 28)#0
%il=getelementptr inbounds i8,i8*%ik,i64 -4
%im=bitcast i8*%il to i32*
store i32 1342177304,i32*%im,align 4
%in=load i8*,i8**%e,align 8
%io=bitcast i8*%ik to i8**
store i8*%in,i8**%io,align 8
%ip=load i8*,i8**%c,align 8
%iq=getelementptr inbounds i8,i8*%ik,i64 8
%ir=bitcast i8*%iq to i8**
store i8*%ip,i8**%ir,align 8
%is=load i8*,i8**%f,align 8
%it=getelementptr inbounds i8,i8*%ik,i64 16
%iu=bitcast i8*%it to i8**
store i8*%is,i8**%iu,align 8
%iv=getelementptr inbounds i8,i8*%ik,i64 24
%iw=bitcast i8*%iv to i32*
store i32 7,i32*%iw,align 4
%ix=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPTAPPE(i8*inreg%ik)
ret i8*%ix
iy:
%iz=getelementptr inbounds i8,i8*%w,i64 8
%iA=bitcast i8*%iz to i8**
%iB=load i8*,i8**%iA,align 8
%iC=getelementptr inbounds i8,i8*%iB,i64 8
%iD=bitcast i8*%iC to i8**
%iE=load i8*,i8**%iD,align 8
store i8*%iE,i8**%d,align 8
%iF=bitcast i8*%iB to i8**
%iG=load i8*,i8**%iF,align 8
store i8*null,i8**%h,align 8
%iH=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%v,i8*inreg%iG)
store i8*%iH,i8**%c,align 8
%iI=call i8*@sml_alloc(i32 inreg 20)#0
%iJ=getelementptr inbounds i8,i8*%iI,i64 -4
%iK=bitcast i8*%iJ to i32*
store i32 1342177296,i32*%iK,align 4
%iL=load i8*,i8**%c,align 8
%iM=bitcast i8*%iI to i8**
store i8*%iL,i8**%iM,align 8
%iN=load i8*,i8**%d,align 8
%iO=getelementptr inbounds i8,i8*%iI,i64 8
%iP=bitcast i8*%iO to i8**
store i8*%iN,i8**%iP,align 8
%iQ=getelementptr inbounds i8,i8*%iI,i64 16
%iR=bitcast i8*%iQ to i32*
store i32 3,i32*%iR,align 4
%iS=tail call fastcc i8*@_SMLFN12TypedCalcCon8TPSIZEOFE(i8*inreg%iI)
ret i8*%iS
iT:
%iU=getelementptr inbounds i8,i8*%w,i64 8
%iV=bitcast i8*%iU to i8**
%iW=load i8*,i8**%iV,align 8
store i8*%iW,i8**%c,align 8
%iX=getelementptr inbounds i8,i8*%iW,i64 16
%iY=bitcast i8*%iX to i8**
%iZ=load i8*,i8**%iY,align 8
store i8*%iZ,i8**%d,align 8
%i0=getelementptr inbounds i8,i8*%iW,i64 24
%i1=bitcast i8*%i0 to i8**
%i2=load i8*,i8**%i1,align 8
store i8*%i2,i8**%e,align 8
%i3=getelementptr inbounds i8,i8*%v,i64 8
%i4=bitcast i8*%i3 to i8***
%i5=load i8**,i8***%i4,align 8
%i6=load i8*,i8**%i5,align 8
store i8*%i6,i8**%f,align 8
%i7=call i8*@sml_alloc(i32 inreg 12)#0
%i8=getelementptr inbounds i8,i8*%i7,i64 -4
%i9=bitcast i8*%i8 to i32*
store i32 1342177288,i32*%i9,align 4
%ja=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%jb=bitcast i8*%i7 to i8**
store i8*%ja,i8**%jb,align 8
%jc=getelementptr inbounds i8,i8*%i7,i64 8
%jd=bitcast i8*%jc to i32*
store i32 1,i32*%jd,align 4
%je=call fastcc i8*@_SMLFN12TypedCalcCon8TPSELECTE(i8*inreg%i7)
%jf=getelementptr inbounds i8,i8*%je,i64 16
%jg=bitcast i8*%jf to i8*(i8*,i8*)**
%jh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jg,align 8
%ji=bitcast i8*%je to i8**
%jj=load i8*,i8**%ji,align 8
store i8*%jj,i8**%f,align 8
%jk=bitcast i8**%c to i8***
%jl=load i8**,i8***%jk,align 8
store i8*null,i8**%c,align 8
%jm=load i8*,i8**%jl,align 8
%jn=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%jo=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%jn,i8*inreg%jm)
store i8*%jo,i8**%c,align 8
%jp=call i8*@sml_alloc(i32 inreg 28)#0
%jq=getelementptr inbounds i8,i8*%jp,i64 -4
%jr=bitcast i8*%jq to i32*
store i32 1342177304,i32*%jr,align 4
%js=load i8*,i8**%c,align 8
%jt=bitcast i8*%jp to i8**
store i8*%js,i8**%jt,align 8
%ju=load i8*,i8**%d,align 8
%jv=getelementptr inbounds i8,i8*%jp,i64 8
%jw=bitcast i8*%jv to i8**
store i8*%ju,i8**%jw,align 8
%jx=load i8*,i8**%e,align 8
%jy=getelementptr inbounds i8,i8*%jp,i64 16
%jz=bitcast i8*%jy to i8**
store i8*%jx,i8**%jz,align 8
%jA=getelementptr inbounds i8,i8*%jp,i64 24
%jB=bitcast i8*%jA to i32*
store i32 7,i32*%jB,align 4
%jC=load i8*,i8**%f,align 8
%jD=tail call fastcc i8*%jh(i8*inreg%jC,i8*inreg%jp)
ret i8*%jD
jE:
%jF=getelementptr inbounds i8,i8*%w,i64 8
%jG=bitcast i8*%jF to i8**
%jH=load i8*,i8**%jG,align 8
store i8*%jH,i8**%c,align 8
%jI=getelementptr inbounds i8,i8*%jH,i64 8
%jJ=bitcast i8*%jI to i8**
%jK=load i8*,i8**%jJ,align 8
store i8*%jK,i8**%d,align 8
%jL=call fastcc i8*@_SMLFN11RecordLabel3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jM=getelementptr inbounds i8,i8*%jL,i64 16
%jN=bitcast i8*%jM to i8*(i8*,i8*)**
%jO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jN,align 8
%jP=bitcast i8*%jL to i8**
%jQ=load i8*,i8**%jP,align 8
store i8*%jQ,i8**%e,align 8
%jR=call i8*@sml_alloc(i32 inreg 12)#0
%jS=getelementptr inbounds i8,i8*%jR,i64 -4
%jT=bitcast i8*%jS to i32*
store i32 1342177288,i32*%jT,align 4
store i8*%jR,i8**%f,align 8
%jU=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%jV=bitcast i8*%jR to i8**
store i8*%jU,i8**%jV,align 8
%jW=getelementptr inbounds i8,i8*%jR,i64 8
%jX=bitcast i8*%jW to i32*
store i32 1,i32*%jX,align 4
%jY=call i8*@sml_alloc(i32 inreg 28)#0
%jZ=getelementptr inbounds i8,i8*%jY,i64 -4
%j0=bitcast i8*%jZ to i32*
store i32 1342177304,i32*%j0,align 4
%j1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%j2=bitcast i8*%jY to i8**
store i8*%j1,i8**%j2,align 8
%j3=getelementptr inbounds i8,i8*%jY,i64 8
%j4=bitcast i8*%j3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1627 to void(...)*),void(...)**%j4,align 8
%j5=getelementptr inbounds i8,i8*%jY,i64 16
%j6=bitcast i8*%j5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1627 to void(...)*),void(...)**%j6,align 8
%j7=getelementptr inbounds i8,i8*%jY,i64 24
%j8=bitcast i8*%j7 to i32*
store i32 -2147483647,i32*%j8,align 4
%j9=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ka=call fastcc i8*%jO(i8*inreg%j9,i8*inreg%jY)
%kb=getelementptr inbounds i8,i8*%ka,i64 16
%kc=bitcast i8*%kb to i8*(i8*,i8*)**
%kd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kc,align 8
%ke=bitcast i8*%ka to i8**
%kf=load i8*,i8**%ke,align 8
%kg=bitcast i8**%c to i8***
%kh=load i8**,i8***%kg,align 8
store i8*null,i8**%c,align 8
%ki=load i8*,i8**%kh,align 8
%kj=call fastcc i8*%kd(i8*inreg%kf,i8*inreg%ki)
store i8*%kj,i8**%c,align 8
%kk=call i8*@sml_alloc(i32 inreg 20)#0
%kl=getelementptr inbounds i8,i8*%kk,i64 -4
%km=bitcast i8*%kl to i32*
store i32 1342177296,i32*%km,align 4
%kn=load i8*,i8**%c,align 8
%ko=bitcast i8*%kk to i8**
store i8*%kn,i8**%ko,align 8
%kp=load i8*,i8**%d,align 8
%kq=getelementptr inbounds i8,i8*%kk,i64 8
%kr=bitcast i8*%kq to i8**
store i8*%kp,i8**%kr,align 8
%ks=getelementptr inbounds i8,i8*%kk,i64 16
%kt=bitcast i8*%ks to i32*
store i32 3,i32*%kt,align 4
%ku=tail call fastcc i8*@_SMLFN12TypedCalcCon8TPRECORDE(i8*inreg%kk)
ret i8*%ku
kv:
%kw=getelementptr inbounds i8,i8*%w,i64 8
%kx=bitcast i8*%kw to i8**
%ky=load i8*,i8**%kx,align 8
store i8*%ky,i8**%c,align 8
%kz=bitcast i8*%ky to i32*
%kA=load i32,i32*%kz,align 4
store i8*null,i8**%h,align 8
%kB=call fastcc i8*@_SMLLN17PolyTyElimination10compileVarE_1508(i8*inreg%v)
%kC=getelementptr inbounds i8,i8*%kB,i64 16
%kD=bitcast i8*%kC to i8*(i8*,i8*)**
%kE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kD,align 8
%kF=bitcast i8*%kB to i8**
%kG=load i8*,i8**%kF,align 8
%kH=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%kI=getelementptr inbounds i8,i8*%kH,i64 8
%kJ=bitcast i8*%kI to i8**
%kK=load i8*,i8**%kJ,align 8
%kL=call fastcc i8*%kE(i8*inreg%kG,i8*inreg%kK)
store i8*%kL,i8**%c,align 8
%kM=call i8*@sml_alloc(i32 inreg 20)#0
%kN=bitcast i8*%kM to i32*
%kO=getelementptr inbounds i8,i8*%kM,i64 -4
%kP=bitcast i8*%kO to i32*
store i32 1342177296,i32*%kP,align 4
%kQ=getelementptr inbounds i8,i8*%kM,i64 4
%kR=bitcast i8*%kQ to i32*
store i32 0,i32*%kR,align 1
store i32%kA,i32*%kN,align 4
%kS=load i8*,i8**%c,align 8
%kT=getelementptr inbounds i8,i8*%kM,i64 8
%kU=bitcast i8*%kT to i8**
store i8*%kS,i8**%kU,align 8
%kV=getelementptr inbounds i8,i8*%kM,i64 16
%kW=bitcast i8*%kV to i32*
store i32 2,i32*%kW,align 4
%kX=tail call fastcc i8*@_SMLFN12TypedCalcCon11TPRECFUNVARE(i8*inreg%kM)
ret i8*%kX
kY:
%kZ=getelementptr inbounds i8,i8*%w,i64 8
%k0=bitcast i8*%kZ to i8**
%k1=load i8*,i8**%k0,align 8
store i8*%k1,i8**%d,align 8
%k2=getelementptr inbounds i8,i8*%k1,i64 8
%k3=bitcast i8*%k2 to i8**
%k4=load i8*,i8**%k3,align 8
store i8*%k4,i8**%e,align 8
%k5=bitcast i8*%k1 to i8**
%k6=load i8*,i8**%k5,align 8
%k7=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%v,i8*inreg%k6)
store i8*%k7,i8**%c,align 8
%k8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%k9=getelementptr inbounds i8,i8*%k8,i64 16
%la=bitcast i8*%k9 to i8**
%lb=load i8*,i8**%la,align 8
%lc=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ld=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%lc,i8*inreg%lb)
store i8*%ld,i8**%d,align 8
%le=call i8*@sml_alloc(i32 inreg 28)#0
%lf=getelementptr inbounds i8,i8*%le,i64 -4
%lg=bitcast i8*%lf to i32*
store i32 1342177304,i32*%lg,align 4
%lh=load i8*,i8**%c,align 8
%li=bitcast i8*%le to i8**
store i8*%lh,i8**%li,align 8
%lj=load i8*,i8**%e,align 8
%lk=getelementptr inbounds i8,i8*%le,i64 8
%ll=bitcast i8*%lk to i8**
store i8*%lj,i8**%ll,align 8
%lm=load i8*,i8**%d,align 8
%ln=getelementptr inbounds i8,i8*%le,i64 16
%lo=bitcast i8*%ln to i8**
store i8*%lm,i8**%lo,align 8
%lp=getelementptr inbounds i8,i8*%le,i64 24
%lq=bitcast i8*%lp to i32*
store i32 7,i32*%lq,align 4
%lr=tail call fastcc i8*@_SMLFN12TypedCalcCon7TPRAISEE(i8*inreg%le)
ret i8*%lr
ls:
%lt=getelementptr inbounds i8,i8*%w,i64 8
%lu=bitcast i8*%lt to i8**
%lv=load i8*,i8**%lu,align 8
store i8*%lv,i8**%d,align 8
%lw=getelementptr inbounds i8,i8*%lv,i64 16
%lx=bitcast i8*%lw to i8**
%ly=load i8*,i8**%lx,align 8
store i8*%ly,i8**%e,align 8
%lz=getelementptr inbounds i8,i8*%lv,i64 24
%lA=bitcast i8*%lz to i8**
%lB=load i8*,i8**%lA,align 8
store i8*%lB,i8**%f,align 8
%lC=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%lD=getelementptr inbounds i8,i8*%lC,i64 16
%lE=bitcast i8*%lD to i8*(i8*,i8*)**
%lF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%lE,align 8
%lG=bitcast i8*%lC to i8**
%lH=load i8*,i8**%lG,align 8
store i8*%lH,i8**%g,align 8
%lI=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%lJ=getelementptr inbounds i8,i8*%lI,i64 16
%lK=bitcast i8*%lJ to i8*(i8*,i8*)**
%lL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%lK,align 8
%lM=bitcast i8*%lI to i8**
%lN=load i8*,i8**%lM,align 8
store i8*%lN,i8**%c,align 8
%lO=call i8*@sml_alloc(i32 inreg 12)#0
%lP=getelementptr inbounds i8,i8*%lO,i64 -4
%lQ=bitcast i8*%lP to i32*
store i32 1342177288,i32*%lQ,align 4
store i8*%lO,i8**%i,align 8
%lR=load i8*,i8**%h,align 8
%lS=bitcast i8*%lO to i8**
store i8*%lR,i8**%lS,align 8
%lT=getelementptr inbounds i8,i8*%lO,i64 8
%lU=bitcast i8*%lT to i32*
store i32 1,i32*%lU,align 4
%lV=call i8*@sml_alloc(i32 inreg 28)#0
%lW=getelementptr inbounds i8,i8*%lV,i64 -4
%lX=bitcast i8*%lW to i32*
store i32 1342177304,i32*%lX,align 4
%lY=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%lZ=bitcast i8*%lV to i8**
store i8*%lY,i8**%lZ,align 8
%l0=getelementptr inbounds i8,i8*%lV,i64 8
%l1=bitcast i8*%l0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1626 to void(...)*),void(...)**%l1,align 8
%l2=getelementptr inbounds i8,i8*%lV,i64 16
%l3=bitcast i8*%l2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1626 to void(...)*),void(...)**%l3,align 8
%l4=getelementptr inbounds i8,i8*%lV,i64 24
%l5=bitcast i8*%l4 to i32*
store i32 -2147483647,i32*%l5,align 4
%l6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l7=call fastcc i8*%lL(i8*inreg%l6,i8*inreg%lV)
%l8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%l9=call fastcc i8*%lF(i8*inreg%l8,i8*inreg%l7)
%ma=getelementptr inbounds i8,i8*%l9,i64 16
%mb=bitcast i8*%ma to i8*(i8*,i8*)**
%mc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mb,align 8
%md=bitcast i8*%l9 to i8**
%me=load i8*,i8**%md,align 8
%mf=load i8*,i8**%d,align 8
%mg=getelementptr inbounds i8,i8*%mf,i64 8
%mh=bitcast i8*%mg to i8**
%mi=load i8*,i8**%mh,align 8
%mj=call fastcc i8*%mc(i8*inreg%me,i8*inreg%mi)
store i8*%mj,i8**%c,align 8
%mk=load i8**,i8***%k,align 8
store i8*null,i8**%d,align 8
%ml=load i8*,i8**%mk,align 8
%mm=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%mn=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%mm,i8*inreg%ml)
store i8*%mn,i8**%d,align 8
%mo=call i8*@sml_alloc(i32 inreg 36)#0
%mp=getelementptr inbounds i8,i8*%mo,i64 -4
%mq=bitcast i8*%mp to i32*
store i32 1342177312,i32*%mq,align 4
%mr=load i8*,i8**%d,align 8
%ms=bitcast i8*%mo to i8**
store i8*%mr,i8**%ms,align 8
%mt=load i8*,i8**%c,align 8
%mu=getelementptr inbounds i8,i8*%mo,i64 8
%mv=bitcast i8*%mu to i8**
store i8*%mt,i8**%mv,align 8
%mw=load i8*,i8**%e,align 8
%mx=getelementptr inbounds i8,i8*%mo,i64 16
%my=bitcast i8*%mx to i8**
store i8*%mw,i8**%my,align 8
%mz=load i8*,i8**%f,align 8
%mA=getelementptr inbounds i8,i8*%mo,i64 24
%mB=bitcast i8*%mA to i8**
store i8*%mz,i8**%mB,align 8
%mC=getelementptr inbounds i8,i8*%mo,i64 32
%mD=bitcast i8*%mC to i32*
store i32 15,i32*%mD,align 4
%mE=tail call fastcc i8*@_SMLFN12TypedCalcCon11TPPRIMAPPLYE(i8*inreg%mo)
ret i8*%mE
mF:
%mG=getelementptr inbounds i8,i8*%w,i64 8
%mH=bitcast i8*%mG to i8**
%mI=load i8*,i8**%mH,align 8
store i8*%mI,i8**%e,align 8
%mJ=bitcast i8*%mI to i8**
%mK=load i8*,i8**%mJ,align 8
store i8*%mK,i8**%f,align 8
%mL=getelementptr inbounds i8,i8*%mI,i64 8
%mM=bitcast i8*%mL to i8**
%mN=load i8*,i8**%mM,align 8
store i8*%mN,i8**%c,align 8
%mO=getelementptr inbounds i8,i8*%mI,i64 32
%mP=bitcast i8*%mO to i8**
%mQ=load i8*,i8**%mP,align 8
store i8*%mQ,i8**%g,align 8
%mR=call i8*@sml_alloc(i32 inreg 20)#0
%mS=getelementptr inbounds i8,i8*%mR,i64 -4
%mT=bitcast i8*%mS to i32*
store i32 1342177296,i32*%mT,align 4
%mU=load i8*,i8**%f,align 8
%mV=bitcast i8*%mR to i8**
store i8*%mU,i8**%mV,align 8
%mW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%mX=getelementptr inbounds i8,i8*%mR,i64 8
%mY=bitcast i8*%mX to i8**
store i8*%mW,i8**%mY,align 8
%mZ=getelementptr inbounds i8,i8*%mR,i64 16
%m0=bitcast i8*%mZ to i32*
store i32 3,i32*%m0,align 4
%m1=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%m2=call fastcc i8*@_SMLLN17PolyTyElimination13compileBtvEnvE_1323(i8*inreg%m1,i8*inreg%mR)
store i8*%m2,i8**%d,align 8
%m3=getelementptr inbounds i8,i8*%m2,i64 8
%m4=bitcast i8*%m3 to i8**
%m5=load i8*,i8**%m4,align 8
store i8*%m5,i8**%c,align 8
%m6=load i32*,i32**bitcast(i8**@_SMLZN7Control17verbosePolyTyElimE to i32**),align 8
%m7=load i32,i32*%m6,align 4
%m8=icmp slt i32%m7,1
br i1%m8,label%nl,label%m9
m9:
%na=call i8*@sml_alloc(i32 inreg 20)#0
%nb=getelementptr inbounds i8,i8*%na,i64 -4
%nc=bitcast i8*%nb to i32*
store i32 1342177296,i32*%nc,align 4
%nd=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ne=bitcast i8*%na to i8**
store i8*%nd,i8**%ne,align 8
%nf=load i8*,i8**%c,align 8
%ng=getelementptr inbounds i8,i8*%na,i64 8
%nh=bitcast i8*%ng to i8**
store i8*%nf,i8**%nh,align 8
%ni=getelementptr inbounds i8,i8*%na,i64 16
%nj=bitcast i8*%ni to i32*
store i32 3,i32*%nj,align 4
call fastcc void@_SMLLN17PolyTyElimination9benchmarkE_1460(i8*inreg%na)
%nk=load i8*,i8**%c,align 8
br label%nl
nl:
%nm=phi i8*[%m5,%mF],[%nk,%m9]
%nn=icmp eq i8*%nm,null
store i8*null,i8**%c,align 8
br i1%nn,label%no,label%nz
no:
store i8*null,i8**%e,align 8
%np=load i8**,i8***%k,align 8
store i8*null,i8**%d,align 8
%nq=load i8*,i8**%np,align 8
%nr=call fastcc i8*@_SMLLN17PolyTyElimination8dummyExpE_1320(i8*inreg%nq)
%ns=getelementptr inbounds i8,i8*%nr,i64 16
%nt=bitcast i8*%ns to i8*(i8*,i8*)**
%nu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nt,align 8
%nv=bitcast i8*%nr to i8**
%nw=load i8*,i8**%nv,align 8
%nx=load i8*,i8**%g,align 8
%ny=tail call fastcc i8*%nu(i8*inreg%nw,i8*inreg%nx)
ret i8*%ny
nz:
%nA=bitcast i8*%nm to i8**
%nB=load i8*,i8**%nA,align 8
%nC=bitcast i8*%nB to i8**
%nD=load i8*,i8**%nC,align 8
store i8*%nD,i8**%f,align 8
%nE=getelementptr inbounds i8,i8*%nB,i64 8
%nF=bitcast i8*%nE to i8**
%nG=load i8*,i8**%nF,align 8
store i8*%nG,i8**%h,align 8
%nH=call fastcc i8*@_SMLFN14BoundTypeVarID3Map7isEmptyE(i32 inreg 1,i32 inreg 8)
%nI=getelementptr inbounds i8,i8*%nH,i64 16
%nJ=bitcast i8*%nI to i8*(i8*,i8*)**
%nK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nJ,align 8
%nL=bitcast i8*%nH to i8**
%nM=load i8*,i8**%nL,align 8
%nN=load i8*,i8**%f,align 8
%nO=call fastcc i8*%nK(i8*inreg%nM,i8*inreg%nN)
%nP=bitcast i8*%nO to i32*
%nQ=load i32,i32*%nP,align 4
%nR=icmp eq i32%nQ,0
br i1%nR,label%nZ,label%nS
nS:
store i8*null,i8**%g,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%h,align 8
%nT=load i8**,i8***%k,align 8
store i8*null,i8**%d,align 8
%nU=load i8*,i8**%nT,align 8
%nV=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%nW=getelementptr inbounds i8,i8*%nV,i64 16
%nX=bitcast i8*%nW to i8**
%nY=load i8*,i8**%nX,align 8
br label%l
nZ:
%n0=load i8**,i8***%k,align 8
store i8*null,i8**%d,align 8
%n1=load i8*,i8**%n0,align 8
%n2=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%n3=getelementptr inbounds i8,i8*%n2,i64 16
%n4=bitcast i8*%n3 to i8**
%n5=load i8*,i8**%n4,align 8
%n6=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%n1,i8*inreg%n5)
store i8*%n6,i8**%c,align 8
%n7=call i8*@sml_alloc(i32 inreg 36)#0
%n8=getelementptr inbounds i8,i8*%n7,i64 -4
%n9=bitcast i8*%n8 to i32*
store i32 1342177312,i32*%n9,align 4
%oa=load i8*,i8**%f,align 8
%ob=bitcast i8*%n7 to i8**
store i8*%oa,i8**%ob,align 8
%oc=load i8*,i8**%h,align 8
%od=getelementptr inbounds i8,i8*%n7,i64 8
%oe=bitcast i8*%od to i8**
store i8*%oc,i8**%oe,align 8
%of=load i8*,i8**%c,align 8
%og=getelementptr inbounds i8,i8*%n7,i64 16
%oh=bitcast i8*%og to i8**
store i8*%of,i8**%oh,align 8
%oi=load i8*,i8**%g,align 8
%oj=getelementptr inbounds i8,i8*%n7,i64 24
%ok=bitcast i8*%oj to i8**
store i8*%oi,i8**%ok,align 8
%ol=getelementptr inbounds i8,i8*%n7,i64 32
%om=bitcast i8*%ol to i32*
store i32 15,i32*%om,align 4
%on=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPPOLYE(i8*inreg%n7)
ret i8*%on
oo:
%op=getelementptr inbounds i8,i8*%w,i64 8
%oq=bitcast i8*%op to i8**
%or=load i8*,i8**%oq,align 8
store i8*%or,i8**%d,align 8
%os=getelementptr inbounds i8,i8*%or,i64 16
%ot=bitcast i8*%os to i8**
%ou=load i8*,i8**%ot,align 8
store i8*%ou,i8**%e,align 8
%ov=getelementptr inbounds i8,i8*%or,i64 24
%ow=bitcast i8*%ov to i8**
%ox=load i8*,i8**%ow,align 8
store i8*%ox,i8**%f,align 8
%oy=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%oz=getelementptr inbounds i8,i8*%oy,i64 16
%oA=bitcast i8*%oz to i8*(i8*,i8*)**
%oB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%oA,align 8
%oC=bitcast i8*%oy to i8**
%oD=load i8*,i8**%oC,align 8
store i8*%oD,i8**%c,align 8
%oE=call i8*@sml_alloc(i32 inreg 12)#0
%oF=getelementptr inbounds i8,i8*%oE,i64 -4
%oG=bitcast i8*%oF to i32*
store i32 1342177288,i32*%oG,align 4
store i8*%oE,i8**%g,align 8
%oH=load i8*,i8**%h,align 8
%oI=bitcast i8*%oE to i8**
store i8*%oH,i8**%oI,align 8
%oJ=getelementptr inbounds i8,i8*%oE,i64 8
%oK=bitcast i8*%oJ to i32*
store i32 1,i32*%oK,align 4
%oL=call i8*@sml_alloc(i32 inreg 28)#0
%oM=getelementptr inbounds i8,i8*%oL,i64 -4
%oN=bitcast i8*%oM to i32*
store i32 1342177304,i32*%oN,align 4
%oO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%oP=bitcast i8*%oL to i8**
store i8*%oO,i8**%oP,align 8
%oQ=getelementptr inbounds i8,i8*%oL,i64 8
%oR=bitcast i8*%oQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1625 to void(...)*),void(...)**%oR,align 8
%oS=getelementptr inbounds i8,i8*%oL,i64 16
%oT=bitcast i8*%oS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1625 to void(...)*),void(...)**%oT,align 8
%oU=getelementptr inbounds i8,i8*%oL,i64 24
%oV=bitcast i8*%oU to i32*
store i32 -2147483647,i32*%oV,align 4
%oW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%oX=call fastcc i8*%oB(i8*inreg%oW,i8*inreg%oL)
%oY=getelementptr inbounds i8,i8*%oX,i64 16
%oZ=bitcast i8*%oY to i8*(i8*,i8*)**
%o0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%oZ,align 8
%o1=bitcast i8*%oX to i8**
%o2=load i8*,i8**%o1,align 8
%o3=load i8*,i8**%d,align 8
%o4=getelementptr inbounds i8,i8*%o3,i64 8
%o5=bitcast i8*%o4 to i8**
%o6=load i8*,i8**%o5,align 8
%o7=call fastcc i8*%o0(i8*inreg%o2,i8*inreg%o6)
store i8*%o7,i8**%c,align 8
%o8=load i8**,i8***%k,align 8
store i8*null,i8**%d,align 8
%o9=load i8*,i8**%o8,align 8
%pa=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%pb=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%pa,i8*inreg%o9)
store i8*%pb,i8**%d,align 8
%pc=call i8*@sml_alloc(i32 inreg 36)#0
%pd=getelementptr inbounds i8,i8*%pc,i64 -4
%pe=bitcast i8*%pd to i32*
store i32 1342177312,i32*%pe,align 4
%pf=load i8*,i8**%d,align 8
%pg=bitcast i8*%pc to i8**
store i8*%pf,i8**%pg,align 8
%ph=load i8*,i8**%c,align 8
%pi=getelementptr inbounds i8,i8*%pc,i64 8
%pj=bitcast i8*%pi to i8**
store i8*%ph,i8**%pj,align 8
%pk=load i8*,i8**%e,align 8
%pl=getelementptr inbounds i8,i8*%pc,i64 16
%pm=bitcast i8*%pl to i8**
store i8*%pk,i8**%pm,align 8
%pn=load i8*,i8**%f,align 8
%po=getelementptr inbounds i8,i8*%pc,i64 24
%pp=bitcast i8*%po to i8**
store i8*%pn,i8**%pp,align 8
%pq=getelementptr inbounds i8,i8*%pc,i64 32
%pr=bitcast i8*%pq to i32*
store i32 15,i32*%pr,align 4
%ps=tail call fastcc i8*@_SMLFN12TypedCalcCon12TPOPRIMAPPLYE(i8*inreg%pc)
ret i8*%ps
pt:
%pu=getelementptr inbounds i8,i8*%w,i64 8
%pv=bitcast i8*%pu to i8**
%pw=load i8*,i8**%pv,align 8
store i8*%pw,i8**%d,align 8
%px=getelementptr inbounds i8,i8*%pw,i64 16
%py=bitcast i8*%px to i8**
%pz=load i8*,i8**%py,align 8
store i8*%pz,i8**%e,align 8
%pA=bitcast i8*%pw to i8**
%pB=load i8*,i8**%pA,align 8
store i8*null,i8**%h,align 8
%pC=call fastcc i8*@_SMLLN17PolyTyElimination14compileMonoLetE_1512(i8*inreg%v,i8*inreg%pB)
%pD=bitcast i8*%pC to i8**
%pE=load i8*,i8**%pD,align 8
store i8*%pE,i8**%c,align 8
%pF=getelementptr inbounds i8,i8*%pC,i64 8
%pG=bitcast i8*%pF to i8**
%pH=load i8*,i8**%pG,align 8
%pI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%pJ=getelementptr inbounds i8,i8*%pI,i64 8
%pK=bitcast i8*%pJ to i8**
%pL=load i8*,i8**%pK,align 8
%pM=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%pH,i8*inreg%pL)
store i8*%pM,i8**%d,align 8
%pN=call i8*@sml_alloc(i32 inreg 28)#0
%pO=getelementptr inbounds i8,i8*%pN,i64 -4
%pP=bitcast i8*%pO to i32*
store i32 1342177304,i32*%pP,align 4
%pQ=load i8*,i8**%c,align 8
%pR=bitcast i8*%pN to i8**
store i8*%pQ,i8**%pR,align 8
%pS=load i8*,i8**%d,align 8
%pT=getelementptr inbounds i8,i8*%pN,i64 8
%pU=bitcast i8*%pT to i8**
store i8*%pS,i8**%pU,align 8
%pV=load i8*,i8**%e,align 8
%pW=getelementptr inbounds i8,i8*%pN,i64 16
%pX=bitcast i8*%pW to i8**
store i8*%pV,i8**%pX,align 8
%pY=getelementptr inbounds i8,i8*%pN,i64 24
%pZ=bitcast i8*%pY to i32*
store i32 7,i32*%pZ,align 4
%p0=tail call fastcc i8*@_SMLFN12TypedCalcCon9TPMONOLETE(i8*inreg%pN)
ret i8*%p0
p1:
%p2=getelementptr inbounds i8,i8*%w,i64 8
%p3=bitcast i8*%p2 to i8**
%p4=load i8*,i8**%p3,align 8
store i8*%p4,i8**%d,align 8
%p5=getelementptr inbounds i8,i8*%p4,i64 16
%p6=bitcast i8*%p5 to i8**
%p7=load i8*,i8**%p6,align 8
store i8*%p7,i8**%e,align 8
%p8=getelementptr inbounds i8,i8*%p4,i64 24
%p9=bitcast i8*%p8 to i8**
%qa=load i8*,i8**%p9,align 8
store i8*%qa,i8**%f,align 8
%qb=getelementptr inbounds i8,i8*%v,i64 8
%qc=bitcast i8*%qb to i8***
%qd=load i8**,i8***%qc,align 8
%qe=load i8*,i8**%qd,align 8
store i8*%qe,i8**%c,align 8
%qf=call i8*@sml_alloc(i32 inreg 12)#0
%qg=getelementptr inbounds i8,i8*%qf,i64 -4
%qh=bitcast i8*%qg to i32*
store i32 1342177288,i32*%qh,align 4
%qi=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%qj=bitcast i8*%qf to i8**
store i8*%qi,i8**%qj,align 8
%qk=getelementptr inbounds i8,i8*%qf,i64 8
%ql=bitcast i8*%qk to i32*
store i32 1,i32*%ql,align 4
%qm=call fastcc i8*@_SMLFN12TypedCalcCon8TPMODIFYE(i8*inreg%qf)
%qn=getelementptr inbounds i8,i8*%qm,i64 16
%qo=bitcast i8*%qn to i8*(i8*,i8*)**
%qp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qo,align 8
%qq=bitcast i8*%qm to i8**
%qr=load i8*,i8**%qq,align 8
store i8*%qr,i8**%g,align 8
%qs=load i8*,i8**%d,align 8
%qt=getelementptr inbounds i8,i8*%qs,i64 32
%qu=bitcast i8*%qt to i8**
%qv=load i8*,i8**%qu,align 8
%qw=load i8*,i8**%h,align 8
%qx=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%qw,i8*inreg%qv)
store i8*%qx,i8**%c,align 8
%qy=load i8**,i8***%k,align 8
store i8*null,i8**%d,align 8
%qz=load i8*,i8**%qy,align 8
%qA=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%qB=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%qA,i8*inreg%qz)
store i8*%qB,i8**%d,align 8
%qC=call i8*@sml_alloc(i32 inreg 36)#0
%qD=getelementptr inbounds i8,i8*%qC,i64 -4
%qE=bitcast i8*%qD to i32*
store i32 1342177312,i32*%qE,align 4
%qF=load i8*,i8**%d,align 8
%qG=bitcast i8*%qC to i8**
store i8*%qF,i8**%qG,align 8
%qH=load i8*,i8**%e,align 8
%qI=getelementptr inbounds i8,i8*%qC,i64 8
%qJ=bitcast i8*%qI to i8**
store i8*%qH,i8**%qJ,align 8
%qK=load i8*,i8**%f,align 8
%qL=getelementptr inbounds i8,i8*%qC,i64 16
%qM=bitcast i8*%qL to i8**
store i8*%qK,i8**%qM,align 8
%qN=load i8*,i8**%c,align 8
%qO=getelementptr inbounds i8,i8*%qC,i64 24
%qP=bitcast i8*%qO to i8**
store i8*%qN,i8**%qP,align 8
%qQ=getelementptr inbounds i8,i8*%qC,i64 32
%qR=bitcast i8*%qQ to i32*
store i32 15,i32*%qR,align 4
%qS=load i8*,i8**%g,align 8
%qT=tail call fastcc i8*%qp(i8*inreg%qS,i8*inreg%qC)
ret i8*%qT
qU:
%qV=getelementptr inbounds i8,i8*%w,i64 8
%qW=bitcast i8*%qV to i8**
%qX=load i8*,i8**%qW,align 8
store i8*%qX,i8**%d,align 8
%qY=getelementptr inbounds i8,i8*%qX,i64 16
%qZ=bitcast i8*%qY to i8**
%q0=load i8*,i8**%qZ,align 8
store i8*%q0,i8**%e,align 8
%q1=getelementptr inbounds i8,i8*%qX,i64 8
%q2=bitcast i8*%q1 to i8**
%q3=load i8*,i8**%q2,align 8
store i8*null,i8**%h,align 8
%q4=call fastcc i8*@_SMLLN17PolyTyElimination15compileDeclListE_1513(i8*inreg%v,i8*inreg%q3)
%q5=bitcast i8*%q4 to i8**
%q6=load i8*,i8**%q5,align 8
store i8*%q6,i8**%c,align 8
%q7=getelementptr inbounds i8,i8*%q4,i64 8
%q8=bitcast i8*%q7 to i8**
%q9=load i8*,i8**%q8,align 8
%ra=load i8**,i8***%k,align 8
store i8*null,i8**%d,align 8
%rb=load i8*,i8**%ra,align 8
%rc=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%q9,i8*inreg%rb)
store i8*%rc,i8**%d,align 8
%rd=call i8*@sml_alloc(i32 inreg 28)#0
%re=getelementptr inbounds i8,i8*%rd,i64 -4
%rf=bitcast i8*%re to i32*
store i32 1342177304,i32*%rf,align 4
%rg=load i8*,i8**%d,align 8
%rh=bitcast i8*%rd to i8**
store i8*%rg,i8**%rh,align 8
%ri=load i8*,i8**%c,align 8
%rj=getelementptr inbounds i8,i8*%rd,i64 8
%rk=bitcast i8*%rj to i8**
store i8*%ri,i8**%rk,align 8
%rl=load i8*,i8**%e,align 8
%rm=getelementptr inbounds i8,i8*%rd,i64 16
%rn=bitcast i8*%rm to i8**
store i8*%rl,i8**%rn,align 8
%ro=getelementptr inbounds i8,i8*%rd,i64 24
%rp=bitcast i8*%ro to i32*
store i32 7,i32*%rp,align 4
%rq=tail call fastcc i8*@_SMLFN12TypedCalcCon5TPLETE(i8*inreg%rd)
ret i8*%rq
rr:
%rs=getelementptr inbounds i8,i8*%w,i64 8
%rt=bitcast i8*%rs to i8**
%ru=load i8*,i8**%rt,align 8
store i8*%ru,i8**%d,align 8
%rv=getelementptr inbounds i8,i8*%ru,i64 8
%rw=bitcast i8*%rv to i8**
%rx=load i8*,i8**%rw,align 8
store i8*%rx,i8**%e,align 8
%ry=getelementptr inbounds i8,i8*%ru,i64 16
%rz=bitcast i8*%ry to i8**
%rA=load i8*,i8**%rz,align 8
store i8*%rA,i8**%f,align 8
%rB=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%rC=getelementptr inbounds i8,i8*%rB,i64 16
%rD=bitcast i8*%rC to i8*(i8*,i8*)**
%rE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rD,align 8
%rF=bitcast i8*%rB to i8**
%rG=load i8*,i8**%rF,align 8
store i8*%rG,i8**%c,align 8
%rH=call i8*@sml_alloc(i32 inreg 12)#0
%rI=getelementptr inbounds i8,i8*%rH,i64 -4
%rJ=bitcast i8*%rI to i32*
store i32 1342177288,i32*%rJ,align 4
store i8*%rH,i8**%g,align 8
%rK=load i8*,i8**%h,align 8
%rL=bitcast i8*%rH to i8**
store i8*%rK,i8**%rL,align 8
%rM=getelementptr inbounds i8,i8*%rH,i64 8
%rN=bitcast i8*%rM to i32*
store i32 1,i32*%rN,align 4
%rO=call i8*@sml_alloc(i32 inreg 28)#0
%rP=getelementptr inbounds i8,i8*%rO,i64 -4
%rQ=bitcast i8*%rP to i32*
store i32 1342177304,i32*%rQ,align 4
%rR=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%rS=bitcast i8*%rO to i8**
store i8*%rR,i8**%rS,align 8
%rT=getelementptr inbounds i8,i8*%rO,i64 8
%rU=bitcast i8*%rT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1624 to void(...)*),void(...)**%rU,align 8
%rV=getelementptr inbounds i8,i8*%rO,i64 16
%rW=bitcast i8*%rV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1624 to void(...)*),void(...)**%rW,align 8
%rX=getelementptr inbounds i8,i8*%rO,i64 24
%rY=bitcast i8*%rX to i32*
store i32 -2147483647,i32*%rY,align 4
%rZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%r0=call fastcc i8*%rE(i8*inreg%rZ,i8*inreg%rO)
%r1=getelementptr inbounds i8,i8*%r0,i64 16
%r2=bitcast i8*%r1 to i8*(i8*,i8*)**
%r3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r2,align 8
%r4=bitcast i8*%r0 to i8**
%r5=load i8*,i8**%r4,align 8
%r6=load i8**,i8***%k,align 8
%r7=load i8*,i8**%r6,align 8
%r8=call fastcc i8*%r3(i8*inreg%r5,i8*inreg%r7)
store i8*%r8,i8**%c,align 8
%r9=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%sa=getelementptr inbounds i8,i8*%r9,i64 24
%sb=bitcast i8*%sa to i8**
%sc=load i8*,i8**%sb,align 8
%sd=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%se=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%sd,i8*inreg%sc)
store i8*%se,i8**%d,align 8
%sf=call i8*@sml_alloc(i32 inreg 36)#0
%sg=getelementptr inbounds i8,i8*%sf,i64 -4
%sh=bitcast i8*%sg to i32*
store i32 1342177312,i32*%sh,align 4
%si=load i8*,i8**%c,align 8
%sj=bitcast i8*%sf to i8**
store i8*%si,i8**%sj,align 8
%sk=load i8*,i8**%e,align 8
%sl=getelementptr inbounds i8,i8*%sf,i64 8
%sm=bitcast i8*%sl to i8**
store i8*%sk,i8**%sm,align 8
%sn=load i8*,i8**%f,align 8
%so=getelementptr inbounds i8,i8*%sf,i64 16
%sp=bitcast i8*%so to i8**
store i8*%sn,i8**%sp,align 8
%sq=load i8*,i8**%d,align 8
%sr=getelementptr inbounds i8,i8*%sf,i64 24
%ss=bitcast i8*%sr to i8**
store i8*%sq,i8**%ss,align 8
%st=getelementptr inbounds i8,i8*%sf,i64 32
%su=bitcast i8*%st to i32*
store i32 15,i32*%su,align 4
%sv=tail call fastcc i8*@_SMLFN12TypedCalcCon7TPTHROWE(i8*inreg%sf)
ret i8*%sv
sw:
%sx=getelementptr inbounds i8,i8*%w,i64 8
%sy=bitcast i8*%sx to i8**
%sz=load i8*,i8**%sy,align 8
store i8*%sz,i8**%e,align 8
%sA=getelementptr inbounds i8,i8*%sz,i64 16
%sB=bitcast i8*%sA to i8**
%sC=load i8*,i8**%sB,align 8
store i8*%sC,i8**%f,align 8
%sD=getelementptr inbounds i8,i8*%sz,i64 24
%sE=bitcast i8*%sD to i8**
%sF=load i8*,i8**%sE,align 8
store i8*%sF,i8**%g,align 8
%sG=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%sH=getelementptr inbounds i8,i8*%sG,i64 16
%sI=bitcast i8*%sH to i8*(i8*,i8*)**
%sJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%sI,align 8
%sK=bitcast i8*%sG to i8**
%sL=load i8*,i8**%sK,align 8
store i8*%sL,i8**%c,align 8
%sM=call i8*@sml_alloc(i32 inreg 12)#0
%sN=getelementptr inbounds i8,i8*%sM,i64 -4
%sO=bitcast i8*%sN to i32*
store i32 1342177288,i32*%sO,align 4
store i8*%sM,i8**%d,align 8
%sP=load i8*,i8**%h,align 8
%sQ=bitcast i8*%sM to i8**
store i8*%sP,i8**%sQ,align 8
%sR=getelementptr inbounds i8,i8*%sM,i64 8
%sS=bitcast i8*%sR to i32*
store i32 1,i32*%sS,align 4
%sT=call i8*@sml_alloc(i32 inreg 28)#0
%sU=getelementptr inbounds i8,i8*%sT,i64 -4
%sV=bitcast i8*%sU to i32*
store i32 1342177304,i32*%sV,align 4
%sW=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%sX=bitcast i8*%sT to i8**
store i8*%sW,i8**%sX,align 8
%sY=getelementptr inbounds i8,i8*%sT,i64 8
%sZ=bitcast i8*%sY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10argVarList_1623 to void(...)*),void(...)**%sZ,align 8
%s0=getelementptr inbounds i8,i8*%sT,i64 16
%s1=bitcast i8*%s0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10argVarList_1623 to void(...)*),void(...)**%s1,align 8
%s2=getelementptr inbounds i8,i8*%sT,i64 24
%s3=bitcast i8*%s2 to i32*
store i32 -2147483647,i32*%s3,align 4
%s4=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%s5=call fastcc i8*%sJ(i8*inreg%s4,i8*inreg%sT)
%s6=getelementptr inbounds i8,i8*%s5,i64 16
%s7=bitcast i8*%s6 to i8*(i8*,i8*)**
%s8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s7,align 8
%s9=bitcast i8*%s5 to i8**
%ta=load i8*,i8**%s9,align 8
%tb=bitcast i8**%e to i8***
%tc=load i8**,i8***%tb,align 8
%td=load i8*,i8**%tc,align 8
%te=call fastcc i8*%s8(i8*inreg%ta,i8*inreg%td)
store i8*%te,i8**%c,align 8
%tf=load i8*,i8**%e,align 8
%tg=getelementptr inbounds i8,i8*%tf,i64 40
%th=bitcast i8*%tg to i8**
%ti=load i8*,i8**%th,align 8
%tj=load i8*,i8**%h,align 8
%tk=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%tj,i8*inreg%ti)
store i8*%tk,i8**%d,align 8
%tl=bitcast i8**%h to i32**
%tm=load i32*,i32**%tl,align 8
%tn=load i32,i32*%tm,align 4
%to=load i8*,i8**%c,align 8
%tp=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%to)
store i8*%tp,i8**%i,align 8
%tq=load i8*,i8**%h,align 8
%tr=getelementptr inbounds i8,i8*%tq,i64 8
%ts=bitcast i8*%tr to i8**
%tt=load i8*,i8**%ts,align 8
store i8*%tt,i8**%j,align 8
%tu=call i8*@sml_alloc(i32 inreg 20)#0
%tv=getelementptr inbounds i8,i8*%tu,i64 -4
%tw=bitcast i8*%tv to i32*
store i32 1342177296,i32*%tw,align 4
%tx=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ty=bitcast i8*%tu to i8**
store i8*%tx,i8**%ty,align 8
%tz=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%tA=getelementptr inbounds i8,i8*%tu,i64 8
%tB=bitcast i8*%tA to i8**
store i8*%tz,i8**%tB,align 8
%tC=getelementptr inbounds i8,i8*%tu,i64 16
%tD=bitcast i8*%tC to i32*
store i32 3,i32*%tD,align 4
%tE=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%tu)
store i8*%tE,i8**%i,align 8
%tF=load i8*,i8**%h,align 8
%tG=getelementptr inbounds i8,i8*%tF,i64 16
%tH=bitcast i8*%tG to i8**
%tI=load i8*,i8**%tH,align 8
store i8*%tI,i8**%j,align 8
%tJ=getelementptr inbounds i8,i8*%tF,i64 24
%tK=bitcast i8*%tJ to i8**
%tL=load i8*,i8**%tK,align 8
store i8*%tL,i8**%h,align 8
%tM=call i8*@sml_alloc(i32 inreg 36)#0
%tN=bitcast i8*%tM to i32*
%tO=getelementptr inbounds i8,i8*%tM,i64 -4
%tP=bitcast i8*%tO to i32*
store i32 1342177312,i32*%tP,align 4
%tQ=getelementptr inbounds i8,i8*%tM,i64 4
%tR=bitcast i8*%tQ to i32*
store i32 0,i32*%tR,align 1
store i32%tn,i32*%tN,align 4
%tS=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%tT=getelementptr inbounds i8,i8*%tM,i64 8
%tU=bitcast i8*%tT to i8**
store i8*%tS,i8**%tU,align 8
%tV=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%tW=getelementptr inbounds i8,i8*%tM,i64 16
%tX=bitcast i8*%tW to i8**
store i8*%tV,i8**%tX,align 8
%tY=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%tZ=getelementptr inbounds i8,i8*%tM,i64 24
%t0=bitcast i8*%tZ to i8**
store i8*%tY,i8**%t0,align 8
%t1=getelementptr inbounds i8,i8*%tM,i64 32
%t2=bitcast i8*%t1 to i32*
store i32 14,i32*%t2,align 4
%t3=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%t4=getelementptr inbounds i8,i8*%t3,i64 8
%t5=bitcast i8*%t4 to i8**
%t6=load i8*,i8**%t5,align 8
%t7=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%tM,i8*inreg%t6)
store i8*%t7,i8**%e,align 8
%t8=call i8*@sml_alloc(i32 inreg 44)#0
%t9=getelementptr inbounds i8,i8*%t8,i64 -4
%ua=bitcast i8*%t9 to i32*
store i32 1342177320,i32*%ua,align 4
%ub=load i8*,i8**%c,align 8
%uc=bitcast i8*%t8 to i8**
store i8*%ub,i8**%uc,align 8
%ud=load i8*,i8**%e,align 8
%ue=getelementptr inbounds i8,i8*%t8,i64 8
%uf=bitcast i8*%ue to i8**
store i8*%ud,i8**%uf,align 8
%ug=load i8*,i8**%f,align 8
%uh=getelementptr inbounds i8,i8*%t8,i64 16
%ui=bitcast i8*%uh to i8**
store i8*%ug,i8**%ui,align 8
%uj=load i8*,i8**%g,align 8
%uk=getelementptr inbounds i8,i8*%t8,i64 24
%ul=bitcast i8*%uk to i8**
store i8*%uj,i8**%ul,align 8
%um=load i8*,i8**%d,align 8
%un=getelementptr inbounds i8,i8*%t8,i64 32
%uo=bitcast i8*%un to i8**
store i8*%um,i8**%uo,align 8
%up=getelementptr inbounds i8,i8*%t8,i64 40
%uq=bitcast i8*%up to i32*
store i32 31,i32*%uq,align 4
%ur=tail call fastcc i8*@_SMLFN12TypedCalcCon7TPCATCHE(i8*inreg%t8)
ret i8*%ur
us:
%ut=getelementptr inbounds i8,i8*%w,i64 8
%uu=bitcast i8*%ut to i8**
%uv=load i8*,i8**%uu,align 8
store i8*%uv,i8**%e,align 8
%uw=getelementptr inbounds i8,i8*%uv,i64 24
%ux=bitcast i8*%uw to i8**
%uy=load i8*,i8**%ux,align 8
store i8*%uy,i8**%f,align 8
%uz=bitcast i8*%uv to i8**
%uA=load i8*,i8**%uz,align 8
%uB=bitcast i8*%uA to i32*
%uC=load i32,i32*%uB,align 4
%uD=getelementptr inbounds i8,i8*%uA,i64 4
%uE=bitcast i8*%uD to i32*
%uF=load i32,i32*%uE,align 4
%uG=getelementptr inbounds i8,i8*%uA,i64 8
%uH=bitcast i8*%uG to i8**
%uI=load i8*,i8**%uH,align 8
store i8*%uI,i8**%d,align 8
%uJ=load i8*,i8**%uz,align 8
%uK=getelementptr inbounds i8,i8*%uJ,i64 16
%uL=bitcast i8*%uK to i8**
%uM=load i8*,i8**%uL,align 8
%uN=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%v,i8*inreg%uM)
store i8*%uN,i8**%g,align 8
%uO=call i8*@sml_alloc(i32 inreg 28)#0
%uP=bitcast i8*%uO to i32*
%uQ=getelementptr inbounds i8,i8*%uO,i64 -4
%uR=bitcast i8*%uQ to i32*
store i32 1342177304,i32*%uR,align 4
store i8*%uO,i8**%c,align 8
store i32%uC,i32*%uP,align 4
%uS=getelementptr inbounds i8,i8*%uO,i64 4
%uT=bitcast i8*%uS to i32*
store i32%uF,i32*%uT,align 4
%uU=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%uV=getelementptr inbounds i8,i8*%uO,i64 8
%uW=bitcast i8*%uV to i8**
store i8*%uU,i8**%uW,align 8
%uX=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%uY=getelementptr inbounds i8,i8*%uO,i64 16
%uZ=bitcast i8*%uY to i8**
store i8*%uX,i8**%uZ,align 8
%u0=getelementptr inbounds i8,i8*%uO,i64 24
%u1=bitcast i8*%u0 to i32*
store i32 6,i32*%u1,align 4
%u2=load i8*,i8**%e,align 8
%u3=getelementptr inbounds i8,i8*%u2,i64 8
%u4=bitcast i8*%u3 to i8**
%u5=load i8*,i8**%u4,align 8
%u6=load i8*,i8**%h,align 8
%u7=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%u6,i8*inreg%u5)
store i8*%u7,i8**%d,align 8
%u8=call i8*@sml_alloc(i32 inreg 20)#0
%u9=getelementptr inbounds i8,i8*%u8,i64 -4
%va=bitcast i8*%u9 to i32*
store i32 1342177296,i32*%va,align 4
%vb=load i8*,i8**%c,align 8
%vc=bitcast i8*%u8 to i8**
store i8*%vb,i8**%vc,align 8
%vd=getelementptr inbounds i8,i8*%u8,i64 8
%ve=bitcast i8*%vd to i8**
store i8*null,i8**%ve,align 8
%vf=getelementptr inbounds i8,i8*%u8,i64 16
%vg=bitcast i8*%vf to i32*
store i32 3,i32*%vg,align 4
%vh=bitcast i8**%h to i32**
%vi=load i32*,i32**%vh,align 8
%vj=load i32,i32*%vi,align 4
%vk=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%u8)
store i8*%vk,i8**%g,align 8
%vl=load i8*,i8**%h,align 8
%vm=getelementptr inbounds i8,i8*%vl,i64 8
%vn=bitcast i8*%vm to i8**
%vo=load i8*,i8**%vn,align 8
store i8*%vo,i8**%i,align 8
%vp=call i8*@sml_alloc(i32 inreg 20)#0
%vq=getelementptr inbounds i8,i8*%vp,i64 -4
%vr=bitcast i8*%vq to i32*
store i32 1342177296,i32*%vr,align 4
%vs=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%vt=bitcast i8*%vp to i8**
store i8*%vs,i8**%vt,align 8
%vu=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%vv=getelementptr inbounds i8,i8*%vp,i64 8
%vw=bitcast i8*%vv to i8**
store i8*%vu,i8**%vw,align 8
%vx=getelementptr inbounds i8,i8*%vp,i64 16
%vy=bitcast i8*%vx to i32*
store i32 3,i32*%vy,align 4
%vz=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%vp)
store i8*%vz,i8**%g,align 8
%vA=load i8*,i8**%h,align 8
%vB=getelementptr inbounds i8,i8*%vA,i64 16
%vC=bitcast i8*%vB to i8**
%vD=load i8*,i8**%vC,align 8
store i8*%vD,i8**%i,align 8
%vE=getelementptr inbounds i8,i8*%vA,i64 24
%vF=bitcast i8*%vE to i8**
%vG=load i8*,i8**%vF,align 8
store i8*%vG,i8**%h,align 8
%vH=call i8*@sml_alloc(i32 inreg 36)#0
%vI=bitcast i8*%vH to i32*
%vJ=getelementptr inbounds i8,i8*%vH,i64 -4
%vK=bitcast i8*%vJ to i32*
store i32 1342177312,i32*%vK,align 4
%vL=getelementptr inbounds i8,i8*%vH,i64 4
%vM=bitcast i8*%vL to i32*
store i32 0,i32*%vM,align 1
store i32%vj,i32*%vI,align 4
%vN=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%vO=getelementptr inbounds i8,i8*%vH,i64 8
%vP=bitcast i8*%vO to i8**
store i8*%vN,i8**%vP,align 8
%vQ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%vR=getelementptr inbounds i8,i8*%vH,i64 16
%vS=bitcast i8*%vR to i8**
store i8*%vQ,i8**%vS,align 8
%vT=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%vU=getelementptr inbounds i8,i8*%vH,i64 24
%vV=bitcast i8*%vU to i8**
store i8*%vT,i8**%vV,align 8
%vW=getelementptr inbounds i8,i8*%vH,i64 32
%vX=bitcast i8*%vW to i32*
store i32 14,i32*%vX,align 4
%vY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%vZ=getelementptr inbounds i8,i8*%vY,i64 16
%v0=bitcast i8*%vZ to i8**
%v1=load i8*,i8**%v0,align 8
%v2=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%vH,i8*inreg%v1)
store i8*%v2,i8**%e,align 8
%v3=call i8*@sml_alloc(i32 inreg 36)#0
%v4=getelementptr inbounds i8,i8*%v3,i64 -4
%v5=bitcast i8*%v4 to i32*
store i32 1342177312,i32*%v5,align 4
%v6=load i8*,i8**%c,align 8
%v7=bitcast i8*%v3 to i8**
store i8*%v6,i8**%v7,align 8
%v8=load i8*,i8**%d,align 8
%v9=getelementptr inbounds i8,i8*%v3,i64 8
%wa=bitcast i8*%v9 to i8**
store i8*%v8,i8**%wa,align 8
%wb=load i8*,i8**%e,align 8
%wc=getelementptr inbounds i8,i8*%v3,i64 16
%wd=bitcast i8*%wc to i8**
store i8*%wb,i8**%wd,align 8
%we=load i8*,i8**%f,align 8
%wf=getelementptr inbounds i8,i8*%v3,i64 24
%wg=bitcast i8*%wf to i8**
store i8*%we,i8**%wg,align 8
%wh=getelementptr inbounds i8,i8*%v3,i64 32
%wi=bitcast i8*%wh to i32*
store i32 15,i32*%wi,align 4
%wj=tail call fastcc i8*@_SMLFN12TypedCalcCon8TPHANDLEE(i8*inreg%v3)
ret i8*%wj
wk:
%wl=getelementptr inbounds i8,i8*%w,i64 8
%wm=bitcast i8*%wl to i8**
%wn=load i8*,i8**%wm,align 8
store i8*%wn,i8**%d,align 8
%wo=getelementptr inbounds i8,i8*%wn,i64 24
%wp=bitcast i8*%wo to i8**
%wq=load i8*,i8**%wp,align 8
store i8*%wq,i8**%e,align 8
%wr=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ws=getelementptr inbounds i8,i8*%wr,i64 16
%wt=bitcast i8*%ws to i8*(i8*,i8*)**
%wu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%wt,align 8
%wv=bitcast i8*%wr to i8**
%ww=load i8*,i8**%wv,align 8
store i8*%ww,i8**%c,align 8
%wx=call i8*@sml_alloc(i32 inreg 12)#0
%wy=getelementptr inbounds i8,i8*%wx,i64 -4
%wz=bitcast i8*%wy to i32*
store i32 1342177288,i32*%wz,align 4
store i8*%wx,i8**%f,align 8
%wA=load i8*,i8**%h,align 8
%wB=bitcast i8*%wx to i8**
store i8*%wA,i8**%wB,align 8
%wC=getelementptr inbounds i8,i8*%wx,i64 8
%wD=bitcast i8*%wC to i32*
store i32 1,i32*%wD,align 4
%wE=call i8*@sml_alloc(i32 inreg 28)#0
%wF=getelementptr inbounds i8,i8*%wE,i64 -4
%wG=bitcast i8*%wF to i32*
store i32 1342177304,i32*%wG,align 4
%wH=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%wI=bitcast i8*%wE to i8**
store i8*%wH,i8**%wI,align 8
%wJ=getelementptr inbounds i8,i8*%wE,i64 8
%wK=bitcast i8*%wJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10argVarList_1622 to void(...)*),void(...)**%wK,align 8
%wL=getelementptr inbounds i8,i8*%wE,i64 16
%wM=bitcast i8*%wL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10argVarList_1622 to void(...)*),void(...)**%wM,align 8
%wN=getelementptr inbounds i8,i8*%wE,i64 24
%wO=bitcast i8*%wN to i32*
store i32 -2147483647,i32*%wO,align 4
%wP=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%wQ=call fastcc i8*%wu(i8*inreg%wP,i8*inreg%wE)
%wR=getelementptr inbounds i8,i8*%wQ,i64 16
%wS=bitcast i8*%wR to i8*(i8*,i8*)**
%wT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%wS,align 8
%wU=bitcast i8*%wQ to i8**
%wV=load i8*,i8**%wU,align 8
%wW=load i8**,i8***%k,align 8
%wX=load i8*,i8**%wW,align 8
%wY=call fastcc i8*%wT(i8*inreg%wV,i8*inreg%wX)
store i8*%wY,i8**%c,align 8
%wZ=bitcast i8**%h to i32**
%w0=load i32*,i32**%wZ,align 8
%w1=load i32,i32*%w0,align 4
%w2=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%wY)
store i8*%w2,i8**%f,align 8
%w3=load i8*,i8**%h,align 8
%w4=getelementptr inbounds i8,i8*%w3,i64 8
%w5=bitcast i8*%w4 to i8**
%w6=load i8*,i8**%w5,align 8
store i8*%w6,i8**%g,align 8
%w7=call i8*@sml_alloc(i32 inreg 20)#0
%w8=getelementptr inbounds i8,i8*%w7,i64 -4
%w9=bitcast i8*%w8 to i32*
store i32 1342177296,i32*%w9,align 4
%xa=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%xb=bitcast i8*%w7 to i8**
store i8*%xa,i8**%xb,align 8
%xc=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%xd=getelementptr inbounds i8,i8*%w7,i64 8
%xe=bitcast i8*%xd to i8**
store i8*%xc,i8**%xe,align 8
%xf=getelementptr inbounds i8,i8*%w7,i64 16
%xg=bitcast i8*%xf to i32*
store i32 3,i32*%xg,align 4
%xh=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%w7)
store i8*%xh,i8**%f,align 8
%xi=load i8*,i8**%h,align 8
%xj=getelementptr inbounds i8,i8*%xi,i64 16
%xk=bitcast i8*%xj to i8**
%xl=load i8*,i8**%xk,align 8
store i8*%xl,i8**%g,align 8
%xm=getelementptr inbounds i8,i8*%xi,i64 24
%xn=bitcast i8*%xm to i8**
%xo=load i8*,i8**%xn,align 8
store i8*%xo,i8**%h,align 8
%xp=call i8*@sml_alloc(i32 inreg 36)#0
%xq=bitcast i8*%xp to i32*
%xr=getelementptr inbounds i8,i8*%xp,i64 -4
%xs=bitcast i8*%xr to i32*
store i32 1342177312,i32*%xs,align 4
%xt=getelementptr inbounds i8,i8*%xp,i64 4
%xu=bitcast i8*%xt to i32*
store i32 0,i32*%xu,align 1
store i32%w1,i32*%xq,align 4
%xv=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%xw=getelementptr inbounds i8,i8*%xp,i64 8
%xx=bitcast i8*%xw to i8**
store i8*%xv,i8**%xx,align 8
%xy=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%xz=getelementptr inbounds i8,i8*%xp,i64 16
%xA=bitcast i8*%xz to i8**
store i8*%xy,i8**%xA,align 8
%xB=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%xC=getelementptr inbounds i8,i8*%xp,i64 24
%xD=bitcast i8*%xC to i8**
store i8*%xB,i8**%xD,align 8
%xE=getelementptr inbounds i8,i8*%xp,i64 32
%xF=bitcast i8*%xE to i32*
store i32 14,i32*%xF,align 4
%xG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%xH=getelementptr inbounds i8,i8*%xG,i64 8
%xI=bitcast i8*%xH to i8**
%xJ=load i8*,i8**%xI,align 8
%xK=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%xp,i8*inreg%xJ)
store i8*%xK,i8**%d,align 8
%xL=call i8*@sml_alloc(i32 inreg 28)#0
%xM=getelementptr inbounds i8,i8*%xL,i64 -4
%xN=bitcast i8*%xM to i32*
store i32 1342177304,i32*%xN,align 4
%xO=load i8*,i8**%c,align 8
%xP=bitcast i8*%xL to i8**
store i8*%xO,i8**%xP,align 8
%xQ=load i8*,i8**%d,align 8
%xR=getelementptr inbounds i8,i8*%xL,i64 8
%xS=bitcast i8*%xR to i8**
store i8*%xQ,i8**%xS,align 8
%xT=load i8*,i8**%e,align 8
%xU=getelementptr inbounds i8,i8*%xL,i64 16
%xV=bitcast i8*%xU to i8**
store i8*%xT,i8**%xV,align 8
%xW=getelementptr inbounds i8,i8*%xL,i64 24
%xX=bitcast i8*%xW to i32*
store i32 7,i32*%xX,align 4
%xY=tail call fastcc i8*@_SMLFN12TypedCalcCon5TPFNME(i8*inreg%xL)
ret i8*%xY
xZ:
%x0=getelementptr inbounds i8,i8*%w,i64 8
%x1=bitcast i8*%x0 to i8**
%x2=load i8*,i8**%x1,align 8
store i8*%x2,i8**%e,align 8
%x3=getelementptr inbounds i8,i8*%x2,i64 8
%x4=bitcast i8*%x3 to i8**
%x5=load i8*,i8**%x4,align 8
store i8*%x5,i8**%f,align 8
%x6=getelementptr inbounds i8,i8*%x2,i64 24
%x7=bitcast i8*%x6 to i8**
%x8=load i8*,i8**%x7,align 8
store i8*%x8,i8**%g,align 8
%x9=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ya=getelementptr inbounds i8,i8*%x9,i64 16
%yb=bitcast i8*%ya to i8*(i8*,i8*)**
%yc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%yb,align 8
%yd=bitcast i8*%x9 to i8**
%ye=load i8*,i8**%yd,align 8
store i8*%ye,i8**%c,align 8
%yf=call i8*@sml_alloc(i32 inreg 12)#0
%yg=getelementptr inbounds i8,i8*%yf,i64 -4
%yh=bitcast i8*%yg to i32*
store i32 1342177288,i32*%yh,align 4
store i8*%yf,i8**%d,align 8
%yi=load i8*,i8**%h,align 8
%yj=bitcast i8*%yf to i8**
store i8*%yi,i8**%yj,align 8
%yk=getelementptr inbounds i8,i8*%yf,i64 8
%yl=bitcast i8*%yk to i32*
store i32 1,i32*%yl,align 4
%ym=call i8*@sml_alloc(i32 inreg 28)#0
%yn=getelementptr inbounds i8,i8*%ym,i64 -4
%yo=bitcast i8*%yn to i32*
store i32 1342177304,i32*%yo,align 4
%yp=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%yq=bitcast i8*%ym to i8**
store i8*%yp,i8**%yq,align 8
%yr=getelementptr inbounds i8,i8*%ym,i64 8
%ys=bitcast i8*%yr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10argVarList_1621 to void(...)*),void(...)**%ys,align 8
%yt=getelementptr inbounds i8,i8*%ym,i64 16
%yu=bitcast i8*%yt to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10argVarList_1621 to void(...)*),void(...)**%yu,align 8
%yv=getelementptr inbounds i8,i8*%ym,i64 24
%yw=bitcast i8*%yv to i32*
store i32 -2147483647,i32*%yw,align 4
%yx=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%yy=call fastcc i8*%yc(i8*inreg%yx,i8*inreg%ym)
%yz=getelementptr inbounds i8,i8*%yy,i64 16
%yA=bitcast i8*%yz to i8*(i8*,i8*)**
%yB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%yA,align 8
%yC=bitcast i8*%yy to i8**
%yD=load i8*,i8**%yC,align 8
%yE=bitcast i8**%e to i8***
%yF=load i8**,i8***%yE,align 8
%yG=load i8*,i8**%yF,align 8
%yH=call fastcc i8*%yB(i8*inreg%yD,i8*inreg%yG)
store i8*%yH,i8**%c,align 8
%yI=bitcast i8**%h to i32**
%yJ=load i32*,i32**%yI,align 8
%yK=load i32,i32*%yJ,align 4
%yL=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%yH)
store i8*%yL,i8**%d,align 8
%yM=load i8*,i8**%h,align 8
%yN=getelementptr inbounds i8,i8*%yM,i64 8
%yO=bitcast i8*%yN to i8**
%yP=load i8*,i8**%yO,align 8
store i8*%yP,i8**%i,align 8
%yQ=call i8*@sml_alloc(i32 inreg 20)#0
%yR=getelementptr inbounds i8,i8*%yQ,i64 -4
%yS=bitcast i8*%yR to i32*
store i32 1342177296,i32*%yS,align 4
%yT=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%yU=bitcast i8*%yQ to i8**
store i8*%yT,i8**%yU,align 8
%yV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%yW=getelementptr inbounds i8,i8*%yQ,i64 8
%yX=bitcast i8*%yW to i8**
store i8*%yV,i8**%yX,align 8
%yY=getelementptr inbounds i8,i8*%yQ,i64 16
%yZ=bitcast i8*%yY to i32*
store i32 3,i32*%yZ,align 4
%y0=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%yQ)
store i8*%y0,i8**%d,align 8
%y1=load i8*,i8**%h,align 8
%y2=getelementptr inbounds i8,i8*%y1,i64 16
%y3=bitcast i8*%y2 to i8**
%y4=load i8*,i8**%y3,align 8
store i8*%y4,i8**%i,align 8
%y5=getelementptr inbounds i8,i8*%y1,i64 24
%y6=bitcast i8*%y5 to i8**
%y7=load i8*,i8**%y6,align 8
store i8*%y7,i8**%h,align 8
%y8=call i8*@sml_alloc(i32 inreg 36)#0
%y9=bitcast i8*%y8 to i32*
%za=getelementptr inbounds i8,i8*%y8,i64 -4
%zb=bitcast i8*%za to i32*
store i32 1342177312,i32*%zb,align 4
%zc=getelementptr inbounds i8,i8*%y8,i64 4
%zd=bitcast i8*%zc to i32*
store i32 0,i32*%zd,align 1
store i32%yK,i32*%y9,align 4
%ze=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%zf=getelementptr inbounds i8,i8*%y8,i64 8
%zg=bitcast i8*%zf to i8**
store i8*%ze,i8**%zg,align 8
%zh=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%zi=getelementptr inbounds i8,i8*%y8,i64 16
%zj=bitcast i8*%zi to i8**
store i8*%zh,i8**%zj,align 8
%zk=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%zl=getelementptr inbounds i8,i8*%y8,i64 24
%zm=bitcast i8*%zl to i8**
store i8*%zk,i8**%zm,align 8
%zn=getelementptr inbounds i8,i8*%y8,i64 32
%zo=bitcast i8*%zn to i32*
store i32 14,i32*%zo,align 4
%zp=load i8*,i8**%e,align 8
%zq=getelementptr inbounds i8,i8*%zp,i64 16
%zr=bitcast i8*%zq to i8**
%zs=load i8*,i8**%zr,align 8
%zt=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%y8,i8*inreg%zs)
store i8*%zt,i8**%d,align 8
%zu=call fastcc i8*@_SMLFN6Option6isSomeE(i32 inreg 1,i32 inreg 8)
%zv=getelementptr inbounds i8,i8*%zu,i64 16
%zw=bitcast i8*%zv to i8*(i8*,i8*)**
%zx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%zw,align 8
%zy=bitcast i8*%zu to i8**
%zz=load i8*,i8**%zy,align 8
%zA=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%zB=getelementptr inbounds i8,i8*%zA,i64 32
%zC=bitcast i8*%zB to i8**
%zD=load i8*,i8**%zC,align 8
%zE=call fastcc i8*%zx(i8*inreg%zz,i8*inreg%zD)
%zF=bitcast i8*%zE to i32*
%zG=load i32,i32*%zF,align 4
%zH=call fastcc i32@_SMLFN4Bool3notE(i32 inreg%zG)
%zI=call i8*@sml_alloc(i32 inreg 44)#0
%zJ=getelementptr inbounds i8,i8*%zI,i64 -4
%zK=bitcast i8*%zJ to i32*
store i32 1342177320,i32*%zK,align 4
%zL=getelementptr inbounds i8,i8*%zI,i64 28
%zM=bitcast i8*%zL to i32*
store i32 0,i32*%zM,align 1
%zN=load i8*,i8**%c,align 8
%zO=bitcast i8*%zI to i8**
store i8*%zN,i8**%zO,align 8
%zP=load i8*,i8**%f,align 8
%zQ=getelementptr inbounds i8,i8*%zI,i64 8
%zR=bitcast i8*%zQ to i8**
store i8*%zP,i8**%zR,align 8
%zS=load i8*,i8**%d,align 8
%zT=getelementptr inbounds i8,i8*%zI,i64 16
%zU=bitcast i8*%zT to i8**
store i8*%zS,i8**%zU,align 8
%zV=getelementptr inbounds i8,i8*%zI,i64 24
%zW=bitcast i8*%zV to i32*
store i32%zH,i32*%zW,align 4
%zX=load i8*,i8**%g,align 8
%zY=getelementptr inbounds i8,i8*%zI,i64 32
%zZ=bitcast i8*%zY to i8**
store i8*%zX,i8**%zZ,align 8
%z0=getelementptr inbounds i8,i8*%zI,i64 40
%z1=bitcast i8*%z0 to i32*
store i32 23,i32*%z1,align 4
%z2=tail call fastcc i8*@_SMLFN12TypedCalcCon12TPCALLBACKFNE(i8*inreg%zI)
ret i8*%z2
z3:
%z4=getelementptr inbounds i8,i8*%w,i64 8
%z5=bitcast i8*%z4 to i8**
%z6=load i8*,i8**%z5,align 8
store i8*%z6,i8**%d,align 8
%z7=getelementptr inbounds i8,i8*%z6,i64 24
%z8=bitcast i8*%z7 to i8**
%z9=load i8*,i8**%z8,align 8
store i8*%z9,i8**%e,align 8
%Aa=getelementptr inbounds i8,i8*%z6,i64 16
%Ab=bitcast i8*%Aa to i8**
%Ac=load i8*,i8**%Ab,align 8
%Ad=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%v,i8*inreg%Ac)
store i8*%Ad,i8**%c,align 8
%Ae=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Af=getelementptr inbounds i8,i8*%Ae,i64 16
%Ag=bitcast i8*%Af to i8*(i8*,i8*)**
%Ah=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Ag,align 8
%Ai=bitcast i8*%Ae to i8**
%Aj=load i8*,i8**%Ai,align 8
store i8*%Aj,i8**%f,align 8
%Ak=call i8*@sml_alloc(i32 inreg 12)#0
%Al=getelementptr inbounds i8,i8*%Ak,i64 -4
%Am=bitcast i8*%Al to i32*
store i32 1342177288,i32*%Am,align 4
store i8*%Ak,i8**%g,align 8
%An=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Ao=bitcast i8*%Ak to i8**
store i8*%An,i8**%Ao,align 8
%Ap=getelementptr inbounds i8,i8*%Ak,i64 8
%Aq=bitcast i8*%Ap to i32*
store i32 1,i32*%Aq,align 4
%Ar=call i8*@sml_alloc(i32 inreg 28)#0
%As=getelementptr inbounds i8,i8*%Ar,i64 -4
%At=bitcast i8*%As to i32*
store i32 1342177304,i32*%At,align 4
%Au=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Av=bitcast i8*%Ar to i8**
store i8*%Au,i8**%Av,align 8
%Aw=getelementptr inbounds i8,i8*%Ar,i64 8
%Ax=bitcast i8*%Aw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1620 to void(...)*),void(...)**%Ax,align 8
%Ay=getelementptr inbounds i8,i8*%Ar,i64 16
%Az=bitcast i8*%Ay to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1620 to void(...)*),void(...)**%Az,align 8
%AA=getelementptr inbounds i8,i8*%Ar,i64 24
%AB=bitcast i8*%AA to i32*
store i32 -2147483647,i32*%AB,align 4
%AC=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%AD=call fastcc i8*%Ah(i8*inreg%AC,i8*inreg%Ar)
%AE=getelementptr inbounds i8,i8*%AD,i64 16
%AF=bitcast i8*%AE to i8*(i8*,i8*)**
%AG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%AF,align 8
%AH=bitcast i8*%AD to i8**
%AI=load i8*,i8**%AH,align 8
%AJ=load i8**,i8***%k,align 8
store i8*null,i8**%d,align 8
%AK=load i8*,i8**%AJ,align 8
%AL=call fastcc i8*%AG(i8*inreg%AI,i8*inreg%AK)
store i8*%AL,i8**%d,align 8
%AM=call i8*@sml_alloc(i32 inreg 28)#0
%AN=getelementptr inbounds i8,i8*%AM,i64 -4
%AO=bitcast i8*%AN to i32*
store i32 1342177304,i32*%AO,align 4
%AP=load i8*,i8**%d,align 8
%AQ=bitcast i8*%AM to i8**
store i8*%AP,i8**%AQ,align 8
%AR=load i8*,i8**%c,align 8
%AS=getelementptr inbounds i8,i8*%AM,i64 8
%AT=bitcast i8*%AS to i8**
store i8*%AR,i8**%AT,align 8
%AU=load i8*,i8**%e,align 8
%AV=getelementptr inbounds i8,i8*%AM,i64 16
%AW=bitcast i8*%AV to i8**
store i8*%AU,i8**%AW,align 8
%AX=getelementptr inbounds i8,i8*%AM,i64 24
%AY=bitcast i8*%AX to i32*
store i32 7,i32*%AY,align 4
%AZ=tail call fastcc i8*@_SMLFN12TypedCalcCon14TPFOREIGNAPPLYE(i8*inreg%AM)
ret i8*%AZ
A0:
%A1=getelementptr inbounds i8,i8*%w,i64 8
%A2=bitcast i8*%A1 to i8**
%A3=load i8*,i8**%A2,align 8
%A4=bitcast i8*%A3 to i8**
%A5=load i8*,i8**%A4,align 8
store i8*%A5,i8**%d,align 8
%A6=getelementptr inbounds i8,i8*%A3,i64 8
%A7=bitcast i8*%A6 to i8**
%A8=load i8*,i8**%A7,align 8
store i8*%A8,i8**%e,align 8
%A9=getelementptr inbounds i8,i8*%A3,i64 16
%Ba=bitcast i8*%A9 to i8**
%Bb=load i8*,i8**%Ba,align 8
store i8*null,i8**%h,align 8
%Bc=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%v,i8*inreg%Bb)
store i8*%Bc,i8**%c,align 8
%Bd=call i8*@sml_alloc(i32 inreg 28)#0
%Be=getelementptr inbounds i8,i8*%Bd,i64 -4
%Bf=bitcast i8*%Be to i32*
store i32 1342177304,i32*%Bf,align 4
%Bg=load i8*,i8**%d,align 8
%Bh=bitcast i8*%Bd to i8**
store i8*%Bg,i8**%Bh,align 8
%Bi=load i8*,i8**%e,align 8
%Bj=getelementptr inbounds i8,i8*%Bd,i64 8
%Bk=bitcast i8*%Bj to i8**
store i8*%Bi,i8**%Bk,align 8
%Bl=load i8*,i8**%c,align 8
%Bm=getelementptr inbounds i8,i8*%Bd,i64 16
%Bn=bitcast i8*%Bm to i8**
store i8*%Bl,i8**%Bn,align 8
%Bo=getelementptr inbounds i8,i8*%Bd,i64 24
%Bp=bitcast i8*%Bo to i32*
store i32 7,i32*%Bp,align 4
%Bq=tail call fastcc i8*@_SMLFN12TypedCalcCon15TPFOREIGNSYMBOLE(i8*inreg%Bd)
ret i8*%Bq
Br:
%Bs=getelementptr inbounds i8,i8*%w,i64 8
%Bt=bitcast i8*%Bs to i8**
%Bu=load i8*,i8**%Bt,align 8
store i8*%Bu,i8**%d,align 8
%Bv=getelementptr inbounds i8,i8*%Bu,i64 8
%Bw=bitcast i8*%Bv to i8**
%Bx=load i8*,i8**%Bw,align 8
%By=bitcast i8*%Bx to i32*
%Bz=load i32,i32*%By,align 4
switch i32%Bz,label%BA[
i32 1,label%Cg
i32 0,label%BS
]
BA:
store i8*null,i8**%h,align 8
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%BB=load i8*,i8**@_SMLZ5Match,align 8
store i8*%BB,i8**%c,align 8
%BC=call i8*@sml_alloc(i32 inreg 20)#0
%BD=getelementptr inbounds i8,i8*%BC,i64 -4
%BE=bitcast i8*%BD to i32*
store i32 1342177296,i32*%BE,align 4
store i8*%BC,i8**%d,align 8
%BF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%BG=bitcast i8*%BC to i8**
store i8*%BF,i8**%BG,align 8
%BH=getelementptr inbounds i8,i8*%BC,i64 8
%BI=bitcast i8*%BH to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@dc,i64 0,i32 2,i64 0),i8**%BI,align 8
%BJ=getelementptr inbounds i8,i8*%BC,i64 16
%BK=bitcast i8*%BJ to i32*
store i32 3,i32*%BK,align 4
%BL=call i8*@sml_alloc(i32 inreg 60)#0
%BM=getelementptr inbounds i8,i8*%BL,i64 -4
%BN=bitcast i8*%BM to i32*
store i32 1342177336,i32*%BN,align 4
%BO=getelementptr inbounds i8,i8*%BL,i64 56
%BP=bitcast i8*%BO to i32*
store i32 1,i32*%BP,align 4
%BQ=load i8*,i8**%d,align 8
%BR=bitcast i8*%BL to i8**
store i8*%BQ,i8**%BR,align 8
call void@sml_raise(i8*inreg%BL)#1
unreachable
BS:
%BT=getelementptr inbounds i8,i8*%Bx,i64 8
%BU=bitcast i8*%BT to i8**
%BV=load i8*,i8**%BU,align 8
store i8*%BV,i8**%e,align 8
%BW=getelementptr inbounds i8,i8*%Bu,i64 16
%BX=bitcast i8*%BW to i8**
%BY=load i8*,i8**%BX,align 8
store i8*%BY,i8**%f,align 8
%BZ=bitcast i8*%Bu to i8**
store i8*null,i8**%d,align 8
%B0=load i8*,i8**%BZ,align 8
store i8*null,i8**%h,align 8
%B1=call fastcc i8*@_SMLLN17PolyTyElimination12compileFFItyE_1468(i8*inreg%v,i8*inreg%B0)
store i8*%B1,i8**%c,align 8
%B2=call i8*@sml_alloc(i32 inreg 28)#0
%B3=getelementptr inbounds i8,i8*%B2,i64 -4
%B4=bitcast i8*%B3 to i32*
store i32 1342177304,i32*%B4,align 4
%B5=load i8*,i8**%c,align 8
%B6=bitcast i8*%B2 to i8**
store i8*%B5,i8**%B6,align 8
%B7=load i8*,i8**%e,align 8
%B8=getelementptr inbounds i8,i8*%B2,i64 8
%B9=bitcast i8*%B8 to i8**
store i8*%B7,i8**%B9,align 8
%Ca=load i8*,i8**%f,align 8
%Cb=getelementptr inbounds i8,i8*%B2,i64 16
%Cc=bitcast i8*%Cb to i8**
store i8*%Ca,i8**%Cc,align 8
%Cd=getelementptr inbounds i8,i8*%B2,i64 24
%Ce=bitcast i8*%Cd to i32*
store i32 7,i32*%Ce,align 4
%Cf=tail call fastcc i8*@_SMLFN12TypedCalcCon15TPFFIIMPORT__EXTE(i8*inreg%B2)
ret i8*%Cf
Cg:
%Ch=getelementptr inbounds i8,i8*%Bx,i64 8
%Ci=bitcast i8*%Ch to i8***
%Cj=load i8**,i8***%Ci,align 8
%Ck=getelementptr inbounds i8,i8*%Bu,i64 16
%Cl=bitcast i8*%Ck to i8**
%Cm=load i8*,i8**%Cl,align 8
store i8*%Cm,i8**%e,align 8
%Cn=load i8*,i8**%Cj,align 8
%Co=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%v,i8*inreg%Cn)
store i8*%Co,i8**%c,align 8
%Cp=load i8**,i8***%k,align 8
store i8*null,i8**%d,align 8
%Cq=load i8*,i8**%Cp,align 8
%Cr=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Cs=call fastcc i8*@_SMLLN17PolyTyElimination12compileFFItyE_1468(i8*inreg%Cr,i8*inreg%Cq)
store i8*%Cs,i8**%d,align 8
%Ct=call i8*@sml_alloc(i32 inreg 28)#0
%Cu=getelementptr inbounds i8,i8*%Ct,i64 -4
%Cv=bitcast i8*%Cu to i32*
store i32 1342177304,i32*%Cv,align 4
%Cw=load i8*,i8**%d,align 8
%Cx=bitcast i8*%Ct to i8**
store i8*%Cw,i8**%Cx,align 8
%Cy=load i8*,i8**%c,align 8
%Cz=getelementptr inbounds i8,i8*%Ct,i64 8
%CA=bitcast i8*%Cz to i8**
store i8*%Cy,i8**%CA,align 8
%CB=load i8*,i8**%e,align 8
%CC=getelementptr inbounds i8,i8*%Ct,i64 16
%CD=bitcast i8*%CC to i8**
store i8*%CB,i8**%CD,align 8
%CE=getelementptr inbounds i8,i8*%Ct,i64 24
%CF=bitcast i8*%CE to i32*
store i32 7,i32*%CF,align 4
%CG=tail call fastcc i8*@_SMLFN12TypedCalcCon15TPFFIIMPORT__FUNE(i8*inreg%Ct)
ret i8*%CG
CH:
%CI=getelementptr inbounds i8,i8*%w,i64 8
%CJ=bitcast i8*%CI to i8**
%CK=load i8*,i8**%CJ,align 8
store i8*%CK,i8**%c,align 8
%CL=getelementptr inbounds i8,i8*%CK,i64 8
%CM=bitcast i8*%CL to i8**
%CN=load i8*,i8**%CM,align 8
store i8*%CN,i8**%d,align 8
%CO=call fastcc i8*@_SMLFN13LongsymbolEnv4findE(i32 inreg 1,i32 inreg 8)
%CP=getelementptr inbounds i8,i8*%CO,i64 16
%CQ=bitcast i8*%CP to i8*(i8*,i8*)**
%CR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%CQ,align 8
%CS=bitcast i8*%CO to i8**
%CT=load i8*,i8**%CS,align 8
store i8*%CT,i8**%g,align 8
%CU=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%CV=getelementptr inbounds i8,i8*%CU,i64 8
%CW=bitcast i8*%CV to i8**
%CX=load i8*,i8**%CW,align 8
%CY=getelementptr inbounds i8,i8*%CX,i64 16
%CZ=bitcast i8*%CY to i8**
%C0=load i8*,i8**%CZ,align 8
store i8*%C0,i8**%e,align 8
%C1=bitcast i8**%c to i8****
%C2=load i8***,i8****%C1,align 8
%C3=load i8**,i8***%C2,align 8
%C4=load i8*,i8**%C3,align 8
store i8*%C4,i8**%f,align 8
%C5=call i8*@sml_alloc(i32 inreg 20)#0
%C6=getelementptr inbounds i8,i8*%C5,i64 -4
%C7=bitcast i8*%C6 to i32*
store i32 1342177296,i32*%C7,align 4
%C8=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%C9=bitcast i8*%C5 to i8**
store i8*%C8,i8**%C9,align 8
%Da=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Db=getelementptr inbounds i8,i8*%C5,i64 8
%Dc=bitcast i8*%Db to i8**
store i8*%Da,i8**%Dc,align 8
%Dd=getelementptr inbounds i8,i8*%C5,i64 16
%De=bitcast i8*%Dd to i32*
store i32 3,i32*%De,align 4
%Df=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Dg=call fastcc i8*%CR(i8*inreg%Df,i8*inreg%C5)
%Dh=icmp eq i8*%Dg,null
br i1%Dh,label%Di,label%DI
Di:
store i8*null,i8**%d,align 8
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@c6,i64 0,i32 2,i64 0))
%Dj=load i8***,i8****%C1,align 8
store i8*null,i8**%c,align 8
%Dk=load i8**,i8***%Dj,align 8
%Dl=load i8*,i8**%Dk,align 8
%Dm=call fastcc i8*@_SMLFN6Symbol18longsymbolToStringE(i8*inreg%Dl)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%Dm)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@dk,i64 0,i32 2,i64 0))
%Dn=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%Dn,i8**%c,align 8
%Do=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c8,i64 0,i32 2)to i8*))
store i8*%Do,i8**%d,align 8
%Dp=call i8*@sml_alloc(i32 inreg 28)#0
%Dq=getelementptr inbounds i8,i8*%Dp,i64 -4
%Dr=bitcast i8*%Dq to i32*
store i32 1342177304,i32*%Dr,align 4
store i8*%Dp,i8**%e,align 8
%Ds=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Dt=bitcast i8*%Dp to i8**
store i8*%Ds,i8**%Dt,align 8
%Du=getelementptr inbounds i8,i8*%Dp,i64 8
%Dv=bitcast i8*%Du to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%Dv,align 8
%Dw=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Dx=getelementptr inbounds i8,i8*%Dp,i64 16
%Dy=bitcast i8*%Dx to i8**
store i8*%Dw,i8**%Dy,align 8
%Dz=getelementptr inbounds i8,i8*%Dp,i64 24
%DA=bitcast i8*%Dz to i32*
store i32 7,i32*%DA,align 4
%DB=call i8*@sml_alloc(i32 inreg 60)#0
%DC=getelementptr inbounds i8,i8*%DB,i64 -4
%DD=bitcast i8*%DC to i32*
store i32 1342177336,i32*%DD,align 4
%DE=getelementptr inbounds i8,i8*%DB,i64 56
%DF=bitcast i8*%DE to i32*
store i32 1,i32*%DF,align 4
%DG=load i8*,i8**%e,align 8
%DH=bitcast i8*%DB to i8**
store i8*%DG,i8**%DH,align 8
call void@sml_raise(i8*inreg%DB)#1
unreachable
DI:
%DJ=bitcast i8*%Dg to i8**
%DK=load i8*,i8**%DJ,align 8
%DL=load i8***,i8****%C1,align 8
store i8*null,i8**%c,align 8
%DM=load i8**,i8***%DL,align 8
%DN=load i8*,i8**%DM,align 8
store i8*%DN,i8**%e,align 8
%DO=getelementptr inbounds i8,i8*%DK,i64 8
%DP=bitcast i8*%DO to i8**
%DQ=load i8*,i8**%DP,align 8
store i8*%DQ,i8**%f,align 8
%DR=call i8*@sml_alloc(i32 inreg 20)#0
%DS=getelementptr inbounds i8,i8*%DR,i64 -4
%DT=bitcast i8*%DS to i32*
store i32 1342177296,i32*%DT,align 4
store i8*%DR,i8**%c,align 8
%DU=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%DV=bitcast i8*%DR to i8**
store i8*%DU,i8**%DV,align 8
%DW=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%DX=getelementptr inbounds i8,i8*%DR,i64 8
%DY=bitcast i8*%DX to i8**
store i8*%DW,i8**%DY,align 8
%DZ=getelementptr inbounds i8,i8*%DR,i64 16
%D0=bitcast i8*%DZ to i32*
store i32 3,i32*%D0,align 4
%D1=call i8*@sml_alloc(i32 inreg 20)#0
%D2=getelementptr inbounds i8,i8*%D1,i64 -4
%D3=bitcast i8*%D2 to i32*
store i32 1342177296,i32*%D3,align 4
%D4=load i8*,i8**%c,align 8
%D5=bitcast i8*%D1 to i8**
store i8*%D4,i8**%D5,align 8
%D6=load i8*,i8**%d,align 8
%D7=getelementptr inbounds i8,i8*%D1,i64 8
%D8=bitcast i8*%D7 to i8**
store i8*%D6,i8**%D8,align 8
%D9=getelementptr inbounds i8,i8*%D1,i64 16
%Ea=bitcast i8*%D9 to i32*
store i32 3,i32*%Ea,align 4
%Eb=tail call fastcc i8*@_SMLFN12TypedCalcCon7TPEXVARE(i8*inreg%D1)
ret i8*%Eb
Ec:
%Ed=getelementptr inbounds i8,i8*%w,i64 8
%Ee=bitcast i8*%Ed to i8**
%Ef=load i8*,i8**%Ee,align 8
store i8*%Ef,i8**%c,align 8
%Eg=getelementptr inbounds i8,i8*%Ef,i64 8
%Eh=bitcast i8*%Eg to i8**
%Ei=load i8*,i8**%Eh,align 8
store i8*%Ei,i8**%d,align 8
%Ej=call fastcc i8*@_SMLFN13LongsymbolEnv4findE(i32 inreg 1,i32 inreg 8)
%Ek=getelementptr inbounds i8,i8*%Ej,i64 16
%El=bitcast i8*%Ek to i8*(i8*,i8*)**
%Em=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%El,align 8
%En=bitcast i8*%Ej to i8**
%Eo=load i8*,i8**%En,align 8
store i8*%Eo,i8**%g,align 8
%Ep=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Eq=getelementptr inbounds i8,i8*%Ep,i64 8
%Er=bitcast i8*%Eq to i8**
%Es=load i8*,i8**%Er,align 8
%Et=getelementptr inbounds i8,i8*%Es,i64 8
%Eu=bitcast i8*%Et to i8**
%Ev=load i8*,i8**%Eu,align 8
store i8*%Ev,i8**%e,align 8
%Ew=bitcast i8**%c to i8****
%Ex=load i8***,i8****%Ew,align 8
%Ey=load i8**,i8***%Ex,align 8
%Ez=load i8*,i8**%Ey,align 8
store i8*%Ez,i8**%f,align 8
%EA=call i8*@sml_alloc(i32 inreg 20)#0
%EB=getelementptr inbounds i8,i8*%EA,i64 -4
%EC=bitcast i8*%EB to i32*
store i32 1342177296,i32*%EC,align 4
%ED=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%EE=bitcast i8*%EA to i8**
store i8*%ED,i8**%EE,align 8
%EF=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%EG=getelementptr inbounds i8,i8*%EA,i64 8
%EH=bitcast i8*%EG to i8**
store i8*%EF,i8**%EH,align 8
%EI=getelementptr inbounds i8,i8*%EA,i64 16
%EJ=bitcast i8*%EI to i32*
store i32 3,i32*%EJ,align 4
%EK=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%EL=call fastcc i8*%Em(i8*inreg%EK,i8*inreg%EA)
%EM=icmp eq i8*%EL,null
br i1%EM,label%EN,label%E9
EN:
store i8*null,i8**%d,align 8
%EO=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%EO,i8**%c,align 8
%EP=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c5,i64 0,i32 2)to i8*))
store i8*%EP,i8**%d,align 8
%EQ=call i8*@sml_alloc(i32 inreg 28)#0
%ER=getelementptr inbounds i8,i8*%EQ,i64 -4
%ES=bitcast i8*%ER to i32*
store i32 1342177304,i32*%ES,align 4
store i8*%EQ,i8**%e,align 8
%ET=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%EU=bitcast i8*%EQ to i8**
store i8*%ET,i8**%EU,align 8
%EV=getelementptr inbounds i8,i8*%EQ,i64 8
%EW=bitcast i8*%EV to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%EW,align 8
%EX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%EY=getelementptr inbounds i8,i8*%EQ,i64 16
%EZ=bitcast i8*%EY to i8**
store i8*%EX,i8**%EZ,align 8
%E0=getelementptr inbounds i8,i8*%EQ,i64 24
%E1=bitcast i8*%E0 to i32*
store i32 7,i32*%E1,align 4
%E2=call i8*@sml_alloc(i32 inreg 60)#0
%E3=getelementptr inbounds i8,i8*%E2,i64 -4
%E4=bitcast i8*%E3 to i32*
store i32 1342177336,i32*%E4,align 4
%E5=getelementptr inbounds i8,i8*%E2,i64 56
%E6=bitcast i8*%E5 to i32*
store i32 1,i32*%E6,align 4
%E7=load i8*,i8**%e,align 8
%E8=bitcast i8*%E2 to i8**
store i8*%E7,i8**%E8,align 8
call void@sml_raise(i8*inreg%E2)#1
unreachable
E9:
%Fa=bitcast i8*%EL to i8**
%Fb=load i8*,i8**%Fa,align 8
%Fc=load i8***,i8****%Ew,align 8
store i8*null,i8**%c,align 8
%Fd=load i8**,i8***%Fc,align 8
%Fe=load i8*,i8**%Fd,align 8
store i8*%Fe,i8**%e,align 8
%Ff=getelementptr inbounds i8,i8*%Fb,i64 8
%Fg=bitcast i8*%Ff to i8**
%Fh=load i8*,i8**%Fg,align 8
store i8*%Fh,i8**%f,align 8
%Fi=call i8*@sml_alloc(i32 inreg 20)#0
%Fj=getelementptr inbounds i8,i8*%Fi,i64 -4
%Fk=bitcast i8*%Fj to i32*
store i32 1342177296,i32*%Fk,align 4
store i8*%Fi,i8**%c,align 8
%Fl=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Fm=bitcast i8*%Fi to i8**
store i8*%Fl,i8**%Fm,align 8
%Fn=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Fo=getelementptr inbounds i8,i8*%Fi,i64 8
%Fp=bitcast i8*%Fo to i8**
store i8*%Fn,i8**%Fp,align 8
%Fq=getelementptr inbounds i8,i8*%Fi,i64 16
%Fr=bitcast i8*%Fq to i32*
store i32 3,i32*%Fr,align 4
%Fs=call i8*@sml_alloc(i32 inreg 20)#0
%Ft=getelementptr inbounds i8,i8*%Fs,i64 -4
%Fu=bitcast i8*%Ft to i32*
store i32 1342177296,i32*%Fu,align 4
%Fv=load i8*,i8**%c,align 8
%Fw=bitcast i8*%Fs to i8**
store i8*%Fv,i8**%Fw,align 8
%Fx=load i8*,i8**%d,align 8
%Fy=getelementptr inbounds i8,i8*%Fs,i64 8
%Fz=bitcast i8*%Fy to i8**
store i8*%Fx,i8**%Fz,align 8
%FA=getelementptr inbounds i8,i8*%Fs,i64 16
%FB=bitcast i8*%FA to i32*
store i32 3,i32*%FB,align 4
%FC=tail call fastcc i8*@_SMLFN12TypedCalcCon10TPEXEXNTAGE(i8*inreg%Fs)
ret i8*%FC
FD:
%FE=getelementptr inbounds i8,i8*%w,i64 8
%FF=bitcast i8*%FE to i8**
%FG=load i8*,i8**%FF,align 8
store i8*%FG,i8**%c,align 8
%FH=getelementptr inbounds i8,i8*%FG,i64 8
%FI=bitcast i8*%FH to i8**
%FJ=load i8*,i8**%FI,align 8
store i8*%FJ,i8**%d,align 8
%FK=call fastcc i8*@_SMLFN5ExnID3Map4findE(i32 inreg 1,i32 inreg 8)
%FL=getelementptr inbounds i8,i8*%FK,i64 16
%FM=bitcast i8*%FL to i8*(i8*,i8*)**
%FN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%FM,align 8
%FO=bitcast i8*%FK to i8**
%FP=load i8*,i8**%FO,align 8
store i8*%FP,i8**%f,align 8
%FQ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%FR=getelementptr inbounds i8,i8*%FQ,i64 8
%FS=bitcast i8*%FR to i8**
%FT=load i8*,i8**%FS,align 8
%FU=getelementptr inbounds i8,i8*%FT,i64 24
%FV=bitcast i8*%FU to i8**
%FW=load i8*,i8**%FV,align 8
store i8*%FW,i8**%e,align 8
%FX=bitcast i8**%c to i32***
%FY=load i32**,i32***%FX,align 8
%FZ=load i32*,i32**%FY,align 8
%F0=load i32,i32*%FZ,align 4
%F1=call i8*@sml_alloc(i32 inreg 20)#0
%F2=getelementptr inbounds i8,i8*%F1,i64 -4
%F3=bitcast i8*%F2 to i32*
store i32 1342177296,i32*%F3,align 4
%F4=getelementptr inbounds i8,i8*%F1,i64 12
%F5=bitcast i8*%F4 to i32*
store i32 0,i32*%F5,align 1
%F6=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F7=bitcast i8*%F1 to i8**
store i8*%F6,i8**%F7,align 8
%F8=getelementptr inbounds i8,i8*%F1,i64 8
%F9=bitcast i8*%F8 to i32*
store i32%F0,i32*%F9,align 4
%Ga=getelementptr inbounds i8,i8*%F1,i64 16
%Gb=bitcast i8*%Ga to i32*
store i32 1,i32*%Gb,align 4
%Gc=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Gd=call fastcc i8*%FN(i8*inreg%Gc,i8*inreg%F1)
%Ge=icmp eq i8*%Gd,null
br i1%Ge,label%Gf,label%GB
Gf:
store i8*null,i8**%d,align 8
%Gg=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%Gg,i8**%c,align 8
%Gh=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c5,i64 0,i32 2)to i8*))
store i8*%Gh,i8**%d,align 8
%Gi=call i8*@sml_alloc(i32 inreg 28)#0
%Gj=getelementptr inbounds i8,i8*%Gi,i64 -4
%Gk=bitcast i8*%Gj to i32*
store i32 1342177304,i32*%Gk,align 4
store i8*%Gi,i8**%e,align 8
%Gl=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Gm=bitcast i8*%Gi to i8**
store i8*%Gl,i8**%Gm,align 8
%Gn=getelementptr inbounds i8,i8*%Gi,i64 8
%Go=bitcast i8*%Gn to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%Go,align 8
%Gp=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Gq=getelementptr inbounds i8,i8*%Gi,i64 16
%Gr=bitcast i8*%Gq to i8**
store i8*%Gp,i8**%Gr,align 8
%Gs=getelementptr inbounds i8,i8*%Gi,i64 24
%Gt=bitcast i8*%Gs to i32*
store i32 7,i32*%Gt,align 4
%Gu=call i8*@sml_alloc(i32 inreg 60)#0
%Gv=getelementptr inbounds i8,i8*%Gu,i64 -4
%Gw=bitcast i8*%Gv to i32*
store i32 1342177336,i32*%Gw,align 4
%Gx=getelementptr inbounds i8,i8*%Gu,i64 56
%Gy=bitcast i8*%Gx to i32*
store i32 1,i32*%Gy,align 4
%Gz=load i8*,i8**%e,align 8
%GA=bitcast i8*%Gu to i8**
store i8*%Gz,i8**%GA,align 8
call void@sml_raise(i8*inreg%Gu)#1
unreachable
GB:
%GC=bitcast i8*%Gd to i8**
%GD=load i8*,i8**%GC,align 8
%GE=bitcast i8**%c to i8***
%GF=load i8**,i8***%GE,align 8
store i8*null,i8**%c,align 8
%GG=load i8*,i8**%GF,align 8
%GH=bitcast i8*%GG to i32*
%GI=load i32,i32*%GH,align 4
%GJ=getelementptr inbounds i8,i8*%GG,i64 8
%GK=bitcast i8*%GJ to i8**
%GL=load i8*,i8**%GK,align 8
store i8*%GL,i8**%e,align 8
%GM=getelementptr inbounds i8,i8*%GD,i64 16
%GN=bitcast i8*%GM to i8**
%GO=load i8*,i8**%GN,align 8
store i8*%GO,i8**%f,align 8
%GP=call i8*@sml_alloc(i32 inreg 28)#0
%GQ=getelementptr inbounds i8,i8*%GP,i64 -4
%GR=bitcast i8*%GQ to i32*
store i32 1342177304,i32*%GR,align 4
store i8*%GP,i8**%c,align 8
%GS=getelementptr inbounds i8,i8*%GP,i64 4
%GT=bitcast i8*%GS to i32*
store i32 0,i32*%GT,align 1
%GU=bitcast i8*%GP to i32*
store i32%GI,i32*%GU,align 4
%GV=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%GW=getelementptr inbounds i8,i8*%GP,i64 8
%GX=bitcast i8*%GW to i8**
store i8*%GV,i8**%GX,align 8
%GY=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%GZ=getelementptr inbounds i8,i8*%GP,i64 16
%G0=bitcast i8*%GZ to i8**
store i8*%GY,i8**%G0,align 8
%G1=getelementptr inbounds i8,i8*%GP,i64 24
%G2=bitcast i8*%G1 to i32*
store i32 6,i32*%G2,align 4
%G3=call i8*@sml_alloc(i32 inreg 20)#0
%G4=getelementptr inbounds i8,i8*%G3,i64 -4
%G5=bitcast i8*%G4 to i32*
store i32 1342177296,i32*%G5,align 4
%G6=load i8*,i8**%c,align 8
%G7=bitcast i8*%G3 to i8**
store i8*%G6,i8**%G7,align 8
%G8=load i8*,i8**%d,align 8
%G9=getelementptr inbounds i8,i8*%G3,i64 8
%Ha=bitcast i8*%G9 to i8**
store i8*%G8,i8**%Ha,align 8
%Hb=getelementptr inbounds i8,i8*%G3,i64 16
%Hc=bitcast i8*%Hb to i32*
store i32 3,i32*%Hc,align 4
%Hd=tail call fastcc i8*@_SMLFN12TypedCalcCon8TPEXNTAGE(i8*inreg%G3)
ret i8*%Hd
He:
%Hf=getelementptr inbounds i8,i8*%w,i64 8
%Hg=bitcast i8*%Hf to i8**
%Hh=load i8*,i8**%Hg,align 8
store i8*%Hh,i8**%d,align 8
%Hi=getelementptr inbounds i8,i8*%Hh,i64 16
%Hj=bitcast i8*%Hi to i8**
%Hk=load i8*,i8**%Hj,align 8
store i8*%Hk,i8**%e,align 8
%Hl=call fastcc i8*@_SMLLN17PolyTyElimination13compileExnConE_1490(i8*inreg%v)
%Hm=getelementptr inbounds i8,i8*%Hl,i64 16
%Hn=bitcast i8*%Hm to i8*(i8*,i8*)**
%Ho=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Hn,align 8
%Hp=bitcast i8*%Hl to i8**
%Hq=load i8*,i8**%Hp,align 8
%Hr=load i8*,i8**%d,align 8
%Hs=getelementptr inbounds i8,i8*%Hr,i64 8
%Ht=bitcast i8*%Hs to i8**
%Hu=load i8*,i8**%Ht,align 8
%Hv=call fastcc i8*%Ho(i8*inreg%Hq,i8*inreg%Hu)
store i8*%Hv,i8**%c,align 8
%Hw=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Hx=getelementptr inbounds i8,i8*%Hw,i64 16
%Hy=bitcast i8*%Hx to i8*(i8*,i8*)**
%Hz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Hy,align 8
%HA=bitcast i8*%Hw to i8**
%HB=load i8*,i8**%HA,align 8
store i8*%HB,i8**%f,align 8
%HC=call i8*@sml_alloc(i32 inreg 12)#0
%HD=getelementptr inbounds i8,i8*%HC,i64 -4
%HE=bitcast i8*%HD to i32*
store i32 1342177288,i32*%HE,align 4
store i8*%HC,i8**%g,align 8
%HF=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%HG=bitcast i8*%HC to i8**
store i8*%HF,i8**%HG,align 8
%HH=getelementptr inbounds i8,i8*%HC,i64 8
%HI=bitcast i8*%HH to i32*
store i32 1,i32*%HI,align 4
%HJ=call i8*@sml_alloc(i32 inreg 28)#0
%HK=getelementptr inbounds i8,i8*%HJ,i64 -4
%HL=bitcast i8*%HK to i32*
store i32 1342177304,i32*%HL,align 4
%HM=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%HN=bitcast i8*%HJ to i8**
store i8*%HM,i8**%HN,align 8
%HO=getelementptr inbounds i8,i8*%HJ,i64 8
%HP=bitcast i8*%HO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1604 to void(...)*),void(...)**%HP,align 8
%HQ=getelementptr inbounds i8,i8*%HJ,i64 16
%HR=bitcast i8*%HQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1604 to void(...)*),void(...)**%HR,align 8
%HS=getelementptr inbounds i8,i8*%HJ,i64 24
%HT=bitcast i8*%HS to i32*
store i32 -2147483647,i32*%HT,align 4
%HU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%HV=call fastcc i8*%Hz(i8*inreg%HU,i8*inreg%HJ)
%HW=getelementptr inbounds i8,i8*%HV,i64 16
%HX=bitcast i8*%HW to i8*(i8*,i8*)**
%HY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%HX,align 8
%HZ=bitcast i8*%HV to i8**
%H0=load i8*,i8**%HZ,align 8
%H1=load i8**,i8***%k,align 8
store i8*null,i8**%d,align 8
%H2=load i8*,i8**%H1,align 8
%H3=call fastcc i8*%HY(i8*inreg%H0,i8*inreg%H2)
store i8*%H3,i8**%d,align 8
%H4=call i8*@sml_alloc(i32 inreg 28)#0
%H5=getelementptr inbounds i8,i8*%H4,i64 -4
%H6=bitcast i8*%H5 to i32*
store i32 1342177304,i32*%H6,align 4
%H7=load i8*,i8**%d,align 8
%H8=bitcast i8*%H4 to i8**
store i8*%H7,i8**%H8,align 8
%H9=load i8*,i8**%c,align 8
%Ia=getelementptr inbounds i8,i8*%H4,i64 8
%Ib=bitcast i8*%Ia to i8**
store i8*%H9,i8**%Ib,align 8
%Ic=load i8*,i8**%e,align 8
%Id=getelementptr inbounds i8,i8*%H4,i64 16
%Ie=bitcast i8*%Id to i8**
store i8*%Ic,i8**%Ie,align 8
%If=getelementptr inbounds i8,i8*%H4,i64 24
%Ig=bitcast i8*%If to i32*
store i32 7,i32*%Ig,align 4
%Ih=tail call fastcc i8*@_SMLFN12TypedCalcCon14TPEXNCONSTRUCTE(i8*inreg%H4)
ret i8*%Ih
Ii:
%Ij=load i8*,i8**@_SMLZN12TypedCalcCon7TPERRORE,align 8
ret i8*%Ij
Ik:
%Il=getelementptr inbounds i8,i8*%w,i64 8
%Im=bitcast i8*%Il to i8**
%In=load i8*,i8**%Im,align 8
store i8*%In,i8**%e,align 8
%Io=getelementptr inbounds i8,i8*%In,i64 32
%Ip=bitcast i8*%Io to i8**
%Iq=load i8*,i8**%Ip,align 8
store i8*%Iq,i8**%f,align 8
%Ir=bitcast i8*%In to i8**
%Is=load i8*,i8**%Ir,align 8
%It=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%v,i8*inreg%Is)
store i8*%It,i8**%c,align 8
%Iu=load i8*,i8**%e,align 8
%Iv=getelementptr inbounds i8,i8*%Iu,i64 8
%Iw=bitcast i8*%Iv to i8**
%Ix=load i8*,i8**%Iw,align 8
%Iy=load i8*,i8**%h,align 8
%Iz=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%Iy,i8*inreg%Ix)
store i8*%Iz,i8**%d,align 8
%IA=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%IB=getelementptr inbounds i8,i8*%IA,i64 16
%IC=bitcast i8*%IB to i8*(i8*,i8*)**
%ID=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%IC,align 8
%IE=bitcast i8*%IA to i8**
%IF=load i8*,i8**%IE,align 8
store i8*%IF,i8**%g,align 8
%IG=call i8*@sml_alloc(i32 inreg 12)#0
%IH=getelementptr inbounds i8,i8*%IG,i64 -4
%II=bitcast i8*%IH to i32*
store i32 1342177288,i32*%II,align 4
store i8*%IG,i8**%i,align 8
%IJ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%IK=bitcast i8*%IG to i8**
store i8*%IJ,i8**%IK,align 8
%IL=getelementptr inbounds i8,i8*%IG,i64 8
%IM=bitcast i8*%IL to i32*
store i32 1,i32*%IM,align 4
%IN=call i8*@sml_alloc(i32 inreg 28)#0
%IO=getelementptr inbounds i8,i8*%IN,i64 -4
%IP=bitcast i8*%IO to i32*
store i32 1342177304,i32*%IP,align 4
%IQ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%IR=bitcast i8*%IN to i8**
store i8*%IQ,i8**%IR,align 8
%IS=getelementptr inbounds i8,i8*%IN,i64 8
%IT=bitcast i8*%IS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1603 to void(...)*),void(...)**%IT,align 8
%IU=getelementptr inbounds i8,i8*%IN,i64 16
%IV=bitcast i8*%IU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1603 to void(...)*),void(...)**%IV,align 8
%IW=getelementptr inbounds i8,i8*%IN,i64 24
%IX=bitcast i8*%IW to i32*
store i32 -2147483647,i32*%IX,align 4
%IY=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%IZ=call fastcc i8*%ID(i8*inreg%IY,i8*inreg%IN)
%I0=getelementptr inbounds i8,i8*%IZ,i64 16
%I1=bitcast i8*%I0 to i8*(i8*,i8*)**
%I2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I1,align 8
%I3=bitcast i8*%IZ to i8**
%I4=load i8*,i8**%I3,align 8
%I5=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%I6=getelementptr inbounds i8,i8*%I5,i64 24
%I7=bitcast i8*%I6 to i8**
%I8=load i8*,i8**%I7,align 8
%I9=call fastcc i8*%I2(i8*inreg%I4,i8*inreg%I8)
store i8*%I9,i8**%e,align 8
%Ja=call i8*@sml_alloc(i32 inreg 36)#0
%Jb=getelementptr inbounds i8,i8*%Ja,i64 -4
%Jc=bitcast i8*%Jb to i32*
store i32 1342177312,i32*%Jc,align 4
%Jd=load i8*,i8**%c,align 8
%Je=bitcast i8*%Ja to i8**
store i8*%Jd,i8**%Je,align 8
%Jf=load i8*,i8**%d,align 8
%Jg=getelementptr inbounds i8,i8*%Ja,i64 8
%Jh=bitcast i8*%Jg to i8**
store i8*%Jf,i8**%Jh,align 8
%Ji=load i8*,i8**%e,align 8
%Jj=getelementptr inbounds i8,i8*%Ja,i64 16
%Jk=bitcast i8*%Jj to i8**
store i8*%Ji,i8**%Jk,align 8
%Jl=load i8*,i8**%f,align 8
%Jm=getelementptr inbounds i8,i8*%Ja,i64 24
%Jn=bitcast i8*%Jm to i8**
store i8*%Jl,i8**%Jn,align 8
%Jo=getelementptr inbounds i8,i8*%Ja,i64 32
%Jp=bitcast i8*%Jo to i32*
store i32 15,i32*%Jp,align 4
%Jq=tail call fastcc i8*@_SMLFN12TypedCalcCon18TPDYNAMICEXISTTAPPE(i8*inreg%Ja)
ret i8*%Jq
Jr:
%Js=getelementptr inbounds i8,i8*%w,i64 8
%Jt=bitcast i8*%Js to i8**
%Ju=load i8*,i8**%Jt,align 8
store i8*%Ju,i8**%i,align 8
%Jv=getelementptr inbounds i8,i8*%Ju,i64 40
%Jw=bitcast i8*%Jv to i8**
%Jx=load i8*,i8**%Jw,align 8
store i8*%Jx,i8**%j,align 8
%Jy=getelementptr inbounds i8,i8*%Ju,i64 24
%Jz=bitcast i8*%Jy to i8**
%JA=load i8*,i8**%Jz,align 8
%JB=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%v,i8*inreg%JA)
store i8*%JB,i8**%c,align 8
%JC=load i8*,i8**%i,align 8
%JD=getelementptr inbounds i8,i8*%JC,i64 32
%JE=bitcast i8*%JD to i8**
%JF=load i8*,i8**%JE,align 8
%JG=load i8*,i8**%h,align 8
%JH=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%JG,i8*inreg%JF)
store i8*%JH,i8**%d,align 8
%JI=bitcast i8**%i to i8***
%JJ=load i8**,i8***%JI,align 8
%JK=load i8*,i8**%JJ,align 8
%JL=load i8*,i8**%h,align 8
%JM=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%JL,i8*inreg%JK)
store i8*%JM,i8**%e,align 8
%JN=load i8*,i8**%i,align 8
%JO=getelementptr inbounds i8,i8*%JN,i64 8
%JP=bitcast i8*%JO to i8**
%JQ=load i8*,i8**%JP,align 8
%JR=load i8*,i8**%h,align 8
%JS=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%JR,i8*inreg%JQ)
store i8*%JS,i8**%f,align 8
%JT=load i8*,i8**%i,align 8
%JU=getelementptr inbounds i8,i8*%JT,i64 16
%JV=bitcast i8*%JU to i8**
%JW=load i8*,i8**%JV,align 8
%JX=load i8*,i8**%h,align 8
%JY=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%JX,i8*inreg%JW)
store i8*%JY,i8**%g,align 8
%JZ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%J0=getelementptr inbounds i8,i8*%JZ,i64 48
%J1=bitcast i8*%J0 to i8**
%J2=load i8*,i8**%J1,align 8
%J3=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%J4=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%J3,i8*inreg%J2)
store i8*%J4,i8**%h,align 8
%J5=call i8*@sml_alloc(i32 inreg 60)#0
%J6=getelementptr inbounds i8,i8*%J5,i64 -4
%J7=bitcast i8*%J6 to i32*
store i32 1342177336,i32*%J7,align 4
%J8=load i8*,i8**%e,align 8
%J9=bitcast i8*%J5 to i8**
store i8*%J8,i8**%J9,align 8
%Ka=load i8*,i8**%f,align 8
%Kb=getelementptr inbounds i8,i8*%J5,i64 8
%Kc=bitcast i8*%Kb to i8**
store i8*%Ka,i8**%Kc,align 8
%Kd=load i8*,i8**%g,align 8
%Ke=getelementptr inbounds i8,i8*%J5,i64 16
%Kf=bitcast i8*%Ke to i8**
store i8*%Kd,i8**%Kf,align 8
%Kg=load i8*,i8**%c,align 8
%Kh=getelementptr inbounds i8,i8*%J5,i64 24
%Ki=bitcast i8*%Kh to i8**
store i8*%Kg,i8**%Ki,align 8
%Kj=load i8*,i8**%d,align 8
%Kk=getelementptr inbounds i8,i8*%J5,i64 32
%Kl=bitcast i8*%Kk to i8**
store i8*%Kj,i8**%Kl,align 8
%Km=load i8*,i8**%j,align 8
%Kn=getelementptr inbounds i8,i8*%J5,i64 40
%Ko=bitcast i8*%Kn to i8**
store i8*%Km,i8**%Ko,align 8
%Kp=load i8*,i8**%h,align 8
%Kq=getelementptr inbounds i8,i8*%J5,i64 48
%Kr=bitcast i8*%Kq to i8**
store i8*%Kp,i8**%Kr,align 8
%Ks=getelementptr inbounds i8,i8*%J5,i64 56
%Kt=bitcast i8*%Ks to i32*
store i32 127,i32*%Kt,align 4
%Ku=tail call fastcc i8*@_SMLFN12TypedCalcCon13TPDYNAMICCASEE(i8*inreg%J5)
ret i8*%Ku
Kv:
%Kw=getelementptr inbounds i8,i8*%w,i64 8
%Kx=bitcast i8*%Kw to i8**
%Ky=load i8*,i8**%Kx,align 8
store i8*%Ky,i8**%d,align 8
%Kz=getelementptr inbounds i8,i8*%Ky,i64 8
%KA=bitcast i8*%Kz to i8**
%KB=load i8*,i8**%KA,align 8
store i8*%KB,i8**%e,align 8
%KC=getelementptr inbounds i8,i8*%Ky,i64 24
%KD=bitcast i8*%KC to i8**
%KE=load i8*,i8**%KD,align 8
store i8*%KE,i8**%f,align 8
%KF=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%KG=getelementptr inbounds i8,i8*%KF,i64 16
%KH=bitcast i8*%KG to i8*(i8*,i8*)**
%KI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%KH,align 8
%KJ=bitcast i8*%KF to i8**
%KK=load i8*,i8**%KJ,align 8
store i8*%KK,i8**%g,align 8
%KL=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%KM=getelementptr inbounds i8,i8*%KL,i64 16
%KN=bitcast i8*%KM to i8*(i8*,i8*)**
%KO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%KN,align 8
%KP=bitcast i8*%KL to i8**
%KQ=load i8*,i8**%KP,align 8
store i8*%KQ,i8**%c,align 8
%KR=call i8*@sml_alloc(i32 inreg 12)#0
%KS=getelementptr inbounds i8,i8*%KR,i64 -4
%KT=bitcast i8*%KS to i32*
store i32 1342177288,i32*%KT,align 4
store i8*%KR,i8**%i,align 8
%KU=load i8*,i8**%h,align 8
%KV=bitcast i8*%KR to i8**
store i8*%KU,i8**%KV,align 8
%KW=getelementptr inbounds i8,i8*%KR,i64 8
%KX=bitcast i8*%KW to i32*
store i32 1,i32*%KX,align 4
%KY=call i8*@sml_alloc(i32 inreg 28)#0
%KZ=getelementptr inbounds i8,i8*%KY,i64 -4
%K0=bitcast i8*%KZ to i32*
store i32 1342177304,i32*%K0,align 4
%K1=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%K2=bitcast i8*%KY to i8**
store i8*%K1,i8**%K2,align 8
%K3=getelementptr inbounds i8,i8*%KY,i64 8
%K4=bitcast i8*%K3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1601 to void(...)*),void(...)**%K4,align 8
%K5=getelementptr inbounds i8,i8*%KY,i64 16
%K6=bitcast i8*%K5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1601 to void(...)*),void(...)**%K6,align 8
%K7=getelementptr inbounds i8,i8*%KY,i64 24
%K8=bitcast i8*%K7 to i32*
store i32 -2147483647,i32*%K8,align 4
%K9=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%La=call fastcc i8*%KO(i8*inreg%K9,i8*inreg%KY)
%Lb=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Lc=call fastcc i8*%KI(i8*inreg%Lb,i8*inreg%La)
%Ld=getelementptr inbounds i8,i8*%Lc,i64 16
%Le=bitcast i8*%Ld to i8*(i8*,i8*)**
%Lf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Le,align 8
%Lg=bitcast i8*%Lc to i8**
%Lh=load i8*,i8**%Lg,align 8
%Li=load i8*,i8**%d,align 8
%Lj=getelementptr inbounds i8,i8*%Li,i64 16
%Lk=bitcast i8*%Lj to i8**
%Ll=load i8*,i8**%Lk,align 8
%Lm=call fastcc i8*%Lf(i8*inreg%Lh,i8*inreg%Ll)
store i8*%Lm,i8**%c,align 8
%Ln=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Lo=getelementptr inbounds i8,i8*%Ln,i64 16
%Lp=bitcast i8*%Lo to i8*(i8*,i8*)**
%Lq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Lp,align 8
%Lr=bitcast i8*%Ln to i8**
%Ls=load i8*,i8**%Lr,align 8
store i8*%Ls,i8**%g,align 8
%Lt=call i8*@sml_alloc(i32 inreg 12)#0
%Lu=getelementptr inbounds i8,i8*%Lt,i64 -4
%Lv=bitcast i8*%Lu to i32*
store i32 1342177288,i32*%Lv,align 4
store i8*%Lt,i8**%i,align 8
%Lw=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Lx=bitcast i8*%Lt to i8**
store i8*%Lw,i8**%Lx,align 8
%Ly=getelementptr inbounds i8,i8*%Lt,i64 8
%Lz=bitcast i8*%Ly to i32*
store i32 1,i32*%Lz,align 4
%LA=call i8*@sml_alloc(i32 inreg 28)#0
%LB=getelementptr inbounds i8,i8*%LA,i64 -4
%LC=bitcast i8*%LB to i32*
store i32 1342177304,i32*%LC,align 4
%LD=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%LE=bitcast i8*%LA to i8**
store i8*%LD,i8**%LE,align 8
%LF=getelementptr inbounds i8,i8*%LA,i64 8
%LG=bitcast i8*%LF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1602 to void(...)*),void(...)**%LG,align 8
%LH=getelementptr inbounds i8,i8*%LA,i64 16
%LI=bitcast i8*%LH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1602 to void(...)*),void(...)**%LI,align 8
%LJ=getelementptr inbounds i8,i8*%LA,i64 24
%LK=bitcast i8*%LJ to i32*
store i32 -2147483647,i32*%LK,align 4
%LL=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%LM=call fastcc i8*%Lq(i8*inreg%LL,i8*inreg%LA)
%LN=getelementptr inbounds i8,i8*%LM,i64 16
%LO=bitcast i8*%LN to i8*(i8*,i8*)**
%LP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%LO,align 8
%LQ=bitcast i8*%LM to i8**
%LR=load i8*,i8**%LQ,align 8
%LS=load i8**,i8***%k,align 8
store i8*null,i8**%d,align 8
%LT=load i8*,i8**%LS,align 8
%LU=call fastcc i8*%LP(i8*inreg%LR,i8*inreg%LT)
store i8*%LU,i8**%d,align 8
%LV=call i8*@sml_alloc(i32 inreg 36)#0
%LW=getelementptr inbounds i8,i8*%LV,i64 -4
%LX=bitcast i8*%LW to i32*
store i32 1342177312,i32*%LX,align 4
%LY=load i8*,i8**%d,align 8
%LZ=bitcast i8*%LV to i8**
store i8*%LY,i8**%LZ,align 8
%L0=load i8*,i8**%e,align 8
%L1=getelementptr inbounds i8,i8*%LV,i64 8
%L2=bitcast i8*%L1 to i8**
store i8*%L0,i8**%L2,align 8
%L3=load i8*,i8**%c,align 8
%L4=getelementptr inbounds i8,i8*%LV,i64 16
%L5=bitcast i8*%L4 to i8**
store i8*%L3,i8**%L5,align 8
%L6=load i8*,i8**%f,align 8
%L7=getelementptr inbounds i8,i8*%LV,i64 24
%L8=bitcast i8*%L7 to i8**
store i8*%L6,i8**%L8,align 8
%L9=getelementptr inbounds i8,i8*%LV,i64 32
%Ma=bitcast i8*%L9 to i32*
store i32 15,i32*%Ma,align 4
%Mb=tail call fastcc i8*@_SMLFN12TypedCalcCon15TPDATACONSTRUCTE(i8*inreg%LV)
ret i8*%Mb
Mc:
%Md=getelementptr inbounds i8,i8*%w,i64 8
%Me=bitcast i8*%Md to i8**
%Mf=load i8*,i8**%Me,align 8
%Mg=bitcast i8*%Mf to i8**
%Mh=load i8*,i8**%Mg,align 8
store i8*%Mh,i8**%d,align 8
%Mi=getelementptr inbounds i8,i8*%Mf,i64 8
%Mj=bitcast i8*%Mi to i8**
%Mk=load i8*,i8**%Mj,align 8
store i8*%Mk,i8**%e,align 8
%Ml=getelementptr inbounds i8,i8*%Mf,i64 16
%Mm=bitcast i8*%Ml to i8**
%Mn=load i8*,i8**%Mm,align 8
store i8*null,i8**%h,align 8
%Mo=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%v,i8*inreg%Mn)
store i8*%Mo,i8**%c,align 8
%Mp=call i8*@sml_alloc(i32 inreg 28)#0
%Mq=getelementptr inbounds i8,i8*%Mp,i64 -4
%Mr=bitcast i8*%Mq to i32*
store i32 1342177304,i32*%Mr,align 4
%Ms=load i8*,i8**%d,align 8
%Mt=bitcast i8*%Mp to i8**
store i8*%Ms,i8**%Mt,align 8
%Mu=load i8*,i8**%e,align 8
%Mv=getelementptr inbounds i8,i8*%Mp,i64 8
%Mw=bitcast i8*%Mv to i8**
store i8*%Mu,i8**%Mw,align 8
%Mx=load i8*,i8**%c,align 8
%My=getelementptr inbounds i8,i8*%Mp,i64 16
%Mz=bitcast i8*%My to i8**
store i8*%Mx,i8**%Mz,align 8
%MA=getelementptr inbounds i8,i8*%Mp,i64 24
%MB=bitcast i8*%MA to i32*
store i32 7,i32*%MB,align 4
%MC=tail call fastcc i8*@_SMLFN12TypedCalcCon10TPCONSTANTE(i8*inreg%Mp)
ret i8*%MC
MD:
%ME=getelementptr inbounds i8,i8*%w,i64 8
%MF=bitcast i8*%ME to i8**
%MG=load i8*,i8**%MF,align 8
store i8*%MG,i8**%f,align 8
%MH=getelementptr inbounds i8,i8*%MG,i64 16
%MI=bitcast i8*%MH to i8**
%MJ=load i8*,i8**%MI,align 8
store i8*%MJ,i8**%g,align 8
%MK=bitcast i8*%MG to i8***
%ML=load i8**,i8***%MK,align 8
%MM=load i8*,i8**%ML,align 8
%MN=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%v,i8*inreg%MM)
store i8*%MN,i8**%c,align 8
%MO=bitcast i8**%f to i8***
%MP=load i8**,i8***%MO,align 8
%MQ=load i8*,i8**%MP,align 8
%MR=getelementptr inbounds i8,i8*%MQ,i64 8
%MS=bitcast i8*%MR to i8**
%MT=load i8*,i8**%MS,align 8
%MU=load i8*,i8**%h,align 8
%MV=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%MU,i8*inreg%MT)
store i8*%MV,i8**%d,align 8
%MW=call i8*@sml_alloc(i32 inreg 20)#0
%MX=getelementptr inbounds i8,i8*%MW,i64 -4
%MY=bitcast i8*%MX to i32*
store i32 1342177296,i32*%MY,align 4
store i8*%MW,i8**%e,align 8
%MZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M0=bitcast i8*%MW to i8**
store i8*%MZ,i8**%M0,align 8
%M1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%M2=getelementptr inbounds i8,i8*%MW,i64 8
%M3=bitcast i8*%M2 to i8**
store i8*%M1,i8**%M3,align 8
%M4=getelementptr inbounds i8,i8*%MW,i64 16
%M5=bitcast i8*%M4 to i32*
store i32 3,i32*%M5,align 4
%M6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%M7=getelementptr inbounds i8,i8*%M6,i64 8
%M8=bitcast i8*%M7 to i8**
%M9=load i8*,i8**%M8,align 8
%Na=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Nb=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%Na,i8*inreg%M9)
store i8*%Nb,i8**%c,align 8
%Nc=call i8*@sml_alloc(i32 inreg 28)#0
%Nd=getelementptr inbounds i8,i8*%Nc,i64 -4
%Ne=bitcast i8*%Nd to i32*
store i32 1342177304,i32*%Ne,align 4
%Nf=load i8*,i8**%e,align 8
%Ng=bitcast i8*%Nc to i8**
store i8*%Nf,i8**%Ng,align 8
%Nh=load i8*,i8**%c,align 8
%Ni=getelementptr inbounds i8,i8*%Nc,i64 8
%Nj=bitcast i8*%Ni to i8**
store i8*%Nh,i8**%Nj,align 8
%Nk=load i8*,i8**%g,align 8
%Nl=getelementptr inbounds i8,i8*%Nc,i64 16
%Nm=bitcast i8*%Nl to i8**
store i8*%Nk,i8**%Nm,align 8
%Nn=getelementptr inbounds i8,i8*%Nc,i64 24
%No=bitcast i8*%Nn to i32*
store i32 7,i32*%No,align 4
%Np=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPCASTE(i8*inreg%Nc)
ret i8*%Np
Nq:
%Nr=getelementptr inbounds i8,i8*%w,i64 8
%Ns=bitcast i8*%Nr to i8**
%Nt=load i8*,i8**%Ns,align 8
store i8*%Nt,i8**%e,align 8
%Nu=getelementptr inbounds i8,i8*%Nt,i64 24
%Nv=bitcast i8*%Nu to i8**
%Nw=load i8*,i8**%Nv,align 8
store i8*%Nw,i8**%f,align 8
%Nx=getelementptr inbounds i8,i8*%Nt,i64 40
%Ny=bitcast i8*%Nx to i8**
%Nz=load i8*,i8**%Ny,align 8
%NA=bitcast i8*%Nz to i32*
%NB=load i32,i32*%NA,align 4
switch i32%NB,label%NC[
i32 1,label%PW
i32 0,label%OV
i32 2,label%NU
]
NC:
store i8*null,i8**%h,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%ND=load i8*,i8**@_SMLZ5Match,align 8
store i8*%ND,i8**%c,align 8
%NE=call i8*@sml_alloc(i32 inreg 20)#0
%NF=getelementptr inbounds i8,i8*%NE,i64 -4
%NG=bitcast i8*%NF to i32*
store i32 1342177296,i32*%NG,align 4
store i8*%NE,i8**%d,align 8
%NH=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%NI=bitcast i8*%NE to i8**
store i8*%NH,i8**%NI,align 8
%NJ=getelementptr inbounds i8,i8*%NE,i64 8
%NK=bitcast i8*%NJ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@dc,i64 0,i32 2,i64 0),i8**%NK,align 8
%NL=getelementptr inbounds i8,i8*%NE,i64 16
%NM=bitcast i8*%NL to i32*
store i32 3,i32*%NM,align 4
%NN=call i8*@sml_alloc(i32 inreg 60)#0
%NO=getelementptr inbounds i8,i8*%NN,i64 -4
%NP=bitcast i8*%NO to i32*
store i32 1342177336,i32*%NP,align 4
%NQ=getelementptr inbounds i8,i8*%NN,i64 56
%NR=bitcast i8*%NQ to i32*
store i32 1,i32*%NR,align 4
%NS=load i8*,i8**%d,align 8
%NT=bitcast i8*%NN to i8**
store i8*%NS,i8**%NT,align 8
call void@sml_raise(i8*inreg%NN)#1
unreachable
NU:
%NV=getelementptr inbounds i8,i8*%Nz,i64 8
%NW=bitcast i8*%NV to i8**
%NX=load i8*,i8**%NW,align 8
store i8*%NX,i8**%d,align 8
%NY=getelementptr inbounds i8,i8*%Nt,i64 8
%NZ=bitcast i8*%NY to i8**
%N0=load i8*,i8**%NZ,align 8
%N1=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%v,i8*inreg%N0)
store i8*%N1,i8**%c,align 8
%N2=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%N3=getelementptr inbounds i8,i8*%N2,i64 16
%N4=bitcast i8*%N3 to i8*(i8*,i8*)**
%N5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N4,align 8
%N6=bitcast i8*%N2 to i8**
%N7=load i8*,i8**%N6,align 8
store i8*%N7,i8**%g,align 8
%N8=call i8*@sml_alloc(i32 inreg 12)#0
%N9=getelementptr inbounds i8,i8*%N8,i64 -4
%Oa=bitcast i8*%N9 to i32*
store i32 1342177288,i32*%Oa,align 4
store i8*%N8,i8**%i,align 8
%Ob=load i8*,i8**%h,align 8
%Oc=bitcast i8*%N8 to i8**
store i8*%Ob,i8**%Oc,align 8
%Od=getelementptr inbounds i8,i8*%N8,i64 8
%Oe=bitcast i8*%Od to i32*
store i32 1,i32*%Oe,align 4
%Of=call i8*@sml_alloc(i32 inreg 28)#0
%Og=getelementptr inbounds i8,i8*%Of,i64 -4
%Oh=bitcast i8*%Og to i32*
store i32 1342177304,i32*%Oh,align 4
%Oi=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Oj=bitcast i8*%Of to i8**
store i8*%Oi,i8**%Oj,align 8
%Ok=getelementptr inbounds i8,i8*%Of,i64 8
%Ol=bitcast i8*%Ok to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1599 to void(...)*),void(...)**%Ol,align 8
%Om=getelementptr inbounds i8,i8*%Of,i64 16
%On=bitcast i8*%Om to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1599 to void(...)*),void(...)**%On,align 8
%Oo=getelementptr inbounds i8,i8*%Of,i64 24
%Op=bitcast i8*%Oo to i32*
store i32 -2147483647,i32*%Op,align 4
%Oq=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Or=call fastcc i8*%N5(i8*inreg%Oq,i8*inreg%Of)
%Os=getelementptr inbounds i8,i8*%Or,i64 16
%Ot=bitcast i8*%Os to i8*(i8*,i8*)**
%Ou=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Ot,align 8
%Ov=bitcast i8*%Or to i8**
%Ow=load i8*,i8**%Ov,align 8
%Ox=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Oy=call fastcc i8*%Ou(i8*inreg%Ow,i8*inreg%Ox)
store i8*%Oy,i8**%d,align 8
%Oz=bitcast i8**%e to i8***
%OA=load i8**,i8***%Oz,align 8
store i8*null,i8**%e,align 8
%OB=load i8*,i8**%OA,align 8
%OC=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%OD=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%OC,i8*inreg%OB)
store i8*%OD,i8**%e,align 8
%OE=call i8*@sml_alloc(i32 inreg 36)#0
%OF=getelementptr inbounds i8,i8*%OE,i64 -4
%OG=bitcast i8*%OF to i32*
store i32 1342177312,i32*%OG,align 4
%OH=load i8*,i8**%e,align 8
%OI=bitcast i8*%OE to i8**
store i8*%OH,i8**%OI,align 8
%OJ=load i8*,i8**%c,align 8
%OK=getelementptr inbounds i8,i8*%OE,i64 8
%OL=bitcast i8*%OK to i8**
store i8*%OJ,i8**%OL,align 8
%OM=load i8*,i8**%f,align 8
%ON=getelementptr inbounds i8,i8*%OE,i64 16
%OO=bitcast i8*%ON to i8**
store i8*%OM,i8**%OO,align 8
%OP=load i8*,i8**%d,align 8
%OQ=getelementptr inbounds i8,i8*%OE,i64 24
%OR=bitcast i8*%OQ to i8**
store i8*%OP,i8**%OR,align 8
%OS=getelementptr inbounds i8,i8*%OE,i64 32
%OT=bitcast i8*%OS to i32*
store i32 15,i32*%OT,align 4
%OU=tail call fastcc i8*@_SMLFN12TypedCalcCon16TPSWITCH__EXNCASEE(i8*inreg%OE)
ret i8*%OU
OV:
%OW=getelementptr inbounds i8,i8*%Nz,i64 8
%OX=bitcast i8*%OW to i8**
%OY=load i8*,i8**%OX,align 8
store i8*%OY,i8**%d,align 8
%OZ=getelementptr inbounds i8,i8*%Nt,i64 8
%O0=bitcast i8*%OZ to i8**
%O1=load i8*,i8**%O0,align 8
%O2=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%v,i8*inreg%O1)
store i8*%O2,i8**%c,align 8
%O3=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%O4=getelementptr inbounds i8,i8*%O3,i64 16
%O5=bitcast i8*%O4 to i8*(i8*,i8*)**
%O6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O5,align 8
%O7=bitcast i8*%O3 to i8**
%O8=load i8*,i8**%O7,align 8
store i8*%O8,i8**%g,align 8
%O9=call i8*@sml_alloc(i32 inreg 12)#0
%Pa=getelementptr inbounds i8,i8*%O9,i64 -4
%Pb=bitcast i8*%Pa to i32*
store i32 1342177288,i32*%Pb,align 4
store i8*%O9,i8**%i,align 8
%Pc=load i8*,i8**%h,align 8
%Pd=bitcast i8*%O9 to i8**
store i8*%Pc,i8**%Pd,align 8
%Pe=getelementptr inbounds i8,i8*%O9,i64 8
%Pf=bitcast i8*%Pe to i32*
store i32 1,i32*%Pf,align 4
%Pg=call i8*@sml_alloc(i32 inreg 28)#0
%Ph=getelementptr inbounds i8,i8*%Pg,i64 -4
%Pi=bitcast i8*%Ph to i32*
store i32 1342177304,i32*%Pi,align 4
%Pj=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Pk=bitcast i8*%Pg to i8**
store i8*%Pj,i8**%Pk,align 8
%Pl=getelementptr inbounds i8,i8*%Pg,i64 8
%Pm=bitcast i8*%Pl to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1597 to void(...)*),void(...)**%Pm,align 8
%Pn=getelementptr inbounds i8,i8*%Pg,i64 16
%Po=bitcast i8*%Pn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1597 to void(...)*),void(...)**%Po,align 8
%Pp=getelementptr inbounds i8,i8*%Pg,i64 24
%Pq=bitcast i8*%Pp to i32*
store i32 -2147483647,i32*%Pq,align 4
%Pr=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Ps=call fastcc i8*%O6(i8*inreg%Pr,i8*inreg%Pg)
%Pt=getelementptr inbounds i8,i8*%Ps,i64 16
%Pu=bitcast i8*%Pt to i8*(i8*,i8*)**
%Pv=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Pu,align 8
%Pw=bitcast i8*%Ps to i8**
%Px=load i8*,i8**%Pw,align 8
%Py=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Pz=call fastcc i8*%Pv(i8*inreg%Px,i8*inreg%Py)
store i8*%Pz,i8**%d,align 8
%PA=bitcast i8**%e to i8***
%PB=load i8**,i8***%PA,align 8
store i8*null,i8**%e,align 8
%PC=load i8*,i8**%PB,align 8
%PD=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%PE=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%PD,i8*inreg%PC)
store i8*%PE,i8**%e,align 8
%PF=call i8*@sml_alloc(i32 inreg 36)#0
%PG=getelementptr inbounds i8,i8*%PF,i64 -4
%PH=bitcast i8*%PG to i32*
store i32 1342177312,i32*%PH,align 4
%PI=load i8*,i8**%e,align 8
%PJ=bitcast i8*%PF to i8**
store i8*%PI,i8**%PJ,align 8
%PK=load i8*,i8**%c,align 8
%PL=getelementptr inbounds i8,i8*%PF,i64 8
%PM=bitcast i8*%PL to i8**
store i8*%PK,i8**%PM,align 8
%PN=load i8*,i8**%f,align 8
%PO=getelementptr inbounds i8,i8*%PF,i64 16
%PP=bitcast i8*%PO to i8**
store i8*%PN,i8**%PP,align 8
%PQ=load i8*,i8**%d,align 8
%PR=getelementptr inbounds i8,i8*%PF,i64 24
%PS=bitcast i8*%PR to i8**
store i8*%PQ,i8**%PS,align 8
%PT=getelementptr inbounds i8,i8*%PF,i64 32
%PU=bitcast i8*%PT to i32*
store i32 15,i32*%PU,align 4
%PV=tail call fastcc i8*@_SMLFN12TypedCalcCon16TPSWITCH__CONCASEE(i8*inreg%PF)
ret i8*%PV
PW:
%PX=getelementptr inbounds i8,i8*%Nz,i64 8
%PY=bitcast i8*%PX to i8**
%PZ=load i8*,i8**%PY,align 8
store i8*%PZ,i8**%d,align 8
%P0=getelementptr inbounds i8,i8*%Nt,i64 8
%P1=bitcast i8*%P0 to i8**
%P2=load i8*,i8**%P1,align 8
%P3=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%v,i8*inreg%P2)
store i8*%P3,i8**%c,align 8
%P4=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%P5=getelementptr inbounds i8,i8*%P4,i64 16
%P6=bitcast i8*%P5 to i8*(i8*,i8*)**
%P7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%P6,align 8
%P8=bitcast i8*%P4 to i8**
%P9=load i8*,i8**%P8,align 8
store i8*%P9,i8**%g,align 8
%Qa=call i8*@sml_alloc(i32 inreg 12)#0
%Qb=getelementptr inbounds i8,i8*%Qa,i64 -4
%Qc=bitcast i8*%Qb to i32*
store i32 1342177288,i32*%Qc,align 4
store i8*%Qa,i8**%i,align 8
%Qd=load i8*,i8**%h,align 8
%Qe=bitcast i8*%Qa to i8**
store i8*%Qd,i8**%Qe,align 8
%Qf=getelementptr inbounds i8,i8*%Qa,i64 8
%Qg=bitcast i8*%Qf to i32*
store i32 1,i32*%Qg,align 4
%Qh=call i8*@sml_alloc(i32 inreg 28)#0
%Qi=getelementptr inbounds i8,i8*%Qh,i64 -4
%Qj=bitcast i8*%Qi to i32*
store i32 1342177304,i32*%Qj,align 4
%Qk=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Ql=bitcast i8*%Qh to i8**
store i8*%Qk,i8**%Ql,align 8
%Qm=getelementptr inbounds i8,i8*%Qh,i64 8
%Qn=bitcast i8*%Qm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1594 to void(...)*),void(...)**%Qn,align 8
%Qo=getelementptr inbounds i8,i8*%Qh,i64 16
%Qp=bitcast i8*%Qo to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1594 to void(...)*),void(...)**%Qp,align 8
%Qq=getelementptr inbounds i8,i8*%Qh,i64 24
%Qr=bitcast i8*%Qq to i32*
store i32 -2147483647,i32*%Qr,align 4
%Qs=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Qt=call fastcc i8*%P7(i8*inreg%Qs,i8*inreg%Qh)
%Qu=getelementptr inbounds i8,i8*%Qt,i64 16
%Qv=bitcast i8*%Qu to i8*(i8*,i8*)**
%Qw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Qv,align 8
%Qx=bitcast i8*%Qt to i8**
%Qy=load i8*,i8**%Qx,align 8
%Qz=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%QA=call fastcc i8*%Qw(i8*inreg%Qy,i8*inreg%Qz)
store i8*%QA,i8**%d,align 8
%QB=bitcast i8**%e to i8***
%QC=load i8**,i8***%QB,align 8
store i8*null,i8**%e,align 8
%QD=load i8*,i8**%QC,align 8
%QE=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%QF=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%QE,i8*inreg%QD)
store i8*%QF,i8**%e,align 8
%QG=call i8*@sml_alloc(i32 inreg 36)#0
%QH=getelementptr inbounds i8,i8*%QG,i64 -4
%QI=bitcast i8*%QH to i32*
store i32 1342177312,i32*%QI,align 4
%QJ=load i8*,i8**%e,align 8
%QK=bitcast i8*%QG to i8**
store i8*%QJ,i8**%QK,align 8
%QL=load i8*,i8**%c,align 8
%QM=getelementptr inbounds i8,i8*%QG,i64 8
%QN=bitcast i8*%QM to i8**
store i8*%QL,i8**%QN,align 8
%QO=load i8*,i8**%f,align 8
%QP=getelementptr inbounds i8,i8*%QG,i64 16
%QQ=bitcast i8*%QP to i8**
store i8*%QO,i8**%QQ,align 8
%QR=load i8*,i8**%d,align 8
%QS=getelementptr inbounds i8,i8*%QG,i64 24
%QT=bitcast i8*%QS to i8**
store i8*%QR,i8**%QT,align 8
%QU=getelementptr inbounds i8,i8*%QG,i64 32
%QV=bitcast i8*%QU to i32*
store i32 15,i32*%QV,align 4
%QW=tail call fastcc i8*@_SMLFN12TypedCalcCon18TPSWITCH__CONSTCASEE(i8*inreg%QG)
ret i8*%QW
QX:
%QY=getelementptr inbounds i8,i8*%w,i64 8
%QZ=bitcast i8*%QY to i8**
%Q0=load i8*,i8**%QZ,align 8
store i8*%Q0,i8**%d,align 8
%Q1=bitcast i8*%Q0 to i32*
%Q2=load i32,i32*%Q1,align 4
%Q3=getelementptr inbounds i8,i8*%Q0,i64 24
%Q4=bitcast i8*%Q3 to i8**
%Q5=load i8*,i8**%Q4,align 8
store i8*%Q5,i8**%e,align 8
%Q6=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Q7=getelementptr inbounds i8,i8*%Q6,i64 16
%Q8=bitcast i8*%Q7 to i8*(i8*,i8*)**
%Q9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q8,align 8
%Ra=bitcast i8*%Q6 to i8**
%Rb=load i8*,i8**%Ra,align 8
store i8*%Rb,i8**%c,align 8
%Rc=call i8*@sml_alloc(i32 inreg 12)#0
%Rd=getelementptr inbounds i8,i8*%Rc,i64 -4
%Re=bitcast i8*%Rd to i32*
store i32 1342177288,i32*%Re,align 4
store i8*%Rc,i8**%f,align 8
%Rf=load i8*,i8**%h,align 8
%Rg=bitcast i8*%Rc to i8**
store i8*%Rf,i8**%Rg,align 8
%Rh=getelementptr inbounds i8,i8*%Rc,i64 8
%Ri=bitcast i8*%Rh to i32*
store i32 1,i32*%Ri,align 4
%Rj=call i8*@sml_alloc(i32 inreg 28)#0
%Rk=getelementptr inbounds i8,i8*%Rj,i64 -4
%Rl=bitcast i8*%Rk to i32*
store i32 1342177304,i32*%Rl,align 4
%Rm=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Rn=bitcast i8*%Rj to i8**
store i8*%Rm,i8**%Rn,align 8
%Ro=getelementptr inbounds i8,i8*%Rj,i64 8
%Rp=bitcast i8*%Ro to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1592 to void(...)*),void(...)**%Rp,align 8
%Rq=getelementptr inbounds i8,i8*%Rj,i64 16
%Rr=bitcast i8*%Rq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1592 to void(...)*),void(...)**%Rr,align 8
%Rs=getelementptr inbounds i8,i8*%Rj,i64 24
%Rt=bitcast i8*%Rs to i32*
store i32 -2147483647,i32*%Rt,align 4
%Ru=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Rv=call fastcc i8*%Q9(i8*inreg%Ru,i8*inreg%Rj)
%Rw=getelementptr inbounds i8,i8*%Rv,i64 16
%Rx=bitcast i8*%Rw to i8*(i8*,i8*)**
%Ry=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Rx,align 8
%Rz=bitcast i8*%Rv to i8**
%RA=load i8*,i8**%Rz,align 8
%RB=load i8*,i8**%d,align 8
%RC=getelementptr inbounds i8,i8*%RB,i64 8
%RD=bitcast i8*%RC to i8**
%RE=load i8*,i8**%RD,align 8
%RF=call fastcc i8*%Ry(i8*inreg%RA,i8*inreg%RE)
store i8*%RF,i8**%c,align 8
%RG=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%RH=getelementptr inbounds i8,i8*%RG,i64 16
%RI=bitcast i8*%RH to i8*(i8*,i8*)**
%RJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%RI,align 8
%RK=bitcast i8*%RG to i8**
%RL=load i8*,i8**%RK,align 8
store i8*%RL,i8**%f,align 8
%RM=call i8*@sml_alloc(i32 inreg 12)#0
%RN=getelementptr inbounds i8,i8*%RM,i64 -4
%RO=bitcast i8*%RN to i32*
store i32 1342177288,i32*%RO,align 4
store i8*%RM,i8**%g,align 8
%RP=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%RQ=bitcast i8*%RM to i8**
store i8*%RP,i8**%RQ,align 8
%RR=getelementptr inbounds i8,i8*%RM,i64 8
%RS=bitcast i8*%RR to i32*
store i32 1,i32*%RS,align 4
%RT=call i8*@sml_alloc(i32 inreg 28)#0
%RU=getelementptr inbounds i8,i8*%RT,i64 -4
%RV=bitcast i8*%RU to i32*
store i32 1342177304,i32*%RV,align 4
%RW=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%RX=bitcast i8*%RT to i8**
store i8*%RW,i8**%RX,align 8
%RY=getelementptr inbounds i8,i8*%RT,i64 8
%RZ=bitcast i8*%RY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1593 to void(...)*),void(...)**%RZ,align 8
%R0=getelementptr inbounds i8,i8*%RT,i64 16
%R1=bitcast i8*%R0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1593 to void(...)*),void(...)**%R1,align 8
%R2=getelementptr inbounds i8,i8*%RT,i64 24
%R3=bitcast i8*%R2 to i32*
store i32 -2147483647,i32*%R3,align 4
%R4=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%R5=call fastcc i8*%RJ(i8*inreg%R4,i8*inreg%RT)
%R6=getelementptr inbounds i8,i8*%R5,i64 16
%R7=bitcast i8*%R6 to i8*(i8*,i8*)**
%R8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%R7,align 8
%R9=bitcast i8*%R5 to i8**
%Sa=load i8*,i8**%R9,align 8
%Sb=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Sc=getelementptr inbounds i8,i8*%Sb,i64 40
%Sd=bitcast i8*%Sc to i8**
%Se=load i8*,i8**%Sd,align 8
%Sf=call fastcc i8*%R8(i8*inreg%Sa,i8*inreg%Se)
store i8*%Sf,i8**%d,align 8
%Sg=call i8*@sml_alloc(i32 inreg 36)#0
%Sh=bitcast i8*%Sg to i32*
%Si=getelementptr inbounds i8,i8*%Sg,i64 -4
%Sj=bitcast i8*%Si to i32*
store i32 1342177312,i32*%Sj,align 4
%Sk=getelementptr inbounds i8,i8*%Sg,i64 4
%Sl=bitcast i8*%Sk to i32*
store i32 0,i32*%Sl,align 1
store i32%Q2,i32*%Sh,align 4
%Sm=load i8*,i8**%c,align 8
%Sn=getelementptr inbounds i8,i8*%Sg,i64 8
%So=bitcast i8*%Sn to i8**
store i8*%Sm,i8**%So,align 8
%Sp=load i8*,i8**%e,align 8
%Sq=getelementptr inbounds i8,i8*%Sg,i64 16
%Sr=bitcast i8*%Sq to i8**
store i8*%Sp,i8**%Sr,align 8
%Ss=load i8*,i8**%d,align 8
%St=getelementptr inbounds i8,i8*%Sg,i64 24
%Su=bitcast i8*%St to i8**
store i8*%Ss,i8**%Su,align 8
%Sv=getelementptr inbounds i8,i8*%Sg,i64 32
%Sw=bitcast i8*%Sv to i32*
store i32 14,i32*%Sw,align 4
%Sx=tail call fastcc i8*@_SMLFN12TypedCalcCon7TPCASEME(i8*inreg%Sg)
ret i8*%Sx
Sy:
%Sz=getelementptr inbounds i8,i8*%w,i64 8
%SA=bitcast i8*%Sz to i8**
%SB=load i8*,i8**%SA,align 8
store i8*%SB,i8**%d,align 8
%SC=getelementptr inbounds i8,i8*%SB,i64 24
%SD=bitcast i8*%SC to i8**
%SE=load i8*,i8**%SD,align 8
store i8*%SE,i8**%e,align 8
%SF=getelementptr inbounds i8,i8*%SB,i64 8
%SG=bitcast i8*%SF to i8**
%SH=load i8*,i8**%SG,align 8
%SI=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%v,i8*inreg%SH)
store i8*%SI,i8**%c,align 8
%SJ=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%SK=getelementptr inbounds i8,i8*%SJ,i64 16
%SL=bitcast i8*%SK to i8*(i8*,i8*)**
%SM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%SL,align 8
%SN=bitcast i8*%SJ to i8**
%SO=load i8*,i8**%SN,align 8
store i8*%SO,i8**%f,align 8
%SP=call i8*@sml_alloc(i32 inreg 12)#0
%SQ=getelementptr inbounds i8,i8*%SP,i64 -4
%SR=bitcast i8*%SQ to i32*
store i32 1342177288,i32*%SR,align 4
store i8*%SP,i8**%g,align 8
%SS=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ST=bitcast i8*%SP to i8**
store i8*%SS,i8**%ST,align 8
%SU=getelementptr inbounds i8,i8*%SP,i64 8
%SV=bitcast i8*%SU to i32*
store i32 1,i32*%SV,align 4
%SW=call i8*@sml_alloc(i32 inreg 28)#0
%SX=getelementptr inbounds i8,i8*%SW,i64 -4
%SY=bitcast i8*%SX to i32*
store i32 1342177304,i32*%SY,align 4
%SZ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%S0=bitcast i8*%SW to i8**
store i8*%SZ,i8**%S0,align 8
%S1=getelementptr inbounds i8,i8*%SW,i64 8
%S2=bitcast i8*%S1 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1591 to void(...)*),void(...)**%S2,align 8
%S3=getelementptr inbounds i8,i8*%SW,i64 16
%S4=bitcast i8*%S3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination10compileExpE_1591 to void(...)*),void(...)**%S4,align 8
%S5=getelementptr inbounds i8,i8*%SW,i64 24
%S6=bitcast i8*%S5 to i32*
store i32 -2147483647,i32*%S6,align 4
%S7=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%S8=call fastcc i8*%SM(i8*inreg%S7,i8*inreg%SW)
%S9=getelementptr inbounds i8,i8*%S8,i64 16
%Ta=bitcast i8*%S9 to i8*(i8*,i8*)**
%Tb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Ta,align 8
%Tc=bitcast i8*%S8 to i8**
%Td=load i8*,i8**%Tc,align 8
%Te=load i8**,i8***%k,align 8
store i8*null,i8**%d,align 8
%Tf=load i8*,i8**%Te,align 8
%Tg=call fastcc i8*%Tb(i8*inreg%Td,i8*inreg%Tf)
store i8*%Tg,i8**%d,align 8
%Th=call i8*@sml_alloc(i32 inreg 28)#0
%Ti=getelementptr inbounds i8,i8*%Th,i64 -4
%Tj=bitcast i8*%Ti to i32*
store i32 1342177304,i32*%Tj,align 4
%Tk=load i8*,i8**%d,align 8
%Tl=bitcast i8*%Th to i8**
store i8*%Tk,i8**%Tl,align 8
%Tm=load i8*,i8**%c,align 8
%Tn=getelementptr inbounds i8,i8*%Th,i64 8
%To=bitcast i8*%Tn to i8**
store i8*%Tm,i8**%To,align 8
%Tp=load i8*,i8**%e,align 8
%Tq=getelementptr inbounds i8,i8*%Th,i64 16
%Tr=bitcast i8*%Tq to i8**
store i8*%Tp,i8**%Tr,align 8
%Ts=getelementptr inbounds i8,i8*%Th,i64 24
%Tt=bitcast i8*%Ts to i32*
store i32 7,i32*%Tt,align 4
%Tu=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPAPPME(i8*inreg%Th)
ret i8*%Tu
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12compileMatchE_1511(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
store i8*null,i8**%c,align 8
store i8*%m,i8**%e,align 8
%o=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call i8*@sml_alloc(i32 inreg 12)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
store i8*%u,i8**%f,align 8
%x=load i8*,i8**%e,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i32*
store i32 1,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
%E=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4args_1641 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4args_1641 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%B,i64 24
%L=bitcast i8*%K to i32*
store i32 -2147483647,i32*%L,align 4
%M=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%N=call fastcc i8*%r(i8*inreg%M,i8*inreg%B)
%O=getelementptr inbounds i8,i8*%N,i64 16
%P=bitcast i8*%O to i8*(i8*,i8*)**
%Q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%P,align 8
%R=bitcast i8*%N to i8**
%S=load i8*,i8**%R,align 8
%T=bitcast i8**%d to i8***
%U=load i8**,i8***%T,align 8
%V=load i8*,i8**%U,align 8
%W=call fastcc i8*%Q(i8*inreg%S,i8*inreg%V)
store i8*%W,i8**%c,align 8
%X=call fastcc i8*@_SMLFN12TypedCalcCon7patVarsE(i8*inreg%W)
%Y=bitcast i8**%e to i32**
%Z=load i32*,i32**%Y,align 8
%aa=load i32,i32*%Z,align 4
%ab=call fastcc i8*@_SMLFN12TypedCalcCon6varEnvE(i8*inreg%X)
store i8*%ab,i8**%f,align 8
%ac=load i8*,i8**%e,align 8
%ad=getelementptr inbounds i8,i8*%ac,i64 8
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%g,align 8
%ag=call i8*@sml_alloc(i32 inreg 20)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
%aj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%am=getelementptr inbounds i8,i8*%ag,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ag,i64 16
%ap=bitcast i8*%ao to i32*
store i32 3,i32*%ap,align 4
%aq=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%ag)
store i8*%aq,i8**%f,align 8
%ar=load i8*,i8**%e,align 8
%as=getelementptr inbounds i8,i8*%ar,i64 16
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%g,align 8
%av=getelementptr inbounds i8,i8*%ar,i64 24
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%e,align 8
%ay=call i8*@sml_alloc(i32 inreg 36)#0
%az=bitcast i8*%ay to i32*
%aA=getelementptr inbounds i8,i8*%ay,i64 -4
%aB=bitcast i8*%aA to i32*
store i32 1342177312,i32*%aB,align 4
%aC=getelementptr inbounds i8,i8*%ay,i64 4
%aD=bitcast i8*%aC to i32*
store i32 0,i32*%aD,align 1
store i32%aa,i32*%az,align 4
%aE=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aF=getelementptr inbounds i8,i8*%ay,i64 8
%aG=bitcast i8*%aF to i8**
store i8*%aE,i8**%aG,align 8
%aH=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aI=getelementptr inbounds i8,i8*%ay,i64 16
%aJ=bitcast i8*%aI to i8**
store i8*%aH,i8**%aJ,align 8
%aK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aL=getelementptr inbounds i8,i8*%ay,i64 24
%aM=bitcast i8*%aL to i8**
store i8*%aK,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%ay,i64 32
%aO=bitcast i8*%aN to i32*
store i32 14,i32*%aO,align 4
%aP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aQ=getelementptr inbounds i8,i8*%aP,i64 8
%aR=bitcast i8*%aQ to i8**
%aS=load i8*,i8**%aR,align 8
%aT=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%ay,i8*inreg%aS)
store i8*%aT,i8**%d,align 8
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
%aX=load i8*,i8**%c,align 8
%aY=bitcast i8*%aU to i8**
store i8*%aX,i8**%aY,align 8
%aZ=load i8*,i8**%d,align 8
%a0=getelementptr inbounds i8,i8*%aU,i64 8
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aU,i64 16
%a3=bitcast i8*%a2 to i32*
store i32 3,i32*%a3,align 4
ret i8*%aU
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14compileMonoLetE_1512(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%n,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%d,align 8
%m=load i8*,i8**%c,align 8
br label%n
n:
%o=phi i8*[%m,%k],[%a,%p]
%q=phi i8*[%l,%k],[%b,%p]
store i8*null,i8**%c,align 8
store i8*%o,i8**%e,align 8
%r=icmp eq i8*%q,null
br i1%r,label%s,label%C
s:
store i8*null,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
%w=bitcast i8*%t to i8**
store i8*null,i8**%w,align 8
%x=load i8*,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
ret i8*%t
C:
%D=bitcast i8*%q to i8**
%E=load i8*,i8**%D,align 8
%F=getelementptr inbounds i8,i8*%E,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%o,i8*inreg%H)
store i8*%I,i8**%f,align 8
%J=bitcast i8**%d to i8****
%K=load i8***,i8****%J,align 8
%L=load i8**,i8***%K,align 8
%M=load i8*,i8**%L,align 8
%N=bitcast i8*%M to i32*
%O=load i32,i32*%N,align 4
%P=getelementptr inbounds i8,i8*%M,i64 4
%Q=bitcast i8*%P to i32*
%R=load i32,i32*%Q,align 4
%S=getelementptr inbounds i8,i8*%M,i64 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%g,align 8
%V=getelementptr inbounds i8,i8*%I,i64 8
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%h,align 8
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=bitcast i8*%Y to i32*
%aa=getelementptr inbounds i8,i8*%Y,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177304,i32*%ab,align 4
store i8*%Y,i8**%c,align 8
store i32%O,i32*%Z,align 4
%ac=getelementptr inbounds i8,i8*%Y,i64 4
%ad=bitcast i8*%ac to i32*
store i32%R,i32*%ad,align 4
%ae=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ai=getelementptr inbounds i8,i8*%Y,i64 16
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%Y,i64 24
%al=bitcast i8*%ak to i32*
store i32 6,i32*%al,align 4
%am=call i8*@sml_alloc(i32 inreg 20)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177296,i32*%ao,align 4
%ap=load i8*,i8**%c,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%am,i64 8
%as=bitcast i8*%ar to i8**
store i8*null,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%am,i64 16
%au=bitcast i8*%at to i32*
store i32 3,i32*%au,align 4
%av=bitcast i8**%e to i32**
%aw=load i32*,i32**%av,align 8
%ax=load i32,i32*%aw,align 4
%ay=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%am)
store i8*%ay,i8**%g,align 8
%az=load i8*,i8**%e,align 8
%aA=getelementptr inbounds i8,i8*%az,i64 8
%aB=bitcast i8*%aA to i8**
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%h,align 8
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
%aG=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aD,i64 16
%aM=bitcast i8*%aL to i32*
store i32 3,i32*%aM,align 4
%aN=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%aD)
store i8*%aN,i8**%g,align 8
%aO=load i8*,i8**%e,align 8
%aP=getelementptr inbounds i8,i8*%aO,i64 16
%aQ=bitcast i8*%aP to i8**
%aR=load i8*,i8**%aQ,align 8
store i8*%aR,i8**%h,align 8
%aS=getelementptr inbounds i8,i8*%aO,i64 24
%aT=bitcast i8*%aS to i8**
%aU=load i8*,i8**%aT,align 8
store i8*%aU,i8**%e,align 8
%aV=call i8*@sml_alloc(i32 inreg 36)#0
%aW=bitcast i8*%aV to i32*
%aX=getelementptr inbounds i8,i8*%aV,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177312,i32*%aY,align 4
%aZ=getelementptr inbounds i8,i8*%aV,i64 4
%a0=bitcast i8*%aZ to i32*
store i32 0,i32*%a0,align 1
store i32%ax,i32*%aW,align 4
%a1=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a2=getelementptr inbounds i8,i8*%aV,i64 8
%a3=bitcast i8*%a2 to i8**
store i8*%a1,i8**%a3,align 8
%a4=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a5=getelementptr inbounds i8,i8*%aV,i64 16
%a6=bitcast i8*%a5 to i8**
store i8*%a4,i8**%a6,align 8
%a7=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a8=getelementptr inbounds i8,i8*%aV,i64 24
%a9=bitcast i8*%a8 to i8**
store i8*%a7,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%aV,i64 32
%bb=bitcast i8*%ba to i32*
store i32 14,i32*%bb,align 4
%bc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bd=getelementptr inbounds i8,i8*%bc,i64 8
%be=bitcast i8*%bd to i8**
%bf=load i8*,i8**%be,align 8
%bg=call fastcc i8*@_SMLLN17PolyTyElimination14compileMonoLetE_1512(i8*inreg%aV,i8*inreg%bf)
%bh=bitcast i8*%bg to i8**
%bi=load i8*,i8**%bh,align 8
store i8*%bi,i8**%d,align 8
%bj=getelementptr inbounds i8,i8*%bg,i64 8
%bk=bitcast i8*%bj to i8**
%bl=load i8*,i8**%bk,align 8
store i8*%bl,i8**%e,align 8
%bm=call i8*@sml_alloc(i32 inreg 20)#0
%bn=getelementptr inbounds i8,i8*%bm,i64 -4
%bo=bitcast i8*%bn to i32*
store i32 1342177296,i32*%bo,align 4
store i8*%bm,i8**%g,align 8
%bp=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bq=bitcast i8*%bm to i8**
store i8*%bp,i8**%bq,align 8
%br=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bs=getelementptr inbounds i8,i8*%bm,i64 8
%bt=bitcast i8*%bs to i8**
store i8*%br,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bm,i64 16
%bv=bitcast i8*%bu to i32*
store i32 3,i32*%bv,align 4
%bw=call i8*@sml_alloc(i32 inreg 20)#0
%bx=getelementptr inbounds i8,i8*%bw,i64 -4
%by=bitcast i8*%bx to i32*
store i32 1342177296,i32*%by,align 4
store i8*%bw,i8**%c,align 8
%bz=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bA=bitcast i8*%bw to i8**
store i8*%bz,i8**%bA,align 8
%bB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bC=getelementptr inbounds i8,i8*%bw,i64 8
%bD=bitcast i8*%bC to i8**
store i8*%bB,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bw,i64 16
%bF=bitcast i8*%bE to i32*
store i32 3,i32*%bF,align 4
%bG=call i8*@sml_alloc(i32 inreg 20)#0
%bH=getelementptr inbounds i8,i8*%bG,i64 -4
%bI=bitcast i8*%bH to i32*
store i32 1342177296,i32*%bI,align 4
%bJ=load i8*,i8**%c,align 8
%bK=bitcast i8*%bG to i8**
store i8*%bJ,i8**%bK,align 8
%bL=load i8*,i8**%e,align 8
%bM=getelementptr inbounds i8,i8*%bG,i64 8
%bN=bitcast i8*%bM to i8**
store i8*%bL,i8**%bN,align 8
%bO=getelementptr inbounds i8,i8*%bG,i64 16
%bP=bitcast i8*%bO to i32*
store i32 3,i32*%bP,align 4
ret i8*%bG
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15compileDeclListE_1513(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
u:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
store i8*%a,i8**%i,align 8
store i8*%b,i8**%j,align 8
%n=load atomic i32,i32*@sml_check_flag unordered,align 4
%o=icmp eq i32%n,0
br i1%o,label%s,label%p
p:
call void@sml_check(i32 inreg%n)
%q=load i8*,i8**%j,align 8
%r=load i8*,i8**%i,align 8
br label%s
s:
%t=phi i8*[%r,%p],[%a,%u]
%v=phi i8*[%q,%p],[%b,%u]
store i8*null,i8**%i,align 8
store i8*%t,i8**%k,align 8
%w=icmp eq i8*%v,null
br i1%w,label%x,label%H
x:
store i8*null,i8**%j,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
%B=bitcast i8*%y to i8**
store i8*null,i8**%B,align 8
%C=load i8*,i8**%k,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
ret i8*%y
H:
%I=bitcast i8*%v to i8**
%J=load i8*,i8**%I,align 8
%K=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%K)
%L=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%L)
%M=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%M)
%N=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%N)
%O=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%O)
%P=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%P)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%t,i8**%c,align 8
store i8*%J,i8**%d,align 8
%Q=load atomic i32,i32*@sml_check_flag unordered,align 4
%R=icmp eq i32%Q,0
br i1%R,label%V,label%S
S:
call void@sml_check(i32 inreg%Q)
%T=load i8*,i8**%d,align 8
%U=load i8*,i8**%c,align 8
br label%V
V:
%W=phi i8*[%U,%S],[%t,%H]
%X=phi i8*[%T,%S],[%J,%H]
store i8*%W,i8**%d,align 8
%Y=bitcast i8*%X to i32*
%Z=load i32,i32*%Y,align 4
switch i32%Z,label%aa[
i32 1,label%pk
i32 2,label%mA
i32 3,label%l6
i32 4,label%lm
i32 5,label%kS
i32 0,label%ko
i32 6,label%jU
i32 7,label%ja
i32 8,label%fV
i32 9,label%er
i32 10,label%bc
i32 11,label%as
]
aa:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%ab=load i8*,i8**@_SMLZ5Match,align 8
store i8*%ab,i8**%c,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
store i8*%ac,i8**%d,align 8
%af=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%ac,i64 8
%ai=bitcast i8*%ah to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@dh,i64 0,i32 2,i64 0),i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ac,i64 16
%ak=bitcast i8*%aj to i32*
store i32 3,i32*%ak,align 4
%al=call i8*@sml_alloc(i32 inreg 60)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177336,i32*%an,align 4
%ao=getelementptr inbounds i8,i8*%al,i64 56
%ap=bitcast i8*%ao to i32*
store i32 1,i32*%ap,align 4
%aq=load i8*,i8**%d,align 8
%ar=bitcast i8*%al to i8**
store i8*%aq,i8**%ar,align 8
call void@sml_raise(i8*inreg%al)#1
unreachable
as:
%at=getelementptr inbounds i8,i8*%X,i64 8
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
%aw=getelementptr inbounds i8,i8*%av,i64 8
%ax=bitcast i8*%aw to i8**
%ay=load i8*,i8**%ax,align 8
store i8*%ay,i8**%e,align 8
%az=bitcast i8*%av to i8**
%aA=load i8*,i8**%az,align 8
store i8*null,i8**%d,align 8
%aB=call fastcc i8*@_SMLLN17PolyTyElimination15compileRecbindsE_1515(i8*inreg%W,i8*inreg%aA)
store i8*%aB,i8**%c,align 8
%aC=call i8*@sml_alloc(i32 inreg 20)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177296,i32*%aE,align 4
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=bitcast i8*%aC to i8**
store i8*%aF,i8**%aG,align 8
%aH=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aI=getelementptr inbounds i8,i8*%aC,i64 8
%aJ=bitcast i8*%aI to i8**
store i8*%aH,i8**%aJ,align 8
%aK=getelementptr inbounds i8,i8*%aC,i64 16
%aL=bitcast i8*%aK to i32*
store i32 3,i32*%aL,align 4
%aM=call fastcc i8*@_SMLFN12TypedCalcCon8TPVALRECE(i8*inreg%aC)
store i8*%aM,i8**%c,align 8
%aN=bitcast i8*%aM to i8**
%aO=load i8*,i8**%aN,align 8
store i8*%aO,i8**%d,align 8
%aP=call i8*@sml_alloc(i32 inreg 20)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177296,i32*%aR,align 4
store i8*%aP,i8**%e,align 8
%aS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aP,i64 8
%aV=bitcast i8*%aU to i8**
store i8*null,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aP,i64 16
%aX=bitcast i8*%aW to i32*
store i32 3,i32*%aX,align 4
%aY=load i8*,i8**%c,align 8
%aZ=getelementptr inbounds i8,i8*%aY,i64 8
%a0=bitcast i8*%aZ to i8**
%a1=load i8*,i8**%a0,align 8
store i8*%a1,i8**%c,align 8
%a2=call i8*@sml_alloc(i32 inreg 20)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177296,i32*%a4,align 4
%a5=load i8*,i8**%e,align 8
%a6=bitcast i8*%a2 to i8**
store i8*%a5,i8**%a6,align 8
%a7=load i8*,i8**%c,align 8
%a8=getelementptr inbounds i8,i8*%a2,i64 8
%a9=bitcast i8*%a8 to i8**
store i8*%a7,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a2,i64 16
%bb=bitcast i8*%ba to i32*
store i32 3,i32*%bb,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
br label%qq
bc:
%bd=getelementptr inbounds i8,i8*%X,i64 8
%be=bitcast i8*%bd to i8**
%bf=load i8*,i8**%be,align 8
store i8*%bf,i8**%e,align 8
%bg=bitcast i8*%bf to i8**
%bh=load i8*,i8**%bg,align 8
store i8*%bh,i8**%f,align 8
%bi=getelementptr inbounds i8,i8*%bf,i64 8
%bj=bitcast i8*%bi to i8**
%bk=load i8*,i8**%bj,align 8
store i8*%bk,i8**%c,align 8
%bl=getelementptr inbounds i8,i8*%bf,i64 16
%bm=bitcast i8*%bl to i8**
%bn=load i8*,i8**%bm,align 8
store i8*%bn,i8**%g,align 8
%bo=call i8*@sml_alloc(i32 inreg 20)#0
%bp=getelementptr inbounds i8,i8*%bo,i64 -4
%bq=bitcast i8*%bp to i32*
store i32 1342177296,i32*%bq,align 4
%br=load i8*,i8**%f,align 8
%bs=bitcast i8*%bo to i8**
store i8*%br,i8**%bs,align 8
%bt=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bu=getelementptr inbounds i8,i8*%bo,i64 8
%bv=bitcast i8*%bu to i8**
store i8*%bt,i8**%bv,align 8
%bw=getelementptr inbounds i8,i8*%bo,i64 16
%bx=bitcast i8*%bw to i32*
store i32 3,i32*%bx,align 4
%by=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bz=call fastcc i8*@_SMLLN17PolyTyElimination13compileBtvEnvE_1323(i8*inreg%by,i8*inreg%bo)
store i8*%bz,i8**%d,align 8
%bA=getelementptr inbounds i8,i8*%bz,i64 8
%bB=bitcast i8*%bA to i8**
%bC=load i8*,i8**%bB,align 8
store i8*%bC,i8**%c,align 8
%bD=load i32*,i32**bitcast(i8**@_SMLZN7Control17verbosePolyTyElimE to i32**),align 8
%bE=load i32,i32*%bD,align 4
%bF=icmp slt i32%bE,1
br i1%bF,label%bS,label%bG
bG:
%bH=call i8*@sml_alloc(i32 inreg 20)#0
%bI=getelementptr inbounds i8,i8*%bH,i64 -4
%bJ=bitcast i8*%bI to i32*
store i32 1342177296,i32*%bJ,align 4
%bK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bL=bitcast i8*%bH to i8**
store i8*%bK,i8**%bL,align 8
%bM=load i8*,i8**%c,align 8
%bN=getelementptr inbounds i8,i8*%bH,i64 8
%bO=bitcast i8*%bN to i8**
store i8*%bM,i8**%bO,align 8
%bP=getelementptr inbounds i8,i8*%bH,i64 16
%bQ=bitcast i8*%bP to i32*
store i32 3,i32*%bQ,align 4
call fastcc void@_SMLLN17PolyTyElimination9benchmarkE_1460(i8*inreg%bH)
%bR=load i8*,i8**%c,align 8
br label%bS
bS:
%bT=phi i8*[%bR,%bG],[%bC,%bc]
%bU=icmp eq i8*%bT,null
store i8*null,i8**%c,align 8
br i1%bU,label%bV,label%cA
bV:
%bW=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bX=getelementptr inbounds i8,i8*%bW,i64 16
%bY=bitcast i8*%bX to i8*(i8*,i8*)**
%bZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bY,align 8
%b0=bitcast i8*%bW to i8**
%b1=load i8*,i8**%b0,align 8
store i8*%b1,i8**%c,align 8
%b2=call i8*@sml_alloc(i32 inreg 20)#0
%b3=getelementptr inbounds i8,i8*%b2,i64 -4
%b4=bitcast i8*%b3 to i32*
store i32 1342177296,i32*%b4,align 4
store i8*%b2,i8**%f,align 8
%b5=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b6=bitcast i8*%b2 to i8**
store i8*%b5,i8**%b6,align 8
%b7=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b8=getelementptr inbounds i8,i8*%b2,i64 8
%b9=bitcast i8*%b8 to i8**
store i8*%b7,i8**%b9,align 8
%ca=getelementptr inbounds i8,i8*%b2,i64 16
%cb=bitcast i8*%ca to i32*
store i32 3,i32*%cb,align 4
%cc=call i8*@sml_alloc(i32 inreg 28)#0
%cd=getelementptr inbounds i8,i8*%cc,i64 -4
%ce=bitcast i8*%cd to i32*
store i32 1342177304,i32*%ce,align 4
%cf=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cg=bitcast i8*%cc to i8**
store i8*%cf,i8**%cg,align 8
%ch=getelementptr inbounds i8,i8*%cc,i64 8
%ci=bitcast i8*%ch to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination11compileDeclE_1647 to void(...)*),void(...)**%ci,align 8
%cj=getelementptr inbounds i8,i8*%cc,i64 16
%ck=bitcast i8*%cj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination11compileDeclE_1647 to void(...)*),void(...)**%ck,align 8
%cl=getelementptr inbounds i8,i8*%cc,i64 24
%cm=bitcast i8*%cl to i32*
store i32 -2147483647,i32*%cm,align 4
%cn=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%co=call fastcc i8*%bZ(i8*inreg%cn,i8*inreg%cc)
%cp=getelementptr inbounds i8,i8*%co,i64 16
%cq=bitcast i8*%cp to i8*(i8*,i8*)**
%cr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cq,align 8
%cs=bitcast i8*%co to i8**
%ct=load i8*,i8**%cs,align 8
%cu=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cv=getelementptr inbounds i8,i8*%cu,i64 24
%cw=bitcast i8*%cv to i8**
%cx=load i8*,i8**%cw,align 8
%cy=call fastcc i8*%cr(i8*inreg%ct,i8*inreg%cx)
%cz=call fastcc i8*@_SMLLN17PolyTyElimination5multiE_1466(i8*inreg%cy)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
br label%qq
cA:
%cB=bitcast i8*%bT to i8**
%cC=load i8*,i8**%cB,align 8
%cD=bitcast i8*%cC to i8**
%cE=load i8*,i8**%cD,align 8
store i8*%cE,i8**%f,align 8
%cF=getelementptr inbounds i8,i8*%cC,i64 8
%cG=bitcast i8*%cF to i8**
%cH=load i8*,i8**%cG,align 8
store i8*%cH,i8**%h,align 8
%cI=call fastcc i8*@_SMLFN14BoundTypeVarID3Map7isEmptyE(i32 inreg 1,i32 inreg 8)
%cJ=getelementptr inbounds i8,i8*%cI,i64 16
%cK=bitcast i8*%cJ to i8*(i8*,i8*)**
%cL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cK,align 8
%cM=bitcast i8*%cI to i8**
%cN=load i8*,i8**%cM,align 8
%cO=load i8*,i8**%f,align 8
%cP=call fastcc i8*%cL(i8*inreg%cN,i8*inreg%cO)
%cQ=bitcast i8*%cP to i32*
%cR=load i32,i32*%cQ,align 4
%cS=icmp eq i32%cR,0
br i1%cS,label%dC,label%cT
cT:
store i8*null,i8**%f,align 8
store i8*null,i8**%h,align 8
%cU=bitcast i8**%d to i8***
%cV=load i8**,i8***%cU,align 8
store i8*null,i8**%d,align 8
%cW=load i8*,i8**%cV,align 8
%cX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cY=getelementptr inbounds i8,i8*%cX,i64 24
%cZ=bitcast i8*%cY to i8**
%c0=load i8*,i8**%cZ,align 8
%c1=call fastcc i8*@_SMLLN17PolyTyElimination15compileRecbindsE_1515(i8*inreg%cW,i8*inreg%c0)
store i8*%c1,i8**%c,align 8
%c2=call i8*@sml_alloc(i32 inreg 20)#0
%c3=getelementptr inbounds i8,i8*%c2,i64 -4
%c4=bitcast i8*%c3 to i32*
store i32 1342177296,i32*%c4,align 4
%c5=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%c6=bitcast i8*%c2 to i8**
store i8*%c5,i8**%c6,align 8
%c7=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%c8=getelementptr inbounds i8,i8*%c2,i64 8
%c9=bitcast i8*%c8 to i8**
store i8*%c7,i8**%c9,align 8
%da=getelementptr inbounds i8,i8*%c2,i64 16
%db=bitcast i8*%da to i32*
store i32 3,i32*%db,align 4
%dc=call fastcc i8*@_SMLFN12TypedCalcCon8TPVALRECE(i8*inreg%c2)
store i8*%dc,i8**%c,align 8
%dd=bitcast i8*%dc to i8**
%de=load i8*,i8**%dd,align 8
store i8*%de,i8**%d,align 8
%df=call i8*@sml_alloc(i32 inreg 20)#0
%dg=getelementptr inbounds i8,i8*%df,i64 -4
%dh=bitcast i8*%dg to i32*
store i32 1342177296,i32*%dh,align 4
store i8*%df,i8**%e,align 8
%di=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dj=bitcast i8*%df to i8**
store i8*%di,i8**%dj,align 8
%dk=getelementptr inbounds i8,i8*%df,i64 8
%dl=bitcast i8*%dk to i8**
store i8*null,i8**%dl,align 8
%dm=getelementptr inbounds i8,i8*%df,i64 16
%dn=bitcast i8*%dm to i32*
store i32 3,i32*%dn,align 4
%do=load i8*,i8**%c,align 8
%dp=getelementptr inbounds i8,i8*%do,i64 8
%dq=bitcast i8*%dp to i8**
%dr=load i8*,i8**%dq,align 8
store i8*%dr,i8**%c,align 8
%ds=call i8*@sml_alloc(i32 inreg 20)#0
%dt=getelementptr inbounds i8,i8*%ds,i64 -4
%du=bitcast i8*%dt to i32*
store i32 1342177296,i32*%du,align 4
%dv=load i8*,i8**%e,align 8
%dw=bitcast i8*%ds to i8**
store i8*%dv,i8**%dw,align 8
%dx=load i8*,i8**%c,align 8
%dy=getelementptr inbounds i8,i8*%ds,i64 8
%dz=bitcast i8*%dy to i8**
store i8*%dx,i8**%dz,align 8
%dA=getelementptr inbounds i8,i8*%ds,i64 16
%dB=bitcast i8*%dA to i32*
store i32 3,i32*%dB,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
br label%qq
dC:
%dD=bitcast i8**%d to i8***
%dE=load i8**,i8***%dD,align 8
store i8*null,i8**%d,align 8
%dF=load i8*,i8**%dE,align 8
%dG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dH=getelementptr inbounds i8,i8*%dG,i64 24
%dI=bitcast i8*%dH to i8**
%dJ=load i8*,i8**%dI,align 8
%dK=call fastcc i8*@_SMLLN17PolyTyElimination15compileRecbindsE_1515(i8*inreg%dF,i8*inreg%dJ)
store i8*%dK,i8**%c,align 8
%dL=call i8*@sml_alloc(i32 inreg 36)#0
%dM=getelementptr inbounds i8,i8*%dL,i64 -4
%dN=bitcast i8*%dM to i32*
store i32 1342177312,i32*%dN,align 4
%dO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dP=bitcast i8*%dL to i8**
store i8*%dO,i8**%dP,align 8
%dQ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dR=getelementptr inbounds i8,i8*%dL,i64 8
%dS=bitcast i8*%dR to i8**
store i8*%dQ,i8**%dS,align 8
%dT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dU=getelementptr inbounds i8,i8*%dL,i64 16
%dV=bitcast i8*%dU to i8**
store i8*%dT,i8**%dV,align 8
%dW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dX=getelementptr inbounds i8,i8*%dL,i64 24
%dY=bitcast i8*%dX to i8**
store i8*%dW,i8**%dY,align 8
%dZ=getelementptr inbounds i8,i8*%dL,i64 32
%d0=bitcast i8*%dZ to i32*
store i32 15,i32*%d0,align 4
%d1=call fastcc i8*@_SMLFN12TypedCalcCon12TPVALPOLYRECE(i8*inreg%dL)
store i8*%d1,i8**%c,align 8
%d2=bitcast i8*%d1 to i8**
%d3=load i8*,i8**%d2,align 8
store i8*%d3,i8**%d,align 8
%d4=call i8*@sml_alloc(i32 inreg 20)#0
%d5=getelementptr inbounds i8,i8*%d4,i64 -4
%d6=bitcast i8*%d5 to i32*
store i32 1342177296,i32*%d6,align 4
store i8*%d4,i8**%e,align 8
%d7=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%d8=bitcast i8*%d4 to i8**
store i8*%d7,i8**%d8,align 8
%d9=getelementptr inbounds i8,i8*%d4,i64 8
%ea=bitcast i8*%d9 to i8**
store i8*null,i8**%ea,align 8
%eb=getelementptr inbounds i8,i8*%d4,i64 16
%ec=bitcast i8*%eb to i32*
store i32 3,i32*%ec,align 4
%ed=load i8*,i8**%c,align 8
%ee=getelementptr inbounds i8,i8*%ed,i64 8
%ef=bitcast i8*%ee to i8**
%eg=load i8*,i8**%ef,align 8
store i8*%eg,i8**%c,align 8
%eh=call i8*@sml_alloc(i32 inreg 20)#0
%ei=getelementptr inbounds i8,i8*%eh,i64 -4
%ej=bitcast i8*%ei to i32*
store i32 1342177296,i32*%ej,align 4
%ek=load i8*,i8**%e,align 8
%el=bitcast i8*%eh to i8**
store i8*%ek,i8**%el,align 8
%em=load i8*,i8**%c,align 8
%en=getelementptr inbounds i8,i8*%eh,i64 8
%eo=bitcast i8*%en to i8**
store i8*%em,i8**%eo,align 8
%ep=getelementptr inbounds i8,i8*%eh,i64 16
%eq=bitcast i8*%ep to i32*
store i32 3,i32*%eq,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
br label%qq
er:
%es=getelementptr inbounds i8,i8*%X,i64 8
%et=bitcast i8*%es to i8**
%eu=load i8*,i8**%et,align 8
store i8*%eu,i8**%e,align 8
%ev=getelementptr inbounds i8,i8*%eu,i64 8
%ew=bitcast i8*%ev to i8**
%ex=load i8*,i8**%ew,align 8
store i8*%ex,i8**%f,align 8
%ey=bitcast i8*%eu to i8***
%ez=load i8**,i8***%ey,align 8
%eA=load i8*,i8**%ez,align 8
%eB=bitcast i8*%eA to i32*
%eC=load i32,i32*%eB,align 4
%eD=getelementptr inbounds i8,i8*%eA,i64 4
%eE=bitcast i8*%eD to i32*
%eF=load i32,i32*%eE,align 4
%eG=getelementptr inbounds i8,i8*%eA,i64 8
%eH=bitcast i8*%eG to i8**
%eI=load i8*,i8**%eH,align 8
store i8*%eI,i8**%g,align 8
%eJ=load i8**,i8***%ey,align 8
%eK=load i8*,i8**%eJ,align 8
%eL=getelementptr inbounds i8,i8*%eK,i64 16
%eM=bitcast i8*%eL to i8**
%eN=load i8*,i8**%eM,align 8
%eO=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%W,i8*inreg%eN)
store i8*%eO,i8**%h,align 8
%eP=call i8*@sml_alloc(i32 inreg 28)#0
%eQ=bitcast i8*%eP to i32*
%eR=getelementptr inbounds i8,i8*%eP,i64 -4
%eS=bitcast i8*%eR to i32*
store i32 1342177304,i32*%eS,align 4
store i8*%eP,i8**%c,align 8
store i32%eC,i32*%eQ,align 4
%eT=getelementptr inbounds i8,i8*%eP,i64 4
%eU=bitcast i8*%eT to i32*
store i32%eF,i32*%eU,align 4
%eV=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%eW=getelementptr inbounds i8,i8*%eP,i64 8
%eX=bitcast i8*%eW to i8**
store i8*%eV,i8**%eX,align 8
%eY=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%eZ=getelementptr inbounds i8,i8*%eP,i64 16
%e0=bitcast i8*%eZ to i8**
store i8*%eY,i8**%e0,align 8
%e1=getelementptr inbounds i8,i8*%eP,i64 24
%e2=bitcast i8*%e1 to i32*
store i32 6,i32*%e2,align 4
%e3=bitcast i8**%e to i8***
%e4=load i8**,i8***%e3,align 8
store i8*null,i8**%e,align 8
%e5=load i8*,i8**%e4,align 8
%e6=getelementptr inbounds i8,i8*%e5,i64 8
%e7=bitcast i8*%e6 to i8**
%e8=load i8*,i8**%e7,align 8
%e9=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fa=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%e9,i8*inreg%e8)
store i8*%fa,i8**%d,align 8
%fb=call i8*@sml_alloc(i32 inreg 20)#0
%fc=getelementptr inbounds i8,i8*%fb,i64 -4
%fd=bitcast i8*%fc to i32*
store i32 1342177296,i32*%fd,align 4
store i8*%fb,i8**%e,align 8
%fe=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ff=bitcast i8*%fb to i8**
store i8*%fe,i8**%ff,align 8
%fg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fh=getelementptr inbounds i8,i8*%fb,i64 8
%fi=bitcast i8*%fh to i8**
store i8*%fg,i8**%fi,align 8
%fj=getelementptr inbounds i8,i8*%fb,i64 16
%fk=bitcast i8*%fj to i32*
store i32 3,i32*%fk,align 4
%fl=call i8*@sml_alloc(i32 inreg 20)#0
%fm=getelementptr inbounds i8,i8*%fl,i64 -4
%fn=bitcast i8*%fm to i32*
store i32 1342177296,i32*%fn,align 4
%fo=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fp=bitcast i8*%fl to i8**
store i8*%fo,i8**%fp,align 8
%fq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fr=getelementptr inbounds i8,i8*%fl,i64 8
%fs=bitcast i8*%fr to i8**
store i8*%fq,i8**%fs,align 8
%ft=getelementptr inbounds i8,i8*%fl,i64 16
%fu=bitcast i8*%ft to i32*
store i32 3,i32*%fu,align 4
%fv=call fastcc i8*@_SMLFN12TypedCalcCon5TPVALE(i8*inreg%fl)
store i8*%fv,i8**%c,align 8
%fw=bitcast i8*%fv to i8**
%fx=load i8*,i8**%fw,align 8
store i8*%fx,i8**%d,align 8
%fy=call i8*@sml_alloc(i32 inreg 20)#0
%fz=getelementptr inbounds i8,i8*%fy,i64 -4
%fA=bitcast i8*%fz to i32*
store i32 1342177296,i32*%fA,align 4
store i8*%fy,i8**%e,align 8
%fB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fC=bitcast i8*%fy to i8**
store i8*%fB,i8**%fC,align 8
%fD=getelementptr inbounds i8,i8*%fy,i64 8
%fE=bitcast i8*%fD to i8**
store i8*null,i8**%fE,align 8
%fF=getelementptr inbounds i8,i8*%fy,i64 16
%fG=bitcast i8*%fF to i32*
store i32 3,i32*%fG,align 4
%fH=load i8*,i8**%c,align 8
%fI=getelementptr inbounds i8,i8*%fH,i64 8
%fJ=bitcast i8*%fI to i8**
%fK=load i8*,i8**%fJ,align 8
store i8*%fK,i8**%c,align 8
%fL=call i8*@sml_alloc(i32 inreg 20)#0
%fM=getelementptr inbounds i8,i8*%fL,i64 -4
%fN=bitcast i8*%fM to i32*
store i32 1342177296,i32*%fN,align 4
%fO=load i8*,i8**%e,align 8
%fP=bitcast i8*%fL to i8**
store i8*%fO,i8**%fP,align 8
%fQ=load i8*,i8**%c,align 8
%fR=getelementptr inbounds i8,i8*%fL,i64 8
%fS=bitcast i8*%fR to i8**
store i8*%fQ,i8**%fS,align 8
%fT=getelementptr inbounds i8,i8*%fL,i64 16
%fU=bitcast i8*%fT to i32*
store i32 3,i32*%fU,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
br label%qq
fV:
%fW=getelementptr inbounds i8,i8*%X,i64 8
%fX=bitcast i8*%fW to i8**
%fY=load i8*,i8**%fX,align 8
store i8*%fY,i8**%e,align 8
%fZ=bitcast i8*%fY to i8**
%f0=load i8*,i8**%fZ,align 8
store i8*%f0,i8**%f,align 8
%f1=getelementptr inbounds i8,i8*%fY,i64 8
%f2=bitcast i8*%f1 to i8**
%f3=load i8*,i8**%f2,align 8
store i8*%f3,i8**%c,align 8
%f4=getelementptr inbounds i8,i8*%fY,i64 16
%f5=bitcast i8*%f4 to i8**
%f6=load i8*,i8**%f5,align 8
store i8*%f6,i8**%g,align 8
%f7=call i8*@sml_alloc(i32 inreg 20)#0
%f8=getelementptr inbounds i8,i8*%f7,i64 -4
%f9=bitcast i8*%f8 to i32*
store i32 1342177296,i32*%f9,align 4
%ga=load i8*,i8**%f,align 8
%gb=bitcast i8*%f7 to i8**
store i8*%ga,i8**%gb,align 8
%gc=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%gd=getelementptr inbounds i8,i8*%f7,i64 8
%ge=bitcast i8*%gd to i8**
store i8*%gc,i8**%ge,align 8
%gf=getelementptr inbounds i8,i8*%f7,i64 16
%gg=bitcast i8*%gf to i32*
store i32 3,i32*%gg,align 4
%gh=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gi=call fastcc i8*@_SMLLN17PolyTyElimination13compileBtvEnvE_1323(i8*inreg%gh,i8*inreg%f7)
store i8*%gi,i8**%d,align 8
%gj=getelementptr inbounds i8,i8*%gi,i64 8
%gk=bitcast i8*%gj to i8**
%gl=load i8*,i8**%gk,align 8
store i8*%gl,i8**%c,align 8
%gm=load i32*,i32**bitcast(i8**@_SMLZN7Control17verbosePolyTyElimE to i32**),align 8
%gn=load i32,i32*%gm,align 4
%go=icmp slt i32%gn,1
br i1%go,label%gB,label%gp
gp:
%gq=call i8*@sml_alloc(i32 inreg 20)#0
%gr=getelementptr inbounds i8,i8*%gq,i64 -4
%gs=bitcast i8*%gr to i32*
store i32 1342177296,i32*%gs,align 4
%gt=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gu=bitcast i8*%gq to i8**
store i8*%gt,i8**%gu,align 8
%gv=load i8*,i8**%c,align 8
%gw=getelementptr inbounds i8,i8*%gq,i64 8
%gx=bitcast i8*%gw to i8**
store i8*%gv,i8**%gx,align 8
%gy=getelementptr inbounds i8,i8*%gq,i64 16
%gz=bitcast i8*%gy to i32*
store i32 3,i32*%gz,align 4
call fastcc void@_SMLLN17PolyTyElimination9benchmarkE_1460(i8*inreg%gq)
%gA=load i8*,i8**%c,align 8
br label%gB
gB:
%gC=phi i8*[%gA,%gp],[%gl,%fV]
%gD=icmp eq i8*%gC,null
store i8*null,i8**%c,align 8
br i1%gD,label%gE,label%hj
gE:
%gF=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%gG=getelementptr inbounds i8,i8*%gF,i64 16
%gH=bitcast i8*%gG to i8*(i8*,i8*)**
%gI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gH,align 8
%gJ=bitcast i8*%gF to i8**
%gK=load i8*,i8**%gJ,align 8
store i8*%gK,i8**%c,align 8
%gL=call i8*@sml_alloc(i32 inreg 20)#0
%gM=getelementptr inbounds i8,i8*%gL,i64 -4
%gN=bitcast i8*%gM to i32*
store i32 1342177296,i32*%gN,align 4
store i8*%gL,i8**%f,align 8
%gO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gP=bitcast i8*%gL to i8**
store i8*%gO,i8**%gP,align 8
%gQ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gR=getelementptr inbounds i8,i8*%gL,i64 8
%gS=bitcast i8*%gR to i8**
store i8*%gQ,i8**%gS,align 8
%gT=getelementptr inbounds i8,i8*%gL,i64 16
%gU=bitcast i8*%gT to i32*
store i32 3,i32*%gU,align 4
%gV=call i8*@sml_alloc(i32 inreg 28)#0
%gW=getelementptr inbounds i8,i8*%gV,i64 -4
%gX=bitcast i8*%gW to i32*
store i32 1342177304,i32*%gX,align 4
%gY=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gZ=bitcast i8*%gV to i8**
store i8*%gY,i8**%gZ,align 8
%g0=getelementptr inbounds i8,i8*%gV,i64 8
%g1=bitcast i8*%g0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination11compileDeclE_1646 to void(...)*),void(...)**%g1,align 8
%g2=getelementptr inbounds i8,i8*%gV,i64 16
%g3=bitcast i8*%g2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination11compileDeclE_1646 to void(...)*),void(...)**%g3,align 8
%g4=getelementptr inbounds i8,i8*%gV,i64 24
%g5=bitcast i8*%g4 to i32*
store i32 -2147483647,i32*%g5,align 4
%g6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%g7=call fastcc i8*%gI(i8*inreg%g6,i8*inreg%gV)
%g8=getelementptr inbounds i8,i8*%g7,i64 16
%g9=bitcast i8*%g8 to i8*(i8*,i8*)**
%ha=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%g9,align 8
%hb=bitcast i8*%g7 to i8**
%hc=load i8*,i8**%hb,align 8
%hd=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%he=getelementptr inbounds i8,i8*%hd,i64 24
%hf=bitcast i8*%he to i8**
%hg=load i8*,i8**%hf,align 8
%hh=call fastcc i8*%ha(i8*inreg%hc,i8*inreg%hg)
%hi=call fastcc i8*@_SMLLN17PolyTyElimination5multiE_1466(i8*inreg%hh)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
br label%qq
hj:
%hk=bitcast i8*%gC to i8**
%hl=load i8*,i8**%hk,align 8
%hm=bitcast i8*%hl to i8**
%hn=load i8*,i8**%hm,align 8
store i8*%hn,i8**%f,align 8
%ho=getelementptr inbounds i8,i8*%hl,i64 8
%hp=bitcast i8*%ho to i8**
%hq=load i8*,i8**%hp,align 8
store i8*%hq,i8**%h,align 8
%hr=call fastcc i8*@_SMLFN14BoundTypeVarID3Map7isEmptyE(i32 inreg 1,i32 inreg 8)
%hs=getelementptr inbounds i8,i8*%hr,i64 16
%ht=bitcast i8*%hs to i8*(i8*,i8*)**
%hu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ht,align 8
%hv=bitcast i8*%hr to i8**
%hw=load i8*,i8**%hv,align 8
%hx=load i8*,i8**%f,align 8
%hy=call fastcc i8*%hu(i8*inreg%hw,i8*inreg%hx)
%hz=bitcast i8*%hy to i32*
%hA=load i32,i32*%hz,align 4
%hB=icmp eq i32%hA,0
br i1%hB,label%il,label%hC
hC:
store i8*null,i8**%f,align 8
store i8*null,i8**%h,align 8
%hD=bitcast i8**%d to i8***
%hE=load i8**,i8***%hD,align 8
store i8*null,i8**%d,align 8
%hF=load i8*,i8**%hE,align 8
%hG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hH=getelementptr inbounds i8,i8*%hG,i64 24
%hI=bitcast i8*%hH to i8**
%hJ=load i8*,i8**%hI,align 8
%hK=call fastcc i8*@_SMLLN17PolyTyElimination18compileFunRecbindsE_1516(i8*inreg%hF,i8*inreg%hJ)
store i8*%hK,i8**%c,align 8
%hL=call i8*@sml_alloc(i32 inreg 20)#0
%hM=getelementptr inbounds i8,i8*%hL,i64 -4
%hN=bitcast i8*%hM to i32*
store i32 1342177296,i32*%hN,align 4
%hO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%hP=bitcast i8*%hL to i8**
store i8*%hO,i8**%hP,align 8
%hQ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%hR=getelementptr inbounds i8,i8*%hL,i64 8
%hS=bitcast i8*%hR to i8**
store i8*%hQ,i8**%hS,align 8
%hT=getelementptr inbounds i8,i8*%hL,i64 16
%hU=bitcast i8*%hT to i32*
store i32 3,i32*%hU,align 4
%hV=call fastcc i8*@_SMLFN12TypedCalcCon9TPFUNDECLE(i8*inreg%hL)
store i8*%hV,i8**%c,align 8
%hW=bitcast i8*%hV to i8**
%hX=load i8*,i8**%hW,align 8
store i8*%hX,i8**%d,align 8
%hY=call i8*@sml_alloc(i32 inreg 20)#0
%hZ=getelementptr inbounds i8,i8*%hY,i64 -4
%h0=bitcast i8*%hZ to i32*
store i32 1342177296,i32*%h0,align 4
store i8*%hY,i8**%e,align 8
%h1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%h2=bitcast i8*%hY to i8**
store i8*%h1,i8**%h2,align 8
%h3=getelementptr inbounds i8,i8*%hY,i64 8
%h4=bitcast i8*%h3 to i8**
store i8*null,i8**%h4,align 8
%h5=getelementptr inbounds i8,i8*%hY,i64 16
%h6=bitcast i8*%h5 to i32*
store i32 3,i32*%h6,align 4
%h7=load i8*,i8**%c,align 8
%h8=getelementptr inbounds i8,i8*%h7,i64 8
%h9=bitcast i8*%h8 to i8**
%ia=load i8*,i8**%h9,align 8
store i8*%ia,i8**%c,align 8
%ib=call i8*@sml_alloc(i32 inreg 20)#0
%ic=getelementptr inbounds i8,i8*%ib,i64 -4
%id=bitcast i8*%ic to i32*
store i32 1342177296,i32*%id,align 4
%ie=load i8*,i8**%e,align 8
%if=bitcast i8*%ib to i8**
store i8*%ie,i8**%if,align 8
%ig=load i8*,i8**%c,align 8
%ih=getelementptr inbounds i8,i8*%ib,i64 8
%ii=bitcast i8*%ih to i8**
store i8*%ig,i8**%ii,align 8
%ij=getelementptr inbounds i8,i8*%ib,i64 16
%ik=bitcast i8*%ij to i32*
store i32 3,i32*%ik,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
br label%qq
il:
%im=bitcast i8**%d to i8***
%in=load i8**,i8***%im,align 8
store i8*null,i8**%d,align 8
%io=load i8*,i8**%in,align 8
%ip=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%iq=getelementptr inbounds i8,i8*%ip,i64 24
%ir=bitcast i8*%iq to i8**
%is=load i8*,i8**%ir,align 8
%it=call fastcc i8*@_SMLLN17PolyTyElimination18compileFunRecbindsE_1516(i8*inreg%io,i8*inreg%is)
store i8*%it,i8**%c,align 8
%iu=call i8*@sml_alloc(i32 inreg 36)#0
%iv=getelementptr inbounds i8,i8*%iu,i64 -4
%iw=bitcast i8*%iv to i32*
store i32 1342177312,i32*%iw,align 4
%ix=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%iy=bitcast i8*%iu to i8**
store i8*%ix,i8**%iy,align 8
%iz=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%iA=getelementptr inbounds i8,i8*%iu,i64 8
%iB=bitcast i8*%iA to i8**
store i8*%iz,i8**%iB,align 8
%iC=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%iD=getelementptr inbounds i8,i8*%iu,i64 16
%iE=bitcast i8*%iD to i8**
store i8*%iC,i8**%iE,align 8
%iF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%iG=getelementptr inbounds i8,i8*%iu,i64 24
%iH=bitcast i8*%iG to i8**
store i8*%iF,i8**%iH,align 8
%iI=getelementptr inbounds i8,i8*%iu,i64 32
%iJ=bitcast i8*%iI to i32*
store i32 15,i32*%iJ,align 4
%iK=call fastcc i8*@_SMLFN12TypedCalcCon13TPPOLYFUNDECLE(i8*inreg%iu)
store i8*%iK,i8**%c,align 8
%iL=bitcast i8*%iK to i8**
%iM=load i8*,i8**%iL,align 8
store i8*%iM,i8**%d,align 8
%iN=call i8*@sml_alloc(i32 inreg 20)#0
%iO=getelementptr inbounds i8,i8*%iN,i64 -4
%iP=bitcast i8*%iO to i32*
store i32 1342177296,i32*%iP,align 4
store i8*%iN,i8**%e,align 8
%iQ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%iR=bitcast i8*%iN to i8**
store i8*%iQ,i8**%iR,align 8
%iS=getelementptr inbounds i8,i8*%iN,i64 8
%iT=bitcast i8*%iS to i8**
store i8*null,i8**%iT,align 8
%iU=getelementptr inbounds i8,i8*%iN,i64 16
%iV=bitcast i8*%iU to i32*
store i32 3,i32*%iV,align 4
%iW=load i8*,i8**%c,align 8
%iX=getelementptr inbounds i8,i8*%iW,i64 8
%iY=bitcast i8*%iX to i8**
%iZ=load i8*,i8**%iY,align 8
store i8*%iZ,i8**%c,align 8
%i0=call i8*@sml_alloc(i32 inreg 20)#0
%i1=getelementptr inbounds i8,i8*%i0,i64 -4
%i2=bitcast i8*%i1 to i32*
store i32 1342177296,i32*%i2,align 4
%i3=load i8*,i8**%e,align 8
%i4=bitcast i8*%i0 to i8**
store i8*%i3,i8**%i4,align 8
%i5=load i8*,i8**%c,align 8
%i6=getelementptr inbounds i8,i8*%i0,i64 8
%i7=bitcast i8*%i6 to i8**
store i8*%i5,i8**%i7,align 8
%i8=getelementptr inbounds i8,i8*%i0,i64 16
%i9=bitcast i8*%i8 to i32*
store i32 3,i32*%i9,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
br label%qq
ja:
%jb=getelementptr inbounds i8,i8*%X,i64 8
%jc=bitcast i8*%jb to i8**
%jd=load i8*,i8**%jc,align 8
%je=getelementptr inbounds i8,i8*%jd,i64 8
%jf=bitcast i8*%je to i8**
%jg=load i8*,i8**%jf,align 8
store i8*%jg,i8**%e,align 8
%jh=bitcast i8*%jd to i8**
%ji=load i8*,i8**%jh,align 8
store i8*null,i8**%d,align 8
%jj=call fastcc i8*@_SMLLN17PolyTyElimination18compileFunRecbindsE_1516(i8*inreg%W,i8*inreg%ji)
store i8*%jj,i8**%c,align 8
%jk=call i8*@sml_alloc(i32 inreg 20)#0
%jl=getelementptr inbounds i8,i8*%jk,i64 -4
%jm=bitcast i8*%jl to i32*
store i32 1342177296,i32*%jm,align 4
%jn=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%jo=bitcast i8*%jk to i8**
store i8*%jn,i8**%jo,align 8
%jp=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%jq=getelementptr inbounds i8,i8*%jk,i64 8
%jr=bitcast i8*%jq to i8**
store i8*%jp,i8**%jr,align 8
%js=getelementptr inbounds i8,i8*%jk,i64 16
%jt=bitcast i8*%js to i32*
store i32 3,i32*%jt,align 4
%ju=call fastcc i8*@_SMLFN12TypedCalcCon9TPFUNDECLE(i8*inreg%jk)
store i8*%ju,i8**%c,align 8
%jv=bitcast i8*%ju to i8**
%jw=load i8*,i8**%jv,align 8
store i8*%jw,i8**%d,align 8
%jx=call i8*@sml_alloc(i32 inreg 20)#0
%jy=getelementptr inbounds i8,i8*%jx,i64 -4
%jz=bitcast i8*%jy to i32*
store i32 1342177296,i32*%jz,align 4
store i8*%jx,i8**%e,align 8
%jA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%jB=bitcast i8*%jx to i8**
store i8*%jA,i8**%jB,align 8
%jC=getelementptr inbounds i8,i8*%jx,i64 8
%jD=bitcast i8*%jC to i8**
store i8*null,i8**%jD,align 8
%jE=getelementptr inbounds i8,i8*%jx,i64 16
%jF=bitcast i8*%jE to i32*
store i32 3,i32*%jF,align 4
%jG=load i8*,i8**%c,align 8
%jH=getelementptr inbounds i8,i8*%jG,i64 8
%jI=bitcast i8*%jH to i8**
%jJ=load i8*,i8**%jI,align 8
store i8*%jJ,i8**%c,align 8
%jK=call i8*@sml_alloc(i32 inreg 20)#0
%jL=getelementptr inbounds i8,i8*%jK,i64 -4
%jM=bitcast i8*%jL to i32*
store i32 1342177296,i32*%jM,align 4
%jN=load i8*,i8**%e,align 8
%jO=bitcast i8*%jK to i8**
store i8*%jN,i8**%jO,align 8
%jP=load i8*,i8**%c,align 8
%jQ=getelementptr inbounds i8,i8*%jK,i64 8
%jR=bitcast i8*%jQ to i8**
store i8*%jP,i8**%jR,align 8
%jS=getelementptr inbounds i8,i8*%jK,i64 16
%jT=bitcast i8*%jS to i32*
store i32 3,i32*%jT,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
br label%qq
jU:
store i8*null,i8**%d,align 8
%jV=getelementptr inbounds i8,i8*%X,i64 8
%jW=bitcast i8*%jV to i8**
%jX=load i8*,i8**%jW,align 8
%jY=call fastcc i8*@_SMLFN12TypedCalcCon11TPEXTERNVARE(i8*inreg%jX)
store i8*%jY,i8**%c,align 8
%jZ=bitcast i8*%jY to i8**
%j0=load i8*,i8**%jZ,align 8
store i8*%j0,i8**%d,align 8
%j1=call i8*@sml_alloc(i32 inreg 20)#0
%j2=getelementptr inbounds i8,i8*%j1,i64 -4
%j3=bitcast i8*%j2 to i32*
store i32 1342177296,i32*%j3,align 4
store i8*%j1,i8**%e,align 8
%j4=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%j5=bitcast i8*%j1 to i8**
store i8*%j4,i8**%j5,align 8
%j6=getelementptr inbounds i8,i8*%j1,i64 8
%j7=bitcast i8*%j6 to i8**
store i8*null,i8**%j7,align 8
%j8=getelementptr inbounds i8,i8*%j1,i64 16
%j9=bitcast i8*%j8 to i32*
store i32 3,i32*%j9,align 4
%ka=load i8*,i8**%c,align 8
%kb=getelementptr inbounds i8,i8*%ka,i64 8
%kc=bitcast i8*%kb to i8**
%kd=load i8*,i8**%kc,align 8
store i8*%kd,i8**%c,align 8
%ke=call i8*@sml_alloc(i32 inreg 20)#0
%kf=getelementptr inbounds i8,i8*%ke,i64 -4
%kg=bitcast i8*%kf to i32*
store i32 1342177296,i32*%kg,align 4
%kh=load i8*,i8**%e,align 8
%ki=bitcast i8*%ke to i8**
store i8*%kh,i8**%ki,align 8
%kj=load i8*,i8**%c,align 8
%kk=getelementptr inbounds i8,i8*%ke,i64 8
%kl=bitcast i8*%kk to i8**
store i8*%kj,i8**%kl,align 8
%km=getelementptr inbounds i8,i8*%ke,i64 16
%kn=bitcast i8*%km to i32*
store i32 3,i32*%kn,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
br label%qq
ko:
store i8*null,i8**%d,align 8
%kp=getelementptr inbounds i8,i8*%X,i64 8
%kq=bitcast i8*%kp to i8**
%kr=load i8*,i8**%kq,align 8
%ks=call fastcc i8*@_SMLFN12TypedCalcCon12TPBUILTINEXNE(i8*inreg%kr)
store i8*%ks,i8**%c,align 8
%kt=bitcast i8*%ks to i8**
%ku=load i8*,i8**%kt,align 8
store i8*%ku,i8**%d,align 8
%kv=call i8*@sml_alloc(i32 inreg 20)#0
%kw=getelementptr inbounds i8,i8*%kv,i64 -4
%kx=bitcast i8*%kw to i32*
store i32 1342177296,i32*%kx,align 4
store i8*%kv,i8**%e,align 8
%ky=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%kz=bitcast i8*%kv to i8**
store i8*%ky,i8**%kz,align 8
%kA=getelementptr inbounds i8,i8*%kv,i64 8
%kB=bitcast i8*%kA to i8**
store i8*null,i8**%kB,align 8
%kC=getelementptr inbounds i8,i8*%kv,i64 16
%kD=bitcast i8*%kC to i32*
store i32 3,i32*%kD,align 4
%kE=load i8*,i8**%c,align 8
%kF=getelementptr inbounds i8,i8*%kE,i64 8
%kG=bitcast i8*%kF to i8**
%kH=load i8*,i8**%kG,align 8
store i8*%kH,i8**%c,align 8
%kI=call i8*@sml_alloc(i32 inreg 20)#0
%kJ=getelementptr inbounds i8,i8*%kI,i64 -4
%kK=bitcast i8*%kJ to i32*
store i32 1342177296,i32*%kK,align 4
%kL=load i8*,i8**%e,align 8
%kM=bitcast i8*%kI to i8**
store i8*%kL,i8**%kM,align 8
%kN=load i8*,i8**%c,align 8
%kO=getelementptr inbounds i8,i8*%kI,i64 8
%kP=bitcast i8*%kO to i8**
store i8*%kN,i8**%kP,align 8
%kQ=getelementptr inbounds i8,i8*%kI,i64 16
%kR=bitcast i8*%kQ to i32*
store i32 3,i32*%kR,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
br label%qq
kS:
store i8*null,i8**%d,align 8
%kT=getelementptr inbounds i8,i8*%X,i64 8
%kU=bitcast i8*%kT to i8**
%kV=load i8*,i8**%kU,align 8
%kW=call fastcc i8*@_SMLFN12TypedCalcCon11TPEXTERNEXNE(i8*inreg%kV)
store i8*%kW,i8**%c,align 8
%kX=bitcast i8*%kW to i8**
%kY=load i8*,i8**%kX,align 8
store i8*%kY,i8**%d,align 8
%kZ=call i8*@sml_alloc(i32 inreg 20)#0
%k0=getelementptr inbounds i8,i8*%kZ,i64 -4
%k1=bitcast i8*%k0 to i32*
store i32 1342177296,i32*%k1,align 4
store i8*%kZ,i8**%e,align 8
%k2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%k3=bitcast i8*%kZ to i8**
store i8*%k2,i8**%k3,align 8
%k4=getelementptr inbounds i8,i8*%kZ,i64 8
%k5=bitcast i8*%k4 to i8**
store i8*null,i8**%k5,align 8
%k6=getelementptr inbounds i8,i8*%kZ,i64 16
%k7=bitcast i8*%k6 to i32*
store i32 3,i32*%k7,align 4
%k8=load i8*,i8**%c,align 8
%k9=getelementptr inbounds i8,i8*%k8,i64 8
%la=bitcast i8*%k9 to i8**
%lb=load i8*,i8**%la,align 8
store i8*%lb,i8**%c,align 8
%lc=call i8*@sml_alloc(i32 inreg 20)#0
%ld=getelementptr inbounds i8,i8*%lc,i64 -4
%le=bitcast i8*%ld to i32*
store i32 1342177296,i32*%le,align 4
%lf=load i8*,i8**%e,align 8
%lg=bitcast i8*%lc to i8**
store i8*%lf,i8**%lg,align 8
%lh=load i8*,i8**%c,align 8
%li=getelementptr inbounds i8,i8*%lc,i64 8
%lj=bitcast i8*%li to i8**
store i8*%lh,i8**%lj,align 8
%lk=getelementptr inbounds i8,i8*%lc,i64 16
%ll=bitcast i8*%lk to i32*
store i32 3,i32*%ll,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
br label%qq
lm:
%ln=getelementptr inbounds i8,i8*%X,i64 8
%lo=bitcast i8*%ln to i8**
%lp=load i8*,i8**%lo,align 8
%lq=getelementptr inbounds i8,i8*%lp,i64 8
%lr=bitcast i8*%lq to i8**
%ls=load i8*,i8**%lr,align 8
store i8*%ls,i8**%e,align 8
%lt=bitcast i8*%lp to i8**
%lu=load i8*,i8**%lt,align 8
store i8*null,i8**%d,align 8
%lv=call fastcc i8*@_SMLLN17PolyTyElimination10compileExpE_1510(i8*inreg%W,i8*inreg%lu)
store i8*%lv,i8**%c,align 8
%lw=call i8*@sml_alloc(i32 inreg 20)#0
%lx=getelementptr inbounds i8,i8*%lw,i64 -4
%ly=bitcast i8*%lx to i32*
store i32 1342177296,i32*%ly,align 4
%lz=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%lA=bitcast i8*%lw to i8**
store i8*%lz,i8**%lA,align 8
%lB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%lC=getelementptr inbounds i8,i8*%lw,i64 8
%lD=bitcast i8*%lC to i8**
store i8*%lB,i8**%lD,align 8
%lE=getelementptr inbounds i8,i8*%lw,i64 16
%lF=bitcast i8*%lE to i32*
store i32 3,i32*%lF,align 4
%lG=call fastcc i8*@_SMLFN12TypedCalcCon11TPEXPORTVARE(i8*inreg%lw)
store i8*%lG,i8**%c,align 8
%lH=bitcast i8*%lG to i8**
%lI=load i8*,i8**%lH,align 8
store i8*%lI,i8**%d,align 8
%lJ=call i8*@sml_alloc(i32 inreg 20)#0
%lK=getelementptr inbounds i8,i8*%lJ,i64 -4
%lL=bitcast i8*%lK to i32*
store i32 1342177296,i32*%lL,align 4
store i8*%lJ,i8**%e,align 8
%lM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%lN=bitcast i8*%lJ to i8**
store i8*%lM,i8**%lN,align 8
%lO=getelementptr inbounds i8,i8*%lJ,i64 8
%lP=bitcast i8*%lO to i8**
store i8*null,i8**%lP,align 8
%lQ=getelementptr inbounds i8,i8*%lJ,i64 16
%lR=bitcast i8*%lQ to i32*
store i32 3,i32*%lR,align 4
%lS=load i8*,i8**%c,align 8
%lT=getelementptr inbounds i8,i8*%lS,i64 8
%lU=bitcast i8*%lT to i8**
%lV=load i8*,i8**%lU,align 8
store i8*%lV,i8**%c,align 8
%lW=call i8*@sml_alloc(i32 inreg 20)#0
%lX=getelementptr inbounds i8,i8*%lW,i64 -4
%lY=bitcast i8*%lX to i32*
store i32 1342177296,i32*%lY,align 4
%lZ=load i8*,i8**%e,align 8
%l0=bitcast i8*%lW to i8**
store i8*%lZ,i8**%l0,align 8
%l1=load i8*,i8**%c,align 8
%l2=getelementptr inbounds i8,i8*%lW,i64 8
%l3=bitcast i8*%l2 to i8**
store i8*%l1,i8**%l3,align 8
%l4=getelementptr inbounds i8,i8*%lW,i64 16
%l5=bitcast i8*%l4 to i32*
store i32 3,i32*%l5,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
br label%qq
l6:
store i8*null,i8**%d,align 8
%l7=getelementptr inbounds i8,i8*%X,i64 8
%l8=bitcast i8*%l7 to i8**
%l9=load i8*,i8**%l8,align 8
%ma=call fastcc i8*@_SMLFN12TypedCalcCon11TPEXPORTEXNE(i8*inreg%l9)
store i8*%ma,i8**%c,align 8
%mb=bitcast i8*%ma to i8**
%mc=load i8*,i8**%mb,align 8
store i8*%mc,i8**%d,align 8
%md=call i8*@sml_alloc(i32 inreg 20)#0
%me=getelementptr inbounds i8,i8*%md,i64 -4
%mf=bitcast i8*%me to i32*
store i32 1342177296,i32*%mf,align 4
store i8*%md,i8**%e,align 8
%mg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%mh=bitcast i8*%md to i8**
store i8*%mg,i8**%mh,align 8
%mi=getelementptr inbounds i8,i8*%md,i64 8
%mj=bitcast i8*%mi to i8**
store i8*null,i8**%mj,align 8
%mk=getelementptr inbounds i8,i8*%md,i64 16
%ml=bitcast i8*%mk to i32*
store i32 3,i32*%ml,align 4
%mm=load i8*,i8**%c,align 8
%mn=getelementptr inbounds i8,i8*%mm,i64 8
%mo=bitcast i8*%mn to i8**
%mp=load i8*,i8**%mo,align 8
store i8*%mp,i8**%c,align 8
%mq=call i8*@sml_alloc(i32 inreg 20)#0
%mr=getelementptr inbounds i8,i8*%mq,i64 -4
%ms=bitcast i8*%mr to i32*
store i32 1342177296,i32*%ms,align 4
%mt=load i8*,i8**%e,align 8
%mu=bitcast i8*%mq to i8**
store i8*%mt,i8**%mu,align 8
%mv=load i8*,i8**%c,align 8
%mw=getelementptr inbounds i8,i8*%mq,i64 8
%mx=bitcast i8*%mw to i8**
store i8*%mv,i8**%mx,align 8
%my=getelementptr inbounds i8,i8*%mq,i64 16
%mz=bitcast i8*%my to i32*
store i32 3,i32*%mz,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
br label%qq
mA:
%mB=getelementptr inbounds i8,i8*%X,i64 8
%mC=bitcast i8*%mB to i8**
%mD=load i8*,i8**%mC,align 8
store i8*%mD,i8**%e,align 8
%mE=getelementptr inbounds i8,i8*%mD,i64 8
%mF=bitcast i8*%mE to i8**
%mG=load i8*,i8**%mF,align 8
store i8*%mG,i8**%f,align 8
%mH=bitcast i8*%mD to i8***
%mI=load i8**,i8***%mH,align 8
%mJ=load i8*,i8**%mI,align 8
%mK=bitcast i8*%mJ to i32*
%mL=load i32,i32*%mK,align 4
%mM=getelementptr inbounds i8,i8*%mJ,i64 8
%mN=bitcast i8*%mM to i8**
%mO=load i8*,i8**%mN,align 8
store i8*%mO,i8**%g,align 8
%mP=load i8**,i8***%mH,align 8
%mQ=load i8*,i8**%mP,align 8
%mR=getelementptr inbounds i8,i8*%mQ,i64 16
%mS=bitcast i8*%mR to i8**
%mT=load i8*,i8**%mS,align 8
%mU=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%W,i8*inreg%mT)
store i8*%mU,i8**%h,align 8
%mV=call i8*@sml_alloc(i32 inreg 28)#0
%mW=getelementptr inbounds i8,i8*%mV,i64 -4
%mX=bitcast i8*%mW to i32*
store i32 1342177304,i32*%mX,align 4
store i8*%mV,i8**%c,align 8
%mY=getelementptr inbounds i8,i8*%mV,i64 4
%mZ=bitcast i8*%mY to i32*
store i32 0,i32*%mZ,align 1
%m0=bitcast i8*%mV to i32*
store i32%mL,i32*%m0,align 4
%m1=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%m2=getelementptr inbounds i8,i8*%mV,i64 8
%m3=bitcast i8*%m2 to i8**
store i8*%m1,i8**%m3,align 8
%m4=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%m5=getelementptr inbounds i8,i8*%mV,i64 16
%m6=bitcast i8*%m5 to i8**
store i8*%m4,i8**%m6,align 8
%m7=getelementptr inbounds i8,i8*%mV,i64 24
%m8=bitcast i8*%m7 to i32*
store i32 6,i32*%m8,align 4
%m9=call fastcc i8*@_SMLFN5VarID3Map4findE(i32 inreg 1,i32 inreg 8)
%na=getelementptr inbounds i8,i8*%m9,i64 16
%nb=bitcast i8*%na to i8*(i8*,i8*)**
%nc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nb,align 8
%nd=bitcast i8*%m9 to i8**
%ne=load i8*,i8**%nd,align 8
store i8*%ne,i8**%g,align 8
%nf=load i8*,i8**%d,align 8
%ng=getelementptr inbounds i8,i8*%nf,i64 8
%nh=bitcast i8*%ng to i8**
%ni=load i8*,i8**%nh,align 8
%nj=getelementptr inbounds i8,i8*%ni,i64 32
%nk=bitcast i8*%nj to i8**
%nl=load i8*,i8**%nk,align 8
store i8*%nl,i8**%d,align 8
%nm=bitcast i8**%e to i8***
%nn=load i8**,i8***%nm,align 8
%no=load i8*,i8**%nn,align 8
%np=getelementptr inbounds i8,i8*%no,i64 8
%nq=bitcast i8*%np to i32**
%nr=load i32*,i32**%nq,align 8
%ns=load i32,i32*%nr,align 4
%nt=call i8*@sml_alloc(i32 inreg 20)#0
%nu=getelementptr inbounds i8,i8*%nt,i64 -4
%nv=bitcast i8*%nu to i32*
store i32 1342177296,i32*%nv,align 4
%nw=getelementptr inbounds i8,i8*%nt,i64 12
%nx=bitcast i8*%nw to i32*
store i32 0,i32*%nx,align 1
%ny=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%nz=bitcast i8*%nt to i8**
store i8*%ny,i8**%nz,align 8
%nA=getelementptr inbounds i8,i8*%nt,i64 8
%nB=bitcast i8*%nA to i32*
store i32%ns,i32*%nB,align 4
%nC=getelementptr inbounds i8,i8*%nt,i64 16
%nD=bitcast i8*%nC to i32*
store i32 1,i32*%nD,align 4
%nE=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%nF=call fastcc i8*%nc(i8*inreg%nE,i8*inreg%nt)
%nG=icmp eq i8*%nF,null
br i1%nG,label%nH,label%n3
nH:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%nI=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%nI,i8**%c,align 8
%nJ=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dg,i64 0,i32 2)to i8*))
store i8*%nJ,i8**%d,align 8
%nK=call i8*@sml_alloc(i32 inreg 28)#0
%nL=getelementptr inbounds i8,i8*%nK,i64 -4
%nM=bitcast i8*%nL to i32*
store i32 1342177304,i32*%nM,align 4
store i8*%nK,i8**%e,align 8
%nN=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%nO=bitcast i8*%nK to i8**
store i8*%nN,i8**%nO,align 8
%nP=getelementptr inbounds i8,i8*%nK,i64 8
%nQ=bitcast i8*%nP to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%nQ,align 8
%nR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%nS=getelementptr inbounds i8,i8*%nK,i64 16
%nT=bitcast i8*%nS to i8**
store i8*%nR,i8**%nT,align 8
%nU=getelementptr inbounds i8,i8*%nK,i64 24
%nV=bitcast i8*%nU to i32*
store i32 7,i32*%nV,align 4
%nW=call i8*@sml_alloc(i32 inreg 60)#0
%nX=getelementptr inbounds i8,i8*%nW,i64 -4
%nY=bitcast i8*%nX to i32*
store i32 1342177336,i32*%nY,align 4
%nZ=getelementptr inbounds i8,i8*%nW,i64 56
%n0=bitcast i8*%nZ to i32*
store i32 1,i32*%n0,align 4
%n1=load i8*,i8**%e,align 8
%n2=bitcast i8*%nW to i8**
store i8*%n1,i8**%n2,align 8
call void@sml_raise(i8*inreg%nW)#1
unreachable
n3:
%n4=bitcast i8*%nF to i8**
%n5=load i8*,i8**%n4,align 8
%n6=load i8**,i8***%nm,align 8
%n7=load i8*,i8**%n6,align 8
%n8=getelementptr inbounds i8,i8*%n7,i64 8
%n9=bitcast i8*%n8 to i8**
%oa=load i8*,i8**%n9,align 8
%ob=bitcast i8*%oa to i32*
%oc=load i32,i32*%ob,align 4
%od=getelementptr inbounds i8,i8*%oa,i64 4
%oe=bitcast i8*%od to i32*
%of=load i32,i32*%oe,align 4
%og=getelementptr inbounds i8,i8*%oa,i64 8
%oh=bitcast i8*%og to i8**
%oi=load i8*,i8**%oh,align 8
store i8*%oi,i8**%d,align 8
%oj=getelementptr inbounds i8,i8*%n5,i64 16
%ok=bitcast i8*%oj to i8**
%ol=load i8*,i8**%ok,align 8
store i8*%ol,i8**%e,align 8
%om=call i8*@sml_alloc(i32 inreg 28)#0
%on=bitcast i8*%om to i32*
%oo=getelementptr inbounds i8,i8*%om,i64 -4
%op=bitcast i8*%oo to i32*
store i32 1342177304,i32*%op,align 4
store i32%oc,i32*%on,align 4
%oq=getelementptr inbounds i8,i8*%om,i64 4
%or=bitcast i8*%oq to i32*
store i32%of,i32*%or,align 4
%os=load i8*,i8**%d,align 8
%ot=getelementptr inbounds i8,i8*%om,i64 8
%ou=bitcast i8*%ot to i8**
store i8*%os,i8**%ou,align 8
%ov=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ow=getelementptr inbounds i8,i8*%om,i64 16
%ox=bitcast i8*%ow to i8**
store i8*%ov,i8**%ox,align 8
%oy=getelementptr inbounds i8,i8*%om,i64 24
%oz=bitcast i8*%oy to i32*
store i32 6,i32*%oz,align 4
store i8*%om,i8**%d,align 8
%oA=call i8*@sml_alloc(i32 inreg 20)#0
%oB=getelementptr inbounds i8,i8*%oA,i64 -4
%oC=bitcast i8*%oB to i32*
store i32 1342177296,i32*%oC,align 4
store i8*%oA,i8**%e,align 8
%oD=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%oE=bitcast i8*%oA to i8**
store i8*%oD,i8**%oE,align 8
%oF=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%oG=getelementptr inbounds i8,i8*%oA,i64 8
%oH=bitcast i8*%oG to i8**
store i8*%oF,i8**%oH,align 8
%oI=getelementptr inbounds i8,i8*%oA,i64 16
%oJ=bitcast i8*%oI to i32*
store i32 3,i32*%oJ,align 4
%oK=call i8*@sml_alloc(i32 inreg 20)#0
%oL=getelementptr inbounds i8,i8*%oK,i64 -4
%oM=bitcast i8*%oL to i32*
store i32 1342177296,i32*%oM,align 4
%oN=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%oO=bitcast i8*%oK to i8**
store i8*%oN,i8**%oO,align 8
%oP=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%oQ=getelementptr inbounds i8,i8*%oK,i64 8
%oR=bitcast i8*%oQ to i8**
store i8*%oP,i8**%oR,align 8
%oS=getelementptr inbounds i8,i8*%oK,i64 16
%oT=bitcast i8*%oS to i32*
store i32 3,i32*%oT,align 4
%oU=call fastcc i8*@_SMLFN12TypedCalcCon9TPEXNTAGDE(i8*inreg%oK)
store i8*%oU,i8**%c,align 8
%oV=bitcast i8*%oU to i8**
%oW=load i8*,i8**%oV,align 8
store i8*%oW,i8**%d,align 8
%oX=call i8*@sml_alloc(i32 inreg 20)#0
%oY=getelementptr inbounds i8,i8*%oX,i64 -4
%oZ=bitcast i8*%oY to i32*
store i32 1342177296,i32*%oZ,align 4
store i8*%oX,i8**%e,align 8
%o0=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o1=bitcast i8*%oX to i8**
store i8*%o0,i8**%o1,align 8
%o2=getelementptr inbounds i8,i8*%oX,i64 8
%o3=bitcast i8*%o2 to i8**
store i8*null,i8**%o3,align 8
%o4=getelementptr inbounds i8,i8*%oX,i64 16
%o5=bitcast i8*%o4 to i32*
store i32 3,i32*%o5,align 4
%o6=load i8*,i8**%c,align 8
%o7=getelementptr inbounds i8,i8*%o6,i64 8
%o8=bitcast i8*%o7 to i8**
%o9=load i8*,i8**%o8,align 8
store i8*%o9,i8**%c,align 8
%pa=call i8*@sml_alloc(i32 inreg 20)#0
%pb=getelementptr inbounds i8,i8*%pa,i64 -4
%pc=bitcast i8*%pb to i32*
store i32 1342177296,i32*%pc,align 4
%pd=load i8*,i8**%e,align 8
%pe=bitcast i8*%pa to i8**
store i8*%pd,i8**%pe,align 8
%pf=load i8*,i8**%c,align 8
%pg=getelementptr inbounds i8,i8*%pa,i64 8
%ph=bitcast i8*%pg to i8**
store i8*%pf,i8**%ph,align 8
%pi=getelementptr inbounds i8,i8*%pa,i64 16
%pj=bitcast i8*%pi to i32*
store i32 3,i32*%pj,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
br label%qq
pk:
%pl=getelementptr inbounds i8,i8*%X,i64 8
%pm=bitcast i8*%pl to i8**
%pn=load i8*,i8**%pm,align 8
%po=getelementptr inbounds i8,i8*%pn,i64 8
%pp=bitcast i8*%po to i8**
%pq=load i8*,i8**%pp,align 8
store i8*%pq,i8**%e,align 8
%pr=bitcast i8*%pn to i8**
%ps=load i8*,i8**%pr,align 8
%pt=bitcast i8*%ps to i32*
%pu=load i32,i32*%pt,align 4
%pv=getelementptr inbounds i8,i8*%ps,i64 8
%pw=bitcast i8*%pv to i8**
%px=load i8*,i8**%pw,align 8
store i8*%px,i8**%f,align 8
%py=load i8*,i8**%pr,align 8
%pz=getelementptr inbounds i8,i8*%py,i64 16
%pA=bitcast i8*%pz to i8**
%pB=load i8*,i8**%pA,align 8
store i8*null,i8**%d,align 8
%pC=call fastcc i8*@_SMLLN17PolyTyElimination9compileTyE_1322(i8*inreg%W,i8*inreg%pB)
store i8*%pC,i8**%d,align 8
%pD=call i8*@sml_alloc(i32 inreg 28)#0
%pE=getelementptr inbounds i8,i8*%pD,i64 -4
%pF=bitcast i8*%pE to i32*
store i32 1342177304,i32*%pF,align 4
store i8*%pD,i8**%c,align 8
%pG=getelementptr inbounds i8,i8*%pD,i64 4
%pH=bitcast i8*%pG to i32*
store i32 0,i32*%pH,align 1
%pI=bitcast i8*%pD to i32*
store i32%pu,i32*%pI,align 4
%pJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%pK=getelementptr inbounds i8,i8*%pD,i64 8
%pL=bitcast i8*%pK to i8**
store i8*%pJ,i8**%pL,align 8
%pM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%pN=getelementptr inbounds i8,i8*%pD,i64 16
%pO=bitcast i8*%pN to i8**
store i8*%pM,i8**%pO,align 8
%pP=getelementptr inbounds i8,i8*%pD,i64 24
%pQ=bitcast i8*%pP to i32*
store i32 6,i32*%pQ,align 4
%pR=call i8*@sml_alloc(i32 inreg 20)#0
%pS=getelementptr inbounds i8,i8*%pR,i64 -4
%pT=bitcast i8*%pS to i32*
store i32 1342177296,i32*%pT,align 4
%pU=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%pV=bitcast i8*%pR to i8**
store i8*%pU,i8**%pV,align 8
%pW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%pX=getelementptr inbounds i8,i8*%pR,i64 8
%pY=bitcast i8*%pX to i8**
store i8*%pW,i8**%pY,align 8
%pZ=getelementptr inbounds i8,i8*%pR,i64 16
%p0=bitcast i8*%pZ to i32*
store i32 3,i32*%p0,align 4
%p1=call fastcc i8*@_SMLFN12TypedCalcCon5TPEXDE(i8*inreg%pR)
%p2=bitcast i8*%p1 to i8**
%p3=load i8*,i8**%p2,align 8
store i8*%p3,i8**%c,align 8
%p4=getelementptr inbounds i8,i8*%p1,i64 8
%p5=bitcast i8*%p4 to i8**
%p6=load i8*,i8**%p5,align 8
store i8*%p6,i8**%d,align 8
%p7=call i8*@sml_alloc(i32 inreg 20)#0
%p8=getelementptr inbounds i8,i8*%p7,i64 -4
%p9=bitcast i8*%p8 to i32*
store i32 1342177296,i32*%p9,align 4
store i8*%p7,i8**%e,align 8
%qa=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%qb=bitcast i8*%p7 to i8**
store i8*%qa,i8**%qb,align 8
%qc=getelementptr inbounds i8,i8*%p7,i64 8
%qd=bitcast i8*%qc to i8**
store i8*null,i8**%qd,align 8
%qe=getelementptr inbounds i8,i8*%p7,i64 16
%qf=bitcast i8*%qe to i32*
store i32 3,i32*%qf,align 4
%qg=call i8*@sml_alloc(i32 inreg 20)#0
%qh=getelementptr inbounds i8,i8*%qg,i64 -4
%qi=bitcast i8*%qh to i32*
store i32 1342177296,i32*%qi,align 4
%qj=load i8*,i8**%e,align 8
%qk=bitcast i8*%qg to i8**
store i8*%qj,i8**%qk,align 8
%ql=load i8*,i8**%d,align 8
%qm=getelementptr inbounds i8,i8*%qg,i64 8
%qn=bitcast i8*%qm to i8**
store i8*%ql,i8**%qn,align 8
%qo=getelementptr inbounds i8,i8*%qg,i64 16
%qp=bitcast i8*%qo to i32*
store i32 3,i32*%qp,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
br label%qq
qq:
%qr=phi i8*[%a2,%as],[%cz,%bV],[%ds,%cT],[%eh,%dC],[%fL,%er],[%hi,%gE],[%ib,%hC],[%i0,%il],[%jK,%ja],[%ke,%jU],[%kI,%ko],[%lc,%kS],[%lW,%lm],[%mq,%l6],[%pa,%n3],[%qg,%pk]
%qs=bitcast i8*%qr to i8**
%qt=load i8*,i8**%qs,align 8
store i8*%qt,i8**%i,align 8
%qu=load i8*,i8**%k,align 8
%qv=bitcast i8*%qu to i32*
%qw=load i32,i32*%qv,align 4
%qx=getelementptr inbounds i8,i8*%qu,i64 8
%qy=bitcast i8*%qx to i8**
%qz=load i8*,i8**%qy,align 8
store i8*%qz,i8**%l,align 8
%qA=getelementptr inbounds i8,i8*%qr,i64 8
%qB=bitcast i8*%qA to i8**
%qC=load i8*,i8**%qB,align 8
store i8*%qC,i8**%m,align 8
%qD=call i8*@sml_alloc(i32 inreg 20)#0
%qE=getelementptr inbounds i8,i8*%qD,i64 -4
%qF=bitcast i8*%qE to i32*
store i32 1342177296,i32*%qF,align 4
%qG=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%qH=bitcast i8*%qD to i8**
store i8*%qG,i8**%qH,align 8
%qI=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%qJ=getelementptr inbounds i8,i8*%qD,i64 8
%qK=bitcast i8*%qJ to i8**
store i8*%qI,i8**%qK,align 8
%qL=getelementptr inbounds i8,i8*%qD,i64 16
%qM=bitcast i8*%qL to i32*
store i32 3,i32*%qM,align 4
%qN=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%qD)
store i8*%qN,i8**%l,align 8
%qO=load i8*,i8**%k,align 8
%qP=getelementptr inbounds i8,i8*%qO,i64 16
%qQ=bitcast i8*%qP to i8**
%qR=load i8*,i8**%qQ,align 8
store i8*%qR,i8**%m,align 8
%qS=getelementptr inbounds i8,i8*%qO,i64 24
%qT=bitcast i8*%qS to i8**
%qU=load i8*,i8**%qT,align 8
store i8*%qU,i8**%k,align 8
%qV=call i8*@sml_alloc(i32 inreg 36)#0
%qW=bitcast i8*%qV to i32*
%qX=getelementptr inbounds i8,i8*%qV,i64 -4
%qY=bitcast i8*%qX to i32*
store i32 1342177312,i32*%qY,align 4
%qZ=getelementptr inbounds i8,i8*%qV,i64 4
%q0=bitcast i8*%qZ to i32*
store i32 0,i32*%q0,align 1
store i32%qw,i32*%qW,align 4
%q1=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%q2=getelementptr inbounds i8,i8*%qV,i64 8
%q3=bitcast i8*%q2 to i8**
store i8*%q1,i8**%q3,align 8
%q4=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%q5=getelementptr inbounds i8,i8*%qV,i64 16
%q6=bitcast i8*%q5 to i8**
store i8*%q4,i8**%q6,align 8
%q7=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%q8=getelementptr inbounds i8,i8*%qV,i64 24
%q9=bitcast i8*%q8 to i8**
store i8*%q7,i8**%q9,align 8
%ra=getelementptr inbounds i8,i8*%qV,i64 32
%rb=bitcast i8*%ra to i32*
store i32 14,i32*%rb,align 4
%rc=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%rd=getelementptr inbounds i8,i8*%rc,i64 8
%re=bitcast i8*%rd to i8**
%rf=load i8*,i8**%re,align 8
%rg=call fastcc i8*@_SMLLN17PolyTyElimination15compileDeclListE_1513(i8*inreg%qV,i8*inreg%rf)
%rh=bitcast i8*%rg to i8**
%ri=load i8*,i8**%rh,align 8
store i8*%ri,i8**%j,align 8
%rj=getelementptr inbounds i8,i8*%rg,i64 8
%rk=bitcast i8*%rj to i8**
%rl=load i8*,i8**%rk,align 8
store i8*%rl,i8**%k,align 8
%rm=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%rn=getelementptr inbounds i8,i8*%rm,i64 16
%ro=bitcast i8*%rn to i8*(i8*,i8*)**
%rp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ro,align 8
%rq=bitcast i8*%rm to i8**
%rr=load i8*,i8**%rq,align 8
store i8*%rr,i8**%l,align 8
%rs=call i8*@sml_alloc(i32 inreg 20)#0
%rt=getelementptr inbounds i8,i8*%rs,i64 -4
%ru=bitcast i8*%rt to i32*
store i32 1342177296,i32*%ru,align 4
%rv=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%rw=bitcast i8*%rs to i8**
store i8*%rv,i8**%rw,align 8
%rx=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ry=getelementptr inbounds i8,i8*%rs,i64 8
%rz=bitcast i8*%ry to i8**
store i8*%rx,i8**%rz,align 8
%rA=getelementptr inbounds i8,i8*%rs,i64 16
%rB=bitcast i8*%rA to i32*
store i32 3,i32*%rB,align 4
%rC=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%rD=call fastcc i8*%rp(i8*inreg%rC,i8*inreg%rs)
store i8*%rD,i8**%i,align 8
%rE=call i8*@sml_alloc(i32 inreg 20)#0
%rF=getelementptr inbounds i8,i8*%rE,i64 -4
%rG=bitcast i8*%rF to i32*
store i32 1342177296,i32*%rG,align 4
%rH=load i8*,i8**%i,align 8
%rI=bitcast i8*%rE to i8**
store i8*%rH,i8**%rI,align 8
%rJ=load i8*,i8**%k,align 8
%rK=getelementptr inbounds i8,i8*%rE,i64 8
%rL=bitcast i8*%rK to i8**
store i8*%rJ,i8**%rL,align 8
%rM=getelementptr inbounds i8,i8*%rE,i64 16
%rN=bitcast i8*%rM to i32*
store i32 3,i32*%rN,align 4
ret i8*%rE
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15compileRecbindsE_1515(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=call i8*@sml_alloc(i32 inreg 12)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177288,i32*%t,align 4
store i8*%r,i8**%f,align 8
%u=load i8*,i8**%d,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL8recbinds_1649 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL8recbinds_1649 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
%J=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%K=call fastcc i8*%o(i8*inreg%J,i8*inreg%y)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=call fastcc i8*%N(i8*inreg%P,i8*inreg%Q)
store i8*%R,i8**%c,align 8
%S=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
%Y=call fastcc i8*%V(i8*inreg%X,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@di,i64 0,i32 2)to i8*))
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
%ae=load i8*,i8**%c,align 8
%af=call fastcc i8*%ab(i8*inreg%ad,i8*inreg%ae)
%ag=bitcast i8**%d to i32**
%ah=load i32*,i32**%ag,align 8
%ai=load i32,i32*%ah,align 4
%aj=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%af)
store i8*%aj,i8**%e,align 8
%ak=load i8*,i8**%d,align 8
%al=getelementptr inbounds i8,i8*%ak,i64 8
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%f,align 8
%ao=call i8*@sml_alloc(i32 inreg 20)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177296,i32*%aq,align 4
%ar=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%au=getelementptr inbounds i8,i8*%ao,i64 8
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ao,i64 16
%ax=bitcast i8*%aw to i32*
store i32 3,i32*%ax,align 4
%ay=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%ao)
store i8*%ay,i8**%e,align 8
%az=load i8*,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8**
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%f,align 8
store i8*null,i8**%d,align 8
%aD=getelementptr inbounds i8,i8*%az,i64 24
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
store i8*%aF,i8**%g,align 8
%aG=call i8*@sml_alloc(i32 inreg 36)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177312,i32*%aI,align 4
store i8*%aG,i8**%d,align 8
%aJ=getelementptr inbounds i8,i8*%aG,i64 4
%aK=bitcast i8*%aJ to i32*
store i32 0,i32*%aK,align 1
%aL=bitcast i8*%aG to i32*
store i32%ai,i32*%aL,align 4
%aM=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aN=getelementptr inbounds i8,i8*%aG,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aQ=getelementptr inbounds i8,i8*%aG,i64 16
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aT=getelementptr inbounds i8,i8*%aG,i64 24
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aG,i64 32
%aW=bitcast i8*%aV to i32*
store i32 14,i32*%aW,align 4
%aX=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aY=getelementptr inbounds i8,i8*%aX,i64 16
%aZ=bitcast i8*%aY to i8*(i8*,i8*)**
%a0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aZ,align 8
%a1=bitcast i8*%aX to i8**
%a2=load i8*,i8**%a1,align 8
store i8*%a2,i8**%e,align 8
%a3=call i8*@sml_alloc(i32 inreg 12)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177288,i32*%a5,align 4
store i8*%a3,i8**%f,align 8
%a6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%a3,i64 8
%a9=bitcast i8*%a8 to i32*
store i32 1,i32*%a9,align 4
%ba=call i8*@sml_alloc(i32 inreg 28)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177304,i32*%bc,align 4
%bd=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%be=bitcast i8*%ba to i8**
store i8*%bd,i8**%be,align 8
%bf=getelementptr inbounds i8,i8*%ba,i64 8
%bg=bitcast i8*%bf to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15compileRecbindsE_1652 to void(...)*),void(...)**%bg,align 8
%bh=getelementptr inbounds i8,i8*%ba,i64 16
%bi=bitcast i8*%bh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination15compileRecbindsE_1652 to void(...)*),void(...)**%bi,align 8
%bj=getelementptr inbounds i8,i8*%ba,i64 24
%bk=bitcast i8*%bj to i32*
store i32 -2147483647,i32*%bk,align 4
%bl=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bm=call fastcc i8*%a0(i8*inreg%bl,i8*inreg%ba)
%bn=getelementptr inbounds i8,i8*%bm,i64 16
%bo=bitcast i8*%bn to i8*(i8*,i8*)**
%bp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bo,align 8
%bq=bitcast i8*%bm to i8**
%br=load i8*,i8**%bq,align 8
%bs=load i8*,i8**%c,align 8
%bt=tail call fastcc i8*%bp(i8*inreg%br,i8*inreg%bs)
ret i8*%bt
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18compileFunRecbindsE_1516(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=call i8*@sml_alloc(i32 inreg 12)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177288,i32*%t,align 4
store i8*%r,i8**%f,align 8
%u=load i8*,i8**%d,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL8recbinds_1653 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL8recbinds_1653 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
%J=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%K=call fastcc i8*%o(i8*inreg%J,i8*inreg%y)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=call fastcc i8*%N(i8*inreg%P,i8*inreg%Q)
store i8*%R,i8**%c,align 8
%S=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
%Y=call fastcc i8*%V(i8*inreg%X,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dj,i64 0,i32 2)to i8*))
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
%ae=load i8*,i8**%c,align 8
%af=call fastcc i8*%ab(i8*inreg%ad,i8*inreg%ae)
%ag=bitcast i8**%d to i32**
%ah=load i32*,i32**%ag,align 8
%ai=load i32,i32*%ah,align 4
%aj=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%af)
store i8*%aj,i8**%e,align 8
%ak=load i8*,i8**%d,align 8
%al=getelementptr inbounds i8,i8*%ak,i64 8
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%f,align 8
%ao=call i8*@sml_alloc(i32 inreg 20)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177296,i32*%aq,align 4
%ar=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%au=getelementptr inbounds i8,i8*%ao,i64 8
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ao,i64 16
%ax=bitcast i8*%aw to i32*
store i32 3,i32*%ax,align 4
%ay=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%ao)
store i8*%ay,i8**%e,align 8
%az=load i8*,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8**
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%f,align 8
store i8*null,i8**%d,align 8
%aD=getelementptr inbounds i8,i8*%az,i64 24
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
store i8*%aF,i8**%g,align 8
%aG=call i8*@sml_alloc(i32 inreg 36)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177312,i32*%aI,align 4
store i8*%aG,i8**%d,align 8
%aJ=getelementptr inbounds i8,i8*%aG,i64 4
%aK=bitcast i8*%aJ to i32*
store i32 0,i32*%aK,align 1
%aL=bitcast i8*%aG to i32*
store i32%ai,i32*%aL,align 4
%aM=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aN=getelementptr inbounds i8,i8*%aG,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aQ=getelementptr inbounds i8,i8*%aG,i64 16
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aT=getelementptr inbounds i8,i8*%aG,i64 24
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aG,i64 32
%aW=bitcast i8*%aV to i32*
store i32 14,i32*%aW,align 4
%aX=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aY=getelementptr inbounds i8,i8*%aX,i64 16
%aZ=bitcast i8*%aY to i8*(i8*,i8*)**
%a0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aZ,align 8
%a1=bitcast i8*%aX to i8**
%a2=load i8*,i8**%a1,align 8
store i8*%a2,i8**%e,align 8
%a3=call i8*@sml_alloc(i32 inreg 12)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177288,i32*%a5,align 4
store i8*%a3,i8**%f,align 8
%a6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%a3,i64 8
%a9=bitcast i8*%a8 to i32*
store i32 1,i32*%a9,align 4
%ba=call i8*@sml_alloc(i32 inreg 28)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177304,i32*%bc,align 4
%bd=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%be=bitcast i8*%ba to i8**
store i8*%bd,i8**%be,align 8
%bf=getelementptr inbounds i8,i8*%ba,i64 8
%bg=bitcast i8*%bf to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18compileFunRecbindsE_1657 to void(...)*),void(...)**%bg,align 8
%bh=getelementptr inbounds i8,i8*%ba,i64 16
%bi=bitcast i8*%bh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination18compileFunRecbindsE_1657 to void(...)*),void(...)**%bi,align 8
%bj=getelementptr inbounds i8,i8*%ba,i64 24
%bk=bitcast i8*%bj to i32*
store i32 -2147483647,i32*%bk,align 4
%bl=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bm=call fastcc i8*%a0(i8*inreg%bl,i8*inreg%ba)
%bn=getelementptr inbounds i8,i8*%bm,i64 16
%bo=bitcast i8*%bn to i8*(i8*,i8*)**
%bp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bo,align 8
%bq=bitcast i8*%bm to i8**
%br=load i8*,i8**%bq,align 8
%bs=load i8*,i8**%c,align 8
%bt=tail call fastcc i8*%bp(i8*inreg%br,i8*inreg%bs)
ret i8*%bt
}
define internal fastcc void@_SMLLN17PolyTyElimination7compileE_1662(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%c,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%c,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
store i8*null,i8**%c,align 8
%k=call fastcc i8*@_SMLFN3Bug11prettyPrintE(i8*inreg%i)
%l=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%l)
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%k,i8**%b,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%q,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%b,align 8
br label%q
q:
%r=phi i8*[%p,%o],[%k,%h]
store i8*null,i8**%b,align 8
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=and i32%u,268435455
%w=icmp eq i32%v,1
br i1%w,label%x,label%y
x:
call void@llvm.lifetime.end.p0i8(i64 8,i8*%l)
br label%z
y:
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%r)
tail call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@dk,i64 0,i32 2,i64 0))
call void@llvm.lifetime.end.p0i8(i64 8,i8*%l)
br label%z
z:
ret void
}
define internal fastcc void@_SMLLN17PolyTyElimination7compileE_1664(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
store i8*null,i8**%d,align 8
%p=load i8*,i8**%n,align 8
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
%v=call fastcc i8*@_SMLFN9TypedCalc21formatWithType__tpdeclE(i8*inreg%o)
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=call fastcc i8*%s(i8*inreg%w,i8*inreg%v)
ret void
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7compileE_1667(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 16
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7compileE_1685(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
%m=call i8*@sml_alloc(i32 inreg 8)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 805306376,i32*%o,align 4
store i8*%m,i8**%f,align 8
%p=bitcast i8*%m to i64*
store i64 0,i64*%p,align 1
%q=bitcast i8**%e to i8***
%r=load i8**,i8***%q,align 8
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%m to i8**
call void@sml_write(i8*inreg%m,i8**inreg%t,i8*inreg%s)#0
%u=load i8*,i8**%e,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%h,align 8
%y=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 0,i32 inreg 4)
store i8*%y,i8**%d,align 8
%z=load i8*,i8**@_SMLZN12TypedCalcCon8emptyEnvE,align 8
store i8*%z,i8**%g,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
%D=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%G=getelementptr inbounds i8,i8*%A,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%A,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=load i8*,i8**%c,align 8
%L=load i8*,i8**%f,align 8
%M=load i8*,i8**%h,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%h,align 8
%N=call fastcc i8*@_SMLLN17PolyTyElimination15analyzeDeclListE_1170(i8*inreg%M,i8*inreg%L,i8*inreg%A,i8*inreg%K)
store i8*%N,i8**%d,align 8
%O=load i32*,i32**bitcast(i8**@_SMLZN7Control17verbosePolyTyElimE to i32**),align 8
%P=load i32,i32*%O,align 4
%Q=icmp slt i32%P,2
br i1%Q,label%aA,label%R
R:
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[37x i8]}>,<{[4x i8],i32,[37x i8]}>*@dl,i64 0,i32 2,i64 0))
%S=call fastcc i8*@_SMLFN4List3appE(i32 inreg 1,i32 inreg 8)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%c,align 8
%Y=call i8*@sml_alloc(i32 inreg 12)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177288,i32*%aa,align 4
store i8*%Y,i8**%g,align 8
%ab=bitcast i8*%Y to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dm,i64 0,i32 2)to i8*),i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%Y,i64 8
%ad=bitcast i8*%ac to i32*
store i32 1,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
%ah=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ae,i64 8
%ak=bitcast i8*%aj to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17PolyTyElimination7compileE_1664 to void(...)*),void(...)**%ak,align 8
%al=getelementptr inbounds i8,i8*%ae,i64 16
%am=bitcast i8*%al to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17PolyTyElimination7compileE_1833 to void(...)*),void(...)**%am,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 24
%ao=bitcast i8*%an to i32*
store i32 -2147483647,i32*%ao,align 4
%ap=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aq=call fastcc i8*%V(i8*inreg%ap,i8*inreg%ae)
%ar=getelementptr inbounds i8,i8*%aq,i64 16
%as=bitcast i8*%ar to i8*(i8*,i8*)**
%at=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%as,align 8
%au=bitcast i8*%aq to i8**
%av=load i8*,i8**%au,align 8
%aw=bitcast i8**%d to i8***
%ax=load i8**,i8***%aw,align 8
%ay=load i8*,i8**%ax,align 8
%az=call fastcc i8*%at(i8*inreg%av,i8*inreg%ay)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[35x i8]}>,<{[4x i8],i32,[35x i8]}>*@dn,i64 0,i32 2,i64 0))
br label%aA
aA:
%aB=load i8*,i8**%e,align 8
%aC=getelementptr inbounds i8,i8*%aB,i64 16
%aD=bitcast i8*%aC to i8**
%aE=load i8*,i8**%aD,align 8
%aF=bitcast i8**%f to i8***
%aG=load i8**,i8***%aF,align 8
store i8*null,i8**%f,align 8
%aH=load i8*,i8**%aG,align 8
%aI=call fastcc i8*@_SMLLN17PolyTyElimination5checkE_1293(i8*inreg%aE,i8*inreg%aH)
store i8*%aI,i8**%c,align 8
%aJ=load i32*,i32**bitcast(i8**@_SMLZN7Control17verbosePolyTyElimE to i32**),align 8
%aK=load i32,i32*%aJ,align 4
%aL=icmp slt i32%aK,2
br i1%aL,label%aY,label%aM
aM:
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@do,i64 0,i32 2,i64 0))
%aN=call fastcc i8*@_SMLLN17PolyTyElimination6MetaID3Map3mapE_709(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dp,i64 0,i32 2)to i8*))
%aO=getelementptr inbounds i8,i8*%aN,i64 16
%aP=bitcast i8*%aO to i8*(i8*,i8*)**
%aQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aP,align 8
%aR=bitcast i8*%aN to i8**
%aS=load i8*,i8**%aR,align 8
%aT=load i8*,i8**%c,align 8
%aU=call fastcc i8*%aQ(i8*inreg%aS,i8*inreg%aT)
%aV=call fastcc i8*@_SMLFN14PolyTyInstance19format__instancesMapE(i8*inreg%aU)
%aW=call fastcc i8*@_SMLFN3Bug11prettyPrintE(i8*inreg%aV)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%aW)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[37x i8]}>,<{[4x i8],i32,[37x i8]}>*@dq,i64 0,i32 2,i64 0))
%aX=load i8*,i8**%c,align 8
br label%aY
aY:
%aZ=phi i8*[%aI,%aA],[%aX,%aM]
%a0=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a1=getelementptr inbounds i8,i8*%a0,i64 24
%a2=bitcast i8*%a1 to i8**
%a3=load i8*,i8**%a2,align 8
store i8*null,i8**%c,align 8
%a4=call fastcc i8*@_SMLLN17PolyTyElimination8calcInstE_1317(i8*inreg%a3,i8*inreg%aZ)
store i8*%a4,i8**%c,align 8
%a5=load i32*,i32**bitcast(i8**@_SMLZN7Control17verbosePolyTyElimE to i32**),align 8
%a6=load i32,i32*%a5,align 4
%a7=icmp slt i32%a6,2
br i1%a7,label%be,label%a8
a8:
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@dr,i64 0,i32 2,i64 0))
%a9=load i8*,i8**%c,align 8
%ba=call fastcc i8*@_SMLFN14PolyTyInstance14format__instMapE(i8*inreg%a9)
%bb=call fastcc i8*@_SMLFN3Bug11prettyPrintE(i8*inreg%ba)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%bb)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[37x i8]}>,<{[4x i8],i32,[37x i8]}>*@ds,i64 0,i32 2,i64 0))
%bc=load i32*,i32**bitcast(i8**@_SMLZN7Control17verbosePolyTyElimE to i32**),align 8
%bd=load i32,i32*%bc,align 4
br label%be
be:
%bf=phi i32[%a6,%aY],[%bd,%a8]
%bg=icmp slt i32%bf,1
br i1%bg,label%bi,label%bh
bh:
store i32 0,i32*@dI,align 8
store i32 0,i32*@dJ,align 8
store i32 0,i32*@dK,align 8
store i32 0,i32*@dL,align 8
store i32 0,i32*@dM,align 8
store i32 0,i32*@dN,align 8
store i32 0,i32*@dO,align 8
store i32 0,i32*@dP,align 8
store i32 0,i32*@dQ,align 8
store i32 0,i32*@dR,align 8
store i32 0,i32*@dS,align 8
br label%bi
bi:
%bj=call fastcc i32@_SMLFN9DummyTyID8generateE(i32 inreg 0)
%bk=load i8*,i8**@_SMLZN12TypedCalcCon8emptyEnvE,align 8
store i8*%bk,i8**%e,align 8
%bl=load i8*,i8**@_SMLZN14BoundTypeVarID3Map5emptyE,align 8
store i8*%bl,i8**%f,align 8
%bm=call i8*@sml_alloc(i32 inreg 36)#0
%bn=bitcast i8*%bm to i32*
%bo=getelementptr inbounds i8,i8*%bm,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177312,i32*%bp,align 4
%bq=getelementptr inbounds i8,i8*%bm,i64 4
%br=bitcast i8*%bq to i32*
store i32 0,i32*%br,align 1
store i32%bj,i32*%bn,align 4
%bs=load i8*,i8**%e,align 8
%bt=getelementptr inbounds i8,i8*%bm,i64 8
%bu=bitcast i8*%bt to i8**
store i8*%bs,i8**%bu,align 8
%bv=load i8*,i8**%c,align 8
%bw=getelementptr inbounds i8,i8*%bm,i64 16
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=load i8*,i8**%f,align 8
%bz=getelementptr inbounds i8,i8*%bm,i64 24
%bA=bitcast i8*%bz to i8**
store i8*%by,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bm,i64 32
%bC=bitcast i8*%bB to i32*
store i32 14,i32*%bC,align 4
store i8*%bs,i8**%c,align 8
store i8*%bv,i8**%e,align 8
%bD=getelementptr inbounds i8,i8*%by,i64 16
%bE=bitcast i8*%bD to i8*(i8*,i8*,i8*)**
%bF=load i8*(i8*,i8*,i8*)*,i8*(i8*,i8*,i8*)**%bE,align 8
%bG=bitcast i8*%by to i8**
%bH=load i8*,i8**%bG,align 8
store i8*%bH,i8**%f,align 8
%bI=call i8*@sml_alloc(i32 inreg 4)#0
%bJ=bitcast i8*%bI to i32*
%bK=getelementptr inbounds i8,i8*%bI,i64 -4
%bL=bitcast i8*%bK to i32*
store i32 4,i32*%bL,align 4
store i8*%bI,i8**%g,align 8
store i32 1,i32*%bJ,align 4
%bM=call i8*@sml_alloc(i32 inreg 4)#0
%bN=bitcast i8*%bM to i32*
%bO=getelementptr inbounds i8,i8*%bM,i64 -4
%bP=bitcast i8*%bO to i32*
store i32 4,i32*%bP,align 4
store i32 8,i32*%bN,align 4
%bQ=load i8*,i8**%f,align 8
%bR=load i8*,i8**%g,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
%bS=call fastcc i8*%bF(i8*inreg%bQ,i8*inreg%bR,i8*inreg%bM)
store i8*%bS,i8**%f,align 8
%bT=call i8*@sml_alloc(i32 inreg 36)#0
%bU=bitcast i8*%bT to i32*
%bV=getelementptr inbounds i8,i8*%bT,i64 -4
%bW=bitcast i8*%bV to i32*
store i32 1342177312,i32*%bW,align 4
%bX=getelementptr inbounds i8,i8*%bT,i64 4
%bY=bitcast i8*%bX to i32*
store i32 0,i32*%bY,align 1
store i32%bj,i32*%bU,align 4
%bZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b0=getelementptr inbounds i8,i8*%bT,i64 8
%b1=bitcast i8*%b0 to i8**
store i8*%bZ,i8**%b1,align 8
%b2=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b3=getelementptr inbounds i8,i8*%bT,i64 16
%b4=bitcast i8*%b3 to i8**
store i8*%b2,i8**%b4,align 8
%b5=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b6=getelementptr inbounds i8,i8*%bT,i64 24
%b7=bitcast i8*%b6 to i8**
store i8*%b5,i8**%b7,align 8
%b8=getelementptr inbounds i8,i8*%bT,i64 32
%b9=bitcast i8*%b8 to i32*
store i32 14,i32*%b9,align 4
%ca=bitcast i8**%d to i8***
%cb=load i8**,i8***%ca,align 8
store i8*null,i8**%d,align 8
%cc=load i8*,i8**%cb,align 8
%cd=call fastcc i8*@_SMLLN17PolyTyElimination15compileDeclListE_1513(i8*inreg%bT,i8*inreg%cc)
store i8*%cd,i8**%c,align 8
%ce=load i32*,i32**bitcast(i8**@_SMLZN7Control17verbosePolyTyElimE to i32**),align 8
%cf=load i32,i32*%ce,align 4
%cg=icmp slt i32%cf,1
br i1%cg,label%ch,label%cj
ch:
%ci=bitcast i8*%cd to i8**
br label%eA
cj:
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[26x i8]}>,<{[4x i8],i32,[26x i8]}>*@dt,i64 0,i32 2,i64 0))
%ck=load i32,i32*@dI,align 8
%cl=load i32,i32*@dJ,align 8
%cm=add nsw i32%cl,%ck
%cn=load i32,i32*@dS,align 8
%co=add nsw i32%cm,%cn
%cp=load i32,i32*@dR,align 8
%cq=add nsw i32%co,%cp
%cr=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%cq)
store i8*%cr,i8**%d,align 8
%cs=call i8*@sml_alloc(i32 inreg 20)#0
%ct=getelementptr inbounds i8,i8*%cs,i64 -4
%cu=bitcast i8*%ct to i32*
store i32 1342177296,i32*%cu,align 4
%cv=bitcast i8*%cs to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[32x i8]}>,<{[4x i8],i32,[32x i8]}>*@du,i64 0,i32 2,i64 0),i8**%cv,align 8
%cw=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cx=getelementptr inbounds i8,i8*%cs,i64 8
%cy=bitcast i8*%cx to i8**
store i8*%cw,i8**%cy,align 8
%cz=getelementptr inbounds i8,i8*%cs,i64 16
%cA=bitcast i8*%cz to i32*
store i32 3,i32*%cA,align 4
%cB=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%cs)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%cB)
%cC=load i32,i32*@dI,align 8
%cD=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%cC)
store i8*%cD,i8**%d,align 8
%cE=call i8*@sml_alloc(i32 inreg 20)#0
%cF=getelementptr inbounds i8,i8*%cE,i64 -4
%cG=bitcast i8*%cF to i32*
store i32 1342177296,i32*%cG,align 4
%cH=bitcast i8*%cE to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[15x i8]}>,<{[4x i8],i32,[15x i8]}>*@dv,i64 0,i32 2,i64 0),i8**%cH,align 8
%cI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cJ=getelementptr inbounds i8,i8*%cE,i64 8
%cK=bitcast i8*%cJ to i8**
store i8*%cI,i8**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cE,i64 16
%cM=bitcast i8*%cL to i32*
store i32 3,i32*%cM,align 4
%cN=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%cE)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%cN)
%cO=load i32,i32*@dK,align 8
%cP=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%cO)
store i8*%cP,i8**%d,align 8
%cQ=call i8*@sml_alloc(i32 inreg 20)#0
%cR=getelementptr inbounds i8,i8*%cQ,i64 -4
%cS=bitcast i8*%cR to i32*
store i32 1342177296,i32*%cS,align 4
%cT=bitcast i8*%cQ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@dw,i64 0,i32 2,i64 0),i8**%cT,align 8
%cU=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cV=getelementptr inbounds i8,i8*%cQ,i64 8
%cW=bitcast i8*%cV to i8**
store i8*%cU,i8**%cW,align 8
%cX=getelementptr inbounds i8,i8*%cQ,i64 16
%cY=bitcast i8*%cX to i32*
store i32 3,i32*%cY,align 4
%cZ=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%cQ)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%cZ)
%c0=load i32,i32*@dL,align 8
%c1=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%c0)
store i8*%c1,i8**%d,align 8
%c2=call i8*@sml_alloc(i32 inreg 20)#0
%c3=getelementptr inbounds i8,i8*%c2,i64 -4
%c4=bitcast i8*%c3 to i32*
store i32 1342177296,i32*%c4,align 4
%c5=bitcast i8*%c2 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[16x i8]}>,<{[4x i8],i32,[16x i8]}>*@dx,i64 0,i32 2,i64 0),i8**%c5,align 8
%c6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%c7=getelementptr inbounds i8,i8*%c2,i64 8
%c8=bitcast i8*%c7 to i8**
store i8*%c6,i8**%c8,align 8
%c9=getelementptr inbounds i8,i8*%c2,i64 16
%da=bitcast i8*%c9 to i32*
store i32 3,i32*%da,align 4
%db=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%c2)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%db)
%dc=load i32,i32*@dM,align 8
%dd=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%dc)
store i8*%dd,i8**%d,align 8
%de=call i8*@sml_alloc(i32 inreg 20)#0
%df=getelementptr inbounds i8,i8*%de,i64 -4
%dg=bitcast i8*%df to i32*
store i32 1342177296,i32*%dg,align 4
%dh=bitcast i8*%de to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@dy,i64 0,i32 2,i64 0),i8**%dh,align 8
%di=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dj=getelementptr inbounds i8,i8*%de,i64 8
%dk=bitcast i8*%dj to i8**
store i8*%di,i8**%dk,align 8
%dl=getelementptr inbounds i8,i8*%de,i64 16
%dm=bitcast i8*%dl to i32*
store i32 3,i32*%dm,align 4
%dn=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%de)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%dn)
%do=load i32,i32*@dN,align 8
%dp=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%do)
store i8*%dp,i8**%d,align 8
%dq=call i8*@sml_alloc(i32 inreg 20)#0
%dr=getelementptr inbounds i8,i8*%dq,i64 -4
%ds=bitcast i8*%dr to i32*
store i32 1342177296,i32*%ds,align 4
%dt=bitcast i8*%dq to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@dz,i64 0,i32 2,i64 0),i8**%dt,align 8
%du=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dv=getelementptr inbounds i8,i8*%dq,i64 8
%dw=bitcast i8*%dv to i8**
store i8*%du,i8**%dw,align 8
%dx=getelementptr inbounds i8,i8*%dq,i64 16
%dy=bitcast i8*%dx to i32*
store i32 3,i32*%dy,align 4
%dz=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%dq)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%dz)
%dA=load i32,i32*@dO,align 8
%dB=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%dA)
store i8*%dB,i8**%d,align 8
%dC=call i8*@sml_alloc(i32 inreg 20)#0
%dD=getelementptr inbounds i8,i8*%dC,i64 -4
%dE=bitcast i8*%dD to i32*
store i32 1342177296,i32*%dE,align 4
%dF=bitcast i8*%dC to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@dA,i64 0,i32 2,i64 0),i8**%dF,align 8
%dG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dH=getelementptr inbounds i8,i8*%dC,i64 8
%dI=bitcast i8*%dH to i8**
store i8*%dG,i8**%dI,align 8
%dJ=getelementptr inbounds i8,i8*%dC,i64 16
%dK=bitcast i8*%dJ to i32*
store i32 3,i32*%dK,align 4
%dL=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%dC)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%dL)
%dM=load i32,i32*@dP,align 8
%dN=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%dM)
store i8*%dN,i8**%d,align 8
%dO=call i8*@sml_alloc(i32 inreg 20)#0
%dP=getelementptr inbounds i8,i8*%dO,i64 -4
%dQ=bitcast i8*%dP to i32*
store i32 1342177296,i32*%dQ,align 4
%dR=bitcast i8*%dO to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@dB,i64 0,i32 2,i64 0),i8**%dR,align 8
%dS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dT=getelementptr inbounds i8,i8*%dO,i64 8
%dU=bitcast i8*%dT to i8**
store i8*%dS,i8**%dU,align 8
%dV=getelementptr inbounds i8,i8*%dO,i64 16
%dW=bitcast i8*%dV to i32*
store i32 3,i32*%dW,align 4
%dX=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%dO)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%dX)
%dY=load i32,i32*@dQ,align 8
%dZ=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%dY)
store i8*%dZ,i8**%d,align 8
%d0=call i8*@sml_alloc(i32 inreg 20)#0
%d1=getelementptr inbounds i8,i8*%d0,i64 -4
%d2=bitcast i8*%d1 to i32*
store i32 1342177296,i32*%d2,align 4
%d3=bitcast i8*%d0 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@dC,i64 0,i32 2,i64 0),i8**%d3,align 8
%d4=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%d5=getelementptr inbounds i8,i8*%d0,i64 8
%d6=bitcast i8*%d5 to i8**
store i8*%d4,i8**%d6,align 8
%d7=getelementptr inbounds i8,i8*%d0,i64 16
%d8=bitcast i8*%d7 to i32*
store i32 3,i32*%d8,align 4
%d9=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%d0)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%d9)
%ea=load i32,i32*@dR,align 8
%eb=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%ea)
store i8*%eb,i8**%d,align 8
%ec=call i8*@sml_alloc(i32 inreg 20)#0
%ed=getelementptr inbounds i8,i8*%ec,i64 -4
%ee=bitcast i8*%ed to i32*
store i32 1342177296,i32*%ee,align 4
%ef=bitcast i8*%ec to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@dD,i64 0,i32 2,i64 0),i8**%ef,align 8
%eg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eh=getelementptr inbounds i8,i8*%ec,i64 8
%ei=bitcast i8*%eh to i8**
store i8*%eg,i8**%ei,align 8
%ej=getelementptr inbounds i8,i8*%ec,i64 16
%ek=bitcast i8*%ej to i32*
store i32 3,i32*%ek,align 4
%el=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%ec)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%el)
%em=load i32,i32*@dS,align 8
%en=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%em)
store i8*%en,i8**%d,align 8
%eo=call i8*@sml_alloc(i32 inreg 20)#0
%ep=getelementptr inbounds i8,i8*%eo,i64 -4
%eq=bitcast i8*%ep to i32*
store i32 1342177296,i32*%eq,align 4
%er=bitcast i8*%eo to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[17x i8]}>,<{[4x i8],i32,[17x i8]}>*@dE,i64 0,i32 2,i64 0),i8**%er,align 8
%es=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%et=getelementptr inbounds i8,i8*%eo,i64 8
%eu=bitcast i8*%et to i8**
store i8*%es,i8**%eu,align 8
%ev=getelementptr inbounds i8,i8*%eo,i64 16
%ew=bitcast i8*%ev to i32*
store i32 3,i32*%ew,align 4
%ex=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%eo)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%ex)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[26x i8]}>,<{[4x i8],i32,[26x i8]}>*@dF,i64 0,i32 2,i64 0))
%ey=bitcast i8**%c to i8***
%ez=load i8**,i8***%ey,align 8
br label%eA
eA:
%eB=phi i8**[%ci,%ch],[%ez,%cj]
%eC=load i8*,i8**%eB,align 8
ret i8*%eC
}
define fastcc i8*@_SMLFN17PolyTyElimination7compileE(i8*inreg%a)local_unnamed_addr#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=load i8**,i8***bitcast(i8**getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar8d6fee0b386d4ead_PolyTyElimination,i64 0,i32 2,i64 0)to i8***),align 8
%k=load i8*,i8**%j,align 8
%l=tail call fastcc i8*@_SMLLN17PolyTyElimination7compileE_1685(i8*inreg%k,i8*inreg%h)
ret i8*%l
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map3allE_1687(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17PolyTyElimination14BoundTypeVarID3Map3allE_677(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map3allE_1688(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17PolyTyElimination14BoundTypeVarID3Map3allE_678(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map4alliE_1690(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17PolyTyElimination14BoundTypeVarID3Map4alliE_681(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map4alliE_1691(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17PolyTyElimination14BoundTypeVarID3Map4alliE_682(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map9domainSetE_1694(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination14BoundTypeVarID3Map9domainSetE_689(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9UnionFind5unionE_1709(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17PolyTyElimination9UnionFind5unionE_721(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9UnionFind4findE_1711(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination9UnionFind4findE_724(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination5touchE_1714(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination5touchE_730(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination5touchE_1715(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17PolyTyElimination5touchE_732(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination8findNodeE_1717(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLN17PolyTyElimination8findNodeE_739(i8*inreg%a,i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7equalIdE_1719(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination7equalIdE_742(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7equalIdE_1720(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17PolyTyElimination7equalIdE_744(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10instanceOfE_1722(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17PolyTyElimination10instanceOfE_747(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination11instantiateE_1724(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17PolyTyElimination11instantiateE_759(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination11instantiateE_1725(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17PolyTyElimination11instantiateE_764(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10equalUnionE_1727(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17PolyTyElimination10equalUnionE_773(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10equalUnionE_1728(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination10equalUnionE_775(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_1733(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_954(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_1734(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_962(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL6subst1_1735(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL6subst1_965(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_1736(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17PolyTyElimination7equalTyE_967(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_1737(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17PolyTyElimination7equalTyE_968(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18equalOverloadMatchE_1738(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination18equalOverloadMatchE_986(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18equalOverloadMatchE_1739(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination18equalOverloadMatchE_993(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination18equalOverloadMatchE_1740(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination18equalOverloadMatchE_1002(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination15equalConstraintE_1741(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination15equalConstraintE_1008(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13equalTvarKindE_1742(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination13equalTvarKindE_1013(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13equalTvarKindE_1743(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination13equalTvarKindE_1018(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13equalTvarKindE_1744(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination13equalTvarKindE_1021(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13equalTvarKindE_1745(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination13equalTvarKindE_1028(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination5equalE_1754(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17PolyTyElimination5equalE_1040(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9equalListE_1756(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17PolyTyElimination9equalListE_1047(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_1759(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=icmp eq i32%d,%g
%i=zext i1%h to i32
%j=tail call i8*@sml_alloc(i32 inreg 4)#0
%k=bitcast i8*%j to i32*
%l=getelementptr inbounds i8,i8*%j,i64 -4
%m=bitcast i8*%l to i32*
store i32 4,i32*%m,align 4
store i32%i,i32*%k,align 4
ret i8*%j
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7equalTyE_1760(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17PolyTyElimination7equalTyE_1054(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17PolyTyElimination11getIdsUnionE_1761(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination11getIdsUnionE_1059(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination12getIdsBtvEnvE_1763(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination12getIdsBtvEnvE_1097(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination6exportE_1764(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17PolyTyElimination6exportE_1114(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination6exportE_1765(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17PolyTyElimination6exportE_1115(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzePatE_1767(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1768(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1769(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1772(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1189(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1773(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1774(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1775(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLN17PolyTyElimination10analyzeExpE_1776(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLL8matchTys_1777(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLL8matchTys_1778(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL8matchTys_1239(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination16analyzeMatchListE_1779(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination16analyzeMatchListE_1241(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL3env_1780(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLL3env_1781(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLL3get_1782(i8*inreg%a,i8*inreg%b)#5 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL3get_1276(i8*inreg%b)
unreachable
}
define internal fastcc i8*@_SMLL3new_1783(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLL3new_1279(i8*inreg%a,i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLL7getById_1784(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLL7getById_1273(i8*inreg%a,i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17PolyTyElimination5checkE_1787(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i32@_SMLLN17PolyTyElimination5checkE_1290(i8*inreg%a,i32 inreg%d)
%f=tail call i8*@sml_alloc(i32 inreg 4)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 4,i32*%i,align 4
store i32%e,i32*%g,align 4
ret i8*%f
}
define internal fastcc i8*@_SMLLN17PolyTyElimination6instOfE_1788(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i32@_SMLLN17PolyTyElimination6instOfE_1294(i8*inreg%a,i32 inreg%d)
%f=tail call i8*@sml_alloc(i32 inreg 4)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 4,i32*%i,align 4
store i32%e,i32*%g,align 4
ret i8*%f
}
define internal fastcc i8*@_SMLL7instMap_1790(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLL7instMap_1307(i8*inreg%a,i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLL8btvKinds_1791(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL8btvKinds_1308(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL5subst_1792(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL5subst_1310(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL5subst_1795(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL5subst_1418(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL6envTmp_1796(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLL3env_1797(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLN17PolyTyElimination13compileBtvEnvE_1798(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
n:
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
%f=icmp eq i8*%e,null
br i1%f,label%l,label%g
g:
%h=bitcast i8*%e to i32*
%i=load i32,i32*%h,align 4
%j=icmp ne i32%i,0
%k=zext i1%j to i32
br label%l
l:
%m=phi i32[%k,%g],[0,%n]
%o=tail call i8*@sml_alloc(i32 inreg 4)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 4,i32*%r,align 4
store i32%m,i32*%p,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLL13dynamicKindOf_1809(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL13dynamicKindOf_1452(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9benchmarkE_1810(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination9benchmarkE_1454(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9benchmarkE_1811(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination9benchmarkE_1456(i8*inreg%b)
ret i8*null
}
define internal fastcc i8*@_SMLLN17PolyTyElimination9benchmarkE_1812(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=load i32,i32*@dR,align 8
%d=add nsw i32%c,1
store i32%d,i32*@dR,align 8
%e=tail call i8*@sml_alloc(i32 inreg 4)#0
%f=bitcast i8*%e to i32*
%g=getelementptr inbounds i8,i8*%e,i64 -4
%h=bitcast i8*%g to i32*
store i32 4,i32*%h,align 4
store i32 0,i32*%f,align 4
ret i8*%e
}
define internal fastcc i8*@_SMLLN17PolyTyElimination5multiE_1814(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN17PolyTyElimination5multiE_1815(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17PolyTyElimination5multiE_1464(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL10oldInstMap_1821(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL10oldInstMap_1633(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL3env_1822(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLL3env_1823(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7compileE_1832(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17PolyTyElimination7compileE_1662(i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7compileE_1833(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17PolyTyElimination7compileE_1664(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17PolyTyElimination7compileE_1834(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 16
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
declare void@llvm.memset.p0i8.i64(i8*,i8,i64,i1)#0
declare void@llvm.lifetime.start.p0i8(i64,i8*)#0
declare void@llvm.lifetime.end.p0i8(i64,i8*)#0
attributes#0={nounwind}
attributes#1={noreturn}
attributes#2={uwtable}
attributes#3={noreturn nounwind}
attributes#4={nounwind uwtable}
attributes#5={noreturn uwtable}
