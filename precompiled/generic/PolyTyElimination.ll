@sml_check_flag=external local_unnamed_addr global i32
@_SMLZN11DynamicKind7topKindE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes7int32TyE=external local_unnamed_addr global i8*
@_SMLZN12TypedCalcCon10TPPATERRORE=external local_unnamed_addr global i8*
@_SMLZN12TypedCalcCon7TPERRORE=external local_unnamed_addr global i8*
@_SMLZN12TypedCalcCon8TPPATVARE=external local_unnamed_addr global i8*
@_SMLZN12TypedCalcCon8emptyEnvE=external local_unnamed_addr global i8*
@_SMLZN14BoundTypeVarID3Set5emptyE=external local_unnamed_addr global i8*
@_SMLZN3Bug3BugE=external local_unnamed_addr global i8*
@_SMLZN5Types8univKindE=external local_unnamed_addr global i8*
@_SMLZN7Control17verbosePolyTyElimE=external local_unnamed_addr global i8*
@_SMLZN8ListPair14UnequalLengthsE=external local_unnamed_addr global i8*
@_SMLZ5Match=external unnamed_addr constant i8*
@a=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination5touchE_637 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination5touchE_1656 to void(...)*),i32 -2147483647}>,align 8
@b=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"findNode\00"}>,align 8
@c=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@b,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@d=private unnamed_addr constant<{[4x i8],i32,[27x i8]}><{[4x i8]zeroinitializer,i32 -2147483621,[27x i8]c"PolyTyElimination.NotEqual\00"}>,align 8
@e=private unnamed_addr constant<{[4x i8],i32,i8*,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[27x i8]}>,<{[4x i8],i32,[27x i8]}>*@d,i32 0,i32 0,i32 0),i32 8),i32 0,[4x i8]zeroinitializer,i32 1}>,align 8
@_SMLDL652=private constant<{[4x i8],i32,i8*}><{[4x i8]zeroinitializer,i32 -1879048184,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i32,[4x i8],i32}>,<{[4x i8],i32,i8*,i32,[4x i8],i32}>*@e,i32 0,i32 0,i32 0),i32 8)}>,align 8
@f=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17PolyTyElimination10equalUnionE_655 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10equalUnionE_1661 to void(...)*),i32 -2147483647}>,align 8
@g=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination10equalUnionE_657 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10equalUnionE_1662 to void(...)*),i32 -2147483647}>,align 8
@h=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17PolyTyElimination9equalListE_661 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination9equalListE_1663 to void(...)*),i32 -2147483647}>,align 8
@i=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:210.48(6210)\00"}>,align 8
@j=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@i,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@k=private unnamed_addr constant<{[4x i8],i32,[84x i8]}><{[4x i8]zeroinitializer,i32 -2147483564,[84x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:217.4(6473)\00"}>,align 8
@l=private unnamed_addr constant<{[4x i8],i32,[84x i8]}><{[4x i8]zeroinitializer,i32 -2147483564,[84x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:223.8(6744)\00"}>,align 8
@m=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination7equalTyE_673 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination7equalTyE_1677 to void(...)*),i32 -2147483647}>,align 8
@n=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination18equalOprimSelectorE_676 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination18equalOprimSelectorE_1680 to void(...)*),i32 -2147483647}>,align 8
@o=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination15equalConstraintE_677 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15equalConstraintE_1681 to void(...)*),i32 -2147483647}>,align 8
@p=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:295.40(10219)\00"}>,align 8
@q=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@p,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@r=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:296.36(10264)\00"}>,align 8
@s=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@r,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@t=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:297.36(10309)\00"}>,align 8
@u=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@t,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@v=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:298.39(10357)\00"}>,align 8
@w=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@v,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@x=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:299.35(10401)\00"}>,align 8
@y=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@x,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@z=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:300.37(10447)\00"}>,align 8
@A=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@z,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@B=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:301.40(10496)\00"}>,align 8
@C=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@B,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@D=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:302.35(10540)\00"}>,align 8
@E=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@D,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@F=private unnamed_addr constant<{[4x i8],i32,[31x i8]}><{[4x i8]zeroinitializer,i32 -2147483617,[31x i8]c"equalTy: BACKENDty never occur\00"}>,align 8
@G=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[31x i8]}>,<{[4x i8],i32,[31x i8]}>*@F,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@H=private unnamed_addr constant<{[4x i8],i32,[29x i8]}><{[4x i8]zeroinitializer,i32 -2147483619,[29x i8]c"equalTy: ERRORty never occur\00"}>,align 8
@I=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[29x i8]}>,<{[4x i8],i32,[29x i8]}>*@H,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@J=private unnamed_addr constant<{[4x i8],i32,[26x i8]}><{[4x i8]zeroinitializer,i32 -2147483622,[26x i8]c"equalTy: TVAR never occur\00"}>,align 8
@K=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[26x i8]}>,<{[4x i8],i32,[26x i8]}>*@J,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@L=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:317.39(11261)\00"}>,align 8
@M=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@L,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@N=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:318.36(11306)\00"}>,align 8
@O=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@N,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@P=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:319.34(11349)\00"}>,align 8
@Q=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@P,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@R=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:320.35(11393)\00"}>,align 8
@S=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@R,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@T=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:321.36(11438)\00"}>,align 8
@U=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@T,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@V=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:311.8(10857)\00"}>,align 8
@W=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:245.21(7911)\00"}>,align 8
@X=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@W,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@Y=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:249.21(8068)\00"}>,align 8
@Z=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@Y,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aa=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:260.30(8598)\00"}>,align 8
@ab=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@aa,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ac=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:266.21(8844)\00"}>,align 8
@ad=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@ac,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ae=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLL6subst3_856 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6subst3_1666 to void(...)*),i32 -2147483647}>,align 8
@af=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLL6subst3_860 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6subst3_1667 to void(...)*),i32 -2147483647}>,align 8
@ag=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:399.50(14836)\00"}>,align 8
@ah=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@ag,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ai=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17PolyTyElimination7equalTyE_867 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination7equalTyE_1668 to void(...)*),i32 -2147483647}>,align 8
@aj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLL5subst_871 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL5subst_1669 to void(...)*),i32 -2147483647}>,align 8
@ak=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination7equalTyE_873 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination7equalTyE_1670 to void(...)*),i32 -2147483647}>,align 8
@al=private unnamed_addr constant<{[4x i8],i32,[84x i8]}><{[4x i8]zeroinitializer,i32 -2147483564,[84x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:229.8(7012)\00"}>,align 8
@am=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:214.48(6390)\00"}>,align 8
@an=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@am,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ao=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:213.48(6333)\00"}>,align 8
@ap=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@ao,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aq=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:347.21(12591)\00"}>,align 8
@ar=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aq,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@as=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:348.43(12643)\00"}>,align 8
@at=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@as,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@au=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:353.21(12890)\00"}>,align 8
@av=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@au,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aw=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:354.42(12941)\00"}>,align 8
@ax=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aw,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ay=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17PolyTyElimination18equalOverloadMatchE_893 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination18equalOverloadMatchE_1673 to void(...)*),i32 -2147483647}>,align 8
@az=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:338.43(12125)\00"}>,align 8
@aA=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@az,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aB=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:339.43(12177)\00"}>,align 8
@aC=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aB,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination18equalOverloadMatchE_900 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination18equalOverloadMatchE_1674 to void(...)*),i32 -2147483647}>,align 8
@aE=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:342.42(12317)\00"}>,align 8
@aF=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aE,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aG=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:331.8(11769)\00"}>,align 8
@aH=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:328.19(11703)\00"}>,align 8
@aI=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aH,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aJ=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:367.19(13439)\00"}>,align 8
@aK=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aJ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aL=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:382.39(14129)\00"}>,align 8
@aM=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aL,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aN=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:202.70(5957)\00"}>,align 8
@aO=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@aN,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17PolyTyElimination9equalKindE_915 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination9equalKindE_1675 to void(...)*),i32 -2147483647}>,align 8
@aQ=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:383.38(14176)\00"}>,align 8
@aR=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aQ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aS=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:384.31(14216)\00"}>,align 8
@aT=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aS,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aU=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:385.32(14257)\00"}>,align 8
@aV=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@aU,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aW=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:370.8(13506)\00"}>,align 8
@aX=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"equal\00"}>,align 8
@aY=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@aX,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aZ=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"equalList\00"}>,align 8
@a0=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@aZ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a1=private unnamed_addr constant<{[4x i8],i32,[12x i8]}><{[4x i8]zeroinitializer,i32 -2147483636,[12x i8]c"getIdsUnion\00"}>,align 8
@a2=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[12x i8]}>,<{[4x i8],i32,[12x i8]}>*@a1,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination11getIdsUnionE_945 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination11getIdsUnionE_1688 to void(...)*),i32 -2147483647}>,align 8
@a4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination8getIdsTyE_952 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination8getIdsTyE_1695 to void(...)*),i32 -2147483647}>,align 8
@a5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination19getIdsOprimSelectorE_954 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination19getIdsOprimSelectorE_1697 to void(...)*),i32 -2147483647}>,align 8
@a6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination10getIdsKindE_955 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10getIdsKindE_1698 to void(...)*),i32 -2147483647}>,align 8
@a7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination16getIdsConstraintE_956 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination16getIdsConstraintE_1699 to void(...)*),i32 -2147483647}>,align 8
@a8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination8getIdsTyE_993 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination8getIdsTyE_1691 to void(...)*),i32 -2147483647}>,align 8
@a9=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:488.8(18169)\00"}>,align 8
@ba=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination8getIdsTyE_998 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination8getIdsTyE_1692 to void(...)*),i32 -2147483647}>,align 8
@bb=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:459.8(16818)\00"}>,align 8
@bc=private unnamed_addr constant<{[4x i8],i32,[30x i8]}><{[4x i8]zeroinitializer,i32 -2147483618,[30x i8]c"getIdsTy: ERRORty never occur\00"}>,align 8
@bd=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[30x i8]}>,<{[4x i8],i32,[30x i8]}>*@bc,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@be=private unnamed_addr constant<{[4x i8],i32,[27x i8]}><{[4x i8]zeroinitializer,i32 -2147483621,[27x i8]c"getIdsTy: TVAR never occur\00"}>,align 8
@bf=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[27x i8]}>,<{[4x i8],i32,[27x i8]}>*@be,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination8getIdsTyE_1014 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination8getIdsTyE_1693 to void(...)*),i32 -2147483647}>,align 8
@bh=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:436.8(15831)\00"}>,align 8
@bi=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination19getIdsOverloadMatchE_1017 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination19getIdsOverloadMatchE_1694 to void(...)*),i32 -2147483647}>,align 8
@bj=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:499.8(18524)\00"}>,align 8
@bk=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:526.8(19483)\00"}>,align 8
@bl=private unnamed_addr constant<{[4x i8],i32,[23x i8]}><{[4x i8]zeroinitializer,i32 -2147483625,[23x i8]c"analyzeExnCon: TPEXEXN\00"}>,align 8
@bm=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[23x i8]}>,<{[4x i8],i32,[23x i8]}>*@bl,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bn=private unnamed_addr constant<{[4x i8],i32,[21x i8]}><{[4x i8]zeroinitializer,i32 -2147483627,[21x i8]c"analyzeExnCon: TPEXN\00"}>,align 8
@bo=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[21x i8]}>,<{[4x i8],i32,[21x i8]}>*@bn,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bp=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:597.6(21465)\00"}>,align 8
@bq=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:624.6(22318)\00"}>,align 8
@br=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:518.42(19276)\00"}>,align 8
@bs=private unnamed_addr constant<{[4x i8],i32,[13x i8]}><{[4x i8]zeroinitializer,i32 -2147483635,[13x i8]c"getIdsBtvEnv\00"}>,align 8
@bt=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination13analyzeBtvEnvE_1063 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination13analyzeBtvEnvE_1712 to void(...)*),i32 -2147483647}>,align 8
@bu=private unnamed_addr constant<{[4x i8],i32,[32x i8]}><{[4x i8]zeroinitializer,i32 -2147483616,[32x i8]c"analyzePat: TPPATRECORD (tvar?)\00"}>,align 8
@bv=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[32x i8]}>,<{[4x i8],i32,[32x i8]}>*@bu,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bw=private unnamed_addr constant<{[4x i8],i32,[30x i8]}><{[4x i8]zeroinitializer,i32 -2147483618,[30x i8]c"analyzePat: TPPATRECORD (btv)\00"}>,align 8
@bx=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[30x i8]}>,<{[4x i8],i32,[30x i8]}>*@bw,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@by=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination10analyzePatE_1091 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10analyzePatE_1714 to void(...)*),i32 -2147483647}>,align 8
@bz=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:656.6(23326)\00"}>,align 8
@bA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1207 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1717 to void(...)*),i32 -2147483647}>,align 8
@bB=private unnamed_addr constant<{[4x i8],i32,[30x i8]}><{[4x i8]zeroinitializer,i32 -2147483618,[30x i8]c"analyzeExp: TPAPPM: not funty\00"}>,align 8
@bC=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[30x i8]}>,<{[4x i8],i32,[30x i8]}>*@bB,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1213 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1718 to void(...)*),i32 -2147483647}>,align 8
@bE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1216 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1719 to void(...)*),i32 -2147483647}>,align 8
@bF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1219 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1720 to void(...)*),i32 -2147483647}>,align 8
@bG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1221 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1721 to void(...)*),i32 -2147483647}>,align 8
@bH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1224 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1722 to void(...)*),i32 -2147483647}>,align 8
@bI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1226 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1723 to void(...)*),i32 -2147483647}>,align 8
@bJ=private unnamed_addr constant<{[4x i8],i32,[21x i8]}><{[4x i8]zeroinitializer,i32 -2147483627,[21x i8]c"analyzeExp: TPEXNTAG\00"}>,align 8
@bK=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[21x i8]}>,<{[4x i8],i32,[21x i8]}>*@bJ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bL=private unnamed_addr constant<{[4x i8],i32,[23x i8]}><{[4x i8]zeroinitializer,i32 -2147483625,[23x i8]c"analyzeExp: TPEXEXNTAG\00"}>,align 8
@bM=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[23x i8]}>,<{[4x i8],i32,[23x i8]}>*@bL,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bN=private unnamed_addr constant<{[4x i8],i32,[20x i8]}><{[4x i8]zeroinitializer,i32 -2147483628,[20x i8]c"analyzeExp: TPEXVAR\00"}>,align 8
@bO=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@bN,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bP=private unnamed_addr constant<{[4x i8],i32,[25x i8]}><{[4x i8]zeroinitializer,i32 -2147483623,[25x i8]c"analyzeExp: TPOPRIMAPPLY\00"}>,align 8
@bQ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[25x i8]}>,<{[4x i8],i32,[25x i8]}>*@bP,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bR=private unnamed_addr constant<{[4x i8],i32,[24x i8]}><{[4x i8]zeroinitializer,i32 -2147483624,[24x i8]c"analyzeExp: TPPRIMAPPLY\00"}>,align 8
@bS=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[24x i8]}>,<{[4x i8],i32,[24x i8]}>*@bR,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bT=private unnamed_addr constant<{[4x i8],i32,[24x i8]}><{[4x i8]zeroinitializer,i32 -2147483624,[24x i8]c"analyzeExp: TPRECFUNVAR\00"}>,align 8
@bU=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[24x i8]}>,<{[4x i8],i32,[24x i8]}>*@bT,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bV=private unnamed_addr constant<{[4x i8],i32,[31x i8]}><{[4x i8]zeroinitializer,i32 -2147483617,[31x i8]c"analyzeExp: TPTAPP: not POLYty\00"}>,align 8
@bW=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[31x i8]}>,<{[4x i8],i32,[31x i8]}>*@bV,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1260 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1724 to void(...)*),i32 -2147483647}>,align 8
@bY=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"tyvars\00"}>,align 8
@bZ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@bY,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b0=private unnamed_addr constant<{[4x i8],i32,[12x i8]}><{[4x i8]zeroinitializer,i32 -2147483636,[12x i8]c"instantiate\00"}>,align 8
@b1=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[12x i8]}>,<{[4x i8],i32,[12x i8]}>*@b0,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b2=private unnamed_addr constant<{[4x i8],i32,[18x i8]}><{[4x i8]zeroinitializer,i32 -2147483630,[18x i8]c"analyzeExp: TPVAR\00"}>,align 8
@b3=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@b2,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b4=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:722.6(25854)\00"}>,align 8
@b5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL8matchTys_1277 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL8matchTys_1726 to void(...)*),i32 -2147483647}>,align 8
@b6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL8matchTys_1279 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL8matchTys_1727 to void(...)*),i32 -2147483647}>,align 8
@b7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination16analyzeMatchListE_1281 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination16analyzeMatchListE_1728 to void(...)*),i32 -2147483647}>,align 8
@b8=private unnamed_addr constant<{[4x i8],i32,[17x i8]}><{[4x i8]zeroinitializer,i32 -2147483631,[17x i8]c"analyzeMatchList\00"}>,align 8
@b9=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[17x i8]}>,<{[4x i8],i32,[17x i8]}>*@b8,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ca=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination18analyzeFunRecbindsE_1288 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination18analyzeFunRecbindsE_1729 to void(...)*),i32 -2147483647}>,align 8
@cb=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination15analyzeRecbindsE_1292 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15analyzeRecbindsE_1730 to void(...)*),i32 -2147483647}>,align 8
@cc=private unnamed_addr constant<{[4x i8],i32,[23x i8]}><{[4x i8]zeroinitializer,i32 -2147483625,[23x i8]c"analyzeDecl: TPEXNTAGD\00"}>,align 8
@cd=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[23x i8]}>,<{[4x i8],i32,[23x i8]}>*@cc,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ce=private unnamed_addr constant<{[4x i8],i32,[25x i8]}><{[4x i8]zeroinitializer,i32 -2147483623,[25x i8]c"analyzeDecl: TPEXPORTEXN\00"}>,align 8
@cf=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[25x i8]}>,<{[4x i8],i32,[25x i8]}>*@ce,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cg=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1167.6(42342)\00"}>,align 8
@ch=private unnamed_addr constant<{[4x i8],i32,[24x i8]}><{[4x i8]zeroinitializer,i32 -2147483624,[24x i8]c"PolyTyElimination.Cycle\00"}>,align 8
@ci=private unnamed_addr constant<{[4x i8],i32,i8*,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[24x i8]}>,<{[4x i8],i32,[24x i8]}>*@ch,i32 0,i32 0,i32 0),i32 8),i32 0,[4x i8]zeroinitializer,i32 1}>,align 8
@_SMLDL1307=private constant<{[4x i8],i32,i8*}><{[4x i8]zeroinitializer,i32 -1879048184,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i32,[4x i8],i32}>,<{[4x i8],i32,i8*,i32,[4x i8],i32}>*@ci,i32 0,i32 0,i32 0),i32 8)}>,align 8
@cj=private unnamed_addr constant<{[4x i8],i32,[27x i8]}><{[4x i8]zeroinitializer,i32 -2147483621,[27x i8]c"PolyTyElimination.NotFound\00"}>,align 8
@ck=private unnamed_addr constant<{[4x i8],i32,i8*,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[27x i8]}>,<{[4x i8],i32,[27x i8]}>*@cj,i32 0,i32 0,i32 0),i32 8),i32 0,[4x i8]zeroinitializer,i32 1}>,align 8
@_SMLDL1310=private constant<{[4x i8],i32,i8*}><{[4x i8]zeroinitializer,i32 -1879048184,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i32,[4x i8],i32}>,<{[4x i8],i32,i8*,i32,[4x i8],i32}>*@ck,i32 0,i32 0,i32 0),i32 8)}>,align 8
@cl=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1300.44(46667)\00"}>,align 8
@cm=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL1307,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@cl,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cn=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL3get_1316 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL3get_1738 to void(...)*),i32 -2147483647}>,align 8
@co=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cn,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@cp=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1297.8(46505)\00"}>,align 8
@cq=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1306.28(46957)\00"}>,align 8
@cr=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL1310,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@cq,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cs=private unnamed_addr constant<{[4x i8],i32,[25x i8]}><{[4x i8]zeroinitializer,i32 -2147483623,[25x i8]c"inst not found in btvEnv\00"}>,align 8
@ct=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[25x i8]}>,<{[4x i8],i32,[25x i8]}>*@cs,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cu=private unnamed_addr constant[2x i8]c"0\00"
@cv=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1609.6(57762)\00"}>,align 8
@cw=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 9,[4x i8]zeroinitializer,i32 0}>,align 8
@cx=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 10,[4x i8]zeroinitializer,i32 0}>,align 8
@cy=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 8,[4x i8]zeroinitializer,i32 0}>,align 8
@cz=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 7,[4x i8]zeroinitializer,i32 0}>,align 8
@cA=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1550.6(55394)\00"}>,align 8
@cB=private unnamed_addr constant<{[4x i8],i32,[31x i8]}><{[4x i8]zeroinitializer,i32 -2147483617,[31x i8]c"compileTy: ERRORty never occur\00"}>,align 8
@cC=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[31x i8]}>,<{[4x i8],i32,[31x i8]}>*@cB,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cD=private unnamed_addr constant<{[4x i8],i32,[28x i8]}><{[4x i8]zeroinitializer,i32 -2147483620,[28x i8]c"compileTy: TVAR never occur\00"}>,align 8
@cE=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[28x i8]}>,<{[4x i8],i32,[28x i8]}>*@cD,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cF=private unnamed_addr constant<{[4x i8],i32,[22x i8]}><{[4x i8]zeroinitializer,i32 -2147483626,[22x i8]c"compileTy: BOUNDVARty\00"}>,align 8
@cG=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[22x i8]}>,<{[4x i8],i32,[22x i8]}>*@cF,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cH=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1465.6(52104)\00"}>,align 8
@cI=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1624.6(58328)\00"}>,align 8
@cJ=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1646.6(59108)\00"}>,align 8
@cK=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"compileBtvEnv\00"}>,align 8
@cL=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@cK,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL5subst_1424 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL5subst_1745 to void(...)*),i32 -2147483647}>,align 8
@cN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL6envTmp_1426 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6envTmp_1746 to void(...)*),i32 -2147483647}>,align 8
@cO=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1522.15(54323)\00"}>,align 8
@cP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL3env_1430 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL3env_1747 to void(...)*),i32 -2147483647}>,align 8
@cQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17PolyTyElimination13compileBtvEnvE_1432 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination13compileBtvEnvE_1748 to void(...)*),i32 -2147483647}>,align 8
@cR=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1663.28(59858)\00"}>,align 8
@cS=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"dynamicKindOf\00"}>,align 8
@cT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL13dynamicKindOf_1438 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL13dynamicKindOf_1758 to void(...)*),i32 -2147483647}>,align 8
@cU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination9benchmarkE_1440 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination9benchmarkE_1759 to void(...)*),i32 -2147483647}>,align 8
@cV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination9benchmarkE_1442 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination9benchmarkE_1760 to void(...)*),i32 -2147483647}>,align 8
@cW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(void(i8*)*@_SMLLLN17PolyTyElimination9benchmarkE_1444 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination9benchmarkE_1761 to void(...)*),i32 -2147483647}>,align 8
@cX=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1703.6(61400)\00"}>,align 8
@cY=private unnamed_addr constant<{[4x i8],i32,[23x i8]}><{[4x i8]zeroinitializer,i32 -2147483625,[23x i8]c"compileExnCon: TPEXEXN\00"}>,align 8
@cZ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[23x i8]}>,<{[4x i8],i32,[23x i8]}>*@cY,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c0=private unnamed_addr constant<{[4x i8],i32,[21x i8]}><{[4x i8]zeroinitializer,i32 -2147483627,[21x i8]c"compileExnCon: TPEXN\00"}>,align 8
@c1=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[21x i8]}>,<{[4x i8],i32,[21x i8]}>*@c0,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c2=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1725.6(62179)\00"}>,align 8
@c3=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1736.6(62650)\00"}>,align 8
@c4=private unnamed_addr constant<{[4x i8],i32,[13x i8]}><{[4x i8]zeroinitializer,i32 -2147483635,[13x i8]c"compileVar: \00"}>,align 8
@c5=private unnamed_addr constant<{[4x i8],i32,[21x i8]}><{[4x i8]zeroinitializer,i32 -2147483627,[21x i8]c"compileExp: TPEXNTAG\00"}>,align 8
@c6=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[21x i8]}>,<{[4x i8],i32,[21x i8]}>*@c5,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c7=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"TPEXVAR\0A\00"}>,align 8
@c8=private unnamed_addr constant<{[4x i8],i32,[20x i8]}><{[4x i8]zeroinitializer,i32 -2147483628,[20x i8]c"compileExp: TPEXVAR\00"}>,align 8
@c9=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@c8,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@da=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL10oldInstMap_1578 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL10oldInstMap_1772 to void(...)*),i32 -2147483647}>,align 8
@db=private unnamed_addr constant<{[4x i8],i32,[19x i8]}><{[4x i8]zeroinitializer,i32 -2147483629,[19x i8]c"compileExp: TPTAPP\00"}>,align 8
@dc=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[19x i8]}>,<{[4x i8],i32,[19x i8]}>*@db,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dd=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1776.6(64174)\00"}>,align 8
@de=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination18compileFunRecbindsE_1588 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination18compileFunRecbindsE_1773 to void(...)*),i32 -2147483647}>,align 8
@df=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination15compileRecbindsE_1592 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15compileRecbindsE_1774 to void(...)*),i32 -2147483647}>,align 8
@dg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination15compileDeclListE_1595 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15compileDeclListE_1775 to void(...)*),i32 -2147483647}>,align 8
@dh=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination15compileDeclListE_1597 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15compileDeclListE_1776 to void(...)*),i32 -2147483647}>,align 8
@di=private unnamed_addr constant<{[4x i8],i32,[83x i8]}><{[4x i8]zeroinitializer,i32 -2147483565,[83x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:17.14(302)\00"}>,align 8
@dj=private unnamed_addr constant<{[4x i8],i32,[20x i8]}><{[4x i8]zeroinitializer,i32 -2147483628,[20x i8]c"PolyTyElimination: \00"}>,align 8
@dk=private unnamed_addr constant<{[4x i8],i32,[23x i8]}><{[4x i8]zeroinitializer,i32 -2147483625,[23x i8]c"compileDecl: TPEXNTAGD\00"}>,align 8
@dl=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[23x i8]}>,<{[4x i8],i32,[23x i8]}>*@dk,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dm=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:2132.6(77720)\00"}>,align 8
@dn=private unnamed_addr constant<{[4x i8],i32,[37x i8]}><{[4x i8]zeroinitializer,i32 -2147483611,[37x i8]c"===== PolyTyElim Source begin =====\0A\00"}>,align 8
@do=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"\0A\00"}>,align 8
@dp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(void(i8*)*@_SMLLLN17PolyTyElimination7compileE_1609 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination7compileE_1784 to void(...)*),i32 -2147483647}>,align 8
@dq=private unnamed_addr constant<{[4x i8],i32,[35x i8]}><{[4x i8]zeroinitializer,i32 -2147483613,[35x i8]c"===== PolyTyElim Source end =====\0A\00"}>,align 8
@dr=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination7compileE_1613 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination7compileE_1786 to void(...)*),i32 -2147483647}>,align 8
@ds=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:543.6(20005)\00"}>,align 8
@dt=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination7compileE_1616 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination7compileE_1787 to void(...)*),i32 -2147483647}>,align 8
@du=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*null,i8*null,i32 3}>,align 8
@dv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination7compileE_1619 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination7compileE_1788 to void(...)*),i32 -2147483647}>,align 8
@dw=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"===== Instance Universes begin =====\0A\00"}>,align 8
@dx=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17PolyTyElimination7compileE_1622 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination7compileE_1789 to void(...)*),i32 -2147483647}>,align 8
@dy=private unnamed_addr constant<{[4x i8],i32,[37x i8]}><{[4x i8]zeroinitializer,i32 -2147483611,[37x i8]c"\0A===== Instance Universes end =====\0A\00"}>,align 8
@dz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL8btvKinds_1626 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL8btvKinds_1790 to void(...)*),i32 -2147483647}>,align 8
@dA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL5subst_1628 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL5subst_1791 to void(...)*),i32 -2147483647}>,align 8
@dB=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1402.2(50155)\00"}>,align 8
@dC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLL7instEnv_1632 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7instEnv_1792 to void(...)*),i32 -2147483647}>,align 8
@dD=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/polytyelimination/main/PolyTyElimination.sml:1385.2(49628)\00"}>,align 8
@dE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL7instEnv_1637 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7instEnv_1793 to void(...)*),i32 -2147483647}>,align 8
@dF=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"===== Least Upper Bounds begin =====\0A\00"}>,align 8
@dG=private unnamed_addr constant<{[4x i8],i32,[37x i8]}><{[4x i8]zeroinitializer,i32 -2147483611,[37x i8]c"\0A===== Least Upper Bounds end =====\0A\00"}>,align 8
@dH=private unnamed_addr constant<{[4x i8],i32,[26x i8]}><{[4x i8]zeroinitializer,i32 -2147483622,[26x i8]c"===== Summary begin =====\00"}>,align 8
@dI=private unnamed_addr constant<{[4x i8],i32,[32x i8]}><{[4x i8]zeroinitializer,i32 -2147483616,[32x i8]c"\0Anum of bound tyvars original: \00"}>,align 8
@dJ=private unnamed_addr constant<{[4x i8],i32,[15x i8]}><{[4x i8]zeroinitializer,i32 -2147483633,[15x i8]c"\0Asubstituted: \00"}>,align 8
@dK=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"\0Aboxed kind: \00"}>,align 8
@dL=private unnamed_addr constant<{[4x i8],i32,[16x i8]}><{[4x i8]zeroinitializer,i32 -2147483632,[16x i8]c"\0Aunboxed kind: \00"}>,align 8
@dM=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"\0Asize 1: \00"}>,align 8
@dN=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"\0Asize 2: \00"}>,align 8
@dO=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"\0Asize 4: \00"}>,align 8
@dP=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"\0Asize 8: \00"}>,align 8
@dQ=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"\0Arecord: \00"}>,align 8
@dR=private unnamed_addr constant<{[4x i8],i32,[13x i8]}><{[4x i8]zeroinitializer,i32 -2147483635,[13x i8]c"\0Adead code: \00"}>,align 8
@dS=private unnamed_addr constant<{[4x i8],i32,[17x i8]}><{[4x i8]zeroinitializer,i32 -2147483631,[17x i8]c"\0Akeep original: \00"}>,align 8
@dT=private unnamed_addr constant<{[4x i8],i32,[26x i8]}><{[4x i8]zeroinitializer,i32 -2147483622,[26x i8]c"\0A===== Summary end =====\0A\00"}>,align 8
@dU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17PolyTyElimination7compileE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination7compileE_1794 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17PolyTyElimination7compileE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dU,i64 0,i32 2)to i8*)
@_SML_ftabc0314f83678a2ae9_PolyTyElimination=external global i8
@dV=private unnamed_addr global i8 0
@dW=internal unnamed_addr global i32 0,align 8
@dX=internal unnamed_addr global i32 0,align 8
@dY=internal unnamed_addr global i32 0,align 8
@dZ=internal unnamed_addr global i32 0,align 8
@d0=internal unnamed_addr global i32 0,align 8
@d1=internal unnamed_addr global i32 0,align 8
@d2=internal unnamed_addr global i32 0,align 8
@d3=internal unnamed_addr global i32 0,align 8
@d4=internal unnamed_addr global i32 0,align 8
@d5=internal unnamed_addr global i32 0,align 8
@d6=internal unnamed_addr global i32 0,align 8
declare void@llvm.gcroot(i8**,i8*)#0
declare i8*@sml_alloc(i32 inreg)local_unnamed_addr#0
declare void@sml_check(i32 inreg)local_unnamed_addr
declare void@sml_gcroot(i8*,void()*,i8*,i8*)local_unnamed_addr#0
declare i8*@sml_load_intinf(i8*inreg)local_unnamed_addr#0
declare void@sml_matchcomp_bug()local_unnamed_addr
declare i32@sml_obj_equal(i8*inreg,i8*inreg)local_unnamed_addr#0
declare i32@sml_personality(...)#0
declare void@sml_raise(i8*inreg)local_unnamed_addr#1
declare i8*@sml_save()local_unnamed_addr#0
declare void@sml_unsave()local_unnamed_addr#0
declare void@sml_write(i8*inreg,i8**inreg,i8*inreg)local_unnamed_addr#0
declare i8*@_SMLFN11RecordLabel3Map13intersectWithE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map5foldlE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map9listItemsE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map9mergeWithE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11TypesBasics10substBTvarE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11TypesBasics5EFBTVE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11TypesBasics7tpappTyE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN12RuntimeTypes7getSizeE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon10TPCONSTANTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon10TPEXEXNTAGE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon11TPDYNAMICISE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon11TPEXPORTEXNE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon11TPEXPORTVARE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon11TPEXTERNEXNE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon11TPEXTERNVARE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon11TPPATRECORDE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon11TPPRIMAPPLYE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon11TPRECFUNVARE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon12TPBUILTINEXNE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon12TPCALLBACKFNE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon12TPDYNAMICTOPE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon12TPOPRIMAPPLYE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon12TPPATLAYEREDE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon12TPVALPOLYRECE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon13TPDYNAMICCASEE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon13TPDYNAMICNULLE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon13TPDYNAMICVIEWE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon13TPPATCONSTANTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon13TPPOLYFUNDECLE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon14TPEXNCONSTRUCTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon14TPFOREIGNAPPLYE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon15TPDATACONSTRUCTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon15TPFFIIMPORT__EXTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon15TPFFIIMPORT__FUNE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon15TPFOREIGNSYMBOLE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon16TPSWITCH__CONCASEE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon16TPSWITCH__EXNCASEE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon17TPPATEXNCONSTRUCTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon18TPDYNAMICEXISTTAPPE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon18TPPATDATACONSTRUCTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon18TPSWITCH__CONSTCASEE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon5TPEXDE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon5TPFNME(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon5TPLETE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon5TPVALE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon5TPVARE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon6TPAPPME(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon6TPCASTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon6TPJOINE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon6TPPOLYE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon6TPTAPPE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon6btvEnvE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon6varEnvE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon7TPCASEME(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon7TPCATCHE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon7TPEXVARE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon7TPRAISEE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon7TPTHROWE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon7patVarsE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon8TPEXNTAGE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon8TPHANDLEE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon8TPMODIFYE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon8TPPATVARE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon8TPRECORDE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon8TPSELECTE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon8TPSIZEOFE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon8TPVALRECE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon9TPDYNAMICE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon9TPEXNTAGDE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon9TPFUNDECLE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon9TPMONOLETE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon9TPPATWILDE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon9TPREIFYTYE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN13LongsymbolEnv4findE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN13TyAlphaRename14copyConstraintE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN13TyAlphaRename6copyTyE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN13TyAlphaRename9newBtvEnvE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN14BoundTypeVarID2eqE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map10listItemsiE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map10mapPartialE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map11mapPartialiE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map3appE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map4appiE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map4mapiE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map5foldlE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map6foldliE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map6insertE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map7filteriE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map7isEmptyE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map8inDomainE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map8listKeysE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map9listItemsE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map9mergeWithE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map9singletonE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Set3addE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Set3mapE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Set5foldlE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Set5unionE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Set6existsE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN14BoundTypeVarID3Set8isSubsetE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14PolyTyInstance14format__instMapE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14PolyTyInstance19format__instancesMapE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN16DynamicKindUtils16kindOfStaticKindE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN16DynamicKindUtils6eqKindE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN16DynamicKindUtils7lubKindE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN16DynamicKindUtils8kindOfTyE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN3Bug11prettyPrintE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN4Bool3notE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List10mapPartialE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List1_VE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List3appE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List5foldlE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5ExnID3Map4findE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5Int328toStringE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5TypID3Map3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5TypID3Map5foldlE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5TypID3Map9mergeWithE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5Types15equalPropertiesE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID3Map4findE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID8toStringE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Option3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Option6isSomeE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6String1_ZE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN6Symbol12eqLongsymbolE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Symbol18longsymbolToStringE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare void@_SMLFN6TextIO5printE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN8ListPair5appEqE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN8ListPair7foldlEqE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN9DummyTyID8generateE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN9TypedCalc21formatWithType__tpdeclE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN9UnionFind3newE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN9UnionFind4findE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN9UnionFind5unionE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main5148a836b3728be9_Int32()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maindaa180c1799f3810_Bool()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main03d87556ec7f64b2_List()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main7aa263535439ee1c_ListPair()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main3a60343781315c1e_Option()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main1ef93e13728790b1_String()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main3446b7b079949ccf_text_io()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main22c101bff228a4a9_LocalID()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main272769c068a0d80e_UnionFind()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main89b8631430c545af_Symbol()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maina142c315f12317c0_RecordLabel()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main1a3c7df0529f4f3d_Control()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maineaa0aca8fbe4101a_Bug()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainc88dec21a8800496_RuntimeTypes_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainf05fe994141c896f_DummyTyID()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main0fe904135d8a1a04_DynamicKind_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainfe3e21425e4479c1_Types_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainccac1cb21f7132a8_TypedCalc_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main3a400f8d2ac28205_TypedCalcCon()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maina1dd66ed49f3a8fe_DynamicKindUtils()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main7833b15b41d4b824_TypesBasics()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainb2f25da7c077ce97_TyAlphaRename()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainda6ffe0fd6b6ac21_BuiltinTypes()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainc1507d0cdea1311c_PolyTyInstance_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_load5148a836b3728be9_Int32(i8*)local_unnamed_addr
declare void@_SML_loaddaa180c1799f3810_Bool(i8*)local_unnamed_addr
declare void@_SML_load03d87556ec7f64b2_List(i8*)local_unnamed_addr
declare void@_SML_load7aa263535439ee1c_ListPair(i8*)local_unnamed_addr
declare void@_SML_load3a60343781315c1e_Option(i8*)local_unnamed_addr
declare void@_SML_load1ef93e13728790b1_String(i8*)local_unnamed_addr
declare void@_SML_load3446b7b079949ccf_text_io(i8*)local_unnamed_addr
declare void@_SML_load22c101bff228a4a9_LocalID(i8*)local_unnamed_addr
declare void@_SML_load272769c068a0d80e_UnionFind(i8*)local_unnamed_addr
declare void@_SML_load89b8631430c545af_Symbol(i8*)local_unnamed_addr
declare void@_SML_loada142c315f12317c0_RecordLabel(i8*)local_unnamed_addr
declare void@_SML_load1a3c7df0529f4f3d_Control(i8*)local_unnamed_addr
declare void@_SML_loadeaa0aca8fbe4101a_Bug(i8*)local_unnamed_addr
declare void@_SML_loadc88dec21a8800496_RuntimeTypes_ppg(i8*)local_unnamed_addr
declare void@_SML_loadf05fe994141c896f_DummyTyID(i8*)local_unnamed_addr
declare void@_SML_load0fe904135d8a1a04_DynamicKind_ppg(i8*)local_unnamed_addr
declare void@_SML_loadfe3e21425e4479c1_Types_ppg(i8*)local_unnamed_addr
declare void@_SML_loadccac1cb21f7132a8_TypedCalc_ppg(i8*)local_unnamed_addr
declare void@_SML_load3a400f8d2ac28205_TypedCalcCon(i8*)local_unnamed_addr
declare void@_SML_loada1dd66ed49f3a8fe_DynamicKindUtils(i8*)local_unnamed_addr
declare void@_SML_load7833b15b41d4b824_TypesBasics(i8*)local_unnamed_addr
declare void@_SML_loadb2f25da7c077ce97_TyAlphaRename(i8*)local_unnamed_addr
declare void@_SML_loadda6ffe0fd6b6ac21_BuiltinTypes(i8*)local_unnamed_addr
declare void@_SML_loadc1507d0cdea1311c_PolyTyInstance_ppg(i8*)local_unnamed_addr
define private void@_SML_tabbc0314f83678a2ae9_PolyTyElimination()#3{
unreachable
}
define void@_SML_loadc0314f83678a2ae9_PolyTyElimination(i8*%a)local_unnamed_addr#0{
%b=load i8,i8*@dV,align 1
%c=icmp eq i8%b,0
br i1%c,label%e,label%d
d:
ret void
e:
store i8 1,i8*@dV,align 1
tail call void@_SML_load5148a836b3728be9_Int32(i8*%a)#0
tail call void@_SML_loaddaa180c1799f3810_Bool(i8*%a)#0
tail call void@_SML_load03d87556ec7f64b2_List(i8*%a)#0
tail call void@_SML_load7aa263535439ee1c_ListPair(i8*%a)#0
tail call void@_SML_load3a60343781315c1e_Option(i8*%a)#0
tail call void@_SML_load1ef93e13728790b1_String(i8*%a)#0
tail call void@_SML_load3446b7b079949ccf_text_io(i8*%a)#0
tail call void@_SML_load22c101bff228a4a9_LocalID(i8*%a)#0
tail call void@_SML_load272769c068a0d80e_UnionFind(i8*%a)#0
tail call void@_SML_load89b8631430c545af_Symbol(i8*%a)#0
tail call void@_SML_loada142c315f12317c0_RecordLabel(i8*%a)#0
tail call void@_SML_load1a3c7df0529f4f3d_Control(i8*%a)#0
tail call void@_SML_loadeaa0aca8fbe4101a_Bug(i8*%a)#0
tail call void@_SML_loadc88dec21a8800496_RuntimeTypes_ppg(i8*%a)#0
tail call void@_SML_loadf05fe994141c896f_DummyTyID(i8*%a)#0
tail call void@_SML_load0fe904135d8a1a04_DynamicKind_ppg(i8*%a)#0
tail call void@_SML_loadfe3e21425e4479c1_Types_ppg(i8*%a)#0
tail call void@_SML_loadccac1cb21f7132a8_TypedCalc_ppg(i8*%a)#0
tail call void@_SML_load3a400f8d2ac28205_TypedCalcCon(i8*%a)#0
tail call void@_SML_loada1dd66ed49f3a8fe_DynamicKindUtils(i8*%a)#0
tail call void@_SML_load7833b15b41d4b824_TypesBasics(i8*%a)#0
tail call void@_SML_loadb2f25da7c077ce97_TyAlphaRename(i8*%a)#0
tail call void@_SML_loadda6ffe0fd6b6ac21_BuiltinTypes(i8*%a)#0
tail call void@_SML_loadc1507d0cdea1311c_PolyTyInstance_ppg(i8*%a)#0
tail call void@sml_gcroot(i8*%a,void()*@_SML_tabbc0314f83678a2ae9_PolyTyElimination,i8*@_SML_ftabc0314f83678a2ae9_PolyTyElimination,i8*null)#0
ret void
}
define void@_SML_mainc0314f83678a2ae9_PolyTyElimination()local_unnamed_addr#2 gc"smlsharp"{
%a=load i8,i8*@dV,align 1
%b=and i8%a,2
%c=icmp eq i8%b,0
br i1%c,label%e,label%d
d:
ret void
e:
store i8 3,i8*@dV,align 1
tail call void@_SML_main5148a836b3728be9_Int32()#2
tail call void@_SML_maindaa180c1799f3810_Bool()#2
tail call void@_SML_main03d87556ec7f64b2_List()#2
tail call void@_SML_main7aa263535439ee1c_ListPair()#2
tail call void@_SML_main3a60343781315c1e_Option()#2
tail call void@_SML_main1ef93e13728790b1_String()#2
tail call void@_SML_main3446b7b079949ccf_text_io()#2
tail call void@_SML_main22c101bff228a4a9_LocalID()#2
tail call void@_SML_main272769c068a0d80e_UnionFind()#2
tail call void@_SML_main89b8631430c545af_Symbol()#2
tail call void@_SML_maina142c315f12317c0_RecordLabel()#2
tail call void@_SML_main1a3c7df0529f4f3d_Control()#2
tail call void@_SML_maineaa0aca8fbe4101a_Bug()#2
tail call void@_SML_mainc88dec21a8800496_RuntimeTypes_ppg()#2
tail call void@_SML_mainf05fe994141c896f_DummyTyID()#2
tail call void@_SML_main0fe904135d8a1a04_DynamicKind_ppg()#2
tail call void@_SML_mainfe3e21425e4479c1_Types_ppg()#2
tail call void@_SML_mainccac1cb21f7132a8_TypedCalc_ppg()#2
tail call void@_SML_main3a400f8d2ac28205_TypedCalcCon()#2
tail call void@_SML_maina1dd66ed49f3a8fe_DynamicKindUtils()#2
tail call void@_SML_main7833b15b41d4b824_TypesBasics()#2
tail call void@_SML_mainb2f25da7c077ce97_TyAlphaRename()#2
tail call void@_SML_mainda6ffe0fd6b6ac21_BuiltinTypes()#2
tail call void@_SML_mainc1507d0cdea1311c_PolyTyInstance_ppg()#2
br label%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination5touchE_637(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i32*
%m=load i32,i32*%l,align 4
%n=getelementptr inbounds i8,i8*%j,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%b,align 8
%s=getelementptr inbounds i8,i8*%p,i64 8
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%v,i64 12
%z=bitcast i8*%y to i32*
store i32 0,i32*%z,align 1
%A=load i8*,i8**%b,align 8
%B=bitcast i8*%v to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%v,i64 8
%D=bitcast i8*%C to i32*
store i32%m,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%v,i64 16
%F=bitcast i8*%E to i32*
store i32 1,i32*%F,align 4
%G=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg 1,i32 inreg 8)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
%M=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%N=call fastcc i8*%J(i8*inreg%L,i8*inreg%M)
%O=icmp eq i8*%N,null
br i1%O,label%P,label%aV
P:
%Q=call fastcc i8*@_SMLFN9UnionFind3newE(i32 inreg 1,i32 inreg 8)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%d,align 8
%W=call i8*@sml_alloc(i32 inreg 8)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 805306376,i32*%Y,align 4
store i8*%W,i8**%c,align 8
%Z=bitcast i8*%W to i64*
store i64 0,i64*%Z,align 1
%aa=bitcast i8*%W to i8**
call void@sml_write(i8*inreg%W,i8**inreg%aa,i8*inreg null)#0
%ab=call i8*@sml_alloc(i32 inreg 20)#0
%ac=bitcast i8*%ab to i32*
%ad=getelementptr inbounds i8,i8*%ab,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
%af=getelementptr inbounds i8,i8*%ab,i64 4
%ag=bitcast i8*%af to i32*
store i32 0,i32*%ag,align 1
store i32%m,i32*%ac,align 4
%ah=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ai=getelementptr inbounds i8,i8*%ab,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 16
%al=bitcast i8*%ak to i32*
store i32 2,i32*%al,align 4
%am=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%an=call fastcc i8*%T(i8*inreg%am,i8*inreg%ab)
store i8*%an,i8**%d,align 8
%ao=call i8*@sml_alloc(i32 inreg 28)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177304,i32*%aq,align 4
store i8*%ao,i8**%c,align 8
%ar=getelementptr inbounds i8,i8*%ao,i64 12
%as=bitcast i8*%ar to i32*
store i32 0,i32*%as,align 1
%at=load i8*,i8**%b,align 8
%au=bitcast i8*%ao to i8**
store i8*null,i8**%b,align 8
store i8*%at,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%ao,i64 8
%aw=bitcast i8*%av to i32*
store i32%m,i32*%aw,align 4
%ax=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ay=getelementptr inbounds i8,i8*%ao,i64 16
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%ao,i64 24
%aB=bitcast i8*%aA to i32*
store i32 5,i32*%aB,align 4
%aC=call fastcc i8*@_SMLFN14BoundTypeVarID3Map6insertE(i32 inreg 1,i32 inreg 8)
%aD=getelementptr inbounds i8,i8*%aC,i64 16
%aE=bitcast i8*%aD to i8*(i8*,i8*)**
%aF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aE,align 8
%aG=bitcast i8*%aC to i8**
%aH=load i8*,i8**%aG,align 8
%aI=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aJ=call fastcc i8*%aF(i8*inreg%aH,i8*inreg%aI)
store i8*%aJ,i8**%b,align 8
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
%aN=getelementptr inbounds i8,i8*%aK,i64 12
%aO=bitcast i8*%aN to i32*
store i32 0,i32*%aO,align 1
%aP=load i8*,i8**%b,align 8
%aQ=bitcast i8*%aK to i8**
store i8*%aP,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i32*
store i32 0,i32*%aS,align 4
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 1,i32*%aU,align 4
ret i8*%aK
aV:
%aW=call i8*@sml_alloc(i32 inreg 20)#0
%aX=getelementptr inbounds i8,i8*%aW,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177296,i32*%aY,align 4
%aZ=getelementptr inbounds i8,i8*%aW,i64 12
%a0=bitcast i8*%aZ to i32*
store i32 0,i32*%a0,align 1
%a1=load i8*,i8**%b,align 8
%a2=bitcast i8*%aW to i8**
store i8*%a1,i8**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aW,i64 8
%a4=bitcast i8*%a3 to i32*
store i32%u,i32*%a4,align 4
%a5=getelementptr inbounds i8,i8*%aW,i64 16
%a6=bitcast i8*%a5 to i32*
store i32 1,i32*%a6,align 4
ret i8*%aW
}
define internal fastcc void@_SMLLLN17PolyTyElimination5touchE_639(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN14BoundTypeVarID3Map6foldliE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*%n(i8*inreg%p,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a,i64 0,i32 2)to i8*))
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%f,align 8
%w=load i8*,i8**%c,align 8
%x=getelementptr inbounds i8,i8*%w,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%e,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 12
%E=bitcast i8*%D to i32*
store i32 0,i32*%E,align 1
%F=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 8
%I=bitcast i8*%H to i32*
store i32 1,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%A,i64 16
%K=bitcast i8*%J to i32*
store i32 1,i32*%K,align 4
%L=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%M=call fastcc i8*%t(i8*inreg%L,i8*inreg%A)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
%S=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%T=call fastcc i8*%P(i8*inreg%R,i8*inreg%S)
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i32*
%W=load i32,i32*%V,align 4
%X=icmp eq i32%W,0
br i1%X,label%Z,label%Y
Y:
ret void
Z:
%aa=bitcast i8*%T to i8**
%ab=load i8*,i8**%aa,align 8
%ac=bitcast i8**%c to i8***
%ad=load i8**,i8***%ac,align 8
%ae=load i8*,i8**%ad,align 8
%af=bitcast i8*%ae to i8**
call void@sml_write(i8*inreg%ae,i8**inreg%af,i8*inreg%ab)#0
ret void
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination5touchE_640(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%g,i64 8
%n=bitcast i8*%m to i8**
store i8*%l,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%g,i64 16
%p=bitcast i8*%o to i32*
store i32 3,i32*%p,align 4
%q=call i8*@sml_alloc(i32 inreg 28)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177304,i32*%s,align 4
%t=load i8*,i8**%d,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLLN17PolyTyElimination5touchE_639 to void(...)*),void(...)**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination5touchE_1657 to void(...)*),void(...)**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 24
%A=bitcast i8*%z to i32*
store i32 -2147483647,i32*%A,align 4
ret i8*%q
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination8findNodeE_646(i8*inreg%a,i32 inreg%b)unnamed_addr#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
store i8*null,i8**%c,align 8
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
store i8*%p,i8**%c,align 8
%s=getelementptr inbounds i8,i8*%p,i64 12
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
%u=bitcast i8*%p to i8**
%v=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
store i8*%v,i8**%u,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i32*
store i32%b,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg 1,i32 inreg 8)
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=icmp eq i8*%H,null
br i1%I,label%J,label%af
J:
%K=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%K,i8**%c,align 8
%L=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c,i64 0,i32 2)to i8*))
store i8*%L,i8**%d,align 8
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
store i8*%M,i8**%e,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%S,align 8
%T=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%M,i64 16
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%M,i64 24
%X=bitcast i8*%W to i32*
store i32 7,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 60)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177336,i32*%aa,align 4
%ab=getelementptr inbounds i8,i8*%Y,i64 56
%ac=bitcast i8*%ab to i32*
store i32 1,i32*%ac,align 4
%ad=load i8*,i8**%e,align 8
%ae=bitcast i8*%Y to i8**
store i8*%ad,i8**%ae,align 8
call void@sml_raise(i8*inreg%Y)#1
unreachable
af:
%ag=bitcast i8*%H to i8**
%ah=load i8*,i8**%ag,align 8
ret i8*%ah
}
define internal fastcc void@_SMLLLN17PolyTyElimination10instanceOfE_648(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%a,%m]
%n=phi i8*[%i,%h],[%b,%m]
store i8*null,i8**%d,align 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%n,i64 8
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=call fastcc i8*@_SMLLLN17PolyTyElimination8findNodeE_646(i8*inreg%l,i32 inreg%s)
store i8*%t,i8**%d,align 8
%u=call fastcc i8*@_SMLFN9UnionFind4findE(i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%B=call fastcc i8*%x(i8*inreg%z,i8*inreg%A)
%C=getelementptr inbounds i8,i8*%B,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%d,align 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%e,align 8
%H=call i8*@sml_alloc(i32 inreg 20)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=load i8*,i8**%c,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=load i8*,i8**%e,align 8
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%H,i64 16
%Q=bitcast i8*%P to i32*
store i32 3,i32*%Q,align 4
%R=load i8*,i8**%d,align 8
%S=bitcast i8*%R to i8**
call void@sml_write(i8*inreg%R,i8**inreg%S,i8*inreg%H)#0
ret void
}
define internal fastcc i32@_SMLLLN17PolyTyElimination10equalUnionE_655(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN14BoundTypeVarID2eqE(i8*inreg%o)
%x=icmp eq i32%w,0
br i1%x,label%z,label%y
y:
ret i32%k
z:
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=bitcast i8*%A to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aO,i64 0,i32 2)to i8*),i8**%F,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10equalUnionE_657(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 0,i32 inreg 4)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%t(i8*inreg%v,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f,i64 0,i32 2)to i8*))
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%d,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=load i8*,i8**%b,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=load i8*,i8**%d,align 8
%N=tail call fastcc i8*%z(i8*inreg%M,i8*inreg%C)
ret i8*%N
}
define internal fastcc i32@_SMLLLN17PolyTyElimination9equalListE_661(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN14BoundTypeVarID2eqE(i8*inreg%o)
%x=icmp eq i32%w,0
br i1%x,label%z,label%y
y:
ret i32%k
z:
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=bitcast i8*%A to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aO,i64 0,i32 2)to i8*),i8**%F,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination9equalListE_663(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%f,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=getelementptr inbounds i8,i8*%o,i64 16
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%e,align 8
%x=bitcast i8*%m to i8**
%y=load i8*,i8**%x,align 8
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*null,i8**%f,align 8
%E=getelementptr inbounds i8,i8*%m,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
%H=call fastcc i8*%B(i8*inreg%D,i8*inreg%G)
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8*(i8*,i8*)**
%K=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%J,align 8
%L=bitcast i8*%H to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%f,align 8
%N=call i8*@sml_alloc(i32 inreg 20)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%T=getelementptr inbounds i8,i8*%N,i64 8
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%N,i64 16
%W=bitcast i8*%V to i32*
store i32 3,i32*%W,align 4
%X=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Y=call fastcc i8*%K(i8*inreg%X,i8*inreg%N)
store i8*%Y,i8**%c,align 8
%Z=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 0,i32 inreg 4)
%aa=getelementptr inbounds i8,i8*%Z,i64 16
%ab=bitcast i8*%aa to i8*(i8*,i8*)**
%ac=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ab,align 8
%ad=bitcast i8*%Z to i8**
%ae=load i8*,i8**%ad,align 8
%af=call fastcc i8*%ac(i8*inreg%ae,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h,i64 0,i32 2)to i8*))
%ag=getelementptr inbounds i8,i8*%af,i64 16
%ah=bitcast i8*%ag to i8*(i8*,i8*)**
%ai=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ah,align 8
%aj=bitcast i8*%af to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%d,align 8
%al=call i8*@sml_alloc(i32 inreg 20)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177296,i32*%an,align 4
%ao=load i8*,i8**%e,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=load i8*,i8**%c,align 8
%ar=getelementptr inbounds i8,i8*%al,i64 8
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%al,i64 16
%au=bitcast i8*%at to i32*
store i32 3,i32*%au,align 4
%av=load i8*,i8**%d,align 8
%aw=tail call fastcc i8*%ai(i8*inreg%av,i8*inreg%al)
ret i8*%aw
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination9equalListE_666(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"personality i32(...)*@sml_personality{
p:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%f,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%c,%p]
%q=bitcast i8*%o to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%f,align 8
%s=getelementptr inbounds i8,i8*%o,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%g,align 8
%v=invoke fastcc i8*@_SMLFN8ListPair7foldlEqE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
to label%w unwind label%aB
w:
%x=getelementptr inbounds i8,i8*%v,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%v to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%h,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
store i8*%C,i8**%i,align 8
%F=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
%P=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination9equalListE_663 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination9equalListE_663 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 24
%W=bitcast i8*%V to i32*
store i32 -2147483647,i32*%W,align 4
%X=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Y=invoke fastcc i8*%z(i8*inreg%X,i8*inreg%M)
to label%Z unwind label%aB
Z:
%aa=getelementptr inbounds i8,i8*%Y,i64 16
%ab=bitcast i8*%aa to i8*(i8*,i8*)**
%ac=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ab,align 8
%ad=bitcast i8*%Y to i8**
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%d,align 8
%af=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 0,i32 inreg 4)
to label%ag unwind label%aB
ag:
%ah=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ai=invoke fastcc i8*%ac(i8*inreg%ah,i8*inreg%af)
to label%aj unwind label%aB
aj:
%ak=getelementptr inbounds i8,i8*%ai,i64 16
%al=bitcast i8*%ak to i8*(i8*,i8*)**
%am=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%al,align 8
%an=bitcast i8*%ai to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%d,align 8
%ap=call i8*@sml_alloc(i32 inreg 20)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177296,i32*%ar,align 4
%as=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%at=bitcast i8*%ap to i8**
store i8*%as,i8**%at,align 8
%au=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%av=getelementptr inbounds i8,i8*%ap,i64 8
%aw=bitcast i8*%av to i8**
store i8*%au,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%ap,i64 16
%ay=bitcast i8*%ax to i32*
store i32 3,i32*%ay,align 4
%az=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aA=invoke fastcc i8*%am(i8*inreg%az,i8*inreg%ap)
to label%aZ unwind label%aB
aB:
%aC=landingpad{i8*,i8*}
catch i8*null
%aD=extractvalue{i8*,i8*}%aC,1
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*%aF,i8**%d,align 8
%aG=bitcast i8*%aF to i8**
%aH=load i8*,i8**%aG,align 8
%aI=load i8*,i8**@_SMLZN8ListPair14UnequalLengthsE,align 8
%aJ=icmp eq i8*%aH,%aI
br i1%aJ,label%aK,label%aR
aK:
store i8*null,i8**%d,align 8
%aL=call i8*@sml_alloc(i32 inreg 60)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177336,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aL,i64 56
%aP=bitcast i8*%aO to i32*
store i32 1,i32*%aP,align 4
%aQ=bitcast i8*%aL to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@j,i64 0,i32 2)to i8*),i8**%aQ,align 8
call void@sml_raise(i8*inreg%aL)#1
unreachable
aR:
%aS=call i8*@sml_alloc(i32 inreg 60)#0
%aT=getelementptr inbounds i8,i8*%aS,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177336,i32*%aU,align 4
%aV=getelementptr inbounds i8,i8*%aS,i64 56
%aW=bitcast i8*%aV to i32*
store i32 1,i32*%aW,align 4
%aX=load i8*,i8**%d,align 8
%aY=bitcast i8*%aS to i8**
store i8*%aX,i8**%aY,align 8
call void@sml_raise(i8*inreg%aS)#1
unreachable
aZ:
ret i8*%aA
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination11revealTyConE_670(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%p,i64 24
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
switch i32%u,label%v[
i32 0,label%ai
i32 2,label%X
i32 1,label%N
]
v:
store i8*null,i8**%c,align 8
call void@sml_matchcomp_bug()
%w=load i8*,i8**@_SMLZ5Match,align 8
store i8*%w,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%c,align 8
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[84x i8]}>,<{[4x i8],i32,[84x i8]}>*@l,i64 0,i32 2,i64 0),i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 60)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177336,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%G,i64 56
%K=bitcast i8*%J to i32*
store i32 1,i32*%K,align 4
%L=load i8*,i8**%c,align 8
%M=bitcast i8*%G to i8**
store i8*%L,i8**%M,align 8
call void@sml_raise(i8*inreg%G)#1
unreachable
N:
%O=getelementptr inbounds i8,i8*%s,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%c,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=load i8*,i8**%b,align 8
br label%aE
X:
%Y=getelementptr inbounds i8,i8*%s,i64 8
%Z=bitcast i8*%Y to i8***
%aa=load i8**,i8***%Z,align 8
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%c,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
%af=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=load i8*,i8**%b,align 8
br label%aE
ai:
%aj=call i8*@sml_alloc(i32 inreg 20)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177296,i32*%al,align 4
store i8*%aj,i8**%d,align 8
%am=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ap=getelementptr inbounds i8,i8*%aj,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%aj,i64 16
%as=bitcast i8*%ar to i32*
store i32 3,i32*%as,align 4
%at=call i8*@sml_alloc(i32 inreg 20)#0
%au=bitcast i8*%at to i32*
%av=getelementptr inbounds i8,i8*%at,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177296,i32*%aw,align 4
%ax=getelementptr inbounds i8,i8*%at,i64 4
%ay=bitcast i8*%ax to i32*
store i32 0,i32*%ay,align 1
store i32 2,i32*%au,align 4
%az=load i8*,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%at,i64 8
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%at,i64 16
%aD=bitcast i8*%aC to i32*
store i32 2,i32*%aD,align 4
ret i8*%at
aE:
%aF=phi i8*[%ac,%X],[%R,%N]
%aG=phi i8*[%ah,%X],[%W,%N]
%aH=phi i8*[%af,%X],[%U,%N]
%aI=getelementptr inbounds i8,i8*%aF,i64 8
%aJ=bitcast i8*%aI to i8**
store i8*%aG,i8**%aJ,align 8
%aK=getelementptr inbounds i8,i8*%aF,i64 16
%aL=bitcast i8*%aK to i32*
store i32 3,i32*%aL,align 4
%aM=bitcast i8*%aH to i32*
%aN=load i32,i32*%aM,align 4
switch i32%aN,label%aO[
i32 1,label%bo
i32 0,label%a6
]
aO:
call void@sml_matchcomp_bug()
%aP=load i8*,i8**@_SMLZ5Match,align 8
store i8*%aP,i8**%b,align 8
%aQ=call i8*@sml_alloc(i32 inreg 20)#0
%aR=getelementptr inbounds i8,i8*%aQ,i64 -4
%aS=bitcast i8*%aR to i32*
store i32 1342177296,i32*%aS,align 4
store i8*%aQ,i8**%c,align 8
%aT=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aU=bitcast i8*%aQ to i8**
store i8*%aT,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aQ,i64 8
%aW=bitcast i8*%aV to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[84x i8]}>,<{[4x i8],i32,[84x i8]}>*@k,i64 0,i32 2,i64 0),i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aQ,i64 16
%aY=bitcast i8*%aX to i32*
store i32 3,i32*%aY,align 4
%aZ=call i8*@sml_alloc(i32 inreg 60)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177336,i32*%a1,align 4
%a2=getelementptr inbounds i8,i8*%aZ,i64 56
%a3=bitcast i8*%a2 to i32*
store i32 1,i32*%a3,align 4
%a4=load i8*,i8**%c,align 8
%a5=bitcast i8*%aZ to i8**
store i8*%a4,i8**%a5,align 8
call void@sml_raise(i8*inreg%aZ)#1
unreachable
a6:
%a7=getelementptr inbounds i8,i8*%aH,i64 8
%a8=bitcast i8*%a7 to i8**
%a9=load i8*,i8**%a8,align 8
%ba=getelementptr inbounds i8,i8*%a9,i64 8
%bb=bitcast i8*%ba to i8**
%bc=load i8*,i8**%bb,align 8
store i8*%bc,i8**%b,align 8
store i8*%aG,i8**%c,align 8
%bd=call i8*@sml_alloc(i32 inreg 20)#0
%be=getelementptr inbounds i8,i8*%bd,i64 -4
%bf=bitcast i8*%be to i32*
store i32 1342177296,i32*%bf,align 4
%bg=load i8*,i8**%b,align 8
%bh=bitcast i8*%bd to i8**
store i8*%bg,i8**%bh,align 8
%bi=load i8*,i8**%c,align 8
%bj=getelementptr inbounds i8,i8*%bd,i64 8
%bk=bitcast i8*%bj to i8**
store i8*%bi,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%bd,i64 16
%bm=bitcast i8*%bl to i32*
store i32 3,i32*%bm,align 4
%bn=tail call fastcc i8*@_SMLFN11TypesBasics7tpappTyE(i8*inreg%bd)
ret i8*%bn
bo:
%bp=getelementptr inbounds i8,i8*%aH,i64 8
%bq=bitcast i8*%bp to i8**
%br=load i8*,i8**%bq,align 8
store i8*%br,i8**%b,align 8
store i8*%aG,i8**%c,align 8
%bs=call i8*@sml_alloc(i32 inreg 20)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177296,i32*%bu,align 4
store i8*%bs,i8**%d,align 8
%bv=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bw=bitcast i8*%bs to i8**
store i8*%bv,i8**%bw,align 8
%bx=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%by=getelementptr inbounds i8,i8*%bs,i64 8
%bz=bitcast i8*%by to i8**
store i8*%bx,i8**%bz,align 8
%bA=getelementptr inbounds i8,i8*%bs,i64 16
%bB=bitcast i8*%bA to i32*
store i32 3,i32*%bB,align 4
%bC=call i8*@sml_alloc(i32 inreg 20)#0
%bD=bitcast i8*%bC to i32*
%bE=getelementptr inbounds i8,i8*%bC,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177296,i32*%bF,align 4
%bG=getelementptr inbounds i8,i8*%bC,i64 4
%bH=bitcast i8*%bG to i32*
store i32 0,i32*%bH,align 1
store i32 2,i32*%bD,align 4
%bI=load i8*,i8**%d,align 8
%bJ=getelementptr inbounds i8,i8*%bC,i64 8
%bK=bitcast i8*%bJ to i8**
store i8*%bI,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bC,i64 16
%bM=bitcast i8*%bL to i32*
store i32 2,i32*%bM,align 4
ret i8*%bC
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_851(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
store i8*null,i8**%c,align 8
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
%o=icmp eq i8*%n,null
br i1%o,label%W,label%p
p:
%q=bitcast i8*%n to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=getelementptr inbounds i8,i8*%k,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
store i8*null,i8**%c,align 8
br label%W
x:
%y=bitcast i8**%d to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=bitcast i8*%u to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%d,align 8
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%D,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%D,i64 16
%M=bitcast i8*%L to i32*
store i32 3,i32*%M,align 4
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=call fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_672(i8*inreg%N,i8*inreg%D)
store i8*%O,i8**%c,align 8
%P=call i8*@sml_alloc(i32 inreg 12)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177288,i32*%R,align 4
%S=load i8*,i8**%c,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%P,i64 8
%V=bitcast i8*%U to i32*
store i32 1,i32*%V,align 4
ret i8*%P
W:
store i8*null,i8**%d,align 8
%X=call i8*@sml_alloc(i32 inreg 60)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177336,i32*%Z,align 4
%aa=getelementptr inbounds i8,i8*%X,i64 56
%ab=bitcast i8*%aa to i32*
store i32 1,i32*%ab,align 4
%ac=bitcast i8*%X to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ab,i64 0,i32 2)to i8*),i8**%ac,align 8
call void@sml_raise(i8*inreg%X)#1
unreachable
}
define internal fastcc i32@_SMLLL6subst3_856(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN14BoundTypeVarID2eqE(i8*inreg%o)
%x=icmp eq i32%w,0
br i1%x,label%z,label%y
y:
ret i32%k
z:
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=bitcast i8*%A to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aO,i64 0,i32 2)to i8*),i8**%F,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
}
define internal fastcc i32@_SMLLL6subst3_860(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN14BoundTypeVarID2eqE(i8*inreg%o)
%x=icmp eq i32%w,0
br i1%x,label%z,label%y
y:
ret i32%k
z:
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=bitcast i8*%A to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aO,i64 0,i32 2)to i8*),i8**%F,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
}
define internal fastcc i8*@_SMLLL6subst3_862(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=getelementptr inbounds i8,i8*%p,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%m,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=bitcast i8*%x to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%x,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%m,i64 16
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%e,align 8
%G=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9singletonE(i32 inreg 0,i32 inreg 4)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%f,align 8
%M=call i8*@sml_alloc(i32 inreg 12)#0
%N=bitcast i8*%M to i32*
%O=getelementptr inbounds i8,i8*%M,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177288,i32*%P,align 4
store i32%r,i32*%N,align 4
%Q=getelementptr inbounds i8,i8*%M,i64 4
%R=bitcast i8*%Q to i32*
store i32%z,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%M,i64 8
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 4
%U=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%V=call fastcc i8*%J(i8*inreg%U,i8*inreg%M)
store i8*%V,i8**%f,align 8
%W=bitcast i8**%g to i8***
%X=load i8**,i8***%W,align 8
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%g,align 8
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ak=call fastcc i8*@_SMLLLN17PolyTyElimination9equalKindE_678(i8*inreg%aj,i8*inreg%Z)
store i8*%ak,i8**%c,align 8
%al=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 0,i32 inreg 4)
%am=getelementptr inbounds i8,i8*%al,i64 16
%an=bitcast i8*%am to i8*(i8*,i8*)**
%ao=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%an,align 8
%ap=bitcast i8*%al to i8**
%aq=load i8*,i8**%ap,align 8
%ar=call fastcc i8*%ao(i8*inreg%aq,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ae,i64 0,i32 2)to i8*))
%as=getelementptr inbounds i8,i8*%ar,i64 16
%at=bitcast i8*%as to i8*(i8*,i8*)**
%au=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%at,align 8
%av=bitcast i8*%ar to i8**
%aw=load i8*,i8**%av,align 8
store i8*%aw,i8**%d,align 8
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
%aA=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ax,i64 16
%aG=bitcast i8*%aF to i32*
store i32 3,i32*%aG,align 4
%aH=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aI=call fastcc i8*%au(i8*inreg%aH,i8*inreg%ax)
store i8*%aI,i8**%c,align 8
%aJ=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 0,i32 inreg 4)
%aK=getelementptr inbounds i8,i8*%aJ,i64 16
%aL=bitcast i8*%aK to i8*(i8*,i8*)**
%aM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aL,align 8
%aN=bitcast i8*%aJ to i8**
%aO=load i8*,i8**%aN,align 8
%aP=call fastcc i8*%aM(i8*inreg%aO,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@af,i64 0,i32 2)to i8*))
%aQ=getelementptr inbounds i8,i8*%aP,i64 16
%aR=bitcast i8*%aQ to i8*(i8*,i8*)**
%aS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aR,align 8
%aT=bitcast i8*%aP to i8**
%aU=load i8*,i8**%aT,align 8
store i8*%aU,i8**%d,align 8
%aV=call i8*@sml_alloc(i32 inreg 20)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177296,i32*%aX,align 4
%aY=load i8*,i8**%c,align 8
%aZ=bitcast i8*%aV to i8**
store i8*%aY,i8**%aZ,align 8
%a0=load i8*,i8**%e,align 8
%a1=getelementptr inbounds i8,i8*%aV,i64 8
%a2=bitcast i8*%a1 to i8**
store i8*%a0,i8**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aV,i64 16
%a4=bitcast i8*%a3 to i32*
store i32 3,i32*%a4,align 4
%a5=load i8*,i8**%d,align 8
%a6=tail call fastcc i8*%aS(i8*inreg%a5,i8*inreg%aV)
ret i8*%a6
}
define internal fastcc i32@_SMLLLN17PolyTyElimination7equalTyE_867(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN14BoundTypeVarID2eqE(i8*inreg%o)
%x=icmp eq i32%w,0
br i1%x,label%z,label%y
y:
ret i32%k
z:
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=bitcast i8*%A to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aO,i64 0,i32 2)to i8*),i8**%F,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
}
define internal fastcc i32@_SMLLL5subst_871(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN14BoundTypeVarID2eqE(i8*inreg%o)
%x=icmp eq i32%w,0
br i1%x,label%z,label%y
y:
ret i32%k
z:
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=bitcast i8*%A to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aO,i64 0,i32 2)to i8*),i8**%F,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_873(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%b,align 8
%r=getelementptr inbounds i8,i8*%k,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=bitcast i8*%n to i32*
%y=load i32,i32*%x,align 4
%z=call i8*@sml_alloc(i32 inreg 8)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 805306376,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=bitcast i8*%z to i64*
store i64 0,i64*%C,align 1
%D=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%d,align 8
%J=bitcast i8**%c to i8***
%K=load i8**,i8***%J,align 8
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%c,align 8
%M=bitcast i8**%b to i8***
%N=load i8**,i8***%M,align 8
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%b,align 8
%P=call i8*@sml_alloc(i32 inreg 20)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
%S=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%V=getelementptr inbounds i8,i8*%P,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%P,i64 16
%Y=bitcast i8*%X to i32*
store i32 3,i32*%Y,align 4
%Z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aa=call fastcc i8*%G(i8*inreg%Z,i8*inreg%P)
%ab=load i8*,i8**%e,align 8
%ac=bitcast i8*%ab to i8**
call void@sml_write(i8*inreg%ab,i8**inreg%ac,i8*inreg%aa)#0
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32%y,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc void@_SMLLLN17PolyTyElimination7equalTyE_875(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
store i8*null,i8**%d,align 8
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 4
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=call fastcc i8*@_SMLFN14BoundTypeVarID3Map8inDomainE(i32 inreg 1,i32 inreg 8)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%e,align 8
%x=load i8*,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%B,i64 12
%F=bitcast i8*%E to i32*
store i32 0,i32*%F,align 1
%G=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%H=bitcast i8*%B to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 8
%J=bitcast i8*%I to i32*
store i32%n,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%B,i64 16
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%N=call fastcc i8*%u(i8*inreg%M,i8*inreg%B)
%O=bitcast i8*%N to i32*
%P=load i32,i32*%O,align 4
%Q=icmp eq i32%P,0
br i1%Q,label%ab,label%R
R:
%S=call i8*@sml_alloc(i32 inreg 12)#0
%T=bitcast i8*%S to i32*
%U=getelementptr inbounds i8,i8*%S,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177288,i32*%V,align 4
store i32%n,i32*%T,align 4
%W=getelementptr inbounds i8,i8*%S,i64 4
%X=bitcast i8*%W to i32*
store i32%q,i32*%X,align 4
%Y=getelementptr inbounds i8,i8*%S,i64 8
%Z=bitcast i8*%Y to i32*
store i32 0,i32*%Z,align 4
%aa=icmp eq i32%n,%q
br i1%aa,label%ab,label%ac
ab:
ret void
ac:
%ad=call fastcc i8*@_SMLFN9UnionFind5unionE(i32 inreg 1,i32 inreg 8)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=call fastcc i8*%ag(i8*inreg%ai,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ak,i64 0,i32 2)to i8*))
%ak=getelementptr inbounds i8,i8*%aj,i64 16
%al=bitcast i8*%ak to i8*(i8*,i8*)**
%am=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%al,align 8
%an=bitcast i8*%aj to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%e,align 8
%ap=bitcast i8**%c to i8***
%aq=load i8**,i8***%ap,align 8
%ar=load i8*,i8**%aq,align 8
%as=call fastcc i8*@_SMLLLN17PolyTyElimination8findNodeE_646(i8*inreg%ar,i32 inreg%n)
store i8*%as,i8**%d,align 8
%at=load i8**,i8***%ap,align 8
store i8*null,i8**%c,align 8
%au=load i8*,i8**%at,align 8
%av=call fastcc i8*@_SMLLLN17PolyTyElimination8findNodeE_646(i8*inreg%au,i32 inreg%q)
store i8*%av,i8**%c,align 8
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177296,i32*%ay,align 4
%az=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aC=getelementptr inbounds i8,i8*%aw,i64 8
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%aw,i64 16
%aF=bitcast i8*%aE to i32*
store i32 3,i32*%aF,align 4
%aG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aH=call fastcc i8*%am(i8*inreg%aG,i8*inreg%aw)
ret void
}
define internal fastcc i32@_SMLLLN17PolyTyElimination7equalTyE_876(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%b to i32*
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i32**
%k=load i32*,i32**%j,align 8
br label%l
l:
%m=phi i32*[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i32,i32*%m,align 4
%o=call fastcc i8*@_SMLFN14BoundTypeVarID3Map8inDomainE(i32 inreg 1,i32 inreg 8)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=bitcast i8**%c to i8***
%v=load i8**,i8***%u,align 8
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%x,i64 12
%B=bitcast i8*%A to i32*
store i32 0,i32*%B,align 1
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%x to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 8
%F=bitcast i8*%E to i32*
store i32%n,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%x,i64 16
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=call fastcc i8*%r(i8*inreg%I,i8*inreg%x)
%K=bitcast i8*%J to i32*
%L=load i32,i32*%K,align 4
%M=tail call fastcc i32@_SMLFN4Bool3notE(i32 inreg%L)
ret i32%M
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_878(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_672(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i32@_SMLLLN17PolyTyElimination18equalOverloadMatchE_893(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN14BoundTypeVarID2eqE(i8*inreg%o)
%x=icmp eq i32%w,0
br i1%x,label%z,label%y
y:
ret i32%k
z:
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=bitcast i8*%A to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aO,i64 0,i32 2)to i8*),i8**%F,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18equalOverloadMatchE_895(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%o
k:
call void@sml_check(i32 inreg%g)
%l=load i8*,i8**%c,align 8
%m=bitcast i8**%f to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%k],[%j,%i]
%q=phi i8*[%l,%k],[%b,%i]
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%s,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%q,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=load i8*,i8**%p,align 8
store i8*%B,i8**%f,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%N=call fastcc i8*@_SMLLLN17PolyTyElimination18equalOverloadMatchE_674(i8*inreg%M,i8*inreg%C)
store i8*%N,i8**%c,align 8
%O=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 0,i32 inreg 4)
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8*(i8*,i8*)**
%R=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
%U=call fastcc i8*%R(i8*inreg%T,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ay,i64 0,i32 2)to i8*))
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%d,align 8
%aa=call i8*@sml_alloc(i32 inreg 20)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177296,i32*%ac,align 4
%ad=load i8*,i8**%c,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=load i8*,i8**%e,align 8
%ag=getelementptr inbounds i8,i8*%aa,i64 8
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%aa,i64 16
%aj=bitcast i8*%ai to i32*
store i32 3,i32*%aj,align 4
%ak=load i8*,i8**%d,align 8
%al=tail call fastcc i8*%X(i8*inreg%ak,i8*inreg%aa)
ret i8*%al
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18equalOverloadMatchE_900(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
%g=icmp eq i8*%f,null
br i1%g,label%h,label%u
h:
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%m,label%n
m:
ret i8*null
n:
%o=call i8*@sml_alloc(i32 inreg 60)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177336,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%o,i64 56
%s=bitcast i8*%r to i32*
store i32 1,i32*%s,align 4
%t=bitcast i8*%o to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aC,i64 0,i32 2)to i8*),i8**%t,align 8
call void@sml_raise(i8*inreg%o)#1
unreachable
u:
%v=bitcast i8*%f to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%b,align 8
%x=getelementptr inbounds i8,i8*%a,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=icmp eq i8*%z,null
br i1%A,label%B,label%I
B:
store i8*null,i8**%b,align 8
%C=call i8*@sml_alloc(i32 inreg 60)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177336,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 56
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=bitcast i8*%C to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aA,i64 0,i32 2)to i8*),i8**%H,align 8
call void@sml_raise(i8*inreg%C)#1
unreachable
I:
%J=bitcast i8*%z to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%c,align 8
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
store i8*%L,i8**%d,align 8
%O=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%L,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 12)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177288,i32*%X,align 4
%Y=load i8*,i8**%d,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i32*
store i32 1,i32*%ab,align 4
ret i8*%V
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18equalOprimSelectorE_907(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLLN17PolyTyElimination18equalOprimSelectorE_675(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15equalConstraintE_908(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%i,align 8
store i8*%b,i8**%c,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%m,label%o
m:
%n=bitcast i8*%a to i8**
br label%s
o:
call void@sml_check(i32 inreg%k)
%p=load i8*,i8**%c,align 8
%q=bitcast i8**%i to i8***
%r=load i8**,i8***%q,align 8
br label%s
s:
%t=phi i8**[%r,%o],[%n,%m]
%u=phi i8*[%p,%o],[%b,%m]
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%y,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%d,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%e,align 8
%H=getelementptr inbounds i8,i8*%u,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%f,align 8
%O=getelementptr inbounds i8,i8*%L,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%g,align 8
%R=getelementptr inbounds i8,i8*%J,i64 16
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%h,align 8
%U=load i8*,i8**%t,align 8
store i8*%U,i8**%i,align 8
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
store i8*%V,i8**%j,align 8
%Y=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i8**
store i8*null,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
store i8*%ae,i8**%d,align 8
%ah=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ae,i64 16
%an=bitcast i8*%am to i32*
store i32 3,i32*%an,align 4
%ao=call i8*@sml_alloc(i32 inreg 20)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177296,i32*%aq,align 4
store i8*%ao,i8**%c,align 8
%ar=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%au=getelementptr inbounds i8,i8*%ao,i64 8
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ao,i64 16
%ax=bitcast i8*%aw to i32*
store i32 3,i32*%ax,align 4
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
store i8*%ay,i8**%d,align 8
%aB=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%ay,i64 8
%aE=bitcast i8*%aD to i8**
store i8*null,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ay,i64 16
%aG=bitcast i8*%aF to i32*
store i32 3,i32*%aG,align 4
%aH=call i8*@sml_alloc(i32 inreg 20)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177296,i32*%aJ,align 4
store i8*%aH,i8**%e,align 8
%aK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aL=bitcast i8*%aH to i8**
store i8*%aK,i8**%aL,align 8
%aM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aN=getelementptr inbounds i8,i8*%aH,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aH,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 3,i32*%aQ,align 4
%aR=call i8*@sml_alloc(i32 inreg 20)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177296,i32*%aT,align 4
store i8*%aR,i8**%d,align 8
%aU=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aX=getelementptr inbounds i8,i8*%aR,i64 8
%aY=bitcast i8*%aX to i8**
store i8*%aW,i8**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aR,i64 16
%a0=bitcast i8*%aZ to i32*
store i32 3,i32*%a0,align 4
%a1=call i8*@sml_alloc(i32 inreg 20)#0
%a2=getelementptr inbounds i8,i8*%a1,i64 -4
%a3=bitcast i8*%a2 to i32*
store i32 1342177296,i32*%a3,align 4
%a4=load i8*,i8**%c,align 8
%a5=bitcast i8*%a1 to i8**
store i8*%a4,i8**%a5,align 8
%a6=load i8*,i8**%d,align 8
%a7=getelementptr inbounds i8,i8*%a1,i64 8
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a1,i64 16
%ba=bitcast i8*%a9 to i32*
store i32 3,i32*%ba,align 4
%bb=load i8*,i8**%i,align 8
%bc=tail call fastcc i8*@_SMLLLN17PolyTyElimination9equalListE_666(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@m,i64 0,i32 2)to i8*),i8*inreg%bb,i8*inreg%a1)
ret i8*%bc
}
define internal fastcc i32@_SMLLLN17PolyTyElimination9equalKindE_915(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN14BoundTypeVarID2eqE(i8*inreg%o)
%x=icmp eq i32%w,0
br i1%x,label%z,label%y
y:
ret i32%k
z:
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=bitcast i8*%A to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aO,i64 0,i32 2)to i8*),i8**%F,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_672(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"personality i32(...)*@sml_personality{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
br label%j
j:
%k=phi i8*[%b,%l],[%q0,%qZ]
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%q,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%d,align 8
br label%q
q:
%r=phi i8*[%p,%o],[%k,%j]
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*null,i8**%d,align 8
%u=getelementptr inbounds i8,i8*%r,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
%x=icmp eq i8*%t,null
br i1%x,label%oB,label%y
y:
%z=bitcast i8*%t to i32*
%A=load i32,i32*%z,align 4
switch i32%A,label%B[
i32 9,label%pz
i32 0,label%o5
i32 4,label%oB
i32 3,label%ns
i32 5,label%mj
i32 10,label%k2
i32 1,label%j8
i32 6,label%iO
i32 8,label%g7
i32 2,label%eQ
i32 7,label%T
]
B:
call void@sml_matchcomp_bug()
%C=load i8*,i8**@_SMLZ5Match,align 8
store i8*%C,i8**%c,align 8
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
store i8*%D,i8**%d,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[84x i8]}>,<{[4x i8],i32,[84x i8]}>*@al,i64 0,i32 2,i64 0),i8**%J,align 8
%K=getelementptr inbounds i8,i8*%D,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 60)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177336,i32*%O,align 4
%P=getelementptr inbounds i8,i8*%M,i64 56
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
%R=load i8*,i8**%d,align 8
%S=bitcast i8*%M to i8**
store i8*%R,i8**%S,align 8
call void@sml_raise(i8*inreg%M)#1
unreachable
T:
%U=getelementptr inbounds i8,i8*%t,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%d,align 8
%Z=getelementptr inbounds i8,i8*%W,i64 8
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%e,align 8
%ac=getelementptr inbounds i8,i8*%W,i64 16
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%f,align 8
%af=icmp eq i8*%w,null
br i1%af,label%aj,label%ag
ag:
%ah=bitcast i8*%w to i32*
%ai=load i32,i32*%ah,align 4
switch i32%ai,label%aj[
i32 10,label%eD
i32 2,label%ep
i32 7,label%ak
]
aj:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
br label%t1
ak:
%al=getelementptr inbounds i8,i8*%w,i64 8
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%g,align 8
%aq=getelementptr inbounds i8,i8*%an,i64 8
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%h,align 8
%at=getelementptr inbounds i8,i8*%an,i64 16
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
store i8*%av,i8**%i,align 8
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177296,i32*%ay,align 4
%az=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aC=getelementptr inbounds i8,i8*%aw,i64 8
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%aw,i64 16
%aF=bitcast i8*%aE to i32*
store i32 3,i32*%aF,align 4
%aG=load i8*,i8**%c,align 8
%aH=call fastcc i8*@_SMLLLN17PolyTyElimination9equalListE_666(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@o,i64 0,i32 2)to i8*),i8*inreg%aG,i8*inreg%aw)
store i8*%aH,i8**%f,align 8
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
%aL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aO=getelementptr inbounds i8,i8*%aI,i64 8
%aP=bitcast i8*%aO to i8**
store i8*%aN,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aI,i64 16
%aR=bitcast i8*%aQ to i32*
store i32 3,i32*%aR,align 4
%aS=load i8*,i8**%c,align 8
%aT=call fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_672(i8*inreg%aS,i8*inreg%aI)
store i8*%aT,i8**%d,align 8
%aU=invoke fastcc i8*@_SMLFN8ListPair7foldlEqE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
to label%aV unwind label%d1
aV:
%aW=getelementptr inbounds i8,i8*%aU,i64 16
%aX=bitcast i8*%aW to i8*(i8*,i8*)**
%aY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aX,align 8
%aZ=bitcast i8*%aU to i8**
%a0=load i8*,i8**%aZ,align 8
store i8*%a0,i8**%g,align 8
%a1=call i8*@sml_alloc(i32 inreg 12)#0
%a2=getelementptr inbounds i8,i8*%a1,i64 -4
%a3=bitcast i8*%a2 to i32*
store i32 1342177288,i32*%a3,align 4
store i8*%a1,i8**%i,align 8
%a4=load i8*,i8**%c,align 8
%a5=bitcast i8*%a1 to i8**
store i8*%a4,i8**%a5,align 8
%a6=getelementptr inbounds i8,i8*%a1,i64 8
%a7=bitcast i8*%a6 to i32*
store i32 1,i32*%a7,align 4
%a8=call i8*@sml_alloc(i32 inreg 28)#0
%a9=getelementptr inbounds i8,i8*%a8,i64 -4
%ba=bitcast i8*%a9 to i32*
store i32 1342177304,i32*%ba,align 4
%bb=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bc=bitcast i8*%a8 to i8**
store i8*%bb,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a8,i64 8
%be=bitcast i8*%bd to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6subst3_862 to void(...)*),void(...)**%be,align 8
%bf=getelementptr inbounds i8,i8*%a8,i64 16
%bg=bitcast i8*%bf to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6subst3_862 to void(...)*),void(...)**%bg,align 8
%bh=getelementptr inbounds i8,i8*%a8,i64 24
%bi=bitcast i8*%bh to i32*
store i32 -2147483647,i32*%bi,align 4
%bj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bk=invoke fastcc i8*%aY(i8*inreg%bj,i8*inreg%a8)
to label%bl unwind label%d1
bl:
%bm=getelementptr inbounds i8,i8*%bk,i64 16
%bn=bitcast i8*%bm to i8*(i8*,i8*)**
%bo=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bn,align 8
%bp=bitcast i8*%bk to i8**
%bq=load i8*,i8**%bp,align 8
store i8*%bq,i8**%g,align 8
%br=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 0,i32 inreg 4)
to label%bs unwind label%d1
bs:
%bt=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bu=invoke fastcc i8*%bo(i8*inreg%bt,i8*inreg%br)
to label%bv unwind label%d1
bv:
%bw=getelementptr inbounds i8,i8*%bu,i64 16
%bx=bitcast i8*%bw to i8*(i8*,i8*)**
%by=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bx,align 8
%bz=bitcast i8*%bu to i8**
%bA=load i8*,i8**%bz,align 8
store i8*%bA,i8**%i,align 8
%bB=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map10listItemsiE(i32 inreg 1,i32 inreg 8)
to label%bC unwind label%d1
bC:
%bD=getelementptr inbounds i8,i8*%bB,i64 16
%bE=bitcast i8*%bD to i8*(i8*,i8*)**
%bF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bE,align 8
%bG=bitcast i8*%bB to i8**
%bH=load i8*,i8**%bG,align 8
%bI=load i8*,i8**%e,align 8
%bJ=invoke fastcc i8*%bF(i8*inreg%bH,i8*inreg%bI)
to label%bK unwind label%d1
bK:
store i8*%bJ,i8**%g,align 8
%bL=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map10listItemsiE(i32 inreg 1,i32 inreg 8)
to label%bM unwind label%d1
bM:
%bN=getelementptr inbounds i8,i8*%bL,i64 16
%bO=bitcast i8*%bN to i8*(i8*,i8*)**
%bP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bO,align 8
%bQ=bitcast i8*%bL to i8**
%bR=load i8*,i8**%bQ,align 8
%bS=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bT=invoke fastcc i8*%bP(i8*inreg%bR,i8*inreg%bS)
to label%bU unwind label%d1
bU:
store i8*%bT,i8**%h,align 8
%bV=call i8*@sml_alloc(i32 inreg 20)#0
%bW=getelementptr inbounds i8,i8*%bV,i64 -4
%bX=bitcast i8*%bW to i32*
store i32 1342177296,i32*%bX,align 4
%bY=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bZ=bitcast i8*%bV to i8**
store i8*%bY,i8**%bZ,align 8
%b0=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%b1=getelementptr inbounds i8,i8*%bV,i64 8
%b2=bitcast i8*%b1 to i8**
store i8*%b0,i8**%b2,align 8
%b3=getelementptr inbounds i8,i8*%bV,i64 16
%b4=bitcast i8*%b3 to i32*
store i32 3,i32*%b4,align 4
%b5=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%b6=invoke fastcc i8*%by(i8*inreg%b5,i8*inreg%bV)
to label%b7 unwind label%d1
b7:
store i8*%b6,i8**%h,align 8
%b8=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 0,i32 inreg 4)
%b9=getelementptr inbounds i8,i8*%b8,i64 16
%ca=bitcast i8*%b9 to i8*(i8*,i8*)**
%cb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ca,align 8
%cc=bitcast i8*%b8 to i8**
%cd=load i8*,i8**%cc,align 8
%ce=call fastcc i8*%cb(i8*inreg%cd,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ai,i64 0,i32 2)to i8*))
%cf=getelementptr inbounds i8,i8*%ce,i64 16
%cg=bitcast i8*%cf to i8*(i8*,i8*)**
%ch=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cg,align 8
%ci=bitcast i8*%ce to i8**
%cj=load i8*,i8**%ci,align 8
store i8*%cj,i8**%g,align 8
%ck=call i8*@sml_alloc(i32 inreg 20)#0
%cl=getelementptr inbounds i8,i8*%ck,i64 -4
%cm=bitcast i8*%cl to i32*
store i32 1342177296,i32*%cm,align 4
%cn=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%co=bitcast i8*%ck to i8**
store i8*%cn,i8**%co,align 8
%cp=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cq=getelementptr inbounds i8,i8*%ck,i64 8
%cr=bitcast i8*%cq to i8**
store i8*%cp,i8**%cr,align 8
%cs=getelementptr inbounds i8,i8*%ck,i64 16
%ct=bitcast i8*%cs to i32*
store i32 3,i32*%ct,align 4
%cu=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cv=call fastcc i8*%ch(i8*inreg%cu,i8*inreg%ck)
store i8*%cv,i8**%d,align 8
%cw=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 0,i32 inreg 4)
%cx=getelementptr inbounds i8,i8*%cw,i64 16
%cy=bitcast i8*%cx to i8*(i8*,i8*)**
%cz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cy,align 8
%cA=bitcast i8*%cw to i8**
%cB=load i8*,i8**%cA,align 8
%cC=call fastcc i8*%cz(i8*inreg%cB,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aj,i64 0,i32 2)to i8*))
%cD=getelementptr inbounds i8,i8*%cC,i64 16
%cE=bitcast i8*%cD to i8*(i8*,i8*)**
%cF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cE,align 8
%cG=bitcast i8*%cC to i8**
%cH=load i8*,i8**%cG,align 8
store i8*%cH,i8**%f,align 8
%cI=call i8*@sml_alloc(i32 inreg 20)#0
%cJ=getelementptr inbounds i8,i8*%cI,i64 -4
%cK=bitcast i8*%cJ to i32*
store i32 1342177296,i32*%cK,align 4
%cL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cM=bitcast i8*%cI to i8**
store i8*%cL,i8**%cM,align 8
%cN=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cO=getelementptr inbounds i8,i8*%cI,i64 8
%cP=bitcast i8*%cO to i8**
store i8*%cN,i8**%cP,align 8
%cQ=getelementptr inbounds i8,i8*%cI,i64 16
%cR=bitcast i8*%cQ to i32*
store i32 3,i32*%cR,align 4
%cS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cT=call fastcc i8*%cF(i8*inreg%cS,i8*inreg%cI)
store i8*%cT,i8**%d,align 8
%cU=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4appiE(i32 inreg 0,i32 inreg 4)
%cV=getelementptr inbounds i8,i8*%cU,i64 16
%cW=bitcast i8*%cV to i8*(i8*,i8*)**
%cX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cW,align 8
%cY=bitcast i8*%cU to i8**
%cZ=load i8*,i8**%cY,align 8
store i8*%cZ,i8**%f,align 8
%c0=call i8*@sml_alloc(i32 inreg 20)#0
%c1=getelementptr inbounds i8,i8*%c0,i64 -4
%c2=bitcast i8*%c1 to i32*
store i32 1342177296,i32*%c2,align 4
store i8*%c0,i8**%g,align 8
%c3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%c4=bitcast i8*%c0 to i8**
store i8*%c3,i8**%c4,align 8
%c5=load i8*,i8**%e,align 8
%c6=getelementptr inbounds i8,i8*%c0,i64 8
%c7=bitcast i8*%c6 to i8**
store i8*%c5,i8**%c7,align 8
%c8=getelementptr inbounds i8,i8*%c0,i64 16
%c9=bitcast i8*%c8 to i32*
store i32 3,i32*%c9,align 4
%da=call i8*@sml_alloc(i32 inreg 28)#0
%db=getelementptr inbounds i8,i8*%da,i64 -4
%dc=bitcast i8*%db to i32*
store i32 1342177304,i32*%dc,align 4
%dd=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%de=bitcast i8*%da to i8**
store i8*%dd,i8**%de,align 8
%df=getelementptr inbounds i8,i8*%da,i64 8
%dg=bitcast i8*%df to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLLN17PolyTyElimination7equalTyE_875 to void(...)*),void(...)**%dg,align 8
%dh=getelementptr inbounds i8,i8*%da,i64 16
%di=bitcast i8*%dh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination7equalTyE_1671 to void(...)*),void(...)**%di,align 8
%dj=getelementptr inbounds i8,i8*%da,i64 24
%dk=bitcast i8*%dj to i32*
store i32 -2147483647,i32*%dk,align 4
%dl=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dm=call fastcc i8*%cX(i8*inreg%dl,i8*inreg%da)
%dn=getelementptr inbounds i8,i8*%dm,i64 16
%do=bitcast i8*%dn to i8*(i8*,i8*)**
%dp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%do,align 8
%dq=bitcast i8*%dm to i8**
%dr=load i8*,i8**%dq,align 8
%ds=load i8*,i8**%d,align 8
%dt=call fastcc i8*%dp(i8*inreg%dr,i8*inreg%ds)
%du=call fastcc i8*@_SMLFN14BoundTypeVarID3Map7filteriE(i32 inreg 0,i32 inreg 4)
%dv=getelementptr inbounds i8,i8*%du,i64 16
%dw=bitcast i8*%dv to i8*(i8*,i8*)**
%dx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dw,align 8
%dy=bitcast i8*%du to i8**
%dz=load i8*,i8**%dy,align 8
store i8*%dz,i8**%c,align 8
%dA=call i8*@sml_alloc(i32 inreg 12)#0
%dB=getelementptr inbounds i8,i8*%dA,i64 -4
%dC=bitcast i8*%dB to i32*
store i32 1342177288,i32*%dC,align 4
store i8*%dA,i8**%f,align 8
%dD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dE=bitcast i8*%dA to i8**
store i8*%dD,i8**%dE,align 8
%dF=getelementptr inbounds i8,i8*%dA,i64 8
%dG=bitcast i8*%dF to i32*
store i32 1,i32*%dG,align 4
%dH=call i8*@sml_alloc(i32 inreg 28)#0
%dI=getelementptr inbounds i8,i8*%dH,i64 -4
%dJ=bitcast i8*%dI to i32*
store i32 1342177304,i32*%dJ,align 4
%dK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dL=bitcast i8*%dH to i8**
store i8*%dK,i8**%dL,align 8
%dM=getelementptr inbounds i8,i8*%dH,i64 8
%dN=bitcast i8*%dM to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLLN17PolyTyElimination7equalTyE_876 to void(...)*),void(...)**%dN,align 8
%dO=getelementptr inbounds i8,i8*%dH,i64 16
%dP=bitcast i8*%dO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination7equalTyE_1672 to void(...)*),void(...)**%dP,align 8
%dQ=getelementptr inbounds i8,i8*%dH,i64 24
%dR=bitcast i8*%dQ to i32*
store i32 -2147483647,i32*%dR,align 4
%dS=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dT=call fastcc i8*%dx(i8*inreg%dS,i8*inreg%dH)
%dU=getelementptr inbounds i8,i8*%dT,i64 16
%dV=bitcast i8*%dU to i8*(i8*,i8*)**
%dW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dV,align 8
%dX=bitcast i8*%dT to i8**
%dY=load i8*,i8**%dX,align 8
%dZ=load i8*,i8**%d,align 8
%d0=tail call fastcc i8*%dW(i8*inreg%dY,i8*inreg%dZ)
ret i8*%d0
d1:
%d2=landingpad{i8*,i8*}
catch i8*null
%d3=extractvalue{i8*,i8*}%d2,1
%d4=bitcast i8*%d3 to i8**
%d5=load i8*,i8**%d4,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*%d5,i8**%c,align 8
%d6=bitcast i8*%d5 to i8**
%d7=load i8*,i8**%d6,align 8
%d8=load i8*,i8**@_SMLZN8ListPair14UnequalLengthsE,align 8
%d9=icmp eq i8*%d7,%d8
br i1%d9,label%ea,label%eh
ea:
store i8*null,i8**%c,align 8
%eb=call i8*@sml_alloc(i32 inreg 60)#0
%ec=getelementptr inbounds i8,i8*%eb,i64 -4
%ed=bitcast i8*%ec to i32*
store i32 1342177336,i32*%ed,align 4
%ee=getelementptr inbounds i8,i8*%eb,i64 56
%ef=bitcast i8*%ee to i32*
store i32 1,i32*%ef,align 4
%eg=bitcast i8*%eb to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ah,i64 0,i32 2)to i8*),i8**%eg,align 8
call void@sml_raise(i8*inreg%eb)#1
unreachable
eh:
%ei=call i8*@sml_alloc(i32 inreg 60)#0
%ej=getelementptr inbounds i8,i8*%ei,i64 -4
%ek=bitcast i8*%ej to i32*
store i32 1342177336,i32*%ek,align 4
%el=getelementptr inbounds i8,i8*%ei,i64 56
%em=bitcast i8*%el to i32*
store i32 1,i32*%em,align 4
%en=load i8*,i8**%c,align 8
%eo=bitcast i8*%ei to i8**
store i8*%en,i8**%eo,align 8
call void@sml_raise(i8*inreg%ei)#1
unreachable
ep:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%eq=getelementptr inbounds i8,i8*%w,i64 8
%er=bitcast i8*%eq to i8**
%es=load i8*,i8**%er,align 8
%et=getelementptr inbounds i8,i8*%es,i64 8
%eu=bitcast i8*%et to i8**
%ev=load i8*,i8**%eu,align 8
%ew=getelementptr inbounds i8,i8*%ev,i64 24
%ex=bitcast i8*%ew to i32**
%ey=load i32*,i32**%ex,align 8
%ez=load i32,i32*%ey,align 4
switch i32%ez,label%eA[
i32 2,label%eC
i32 1,label%eB
]
eA:
store i8*null,i8**%c,align 8
br label%t1
eB:
store i8*%t,i8**%d,align 8
br label%uV
eC:
store i8*%t,i8**%d,align 8
br label%u8
eD:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%eE=getelementptr inbounds i8,i8*%w,i64 8
%eF=bitcast i8*%eE to i8***
%eG=load i8**,i8***%eF,align 8
%eH=load i8*,i8**%eG,align 8
%eI=bitcast i8*%eH to i32*
%eJ=load i32,i32*%eI,align 4
%eK=icmp eq i32%eJ,0
br i1%eK,label%eM,label%eL
eL:
store i8*null,i8**%c,align 8
br label%t1
eM:
%eN=getelementptr inbounds i8,i8*%eH,i64 8
%eO=bitcast i8*%eN to i8**
%eP=load i8*,i8**%eO,align 8
store i8*%t,i8**%d,align 8
store i8*%eP,i8**%e,align 8
br label%vJ
eQ:
%eR=getelementptr inbounds i8,i8*%t,i64 8
%eS=bitcast i8*%eR to i8**
%eT=load i8*,i8**%eS,align 8
%eU=bitcast i8*%eT to i8**
%eV=load i8*,i8**%eU,align 8
store i8*%eV,i8**%d,align 8
%eW=getelementptr inbounds i8,i8*%eT,i64 8
%eX=bitcast i8*%eW to i8**
%eY=load i8*,i8**%eX,align 8
%eZ=getelementptr inbounds i8,i8*%eY,i64 24
%e0=bitcast i8*%eZ to i32**
%e1=load i32*,i32**%e0,align 8
%e2=load i32,i32*%e1,align 4
switch i32%e2,label%e3[
i32 2,label%gA
i32 1,label%f3
]
e3:
%e4=icmp eq i8*%w,null
br i1%e4,label%e8,label%e5
e5:
%e6=bitcast i8*%w to i32*
%e7=load i32,i32*%e6,align 4
switch i32%e7,label%e8[
i32 10,label%fQ
i32 2,label%e9
]
e8:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
br label%t8
e9:
%fa=getelementptr inbounds i8,i8*%w,i64 8
%fb=bitcast i8*%fa to i8**
%fc=load i8*,i8**%fb,align 8
%fd=bitcast i8*%fc to i8**
%fe=load i8*,i8**%fd,align 8
store i8*%fe,i8**%e,align 8
%ff=getelementptr inbounds i8,i8*%fc,i64 8
%fg=bitcast i8*%ff to i8**
%fh=load i8*,i8**%fg,align 8
%fi=getelementptr inbounds i8,i8*%fh,i64 24
%fj=bitcast i8*%fi to i32**
%fk=load i32*,i32**%fj,align 8
%fl=load i32,i32*%fk,align 4
switch i32%fl,label%fm[
i32 2,label%fP
i32 1,label%fO
]
fm:
%fn=getelementptr inbounds i8,i8*%eY,i64 40
%fo=bitcast i8*%fn to i32*
%fp=load i32,i32*%fo,align 4
%fq=getelementptr inbounds i8,i8*%fh,i64 40
%fr=bitcast i8*%fq to i32*
%fs=load i32,i32*%fr,align 4
%ft=icmp eq i32%fp,%fs
br i1%ft,label%fu,label%fH
fu:
%fv=call i8*@sml_alloc(i32 inreg 20)#0
%fw=getelementptr inbounds i8,i8*%fv,i64 -4
%fx=bitcast i8*%fw to i32*
store i32 1342177296,i32*%fx,align 4
%fy=load i8*,i8**%d,align 8
%fz=bitcast i8*%fv to i8**
store i8*%fy,i8**%fz,align 8
%fA=load i8*,i8**%e,align 8
%fB=getelementptr inbounds i8,i8*%fv,i64 8
%fC=bitcast i8*%fB to i8**
store i8*%fA,i8**%fC,align 8
%fD=getelementptr inbounds i8,i8*%fv,i64 16
%fE=bitcast i8*%fD to i32*
store i32 3,i32*%fE,align 4
%fF=load i8*,i8**%c,align 8
%fG=tail call fastcc i8*@_SMLLLN17PolyTyElimination9equalListE_666(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@m,i64 0,i32 2)to i8*),i8*inreg%fF,i8*inreg%fv)
ret i8*%fG
fH:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%fI=call i8*@sml_alloc(i32 inreg 60)#0
%fJ=getelementptr inbounds i8,i8*%fI,i64 -4
%fK=bitcast i8*%fJ to i32*
store i32 1342177336,i32*%fK,align 4
%fL=getelementptr inbounds i8,i8*%fI,i64 56
%fM=bitcast i8*%fL to i32*
store i32 1,i32*%fM,align 4
%fN=bitcast i8*%fI to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ad,i64 0,i32 2)to i8*),i8**%fN,align 8
call void@sml_raise(i8*inreg%fI)#1
unreachable
fO:
store i8*null,i8**%e,align 8
store i8*%t,i8**%d,align 8
br label%uV
fP:
store i8*null,i8**%e,align 8
store i8*%t,i8**%d,align 8
br label%u8
fQ:
store i8*null,i8**%d,align 8
%fR=getelementptr inbounds i8,i8*%w,i64 8
%fS=bitcast i8*%fR to i8***
%fT=load i8**,i8***%fS,align 8
%fU=load i8*,i8**%fT,align 8
%fV=bitcast i8*%fU to i32*
%fW=load i32,i32*%fV,align 4
%fX=icmp eq i32%fW,0
br i1%fX,label%fZ,label%fY
fY:
store i8*null,i8**%c,align 8
br label%t8
fZ:
%f0=getelementptr inbounds i8,i8*%fU,i64 8
%f1=bitcast i8*%f0 to i8**
%f2=load i8*,i8**%f1,align 8
store i8*%t,i8**%d,align 8
store i8*%f2,i8**%e,align 8
br label%vJ
f3:
store i8*null,i8**%d,align 8
%f4=icmp eq i8*%w,null
br i1%f4,label%f8,label%f5
f5:
%f6=bitcast i8*%w to i32*
%f7=load i32,i32*%f6,align 4
switch i32%f7,label%f8[
i32 10,label%gn
i32 2,label%f9
]
f8:
store i8*%w,i8**%d,align 8
br label%vl
f9:
%ga=getelementptr inbounds i8,i8*%w,i64 8
%gb=bitcast i8*%ga to i8**
%gc=load i8*,i8**%gb,align 8
%gd=getelementptr inbounds i8,i8*%gc,i64 8
%ge=bitcast i8*%gd to i8**
%gf=load i8*,i8**%ge,align 8
%gg=getelementptr inbounds i8,i8*%gf,i64 24
%gh=bitcast i8*%gg to i32**
%gi=load i32*,i32**%gh,align 8
%gj=load i32,i32*%gi,align 4
switch i32%gj,label%gk[
i32 2,label%gm
i32 1,label%gl
]
gk:
store i8*%w,i8**%d,align 8
br label%vl
gl:
store i8*%w,i8**%d,align 8
br label%vl
gm:
store i8*%w,i8**%d,align 8
br label%vl
gn:
%go=getelementptr inbounds i8,i8*%w,i64 8
%gp=bitcast i8*%go to i8***
%gq=load i8**,i8***%gp,align 8
%gr=load i8*,i8**%gq,align 8
%gs=bitcast i8*%gr to i32*
%gt=load i32,i32*%gs,align 4
%gu=icmp eq i32%gt,0
br i1%gu,label%gw,label%gv
gv:
store i8*%w,i8**%d,align 8
br label%vl
gw:
%gx=getelementptr inbounds i8,i8*%gr,i64 8
%gy=bitcast i8*%gx to i8**
%gz=load i8*,i8**%gy,align 8
store i8*%t,i8**%d,align 8
store i8*%gz,i8**%e,align 8
br label%vJ
gA:
store i8*null,i8**%d,align 8
%gB=icmp eq i8*%w,null
br i1%gB,label%gF,label%gC
gC:
%gD=bitcast i8*%w to i32*
%gE=load i32,i32*%gD,align 4
switch i32%gE,label%gF[
i32 10,label%gU
i32 2,label%gG
]
gF:
store i8*%w,i8**%d,align 8
br label%vx
gG:
%gH=getelementptr inbounds i8,i8*%w,i64 8
%gI=bitcast i8*%gH to i8**
%gJ=load i8*,i8**%gI,align 8
%gK=getelementptr inbounds i8,i8*%gJ,i64 8
%gL=bitcast i8*%gK to i8**
%gM=load i8*,i8**%gL,align 8
%gN=getelementptr inbounds i8,i8*%gM,i64 24
%gO=bitcast i8*%gN to i32**
%gP=load i32*,i32**%gO,align 8
%gQ=load i32,i32*%gP,align 4
switch i32%gQ,label%gR[
i32 2,label%gT
i32 1,label%gS
]
gR:
store i8*%w,i8**%d,align 8
br label%vx
gS:
store i8*%w,i8**%d,align 8
br label%vx
gT:
store i8*%w,i8**%d,align 8
br label%vx
gU:
%gV=getelementptr inbounds i8,i8*%w,i64 8
%gW=bitcast i8*%gV to i8***
%gX=load i8**,i8***%gW,align 8
%gY=load i8*,i8**%gX,align 8
%gZ=bitcast i8*%gY to i32*
%g0=load i32,i32*%gZ,align 4
%g1=icmp eq i32%g0,0
br i1%g1,label%g3,label%g2
g2:
store i8*%w,i8**%d,align 8
br label%vx
g3:
%g4=getelementptr inbounds i8,i8*%gY,i64 8
%g5=bitcast i8*%g4 to i8**
%g6=load i8*,i8**%g5,align 8
store i8*%t,i8**%d,align 8
store i8*%g6,i8**%e,align 8
br label%vJ
g7:
%g8=getelementptr inbounds i8,i8*%t,i64 8
%g9=bitcast i8*%g8 to i8**
%ha=load i8*,i8**%g9,align 8
store i8*%ha,i8**%d,align 8
%hb=icmp eq i8*%w,null
br i1%hb,label%hf,label%hc
hc:
%hd=bitcast i8*%w to i32*
%he=load i32,i32*%hd,align 4
switch i32%he,label%hf[
i32 10,label%iB
i32 8,label%hu
i32 2,label%hg
]
hf:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
br label%uf
hg:
store i8*null,i8**%d,align 8
%hh=getelementptr inbounds i8,i8*%w,i64 8
%hi=bitcast i8*%hh to i8**
%hj=load i8*,i8**%hi,align 8
%hk=getelementptr inbounds i8,i8*%hj,i64 8
%hl=bitcast i8*%hk to i8**
%hm=load i8*,i8**%hl,align 8
%hn=getelementptr inbounds i8,i8*%hm,i64 24
%ho=bitcast i8*%hn to i32**
%hp=load i32*,i32**%ho,align 8
%hq=load i32,i32*%hp,align 4
switch i32%hq,label%hr[
i32 2,label%ht
i32 1,label%hs
]
hr:
store i8*null,i8**%c,align 8
br label%uf
hs:
store i8*%t,i8**%d,align 8
br label%uV
ht:
store i8*%t,i8**%d,align 8
br label%u8
hu:
%hv=getelementptr inbounds i8,i8*%w,i64 8
%hw=bitcast i8*%hv to i8**
%hx=load i8*,i8**%hw,align 8
store i8*%hx,i8**%e,align 8
%hy=call fastcc i8*@_SMLFN11RecordLabel3Map5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%hz=getelementptr inbounds i8,i8*%hy,i64 16
%hA=bitcast i8*%hz to i8*(i8*,i8*)**
%hB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hA,align 8
%hC=bitcast i8*%hy to i8**
%hD=load i8*,i8**%hC,align 8
%hE=call fastcc i8*%hB(i8*inreg%hD,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g,i64 0,i32 2)to i8*))
%hF=getelementptr inbounds i8,i8*%hE,i64 16
%hG=bitcast i8*%hF to i8*(i8*,i8*)**
%hH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hG,align 8
%hI=bitcast i8*%hE to i8**
%hJ=load i8*,i8**%hI,align 8
store i8*%hJ,i8**%f,align 8
%hK=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 0,i32 inreg 4)
%hL=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%hM=call fastcc i8*%hH(i8*inreg%hL,i8*inreg%hK)
%hN=getelementptr inbounds i8,i8*%hM,i64 16
%hO=bitcast i8*%hN to i8*(i8*,i8*)**
%hP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hO,align 8
%hQ=bitcast i8*%hM to i8**
%hR=load i8*,i8**%hQ,align 8
store i8*%hR,i8**%g,align 8
%hS=call fastcc i8*@_SMLFN11RecordLabel3Map9mergeWithE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%hT=getelementptr inbounds i8,i8*%hS,i64 16
%hU=bitcast i8*%hT to i8*(i8*,i8*)**
%hV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hU,align 8
%hW=bitcast i8*%hS to i8**
%hX=load i8*,i8**%hW,align 8
store i8*%hX,i8**%f,align 8
%hY=call i8*@sml_alloc(i32 inreg 12)#0
%hZ=getelementptr inbounds i8,i8*%hY,i64 -4
%h0=bitcast i8*%hZ to i32*
store i32 1342177288,i32*%h0,align 4
store i8*%hY,i8**%h,align 8
%h1=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%h2=bitcast i8*%hY to i8**
store i8*%h1,i8**%h2,align 8
%h3=getelementptr inbounds i8,i8*%hY,i64 8
%h4=bitcast i8*%h3 to i32*
store i32 1,i32*%h4,align 4
%h5=call i8*@sml_alloc(i32 inreg 28)#0
%h6=getelementptr inbounds i8,i8*%h5,i64 -4
%h7=bitcast i8*%h6 to i32*
store i32 1342177304,i32*%h7,align 4
%h8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%h9=bitcast i8*%h5 to i8**
store i8*%h8,i8**%h9,align 8
%ia=getelementptr inbounds i8,i8*%h5,i64 8
%ib=bitcast i8*%ia to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination7equalTyE_851 to void(...)*),void(...)**%ib,align 8
%ic=getelementptr inbounds i8,i8*%h5,i64 16
%id=bitcast i8*%ic to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination7equalTyE_851 to void(...)*),void(...)**%id,align 8
%ie=getelementptr inbounds i8,i8*%h5,i64 24
%if=bitcast i8*%ie to i32*
store i32 -2147483647,i32*%if,align 4
%ig=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ih=call fastcc i8*%hV(i8*inreg%ig,i8*inreg%h5)
%ii=getelementptr inbounds i8,i8*%ih,i64 16
%ij=bitcast i8*%ii to i8*(i8*,i8*)**
%ik=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ij,align 8
%il=bitcast i8*%ih to i8**
%im=load i8*,i8**%il,align 8
store i8*%im,i8**%c,align 8
%in=call i8*@sml_alloc(i32 inreg 20)#0
%io=getelementptr inbounds i8,i8*%in,i64 -4
%ip=bitcast i8*%io to i32*
store i32 1342177296,i32*%ip,align 4
%iq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ir=bitcast i8*%in to i8**
store i8*%iq,i8**%ir,align 8
%is=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%it=getelementptr inbounds i8,i8*%in,i64 8
%iu=bitcast i8*%it to i8**
store i8*%is,i8**%iu,align 8
%iv=getelementptr inbounds i8,i8*%in,i64 16
%iw=bitcast i8*%iv to i32*
store i32 3,i32*%iw,align 4
%ix=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%iy=call fastcc i8*%ik(i8*inreg%ix,i8*inreg%in)
%iz=load i8*,i8**%g,align 8
%iA=tail call fastcc i8*%hP(i8*inreg%iz,i8*inreg%iy)
ret i8*%iA
iB:
store i8*null,i8**%d,align 8
%iC=getelementptr inbounds i8,i8*%w,i64 8
%iD=bitcast i8*%iC to i8***
%iE=load i8**,i8***%iD,align 8
%iF=load i8*,i8**%iE,align 8
%iG=bitcast i8*%iF to i32*
%iH=load i32,i32*%iG,align 4
%iI=icmp eq i32%iH,0
br i1%iI,label%iK,label%iJ
iJ:
store i8*null,i8**%c,align 8
br label%uf
iK:
%iL=getelementptr inbounds i8,i8*%iF,i64 8
%iM=bitcast i8*%iL to i8**
%iN=load i8*,i8**%iM,align 8
store i8*%t,i8**%d,align 8
store i8*%iN,i8**%e,align 8
br label%vJ
iO:
%iP=getelementptr inbounds i8,i8*%t,i64 8
%iQ=bitcast i8*%iP to i8**
%iR=load i8*,i8**%iQ,align 8
%iS=bitcast i8*%iR to i8**
%iT=load i8*,i8**%iS,align 8
store i8*%iT,i8**%d,align 8
%iU=getelementptr inbounds i8,i8*%iR,i64 8
%iV=bitcast i8*%iU to i8**
%iW=load i8*,i8**%iV,align 8
store i8*%iW,i8**%e,align 8
%iX=icmp eq i8*%w,null
br i1%iX,label%i1,label%iY
iY:
%iZ=bitcast i8*%w to i32*
%i0=load i32,i32*%iZ,align 4
switch i32%i0,label%i1[
i32 10,label%jV
i32 6,label%jg
i32 2,label%i2
]
i1:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
br label%um
i2:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%i3=getelementptr inbounds i8,i8*%w,i64 8
%i4=bitcast i8*%i3 to i8**
%i5=load i8*,i8**%i4,align 8
%i6=getelementptr inbounds i8,i8*%i5,i64 8
%i7=bitcast i8*%i6 to i8**
%i8=load i8*,i8**%i7,align 8
%i9=getelementptr inbounds i8,i8*%i8,i64 24
%ja=bitcast i8*%i9 to i32**
%jb=load i32*,i32**%ja,align 8
%jc=load i32,i32*%jb,align 4
switch i32%jc,label%jd[
i32 2,label%jf
i32 1,label%je
]
jd:
store i8*null,i8**%c,align 8
br label%um
je:
store i8*%t,i8**%d,align 8
br label%uV
jf:
store i8*%t,i8**%d,align 8
br label%u8
jg:
%jh=getelementptr inbounds i8,i8*%w,i64 8
%ji=bitcast i8*%jh to i8**
%jj=load i8*,i8**%ji,align 8
%jk=bitcast i8*%jj to i8**
%jl=load i8*,i8**%jk,align 8
store i8*%jl,i8**%f,align 8
%jm=getelementptr inbounds i8,i8*%jj,i64 8
%jn=bitcast i8*%jm to i8**
%jo=load i8*,i8**%jn,align 8
store i8*%jo,i8**%g,align 8
%jp=call i8*@sml_alloc(i32 inreg 20)#0
%jq=getelementptr inbounds i8,i8*%jp,i64 -4
%jr=bitcast i8*%jq to i32*
store i32 1342177296,i32*%jr,align 4
store i8*%jp,i8**%h,align 8
%js=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%jt=bitcast i8*%jp to i8**
store i8*%js,i8**%jt,align 8
%ju=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%jv=getelementptr inbounds i8,i8*%jp,i64 8
%jw=bitcast i8*%jv to i8**
store i8*%ju,i8**%jw,align 8
%jx=getelementptr inbounds i8,i8*%jp,i64 16
%jy=bitcast i8*%jx to i32*
store i32 3,i32*%jy,align 4
%jz=call i8*@sml_alloc(i32 inreg 20)#0
%jA=getelementptr inbounds i8,i8*%jz,i64 -4
%jB=bitcast i8*%jA to i32*
store i32 1342177296,i32*%jB,align 4
store i8*%jz,i8**%d,align 8
%jC=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%jD=bitcast i8*%jz to i8**
store i8*%jC,i8**%jD,align 8
%jE=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%jF=getelementptr inbounds i8,i8*%jz,i64 8
%jG=bitcast i8*%jF to i8**
store i8*%jE,i8**%jG,align 8
%jH=getelementptr inbounds i8,i8*%jz,i64 16
%jI=bitcast i8*%jH to i32*
store i32 3,i32*%jI,align 4
%jJ=call i8*@sml_alloc(i32 inreg 20)#0
%jK=getelementptr inbounds i8,i8*%jJ,i64 -4
%jL=bitcast i8*%jK to i32*
store i32 1342177296,i32*%jL,align 4
%jM=load i8*,i8**%h,align 8
%jN=bitcast i8*%jJ to i8**
store i8*%jM,i8**%jN,align 8
%jO=load i8*,i8**%d,align 8
%jP=getelementptr inbounds i8,i8*%jJ,i64 8
%jQ=bitcast i8*%jP to i8**
store i8*%jO,i8**%jQ,align 8
%jR=getelementptr inbounds i8,i8*%jJ,i64 16
%jS=bitcast i8*%jR to i32*
store i32 3,i32*%jS,align 4
%jT=load i8*,i8**%c,align 8
%jU=tail call fastcc i8*@_SMLLLN17PolyTyElimination9equalListE_666(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@m,i64 0,i32 2)to i8*),i8*inreg%jT,i8*inreg%jJ)
ret i8*%jU
jV:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%jW=getelementptr inbounds i8,i8*%w,i64 8
%jX=bitcast i8*%jW to i8***
%jY=load i8**,i8***%jX,align 8
%jZ=load i8*,i8**%jY,align 8
%j0=bitcast i8*%jZ to i32*
%j1=load i32,i32*%j0,align 4
%j2=icmp eq i32%j1,0
br i1%j2,label%j4,label%j3
j3:
store i8*null,i8**%c,align 8
br label%um
j4:
%j5=getelementptr inbounds i8,i8*%jZ,i64 8
%j6=bitcast i8*%j5 to i8**
%j7=load i8*,i8**%j6,align 8
store i8*%t,i8**%d,align 8
store i8*%j7,i8**%e,align 8
br label%vJ
j8:
%j9=icmp eq i8*%w,null
br i1%j9,label%kd,label%ka
ka:
%kb=bitcast i8*%w to i32*
%kc=load i32,i32*%kb,align 4
switch i32%kc,label%kd[
i32 10,label%kP
i32 1,label%ks
i32 2,label%ke
]
kd:
store i8*null,i8**%c,align 8
br label%ut
ke:
%kf=getelementptr inbounds i8,i8*%w,i64 8
%kg=bitcast i8*%kf to i8**
%kh=load i8*,i8**%kg,align 8
%ki=getelementptr inbounds i8,i8*%kh,i64 8
%kj=bitcast i8*%ki to i8**
%kk=load i8*,i8**%kj,align 8
%kl=getelementptr inbounds i8,i8*%kk,i64 24
%km=bitcast i8*%kl to i32**
%kn=load i32*,i32**%km,align 8
%ko=load i32,i32*%kn,align 4
switch i32%ko,label%kp[
i32 2,label%kr
i32 1,label%kq
]
kp:
store i8*null,i8**%c,align 8
br label%ut
kq:
store i8*%t,i8**%d,align 8
br label%uV
kr:
store i8*%t,i8**%d,align 8
br label%u8
ks:
%kt=getelementptr inbounds i8,i8*%t,i64 4
%ku=bitcast i8*%kt to i32*
%kv=load i32,i32*%ku,align 4
store i8*null,i8**%c,align 8
%kw=getelementptr inbounds i8,i8*%w,i64 4
%kx=bitcast i8*%kw to i32*
%ky=load i32,i32*%kx,align 4
%kz=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9singletonE(i32 inreg 0,i32 inreg 4)
%kA=getelementptr inbounds i8,i8*%kz,i64 16
%kB=bitcast i8*%kA to i8*(i8*,i8*)**
%kC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kB,align 8
%kD=bitcast i8*%kz to i8**
%kE=load i8*,i8**%kD,align 8
store i8*%kE,i8**%c,align 8
%kF=call i8*@sml_alloc(i32 inreg 12)#0
%kG=bitcast i8*%kF to i32*
%kH=getelementptr inbounds i8,i8*%kF,i64 -4
%kI=bitcast i8*%kH to i32*
store i32 1342177288,i32*%kI,align 4
store i32%kv,i32*%kG,align 4
%kJ=getelementptr inbounds i8,i8*%kF,i64 4
%kK=bitcast i8*%kJ to i32*
store i32%ky,i32*%kK,align 4
%kL=getelementptr inbounds i8,i8*%kF,i64 8
%kM=bitcast i8*%kL to i32*
store i32 0,i32*%kM,align 4
%kN=load i8*,i8**%c,align 8
%kO=tail call fastcc i8*%kC(i8*inreg%kN,i8*inreg%kF)
ret i8*%kO
kP:
%kQ=getelementptr inbounds i8,i8*%w,i64 8
%kR=bitcast i8*%kQ to i8***
%kS=load i8**,i8***%kR,align 8
%kT=load i8*,i8**%kS,align 8
%kU=bitcast i8*%kT to i32*
%kV=load i32,i32*%kU,align 4
%kW=icmp eq i32%kV,0
br i1%kW,label%kY,label%kX
kX:
store i8*null,i8**%c,align 8
br label%ut
kY:
%kZ=getelementptr inbounds i8,i8*%kT,i64 8
%k0=bitcast i8*%kZ to i8**
%k1=load i8*,i8**%k0,align 8
store i8*%t,i8**%d,align 8
store i8*%k1,i8**%e,align 8
br label%vJ
k2:
%k3=getelementptr inbounds i8,i8*%t,i64 8
%k4=bitcast i8*%k3 to i8***
%k5=load i8**,i8***%k4,align 8
%k6=load i8*,i8**%k5,align 8
%k7=bitcast i8*%k6 to i32*
%k8=load i32,i32*%k7,align 4
switch i32%k8,label%k9[
i32 1,label%lP
i32 0,label%lr
]
k9:
call void@sml_matchcomp_bug()
%la=load i8*,i8**@_SMLZ5Match,align 8
store i8*%la,i8**%c,align 8
%lb=call i8*@sml_alloc(i32 inreg 20)#0
%lc=getelementptr inbounds i8,i8*%lb,i64 -4
%ld=bitcast i8*%lc to i32*
store i32 1342177296,i32*%ld,align 4
store i8*%lb,i8**%d,align 8
%le=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%lf=bitcast i8*%lb to i8**
store i8*%le,i8**%lf,align 8
%lg=getelementptr inbounds i8,i8*%lb,i64 8
%lh=bitcast i8*%lg to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[84x i8]}>,<{[4x i8],i32,[84x i8]}>*@al,i64 0,i32 2,i64 0),i8**%lh,align 8
%li=getelementptr inbounds i8,i8*%lb,i64 16
%lj=bitcast i8*%li to i32*
store i32 3,i32*%lj,align 4
%lk=call i8*@sml_alloc(i32 inreg 60)#0
%ll=getelementptr inbounds i8,i8*%lk,i64 -4
%lm=bitcast i8*%ll to i32*
store i32 1342177336,i32*%lm,align 4
%ln=getelementptr inbounds i8,i8*%lk,i64 56
%lo=bitcast i8*%ln to i32*
store i32 1,i32*%lo,align 4
%lp=load i8*,i8**%d,align 8
%lq=bitcast i8*%lk to i8**
store i8*%lp,i8**%lq,align 8
call void@sml_raise(i8*inreg%lk)#1
unreachable
lr:
%ls=getelementptr inbounds i8,i8*%k6,i64 8
%lt=bitcast i8*%ls to i8**
%lu=load i8*,i8**%lt,align 8
%lv=icmp eq i8*%w,null
br i1%lv,label%lz,label%lw
lw:
%lx=bitcast i8*%w to i32*
%ly=load i32,i32*%lx,align 4
switch i32%ly,label%lz[
i32 10,label%lO
i32 2,label%lA
]
lz:
store i8*%lu,i8**%d,align 8
store i8*%w,i8**%e,align 8
br label%vU
lA:
%lB=getelementptr inbounds i8,i8*%w,i64 8
%lC=bitcast i8*%lB to i8**
%lD=load i8*,i8**%lC,align 8
%lE=getelementptr inbounds i8,i8*%lD,i64 8
%lF=bitcast i8*%lE to i8**
%lG=load i8*,i8**%lF,align 8
%lH=getelementptr inbounds i8,i8*%lG,i64 24
%lI=bitcast i8*%lH to i32**
%lJ=load i32*,i32**%lI,align 8
%lK=load i32,i32*%lJ,align 4
switch i32%lK,label%lL[
i32 2,label%lN
i32 1,label%lM
]
lL:
store i8*%lu,i8**%d,align 8
store i8*%w,i8**%e,align 8
br label%vU
lM:
store i8*%lu,i8**%d,align 8
store i8*%w,i8**%e,align 8
br label%vU
lN:
store i8*%lu,i8**%d,align 8
store i8*%w,i8**%e,align 8
br label%vU
lO:
store i8*%lu,i8**%d,align 8
store i8*%w,i8**%e,align 8
br label%vU
lP:
%lQ=icmp eq i8*%w,null
br i1%lQ,label%sX,label%lR
lR:
%lS=bitcast i8*%w to i32*
%lT=load i32,i32*%lS,align 4
switch i32%lT,label%sX[
i32 10,label%l7
i32 2,label%lU
]
lU:
%lV=getelementptr inbounds i8,i8*%w,i64 8
%lW=bitcast i8*%lV to i8**
%lX=load i8*,i8**%lW,align 8
%lY=getelementptr inbounds i8,i8*%lX,i64 8
%lZ=bitcast i8*%lY to i8**
%l0=load i8*,i8**%lZ,align 8
%l1=getelementptr inbounds i8,i8*%l0,i64 24
%l2=bitcast i8*%l1 to i32**
%l3=load i32*,i32**%l2,align 8
%l4=load i32,i32*%l3,align 4
switch i32%l4,label%sX[
i32 2,label%l6
i32 1,label%l5
]
l5:
store i8*%t,i8**%d,align 8
br label%uV
l6:
store i8*%t,i8**%d,align 8
br label%u8
l7:
%l8=getelementptr inbounds i8,i8*%w,i64 8
%l9=bitcast i8*%l8 to i8***
%ma=load i8**,i8***%l9,align 8
%mb=load i8*,i8**%ma,align 8
%mc=bitcast i8*%mb to i32*
%md=load i32,i32*%mc,align 4
%me=icmp eq i32%md,0
br i1%me,label%mf,label%sX
mf:
%mg=getelementptr inbounds i8,i8*%mb,i64 8
%mh=bitcast i8*%mg to i8**
%mi=load i8*,i8**%mh,align 8
store i8*%t,i8**%d,align 8
store i8*%mi,i8**%e,align 8
br label%vJ
mj:
%mk=getelementptr inbounds i8,i8*%t,i64 8
%ml=bitcast i8*%mk to i8**
%mm=load i8*,i8**%ml,align 8
%mn=bitcast i8*%mm to i32*
%mo=load i32,i32*%mn,align 4
%mp=getelementptr inbounds i8,i8*%mm,i64 8
%mq=bitcast i8*%mp to i8**
%mr=load i8*,i8**%mq,align 8
store i8*%mr,i8**%d,align 8
%ms=icmp eq i8*%w,null
br i1%ms,label%mw,label%mt
mt:
%mu=bitcast i8*%w to i32*
%mv=load i32,i32*%mu,align 4
switch i32%mv,label%mw[
i32 5,label%mY
i32 10,label%mL
i32 2,label%mx
]
mw:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
br label%uA
mx:
store i8*null,i8**%d,align 8
%my=getelementptr inbounds i8,i8*%w,i64 8
%mz=bitcast i8*%my to i8**
%mA=load i8*,i8**%mz,align 8
%mB=getelementptr inbounds i8,i8*%mA,i64 8
%mC=bitcast i8*%mB to i8**
%mD=load i8*,i8**%mC,align 8
%mE=getelementptr inbounds i8,i8*%mD,i64 24
%mF=bitcast i8*%mE to i32**
%mG=load i32*,i32**%mF,align 8
%mH=load i32,i32*%mG,align 4
switch i32%mH,label%mI[
i32 2,label%mK
i32 1,label%mJ
]
mI:
store i8*null,i8**%c,align 8
br label%uA
mJ:
store i8*%t,i8**%d,align 8
br label%uV
mK:
store i8*%t,i8**%d,align 8
br label%u8
mL:
store i8*null,i8**%d,align 8
%mM=getelementptr inbounds i8,i8*%w,i64 8
%mN=bitcast i8*%mM to i8***
%mO=load i8**,i8***%mN,align 8
%mP=load i8*,i8**%mO,align 8
%mQ=bitcast i8*%mP to i32*
%mR=load i32,i32*%mQ,align 4
%mS=icmp eq i32%mR,0
br i1%mS,label%mU,label%mT
mT:
store i8*null,i8**%c,align 8
br label%uA
mU:
%mV=getelementptr inbounds i8,i8*%mP,i64 8
%mW=bitcast i8*%mV to i8**
%mX=load i8*,i8**%mW,align 8
store i8*%t,i8**%d,align 8
store i8*%mX,i8**%e,align 8
br label%vJ
mY:
%mZ=getelementptr inbounds i8,i8*%w,i64 8
%m0=bitcast i8*%mZ to i8**
%m1=load i8*,i8**%m0,align 8
%m2=bitcast i8*%m1 to i32*
%m3=load i32,i32*%m2,align 4
%m4=getelementptr inbounds i8,i8*%m1,i64 8
%m5=bitcast i8*%m4 to i8**
%m6=load i8*,i8**%m5,align 8
store i8*%m6,i8**%e,align 8
%m7=icmp eq i32%mo,%m3
br i1%m7,label%m8,label%nl
m8:
%m9=call i8*@sml_alloc(i32 inreg 20)#0
%na=getelementptr inbounds i8,i8*%m9,i64 -4
%nb=bitcast i8*%na to i32*
store i32 1342177296,i32*%nb,align 4
%nc=load i8*,i8**%d,align 8
%nd=bitcast i8*%m9 to i8**
store i8*%nc,i8**%nd,align 8
%ne=load i8*,i8**%e,align 8
%nf=getelementptr inbounds i8,i8*%m9,i64 8
%ng=bitcast i8*%nf to i8**
store i8*%ne,i8**%ng,align 8
%nh=getelementptr inbounds i8,i8*%m9,i64 16
%ni=bitcast i8*%nh to i32*
store i32 3,i32*%ni,align 4
%nj=load i8*,i8**%c,align 8
%nk=tail call fastcc i8*@_SMLLLN17PolyTyElimination9equalKindE_678(i8*inreg%nj,i8*inreg%m9)
ret i8*%nk
nl:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%nm=call i8*@sml_alloc(i32 inreg 60)#0
%nn=getelementptr inbounds i8,i8*%nm,i64 -4
%no=bitcast i8*%nn to i32*
store i32 1342177336,i32*%no,align 4
%np=getelementptr inbounds i8,i8*%nm,i64 56
%nq=bitcast i8*%np to i32*
store i32 1,i32*%nq,align 4
%nr=bitcast i8*%nm to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@Z,i64 0,i32 2)to i8*),i8**%nr,align 8
call void@sml_raise(i8*inreg%nm)#1
unreachable
ns:
%nt=getelementptr inbounds i8,i8*%t,i64 8
%nu=bitcast i8*%nt to i8**
%nv=load i8*,i8**%nu,align 8
%nw=bitcast i8*%nv to i32*
%nx=load i32,i32*%nw,align 4
%ny=getelementptr inbounds i8,i8*%nv,i64 8
%nz=bitcast i8*%ny to i8**
%nA=load i8*,i8**%nz,align 8
store i8*%nA,i8**%d,align 8
%nB=icmp eq i8*%w,null
br i1%nB,label%nF,label%nC
nC:
%nD=bitcast i8*%w to i32*
%nE=load i32,i32*%nD,align 4
switch i32%nE,label%nF[
i32 3,label%n7
i32 10,label%nU
i32 2,label%nG
]
nF:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
br label%uH
nG:
store i8*null,i8**%d,align 8
%nH=getelementptr inbounds i8,i8*%w,i64 8
%nI=bitcast i8*%nH to i8**
%nJ=load i8*,i8**%nI,align 8
%nK=getelementptr inbounds i8,i8*%nJ,i64 8
%nL=bitcast i8*%nK to i8**
%nM=load i8*,i8**%nL,align 8
%nN=getelementptr inbounds i8,i8*%nM,i64 24
%nO=bitcast i8*%nN to i32**
%nP=load i32*,i32**%nO,align 8
%nQ=load i32,i32*%nP,align 4
switch i32%nQ,label%nR[
i32 2,label%nT
i32 1,label%nS
]
nR:
store i8*null,i8**%c,align 8
br label%uH
nS:
store i8*%t,i8**%d,align 8
br label%uV
nT:
store i8*%t,i8**%d,align 8
br label%u8
nU:
store i8*null,i8**%d,align 8
%nV=getelementptr inbounds i8,i8*%w,i64 8
%nW=bitcast i8*%nV to i8***
%nX=load i8**,i8***%nW,align 8
%nY=load i8*,i8**%nX,align 8
%nZ=bitcast i8*%nY to i32*
%n0=load i32,i32*%nZ,align 4
%n1=icmp eq i32%n0,0
br i1%n1,label%n3,label%n2
n2:
store i8*null,i8**%c,align 8
br label%uH
n3:
%n4=getelementptr inbounds i8,i8*%nY,i64 8
%n5=bitcast i8*%n4 to i8**
%n6=load i8*,i8**%n5,align 8
store i8*%t,i8**%d,align 8
store i8*%n6,i8**%e,align 8
br label%vJ
n7:
%n8=getelementptr inbounds i8,i8*%w,i64 8
%n9=bitcast i8*%n8 to i8**
%oa=load i8*,i8**%n9,align 8
%ob=bitcast i8*%oa to i32*
%oc=load i32,i32*%ob,align 4
%od=getelementptr inbounds i8,i8*%oa,i64 8
%oe=bitcast i8*%od to i8**
%of=load i8*,i8**%oe,align 8
store i8*%of,i8**%e,align 8
%og=icmp eq i32%nx,%oc
br i1%og,label%oh,label%ou
oh:
%oi=call i8*@sml_alloc(i32 inreg 20)#0
%oj=getelementptr inbounds i8,i8*%oi,i64 -4
%ok=bitcast i8*%oj to i32*
store i32 1342177296,i32*%ok,align 4
%ol=load i8*,i8**%d,align 8
%om=bitcast i8*%oi to i8**
store i8*%ol,i8**%om,align 8
%on=load i8*,i8**%e,align 8
%oo=getelementptr inbounds i8,i8*%oi,i64 8
%op=bitcast i8*%oo to i8**
store i8*%on,i8**%op,align 8
%oq=getelementptr inbounds i8,i8*%oi,i64 16
%or=bitcast i8*%oq to i32*
store i32 3,i32*%or,align 4
%os=load i8*,i8**%c,align 8
%ot=tail call fastcc i8*@_SMLLLN17PolyTyElimination9equalKindE_678(i8*inreg%os,i8*inreg%oi)
ret i8*%ot
ou:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%ov=call i8*@sml_alloc(i32 inreg 60)#0
%ow=getelementptr inbounds i8,i8*%ov,i64 -4
%ox=bitcast i8*%ow to i32*
store i32 1342177336,i32*%ox,align 4
%oy=getelementptr inbounds i8,i8*%ov,i64 56
%oz=bitcast i8*%oy to i32*
store i32 1,i32*%oz,align 4
%oA=bitcast i8*%ov to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@X,i64 0,i32 2)to i8*),i8**%oA,align 8
call void@sml_raise(i8*inreg%ov)#1
unreachable
oB:
%oC=icmp eq i8*%w,null
br i1%oC,label%tj,label%oD
oD:
%oE=bitcast i8*%w to i32*
%oF=load i32,i32*%oE,align 4
switch i32%oF,label%tj[
i32 10,label%oT
i32 2,label%oG
]
oG:
%oH=getelementptr inbounds i8,i8*%w,i64 8
%oI=bitcast i8*%oH to i8**
%oJ=load i8*,i8**%oI,align 8
%oK=getelementptr inbounds i8,i8*%oJ,i64 8
%oL=bitcast i8*%oK to i8**
%oM=load i8*,i8**%oL,align 8
%oN=getelementptr inbounds i8,i8*%oM,i64 24
%oO=bitcast i8*%oN to i32**
%oP=load i32*,i32**%oO,align 8
%oQ=load i32,i32*%oP,align 4
switch i32%oQ,label%tj[
i32 2,label%oS
i32 1,label%oR
]
oR:
store i8*%t,i8**%d,align 8
br label%uV
oS:
store i8*%t,i8**%d,align 8
br label%u8
oT:
%oU=getelementptr inbounds i8,i8*%w,i64 8
%oV=bitcast i8*%oU to i8***
%oW=load i8**,i8***%oV,align 8
%oX=load i8*,i8**%oW,align 8
%oY=bitcast i8*%oX to i32*
%oZ=load i32,i32*%oY,align 4
%o0=icmp eq i32%oZ,0
br i1%o0,label%o1,label%tj
o1:
%o2=getelementptr inbounds i8,i8*%oX,i64 8
%o3=bitcast i8*%o2 to i8**
%o4=load i8*,i8**%o3,align 8
store i8*%t,i8**%d,align 8
store i8*%o4,i8**%e,align 8
br label%vJ
o5:
%o6=icmp eq i8*%w,null
br i1%o6,label%tF,label%o7
o7:
%o8=bitcast i8*%w to i32*
%o9=load i32,i32*%o8,align 4
switch i32%o9,label%tF[
i32 10,label%pn
i32 2,label%pa
]
pa:
%pb=getelementptr inbounds i8,i8*%w,i64 8
%pc=bitcast i8*%pb to i8**
%pd=load i8*,i8**%pc,align 8
%pe=getelementptr inbounds i8,i8*%pd,i64 8
%pf=bitcast i8*%pe to i8**
%pg=load i8*,i8**%pf,align 8
%ph=getelementptr inbounds i8,i8*%pg,i64 24
%pi=bitcast i8*%ph to i32**
%pj=load i32*,i32**%pi,align 8
%pk=load i32,i32*%pj,align 4
switch i32%pk,label%tF[
i32 2,label%pm
i32 1,label%pl
]
pl:
store i8*%t,i8**%d,align 8
br label%uV
pm:
store i8*%t,i8**%d,align 8
br label%u8
pn:
%po=getelementptr inbounds i8,i8*%w,i64 8
%pp=bitcast i8*%po to i8***
%pq=load i8**,i8***%pp,align 8
%pr=load i8*,i8**%pq,align 8
%ps=bitcast i8*%pr to i32*
%pt=load i32,i32*%ps,align 4
%pu=icmp eq i32%pt,0
br i1%pu,label%pv,label%tF
pv:
%pw=getelementptr inbounds i8,i8*%pr,i64 8
%px=bitcast i8*%pw to i8**
%py=load i8*,i8**%px,align 8
store i8*%t,i8**%d,align 8
store i8*%py,i8**%e,align 8
br label%vJ
pz:
%pA=getelementptr inbounds i8,i8*%t,i64 8
%pB=bitcast i8*%pA to i8**
%pC=load i8*,i8**%pB,align 8
%pD=icmp eq i8*%w,null
br i1%pD,label%pH,label%pE
pE:
%pF=bitcast i8*%w to i32*
%pG=load i32,i32*%pF,align 4
switch i32%pG,label%pH[
i32 9,label%p9
i32 10,label%pW
i32 2,label%pI
]
pH:
store i8*null,i8**%c,align 8
br label%uO
pI:
%pJ=getelementptr inbounds i8,i8*%w,i64 8
%pK=bitcast i8*%pJ to i8**
%pL=load i8*,i8**%pK,align 8
%pM=getelementptr inbounds i8,i8*%pL,i64 8
%pN=bitcast i8*%pM to i8**
%pO=load i8*,i8**%pN,align 8
%pP=getelementptr inbounds i8,i8*%pO,i64 24
%pQ=bitcast i8*%pP to i32**
%pR=load i32*,i32**%pQ,align 8
%pS=load i32,i32*%pR,align 4
switch i32%pS,label%pT[
i32 2,label%pV
i32 1,label%pU
]
pT:
store i8*null,i8**%c,align 8
br label%uO
pU:
store i8*%t,i8**%d,align 8
br label%uV
pV:
store i8*%t,i8**%d,align 8
br label%u8
pW:
%pX=getelementptr inbounds i8,i8*%w,i64 8
%pY=bitcast i8*%pX to i8***
%pZ=load i8**,i8***%pY,align 8
%p0=load i8*,i8**%pZ,align 8
%p1=bitcast i8*%p0 to i32*
%p2=load i32,i32*%p1,align 4
%p3=icmp eq i32%p2,0
br i1%p3,label%p5,label%p4
p4:
store i8*null,i8**%c,align 8
br label%uO
p5:
%p6=getelementptr inbounds i8,i8*%p0,i64 8
%p7=bitcast i8*%p6 to i8**
%p8=load i8*,i8**%p7,align 8
store i8*%t,i8**%d,align 8
store i8*%p8,i8**%e,align 8
br label%vJ
p9:
%qa=getelementptr inbounds i8,i8*%w,i64 8
%qb=bitcast i8*%qa to i8**
%qc=load i8*,i8**%qb,align 8
%qd=bitcast i8*%pC to i32*
%qe=load i32,i32*%qd,align 4
switch i32%qe,label%qf[
i32 1,label%st
i32 0,label%rV
i32 4,label%rt
i32 3,label%q1
i32 2,label%qx
]
qf:
call void@sml_matchcomp_bug()
%qg=load i8*,i8**@_SMLZ5Match,align 8
store i8*%qg,i8**%c,align 8
%qh=call i8*@sml_alloc(i32 inreg 20)#0
%qi=getelementptr inbounds i8,i8*%qh,i64 -4
%qj=bitcast i8*%qi to i32*
store i32 1342177296,i32*%qj,align 4
store i8*%qh,i8**%d,align 8
%qk=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ql=bitcast i8*%qh to i8**
store i8*%qk,i8**%ql,align 8
%qm=getelementptr inbounds i8,i8*%qh,i64 8
%qn=bitcast i8*%qm to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@V,i64 0,i32 2,i64 0),i8**%qn,align 8
%qo=getelementptr inbounds i8,i8*%qh,i64 16
%qp=bitcast i8*%qo to i32*
store i32 3,i32*%qp,align 4
%qq=call i8*@sml_alloc(i32 inreg 60)#0
%qr=getelementptr inbounds i8,i8*%qq,i64 -4
%qs=bitcast i8*%qr to i32*
store i32 1342177336,i32*%qs,align 4
%qt=getelementptr inbounds i8,i8*%qq,i64 56
%qu=bitcast i8*%qt to i32*
store i32 1,i32*%qu,align 4
%qv=load i8*,i8**%d,align 8
%qw=bitcast i8*%qq to i8**
store i8*%qv,i8**%qw,align 8
call void@sml_raise(i8*inreg%qq)#1
unreachable
qx:
%qy=getelementptr inbounds i8,i8*%pC,i64 8
%qz=bitcast i8*%qy to i8**
%qA=load i8*,i8**%qz,align 8
store i8*%qA,i8**%d,align 8
%qB=bitcast i8*%qc to i32*
%qC=load i32,i32*%qB,align 4
%qD=icmp eq i32%qC,2
br i1%qD,label%qL,label%qE
qE:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%qF=call i8*@sml_alloc(i32 inreg 60)#0
%qG=getelementptr inbounds i8,i8*%qF,i64 -4
%qH=bitcast i8*%qG to i32*
store i32 1342177336,i32*%qH,align 4
%qI=getelementptr inbounds i8,i8*%qF,i64 56
%qJ=bitcast i8*%qI to i32*
store i32 1,i32*%qJ,align 4
%qK=bitcast i8*%qF to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@U,i64 0,i32 2)to i8*),i8**%qK,align 8
call void@sml_raise(i8*inreg%qF)#1
unreachable
qL:
%qM=getelementptr inbounds i8,i8*%qc,i64 8
%qN=bitcast i8*%qM to i8**
%qO=load i8*,i8**%qN,align 8
store i8*%qO,i8**%e,align 8
%qP=call i8*@sml_alloc(i32 inreg 20)#0
%qQ=getelementptr inbounds i8,i8*%qP,i64 -4
%qR=bitcast i8*%qQ to i32*
store i32 1342177296,i32*%qR,align 4
%qS=load i8*,i8**%d,align 8
%qT=bitcast i8*%qP to i8**
store i8*%qS,i8**%qT,align 8
%qU=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%qV=getelementptr inbounds i8,i8*%qP,i64 8
%qW=bitcast i8*%qV to i8**
store i8*%qU,i8**%qW,align 8
%qX=getelementptr inbounds i8,i8*%qP,i64 16
%qY=bitcast i8*%qX to i32*
store i32 3,i32*%qY,align 4
store i8*%qP,i8**%d,align 8
br label%qZ
qZ:
%q0=phi i8*[%qP,%qL],[%rj,%rf],[%rL,%rH],[%sj,%sc],[%uY,%uV],[%vb,%u8],[%vn,%vl],[%vz,%vx],[%vK,%vJ],[%vV,%vU]
br label%j
q1:
%q2=getelementptr inbounds i8,i8*%pC,i64 8
%q3=bitcast i8*%q2 to i8**
%q4=load i8*,i8**%q3,align 8
store i8*%q4,i8**%d,align 8
%q5=bitcast i8*%qc to i32*
%q6=load i32,i32*%q5,align 4
%q7=icmp eq i32%q6,3
br i1%q7,label%rf,label%q8
q8:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%q9=call i8*@sml_alloc(i32 inreg 60)#0
%ra=getelementptr inbounds i8,i8*%q9,i64 -4
%rb=bitcast i8*%ra to i32*
store i32 1342177336,i32*%rb,align 4
%rc=getelementptr inbounds i8,i8*%q9,i64 56
%rd=bitcast i8*%rc to i32*
store i32 1,i32*%rd,align 4
%re=bitcast i8*%q9 to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@S,i64 0,i32 2)to i8*),i8**%re,align 8
call void@sml_raise(i8*inreg%q9)#1
unreachable
rf:
%rg=getelementptr inbounds i8,i8*%qc,i64 8
%rh=bitcast i8*%rg to i8**
%ri=load i8*,i8**%rh,align 8
store i8*%ri,i8**%e,align 8
%rj=call i8*@sml_alloc(i32 inreg 20)#0
%rk=getelementptr inbounds i8,i8*%rj,i64 -4
%rl=bitcast i8*%rk to i32*
store i32 1342177296,i32*%rl,align 4
%rm=load i8*,i8**%d,align 8
%rn=bitcast i8*%rj to i8**
store i8*%rm,i8**%rn,align 8
%ro=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%rp=getelementptr inbounds i8,i8*%rj,i64 8
%rq=bitcast i8*%rp to i8**
store i8*%ro,i8**%rq,align 8
%rr=getelementptr inbounds i8,i8*%rj,i64 16
%rs=bitcast i8*%rr to i32*
store i32 3,i32*%rs,align 4
store i8*%rj,i8**%d,align 8
br label%qZ
rt:
%ru=getelementptr inbounds i8,i8*%pC,i64 8
%rv=bitcast i8*%ru to i8**
%rw=load i8*,i8**%rv,align 8
store i8*%rw,i8**%d,align 8
%rx=bitcast i8*%qc to i32*
%ry=load i32,i32*%rx,align 4
%rz=icmp eq i32%ry,4
br i1%rz,label%rH,label%rA
rA:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%rB=call i8*@sml_alloc(i32 inreg 60)#0
%rC=getelementptr inbounds i8,i8*%rB,i64 -4
%rD=bitcast i8*%rC to i32*
store i32 1342177336,i32*%rD,align 4
%rE=getelementptr inbounds i8,i8*%rB,i64 56
%rF=bitcast i8*%rE to i32*
store i32 1,i32*%rF,align 4
%rG=bitcast i8*%rB to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@Q,i64 0,i32 2)to i8*),i8**%rG,align 8
call void@sml_raise(i8*inreg%rB)#1
unreachable
rH:
%rI=getelementptr inbounds i8,i8*%qc,i64 8
%rJ=bitcast i8*%rI to i8**
%rK=load i8*,i8**%rJ,align 8
store i8*%rK,i8**%e,align 8
%rL=call i8*@sml_alloc(i32 inreg 20)#0
%rM=getelementptr inbounds i8,i8*%rL,i64 -4
%rN=bitcast i8*%rM to i32*
store i32 1342177296,i32*%rN,align 4
%rO=load i8*,i8**%d,align 8
%rP=bitcast i8*%rL to i8**
store i8*%rO,i8**%rP,align 8
%rQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%rR=getelementptr inbounds i8,i8*%rL,i64 8
%rS=bitcast i8*%rR to i8**
store i8*%rQ,i8**%rS,align 8
%rT=getelementptr inbounds i8,i8*%rL,i64 16
%rU=bitcast i8*%rT to i32*
store i32 3,i32*%rU,align 4
store i8*%rL,i8**%d,align 8
br label%qZ
rV:
%rW=getelementptr inbounds i8,i8*%pC,i64 8
%rX=bitcast i8*%rW to i8**
%rY=load i8*,i8**%rX,align 8
%rZ=getelementptr inbounds i8,i8*%rY,i64 8
%r0=bitcast i8*%rZ to i8**
%r1=load i8*,i8**%r0,align 8
store i8*%r1,i8**%d,align 8
%r2=bitcast i8*%qc to i32*
%r3=load i32,i32*%r2,align 4
%r4=icmp eq i32%r3,0
br i1%r4,label%sc,label%r5
r5:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%r6=call i8*@sml_alloc(i32 inreg 60)#0
%r7=getelementptr inbounds i8,i8*%r6,i64 -4
%r8=bitcast i8*%r7 to i32*
store i32 1342177336,i32*%r8,align 4
%r9=getelementptr inbounds i8,i8*%r6,i64 56
%sa=bitcast i8*%r9 to i32*
store i32 1,i32*%sa,align 4
%sb=bitcast i8*%r6 to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@O,i64 0,i32 2)to i8*),i8**%sb,align 8
call void@sml_raise(i8*inreg%r6)#1
unreachable
sc:
%sd=getelementptr inbounds i8,i8*%qc,i64 8
%se=bitcast i8*%sd to i8**
%sf=load i8*,i8**%se,align 8
%sg=getelementptr inbounds i8,i8*%sf,i64 8
%sh=bitcast i8*%sg to i8**
%si=load i8*,i8**%sh,align 8
store i8*%si,i8**%e,align 8
%sj=call i8*@sml_alloc(i32 inreg 20)#0
%sk=getelementptr inbounds i8,i8*%sj,i64 -4
%sl=bitcast i8*%sk to i32*
store i32 1342177296,i32*%sl,align 4
%sm=load i8*,i8**%d,align 8
%sn=bitcast i8*%sj to i8**
store i8*%sm,i8**%sn,align 8
%so=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%sp=getelementptr inbounds i8,i8*%sj,i64 8
%sq=bitcast i8*%sp to i8**
store i8*%so,i8**%sq,align 8
%sr=getelementptr inbounds i8,i8*%sj,i64 16
%ss=bitcast i8*%sr to i32*
store i32 3,i32*%ss,align 4
store i8*%sj,i8**%d,align 8
br label%qZ
st:
%su=getelementptr inbounds i8,i8*%pC,i64 8
%sv=bitcast i8*%su to i8**
%sw=load i8*,i8**%sv,align 8
store i8*%sw,i8**%d,align 8
%sx=bitcast i8*%qc to i32*
%sy=load i32,i32*%sx,align 4
%sz=icmp eq i32%sy,1
br i1%sz,label%sH,label%sA
sA:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%sB=call i8*@sml_alloc(i32 inreg 60)#0
%sC=getelementptr inbounds i8,i8*%sB,i64 -4
%sD=bitcast i8*%sC to i32*
store i32 1342177336,i32*%sD,align 4
%sE=getelementptr inbounds i8,i8*%sB,i64 56
%sF=bitcast i8*%sE to i32*
store i32 1,i32*%sF,align 4
%sG=bitcast i8*%sB to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@M,i64 0,i32 2)to i8*),i8**%sG,align 8
call void@sml_raise(i8*inreg%sB)#1
unreachable
sH:
%sI=getelementptr inbounds i8,i8*%qc,i64 8
%sJ=bitcast i8*%sI to i8**
%sK=load i8*,i8**%sJ,align 8
store i8*%sK,i8**%e,align 8
%sL=call i8*@sml_alloc(i32 inreg 20)#0
%sM=getelementptr inbounds i8,i8*%sL,i64 -4
%sN=bitcast i8*%sM to i32*
store i32 1342177296,i32*%sN,align 4
%sO=load i8*,i8**%d,align 8
%sP=bitcast i8*%sL to i8**
store i8*%sO,i8**%sP,align 8
%sQ=load i8*,i8**%e,align 8
%sR=getelementptr inbounds i8,i8*%sL,i64 8
%sS=bitcast i8*%sR to i8**
store i8*%sQ,i8**%sS,align 8
%sT=getelementptr inbounds i8,i8*%sL,i64 16
%sU=bitcast i8*%sT to i32*
store i32 3,i32*%sU,align 4
%sV=load i8*,i8**%c,align 8
%sW=tail call fastcc i8*@_SMLLLN17PolyTyElimination18equalOprimSelectorE_675(i8*inreg%sV,i8*inreg%sL)
ret i8*%sW
sX:
%sY=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%sY,i8**%c,align 8
%sZ=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@K,i64 0,i32 2)to i8*))
store i8*%sZ,i8**%d,align 8
%s0=call i8*@sml_alloc(i32 inreg 28)#0
%s1=getelementptr inbounds i8,i8*%s0,i64 -4
%s2=bitcast i8*%s1 to i32*
store i32 1342177304,i32*%s2,align 4
store i8*%s0,i8**%e,align 8
%s3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%s4=bitcast i8*%s0 to i8**
store i8*%s3,i8**%s4,align 8
%s5=getelementptr inbounds i8,i8*%s0,i64 8
%s6=bitcast i8*%s5 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%s6,align 8
%s7=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%s8=getelementptr inbounds i8,i8*%s0,i64 16
%s9=bitcast i8*%s8 to i8**
store i8*%s7,i8**%s9,align 8
%ta=getelementptr inbounds i8,i8*%s0,i64 24
%tb=bitcast i8*%ta to i32*
store i32 7,i32*%tb,align 4
%tc=call i8*@sml_alloc(i32 inreg 60)#0
%td=getelementptr inbounds i8,i8*%tc,i64 -4
%te=bitcast i8*%td to i32*
store i32 1342177336,i32*%te,align 4
%tf=getelementptr inbounds i8,i8*%tc,i64 56
%tg=bitcast i8*%tf to i32*
store i32 1,i32*%tg,align 4
%th=load i8*,i8**%e,align 8
%ti=bitcast i8*%tc to i8**
store i8*%th,i8**%ti,align 8
call void@sml_raise(i8*inreg%tc)#1
unreachable
tj:
%tk=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%tk,i8**%c,align 8
%tl=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@I,i64 0,i32 2)to i8*))
store i8*%tl,i8**%d,align 8
%tm=call i8*@sml_alloc(i32 inreg 28)#0
%tn=getelementptr inbounds i8,i8*%tm,i64 -4
%to=bitcast i8*%tn to i32*
store i32 1342177304,i32*%to,align 4
store i8*%tm,i8**%e,align 8
%tp=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%tq=bitcast i8*%tm to i8**
store i8*%tp,i8**%tq,align 8
%tr=getelementptr inbounds i8,i8*%tm,i64 8
%ts=bitcast i8*%tr to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%ts,align 8
%tt=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%tu=getelementptr inbounds i8,i8*%tm,i64 16
%tv=bitcast i8*%tu to i8**
store i8*%tt,i8**%tv,align 8
%tw=getelementptr inbounds i8,i8*%tm,i64 24
%tx=bitcast i8*%tw to i32*
store i32 7,i32*%tx,align 4
%ty=call i8*@sml_alloc(i32 inreg 60)#0
%tz=getelementptr inbounds i8,i8*%ty,i64 -4
%tA=bitcast i8*%tz to i32*
store i32 1342177336,i32*%tA,align 4
%tB=getelementptr inbounds i8,i8*%ty,i64 56
%tC=bitcast i8*%tB to i32*
store i32 1,i32*%tC,align 4
%tD=load i8*,i8**%e,align 8
%tE=bitcast i8*%ty to i8**
store i8*%tD,i8**%tE,align 8
call void@sml_raise(i8*inreg%ty)#1
unreachable
tF:
%tG=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%tG,i8**%c,align 8
%tH=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@G,i64 0,i32 2)to i8*))
store i8*%tH,i8**%d,align 8
%tI=call i8*@sml_alloc(i32 inreg 28)#0
%tJ=getelementptr inbounds i8,i8*%tI,i64 -4
%tK=bitcast i8*%tJ to i32*
store i32 1342177304,i32*%tK,align 4
store i8*%tI,i8**%e,align 8
%tL=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%tM=bitcast i8*%tI to i8**
store i8*%tL,i8**%tM,align 8
%tN=getelementptr inbounds i8,i8*%tI,i64 8
%tO=bitcast i8*%tN to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%tO,align 8
%tP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%tQ=getelementptr inbounds i8,i8*%tI,i64 16
%tR=bitcast i8*%tQ to i8**
store i8*%tP,i8**%tR,align 8
%tS=getelementptr inbounds i8,i8*%tI,i64 24
%tT=bitcast i8*%tS to i32*
store i32 7,i32*%tT,align 4
%tU=call i8*@sml_alloc(i32 inreg 60)#0
%tV=getelementptr inbounds i8,i8*%tU,i64 -4
%tW=bitcast i8*%tV to i32*
store i32 1342177336,i32*%tW,align 4
%tX=getelementptr inbounds i8,i8*%tU,i64 56
%tY=bitcast i8*%tX to i32*
store i32 1,i32*%tY,align 4
%tZ=load i8*,i8**%e,align 8
%t0=bitcast i8*%tU to i8**
store i8*%tZ,i8**%t0,align 8
call void@sml_raise(i8*inreg%tU)#1
unreachable
t1:
%t2=call i8*@sml_alloc(i32 inreg 60)#0
%t3=getelementptr inbounds i8,i8*%t2,i64 -4
%t4=bitcast i8*%t3 to i32*
store i32 1342177336,i32*%t4,align 4
%t5=getelementptr inbounds i8,i8*%t2,i64 56
%t6=bitcast i8*%t5 to i32*
store i32 1,i32*%t6,align 4
%t7=bitcast i8*%t2 to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@E,i64 0,i32 2)to i8*),i8**%t7,align 8
call void@sml_raise(i8*inreg%t2)#1
unreachable
t8:
%t9=call i8*@sml_alloc(i32 inreg 60)#0
%ua=getelementptr inbounds i8,i8*%t9,i64 -4
%ub=bitcast i8*%ua to i32*
store i32 1342177336,i32*%ub,align 4
%uc=getelementptr inbounds i8,i8*%t9,i64 56
%ud=bitcast i8*%uc to i32*
store i32 1,i32*%ud,align 4
%ue=bitcast i8*%t9 to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@C,i64 0,i32 2)to i8*),i8**%ue,align 8
call void@sml_raise(i8*inreg%t9)#1
unreachable
uf:
%ug=call i8*@sml_alloc(i32 inreg 60)#0
%uh=getelementptr inbounds i8,i8*%ug,i64 -4
%ui=bitcast i8*%uh to i32*
store i32 1342177336,i32*%ui,align 4
%uj=getelementptr inbounds i8,i8*%ug,i64 56
%uk=bitcast i8*%uj to i32*
store i32 1,i32*%uk,align 4
%ul=bitcast i8*%ug to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@A,i64 0,i32 2)to i8*),i8**%ul,align 8
call void@sml_raise(i8*inreg%ug)#1
unreachable
um:
%un=call i8*@sml_alloc(i32 inreg 60)#0
%uo=getelementptr inbounds i8,i8*%un,i64 -4
%up=bitcast i8*%uo to i32*
store i32 1342177336,i32*%up,align 4
%uq=getelementptr inbounds i8,i8*%un,i64 56
%ur=bitcast i8*%uq to i32*
store i32 1,i32*%ur,align 4
%us=bitcast i8*%un to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@y,i64 0,i32 2)to i8*),i8**%us,align 8
call void@sml_raise(i8*inreg%un)#1
unreachable
ut:
%uu=call i8*@sml_alloc(i32 inreg 60)#0
%uv=getelementptr inbounds i8,i8*%uu,i64 -4
%uw=bitcast i8*%uv to i32*
store i32 1342177336,i32*%uw,align 4
%ux=getelementptr inbounds i8,i8*%uu,i64 56
%uy=bitcast i8*%ux to i32*
store i32 1,i32*%uy,align 4
%uz=bitcast i8*%uu to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@w,i64 0,i32 2)to i8*),i8**%uz,align 8
call void@sml_raise(i8*inreg%uu)#1
unreachable
uA:
%uB=call i8*@sml_alloc(i32 inreg 60)#0
%uC=getelementptr inbounds i8,i8*%uB,i64 -4
%uD=bitcast i8*%uC to i32*
store i32 1342177336,i32*%uD,align 4
%uE=getelementptr inbounds i8,i8*%uB,i64 56
%uF=bitcast i8*%uE to i32*
store i32 1,i32*%uF,align 4
%uG=bitcast i8*%uB to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@u,i64 0,i32 2)to i8*),i8**%uG,align 8
call void@sml_raise(i8*inreg%uB)#1
unreachable
uH:
%uI=call i8*@sml_alloc(i32 inreg 60)#0
%uJ=getelementptr inbounds i8,i8*%uI,i64 -4
%uK=bitcast i8*%uJ to i32*
store i32 1342177336,i32*%uK,align 4
%uL=getelementptr inbounds i8,i8*%uI,i64 56
%uM=bitcast i8*%uL to i32*
store i32 1,i32*%uM,align 4
%uN=bitcast i8*%uI to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@s,i64 0,i32 2)to i8*),i8**%uN,align 8
call void@sml_raise(i8*inreg%uI)#1
unreachable
uO:
%uP=call i8*@sml_alloc(i32 inreg 60)#0
%uQ=getelementptr inbounds i8,i8*%uP,i64 -4
%uR=bitcast i8*%uQ to i32*
store i32 1342177336,i32*%uR,align 4
%uS=getelementptr inbounds i8,i8*%uP,i64 56
%uT=bitcast i8*%uS to i32*
store i32 1,i32*%uT,align 4
%uU=bitcast i8*%uP to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@q,i64 0,i32 2)to i8*),i8**%uU,align 8
call void@sml_raise(i8*inreg%uP)#1
unreachable
uV:
%uW=phi i8*[%es,%eB],[%fc,%fO],[%hj,%hs],[%i5,%je],[%kh,%kq],[%lX,%l5],[%mA,%mJ],[%nJ,%nS],[%oJ,%oR],[%pd,%pl],[%pL,%pU]
%uX=call fastcc i8*@_SMLLLN17PolyTyElimination11revealTyConE_670(i8*inreg%uW)
store i8*%uX,i8**%e,align 8
%uY=call i8*@sml_alloc(i32 inreg 20)#0
%uZ=getelementptr inbounds i8,i8*%uY,i64 -4
%u0=bitcast i8*%uZ to i32*
store i32 1342177296,i32*%u0,align 4
%u1=load i8*,i8**%d,align 8
%u2=bitcast i8*%uY to i8**
store i8*%u1,i8**%u2,align 8
%u3=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u4=getelementptr inbounds i8,i8*%uY,i64 8
%u5=bitcast i8*%u4 to i8**
store i8*%u3,i8**%u5,align 8
%u6=getelementptr inbounds i8,i8*%uY,i64 16
%u7=bitcast i8*%u6 to i32*
store i32 3,i32*%u7,align 4
store i8*%uY,i8**%d,align 8
br label%qZ
u8:
%u9=phi i8*[%es,%eC],[%fc,%fP],[%hj,%ht],[%i5,%jf],[%kh,%kr],[%lX,%l6],[%mA,%mK],[%nJ,%nT],[%oJ,%oS],[%pd,%pm],[%pL,%pV]
%va=call fastcc i8*@_SMLLLN17PolyTyElimination11revealTyConE_670(i8*inreg%u9)
store i8*%va,i8**%e,align 8
%vb=call i8*@sml_alloc(i32 inreg 20)#0
%vc=getelementptr inbounds i8,i8*%vb,i64 -4
%vd=bitcast i8*%vc to i32*
store i32 1342177296,i32*%vd,align 4
%ve=load i8*,i8**%d,align 8
%vf=bitcast i8*%vb to i8**
store i8*%ve,i8**%vf,align 8
%vg=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%vh=getelementptr inbounds i8,i8*%vb,i64 8
%vi=bitcast i8*%vh to i8**
store i8*%vg,i8**%vi,align 8
%vj=getelementptr inbounds i8,i8*%vb,i64 16
%vk=bitcast i8*%vj to i32*
store i32 3,i32*%vk,align 4
store i8*%vb,i8**%d,align 8
br label%qZ
vl:
%vm=call fastcc i8*@_SMLLLN17PolyTyElimination11revealTyConE_670(i8*inreg%eT)
store i8*%vm,i8**%e,align 8
%vn=call i8*@sml_alloc(i32 inreg 20)#0
%vo=getelementptr inbounds i8,i8*%vn,i64 -4
%vp=bitcast i8*%vo to i32*
store i32 1342177296,i32*%vp,align 4
%vq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%vr=bitcast i8*%vn to i8**
store i8*%vq,i8**%vr,align 8
%vs=load i8*,i8**%d,align 8
%vt=getelementptr inbounds i8,i8*%vn,i64 8
%vu=bitcast i8*%vt to i8**
store i8*%vs,i8**%vu,align 8
%vv=getelementptr inbounds i8,i8*%vn,i64 16
%vw=bitcast i8*%vv to i32*
store i32 3,i32*%vw,align 4
store i8*%vn,i8**%d,align 8
br label%qZ
vx:
%vy=call fastcc i8*@_SMLLLN17PolyTyElimination11revealTyConE_670(i8*inreg%eT)
store i8*%vy,i8**%e,align 8
%vz=call i8*@sml_alloc(i32 inreg 20)#0
%vA=getelementptr inbounds i8,i8*%vz,i64 -4
%vB=bitcast i8*%vA to i32*
store i32 1342177296,i32*%vB,align 4
%vC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%vD=bitcast i8*%vz to i8**
store i8*%vC,i8**%vD,align 8
%vE=load i8*,i8**%d,align 8
%vF=getelementptr inbounds i8,i8*%vz,i64 8
%vG=bitcast i8*%vF to i8**
store i8*%vE,i8**%vG,align 8
%vH=getelementptr inbounds i8,i8*%vz,i64 16
%vI=bitcast i8*%vH to i32*
store i32 3,i32*%vI,align 4
store i8*%vz,i8**%d,align 8
br label%qZ
vJ:
%vK=call i8*@sml_alloc(i32 inreg 20)#0
%vL=getelementptr inbounds i8,i8*%vK,i64 -4
%vM=bitcast i8*%vL to i32*
store i32 1342177296,i32*%vM,align 4
%vN=load i8*,i8**%d,align 8
%vO=bitcast i8*%vK to i8**
store i8*%vN,i8**%vO,align 8
%vP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%vQ=getelementptr inbounds i8,i8*%vK,i64 8
%vR=bitcast i8*%vQ to i8**
store i8*%vP,i8**%vR,align 8
%vS=getelementptr inbounds i8,i8*%vK,i64 16
%vT=bitcast i8*%vS to i32*
store i32 3,i32*%vT,align 4
store i8*%vK,i8**%d,align 8
br label%qZ
vU:
%vV=call i8*@sml_alloc(i32 inreg 20)#0
%vW=getelementptr inbounds i8,i8*%vV,i64 -4
%vX=bitcast i8*%vW to i32*
store i32 1342177296,i32*%vX,align 4
%vY=load i8*,i8**%d,align 8
%vZ=bitcast i8*%vV to i8**
store i8*%vY,i8**%vZ,align 8
%v0=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%v1=getelementptr inbounds i8,i8*%vV,i64 8
%v2=bitcast i8*%v1 to i8**
store i8*%v0,i8**%v2,align 8
%v3=getelementptr inbounds i8,i8*%vV,i64 16
%v4=bitcast i8*%v3 to i32*
store i32 3,i32*%v4,align 4
store i8*%vV,i8**%d,align 8
br label%qZ
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_673(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination7equalTyE_878 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination7equalTyE_878 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18equalOverloadMatchE_674(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%d,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%b,%p]
store i8*null,i8**%d,align 8
%q=bitcast i8*%o to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%o,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%r to i32*
%w=load i32,i32*%v,align 4
switch i32%w,label%x[
i32 1,label%cp
i32 2,label%bF
i32 0,label%P
]
x:
call void@sml_matchcomp_bug()
%y=load i8*,i8**@_SMLZ5Match,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%d,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@aG,i64 0,i32 2,i64 0),i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 60)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177336,i32*%K,align 4
%L=getelementptr inbounds i8,i8*%I,i64 56
%M=bitcast i8*%L to i32*
store i32 1,i32*%M,align 4
%N=load i8*,i8**%d,align 8
%O=bitcast i8*%I to i8**
store i8*%N,i8**%O,align 8
call void@sml_raise(i8*inreg%I)#1
unreachable
P:
%Q=getelementptr inbounds i8,i8*%r,i64 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%d,align 8
%V=getelementptr inbounds i8,i8*%S,i64 8
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%e,align 8
%Y=bitcast i8*%u to i32*
%Z=load i32,i32*%Y,align 4
%aa=icmp eq i32%Z,0
br i1%aa,label%ai,label%ab
ab:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%ac=call i8*@sml_alloc(i32 inreg 60)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177336,i32*%ae,align 4
%af=getelementptr inbounds i8,i8*%ac,i64 56
%ag=bitcast i8*%af to i32*
store i32 1,i32*%ag,align 4
%ah=bitcast i8*%ac to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aF,i64 0,i32 2)to i8*),i8**%ah,align 8
call void@sml_raise(i8*inreg%ac)#1
unreachable
ai:
%aj=getelementptr inbounds i8,i8*%u,i64 8
%ak=bitcast i8*%aj to i8**
%al=load i8*,i8**%ak,align 8
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%f,align 8
%ao=getelementptr inbounds i8,i8*%al,i64 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%g,align 8
%ar=call fastcc i8*@_SMLFN5TypID3Map5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%as=getelementptr inbounds i8,i8*%ar,i64 16
%at=bitcast i8*%as to i8*(i8*,i8*)**
%au=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%at,align 8
%av=bitcast i8*%ar to i8**
%aw=load i8*,i8**%av,align 8
store i8*%aw,i8**%h,align 8
%ax=call i8*@sml_alloc(i32 inreg 12)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177288,i32*%az,align 4
store i8*%ax,i8**%i,align 8
%aA=load i8*,i8**%c,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%ax,i64 8
%aD=bitcast i8*%aC to i32*
store i32 1,i32*%aD,align 4
%aE=call i8*@sml_alloc(i32 inreg 28)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177304,i32*%aG,align 4
%aH=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aI=bitcast i8*%aE to i8**
store i8*%aH,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aE,i64 8
%aK=bitcast i8*%aJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination18equalOverloadMatchE_895 to void(...)*),void(...)**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aE,i64 16
%aM=bitcast i8*%aL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination18equalOverloadMatchE_895 to void(...)*),void(...)**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aE,i64 24
%aO=bitcast i8*%aN to i32*
store i32 -2147483647,i32*%aO,align 4
%aP=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aQ=call fastcc i8*%au(i8*inreg%aP,i8*inreg%aE)
%aR=getelementptr inbounds i8,i8*%aQ,i64 16
%aS=bitcast i8*%aR to i8*(i8*,i8*)**
%aT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aS,align 8
%aU=bitcast i8*%aQ to i8**
%aV=load i8*,i8**%aU,align 8
store i8*%aV,i8**%h,align 8
%aW=call i8*@sml_alloc(i32 inreg 20)#0
%aX=getelementptr inbounds i8,i8*%aW,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177296,i32*%aY,align 4
%aZ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a0=bitcast i8*%aW to i8**
store i8*%aZ,i8**%a0,align 8
%a1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a2=getelementptr inbounds i8,i8*%aW,i64 8
%a3=bitcast i8*%a2 to i8**
store i8*%a1,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aW,i64 16
%a5=bitcast i8*%a4 to i32*
store i32 3,i32*%a5,align 4
%a6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a7=call fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_672(i8*inreg%a6,i8*inreg%aW)
%a8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a9=call fastcc i8*%aT(i8*inreg%a8,i8*inreg%a7)
%ba=getelementptr inbounds i8,i8*%a9,i64 16
%bb=bitcast i8*%ba to i8*(i8*,i8*)**
%bc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bb,align 8
%bd=bitcast i8*%a9 to i8**
%be=load i8*,i8**%bd,align 8
store i8*%be,i8**%d,align 8
%bf=call fastcc i8*@_SMLFN5TypID3Map9mergeWithE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bg=getelementptr inbounds i8,i8*%bf,i64 16
%bh=bitcast i8*%bg to i8*(i8*,i8*)**
%bi=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bh,align 8
%bj=bitcast i8*%bf to i8**
%bk=load i8*,i8**%bj,align 8
%bl=call fastcc i8*%bi(i8*inreg%bk,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aD,i64 0,i32 2)to i8*))
%bm=getelementptr inbounds i8,i8*%bl,i64 16
%bn=bitcast i8*%bm to i8*(i8*,i8*)**
%bo=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bn,align 8
%bp=bitcast i8*%bl to i8**
%bq=load i8*,i8**%bp,align 8
store i8*%bq,i8**%c,align 8
%br=call i8*@sml_alloc(i32 inreg 20)#0
%bs=getelementptr inbounds i8,i8*%br,i64 -4
%bt=bitcast i8*%bs to i32*
store i32 1342177296,i32*%bt,align 4
%bu=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bv=bitcast i8*%br to i8**
store i8*%bu,i8**%bv,align 8
%bw=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bx=getelementptr inbounds i8,i8*%br,i64 8
%by=bitcast i8*%bx to i8**
store i8*%bw,i8**%by,align 8
%bz=getelementptr inbounds i8,i8*%br,i64 16
%bA=bitcast i8*%bz to i32*
store i32 3,i32*%bA,align 4
%bB=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bC=call fastcc i8*%bo(i8*inreg%bB,i8*inreg%br)
%bD=load i8*,i8**%d,align 8
%bE=tail call fastcc i8*%bc(i8*inreg%bD,i8*inreg%bC)
ret i8*%bE
bF:
%bG=getelementptr inbounds i8,i8*%r,i64 8
%bH=bitcast i8*%bG to i8**
%bI=load i8*,i8**%bH,align 8
%bJ=bitcast i8*%bI to i8**
%bK=load i8*,i8**%bJ,align 8
store i8*%bK,i8**%d,align 8
%bL=bitcast i8*%u to i32*
%bM=load i32,i32*%bL,align 4
%bN=icmp eq i32%bM,2
br i1%bN,label%bV,label%bO
bO:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%bP=call i8*@sml_alloc(i32 inreg 60)#0
%bQ=getelementptr inbounds i8,i8*%bP,i64 -4
%bR=bitcast i8*%bQ to i32*
store i32 1342177336,i32*%bR,align 4
%bS=getelementptr inbounds i8,i8*%bP,i64 56
%bT=bitcast i8*%bS to i32*
store i32 1,i32*%bT,align 4
%bU=bitcast i8*%bP to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ax,i64 0,i32 2)to i8*),i8**%bU,align 8
call void@sml_raise(i8*inreg%bP)#1
unreachable
bV:
%bW=getelementptr inbounds i8,i8*%bI,i64 8
%bX=bitcast i8*%bW to i8***
%bY=load i8**,i8***%bX,align 8
%bZ=load i8*,i8**%bY,align 8
%b0=getelementptr inbounds i8,i8*%u,i64 8
%b1=bitcast i8*%b0 to i8**
%b2=load i8*,i8**%b1,align 8
%b3=bitcast i8*%b2 to i8**
%b4=load i8*,i8**%b3,align 8
store i8*%b4,i8**%e,align 8
%b5=getelementptr inbounds i8,i8*%b2,i64 8
%b6=bitcast i8*%b5 to i8***
%b7=load i8**,i8***%b6,align 8
%b8=load i8*,i8**%b7,align 8
%b9=call i32@sml_obj_equal(i8*inreg%bZ,i8*inreg%b8)#0
%ca=icmp eq i32%b9,0
br i1%ca,label%ci,label%cb
cb:
%cc=call i8*@sml_alloc(i32 inreg 20)#0
%cd=getelementptr inbounds i8,i8*%cc,i64 -4
%ce=bitcast i8*%cd to i32*
store i32 1342177296,i32*%ce,align 4
%cf=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cg=bitcast i8*%cc to i8**
store i8*%cf,i8**%cg,align 8
%ch=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
br label%dj
ci:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%cj=call i8*@sml_alloc(i32 inreg 60)#0
%ck=getelementptr inbounds i8,i8*%cj,i64 -4
%cl=bitcast i8*%ck to i32*
store i32 1342177336,i32*%cl,align 4
%cm=getelementptr inbounds i8,i8*%cj,i64 56
%cn=bitcast i8*%cm to i32*
store i32 1,i32*%cn,align 4
%co=bitcast i8*%cj to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@av,i64 0,i32 2)to i8*),i8**%co,align 8
call void@sml_raise(i8*inreg%cj)#1
unreachable
cp:
%cq=getelementptr inbounds i8,i8*%r,i64 8
%cr=bitcast i8*%cq to i8**
%cs=load i8*,i8**%cr,align 8
%ct=bitcast i8*%cs to i8***
%cu=load i8**,i8***%ct,align 8
%cv=load i8*,i8**%cu,align 8
store i8*%cv,i8**%d,align 8
%cw=getelementptr inbounds i8,i8*%cs,i64 8
%cx=bitcast i8*%cw to i8**
%cy=load i8*,i8**%cx,align 8
store i8*%cy,i8**%e,align 8
%cz=bitcast i8*%u to i32*
%cA=load i32,i32*%cz,align 4
%cB=icmp eq i32%cA,1
br i1%cB,label%cJ,label%cC
cC:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%cD=call i8*@sml_alloc(i32 inreg 60)#0
%cE=getelementptr inbounds i8,i8*%cD,i64 -4
%cF=bitcast i8*%cE to i32*
store i32 1342177336,i32*%cF,align 4
%cG=getelementptr inbounds i8,i8*%cD,i64 56
%cH=bitcast i8*%cG to i32*
store i32 1,i32*%cH,align 4
%cI=bitcast i8*%cD to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@at,i64 0,i32 2)to i8*),i8**%cI,align 8
call void@sml_raise(i8*inreg%cD)#1
unreachable
cJ:
%cK=getelementptr inbounds i8,i8*%u,i64 8
%cL=bitcast i8*%cK to i8**
%cM=load i8*,i8**%cL,align 8
%cN=bitcast i8*%cM to i8***
%cO=load i8**,i8***%cN,align 8
%cP=load i8*,i8**%cO,align 8
store i8*%cP,i8**%f,align 8
%cQ=getelementptr inbounds i8,i8*%cM,i64 8
%cR=bitcast i8*%cQ to i8**
%cS=load i8*,i8**%cR,align 8
store i8*%cS,i8**%g,align 8
%cT=call i8*@sml_alloc(i32 inreg 20)#0
%cU=getelementptr inbounds i8,i8*%cT,i64 -4
%cV=bitcast i8*%cU to i32*
store i32 1342177296,i32*%cV,align 4
%cW=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cX=bitcast i8*%cT to i8**
store i8*%cW,i8**%cX,align 8
%cY=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cZ=getelementptr inbounds i8,i8*%cT,i64 8
%c0=bitcast i8*%cZ to i8**
store i8*%cY,i8**%c0,align 8
%c1=getelementptr inbounds i8,i8*%cT,i64 16
%c2=bitcast i8*%c1 to i32*
store i32 3,i32*%c2,align 4
%c3=call fastcc i32@_SMLFN6Symbol12eqLongsymbolE(i8*inreg%cT)
%c4=icmp eq i32%c3,0
br i1%c4,label%dc,label%c5
c5:
%c6=call i8*@sml_alloc(i32 inreg 20)#0
%c7=getelementptr inbounds i8,i8*%c6,i64 -4
%c8=bitcast i8*%c7 to i32*
store i32 1342177296,i32*%c8,align 4
%c9=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%da=bitcast i8*%c6 to i8**
store i8*%c9,i8**%da,align 8
%db=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
br label%dj
dc:
store i8*null,i8**%c,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
%dd=call i8*@sml_alloc(i32 inreg 60)#0
%de=getelementptr inbounds i8,i8*%dd,i64 -4
%df=bitcast i8*%de to i32*
store i32 1342177336,i32*%df,align 4
%dg=getelementptr inbounds i8,i8*%dd,i64 56
%dh=bitcast i8*%dg to i32*
store i32 1,i32*%dh,align 4
%di=bitcast i8*%dd to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ar,i64 0,i32 2)to i8*),i8**%di,align 8
call void@sml_raise(i8*inreg%dd)#1
unreachable
dj:
%dk=phi i8*[%c6,%c5],[%cc,%cb]
%dl=phi i8*[%db,%c5],[%ch,%cb]
%dm=phi i8*[%c9,%c5],[%cf,%cb]
%dn=getelementptr inbounds i8,i8*%dk,i64 8
%do=bitcast i8*%dn to i8**
store i8*%dl,i8**%do,align 8
%dp=getelementptr inbounds i8,i8*%dk,i64 16
%dq=bitcast i8*%dp to i32*
store i32 3,i32*%dq,align 4
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@m,i64 0,i32 2)to i8*),i8**%d,align 8
%dr=icmp eq i8*%dm,null
br i1%dr,label%ds,label%dD
ds:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%dt=icmp eq i8*%dl,null
br i1%dt,label%du,label%dw
du:
%dv=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 0,i32 inreg 4)
ret i8*%dv
dw:
%dx=call i8*@sml_alloc(i32 inreg 60)#0
%dy=getelementptr inbounds i8,i8*%dx,i64 -4
%dz=bitcast i8*%dy to i32*
store i32 1342177336,i32*%dz,align 4
%dA=getelementptr inbounds i8,i8*%dx,i64 56
%dB=bitcast i8*%dA to i32*
store i32 1,i32*%dB,align 4
%dC=bitcast i8*%dx to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ap,i64 0,i32 2)to i8*),i8**%dC,align 8
call void@sml_raise(i8*inreg%dx)#1
unreachable
dD:
%dE=bitcast i8*%dm to i8**
%dF=load i8*,i8**%dE,align 8
store i8*%dF,i8**%e,align 8
%dG=icmp eq i8*%dl,null
br i1%dG,label%dH,label%dO
dH:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%dI=call i8*@sml_alloc(i32 inreg 60)#0
%dJ=getelementptr inbounds i8,i8*%dI,i64 -4
%dK=bitcast i8*%dJ to i32*
store i32 1342177336,i32*%dK,align 4
%dL=getelementptr inbounds i8,i8*%dI,i64 56
%dM=bitcast i8*%dL to i32*
store i32 1,i32*%dM,align 4
%dN=bitcast i8*%dI to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@an,i64 0,i32 2)to i8*),i8**%dN,align 8
call void@sml_raise(i8*inreg%dI)#1
unreachable
dO:
%dP=bitcast i8*%dl to i8**
%dQ=load i8*,i8**%dP,align 8
store i8*%dQ,i8**%f,align 8
%dR=call i8*@sml_alloc(i32 inreg 20)#0
%dS=getelementptr inbounds i8,i8*%dR,i64 -4
%dT=bitcast i8*%dS to i32*
store i32 1342177296,i32*%dT,align 4
%dU=load i8*,i8**%e,align 8
%dV=bitcast i8*%dR to i8**
store i8*%dU,i8**%dV,align 8
%dW=load i8*,i8**%f,align 8
%dX=getelementptr inbounds i8,i8*%dR,i64 8
%dY=bitcast i8*%dX to i8**
store i8*%dW,i8**%dY,align 8
%dZ=getelementptr inbounds i8,i8*%dR,i64 16
%d0=bitcast i8*%dZ to i32*
store i32 3,i32*%d0,align 4
%d1=load i8*,i8**%c,align 8
%d2=load i8*,i8**%d,align 8
%d3=tail call fastcc i8*@_SMLLLN17PolyTyElimination9equalListE_666(i8*inreg%d2,i8*inreg%d1,i8*inreg%dR)
ret i8*%d3
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18equalOprimSelectorE_675(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=getelementptr inbounds i8,i8*%p,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=getelementptr inbounds i8,i8*%p,i64 16
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
%y=getelementptr inbounds i8,i8*%m,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%f,align 8
%D=getelementptr inbounds i8,i8*%A,i64 8
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%g,align 8
%G=getelementptr inbounds i8,i8*%A,i64 16
%H=bitcast i8*%G to i32*
%I=load i32,i32*%H,align 4
%J=icmp eq i32%x,%I
br i1%J,label%K,label%X
K:
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
%O=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%L,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=call fastcc i32@_SMLFN6Symbol12eqLongsymbolE(i8*inreg%L)
%W=icmp eq i32%V,0
br i1%W,label%al,label%Y
X:
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
br label%al
Y:
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%g,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=load i8*,i8**%c,align 8
%ak=tail call fastcc i8*@_SMLLLN17PolyTyElimination18equalOverloadMatchE_674(i8*inreg%aj,i8*inreg%Z)
ret i8*%ak
al:
store i8*null,i8**%c,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
%am=call i8*@sml_alloc(i32 inreg 60)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177336,i32*%ao,align 4
%ap=getelementptr inbounds i8,i8*%am,i64 56
%aq=bitcast i8*%ap to i32*
store i32 1,i32*%aq,align 4
%ar=bitcast i8*%am to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aI,i64 0,i32 2)to i8*),i8**%ar,align 8
call void@sml_raise(i8*inreg%am)#1
unreachable
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18equalOprimSelectorE_676(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination18equalOprimSelectorE_907 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination18equalOprimSelectorE_907 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15equalConstraintE_677(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15equalConstraintE_908 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15equalConstraintE_908 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination9equalKindE_678(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%p,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=getelementptr inbounds i8,i8*%p,i64 16
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%m,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%y,i64 16
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%f,align 8
%F=call fastcc i8*@_SMLFN5Types15equalPropertiesE(i8*inreg%s)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=call fastcc i8*%I(i8*inreg%K,i8*inreg%L)
%N=bitcast i8*%M to i32*
%O=load i32,i32*%N,align 4
%P=icmp eq i32%O,0
br i1%P,label%df,label%Q
Q:
%R=load i8*,i8**%d,align 8
%S=icmp eq i8*%R,null
br i1%S,label%bb,label%T
T:
%U=bitcast i8*%R to i32*
%V=load i32,i32*%U,align 4
switch i32%V,label%W[
i32 0,label%cI
i32 1,label%br
i32 3,label%bb
i32 2,label%ao
]
W:
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%X=load i8*,i8**@_SMLZ5Match,align 8
store i8*%X,i8**%c,align 8
%Y=call i8*@sml_alloc(i32 inreg 20)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177296,i32*%aa,align 4
store i8*%Y,i8**%d,align 8
%ab=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@aW,i64 0,i32 2,i64 0),i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to i32*
store i32 3,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 60)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177336,i32*%aj,align 4
%ak=getelementptr inbounds i8,i8*%ah,i64 56
%al=bitcast i8*%ak to i32*
store i32 1,i32*%al,align 4
%am=load i8*,i8**%d,align 8
%an=bitcast i8*%ah to i8**
store i8*%am,i8**%an,align 8
call void@sml_raise(i8*inreg%ah)#1
unreachable
ao:
%ap=getelementptr inbounds i8,i8*%R,i64 8
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%d,align 8
%as=load i8*,i8**%f,align 8
%at=icmp eq i8*%as,null
br i1%at,label%ay,label%au
au:
%av=bitcast i8*%as to i32*
%aw=load i32,i32*%av,align 4
%ax=icmp eq i32%aw,2
br i1%ax,label%aF,label%ay
ay:
store i8*null,i8**%c,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%d,align 8
%az=call i8*@sml_alloc(i32 inreg 60)#0
%aA=getelementptr inbounds i8,i8*%az,i64 -4
%aB=bitcast i8*%aA to i32*
store i32 1342177336,i32*%aB,align 4
%aC=getelementptr inbounds i8,i8*%az,i64 56
%aD=bitcast i8*%aC to i32*
store i32 1,i32*%aD,align 4
%aE=bitcast i8*%az to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aV,i64 0,i32 2)to i8*),i8**%aE,align 8
call void@sml_raise(i8*inreg%az)#1
unreachable
aF:
store i8*null,i8**%f,align 8
%aG=getelementptr inbounds i8,i8*%as,i64 8
%aH=bitcast i8*%aG to i8**
%aI=load i8*,i8**%aH,align 8
store i8*%aI,i8**%e,align 8
%aJ=call fastcc i8*@_SMLFN11RecordLabel3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%aK=getelementptr inbounds i8,i8*%aJ,i64 16
%aL=bitcast i8*%aK to i8*(i8*,i8*)**
%aM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aL,align 8
%aN=bitcast i8*%aJ to i8**
%aO=load i8*,i8**%aN,align 8
%aP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aQ=call fastcc i8*%aM(i8*inreg%aO,i8*inreg%aP)
store i8*%aQ,i8**%d,align 8
%aR=call fastcc i8*@_SMLFN11RecordLabel3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%aS=getelementptr inbounds i8,i8*%aR,i64 16
%aT=bitcast i8*%aS to i8*(i8*,i8*)**
%aU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aT,align 8
%aV=bitcast i8*%aR to i8**
%aW=load i8*,i8**%aV,align 8
%aX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aY=call fastcc i8*%aU(i8*inreg%aW,i8*inreg%aX)
store i8*%aY,i8**%e,align 8
%aZ=call i8*@sml_alloc(i32 inreg 20)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177296,i32*%a1,align 4
%a2=load i8*,i8**%d,align 8
%a3=bitcast i8*%aZ to i8**
store i8*%a2,i8**%a3,align 8
%a4=load i8*,i8**%e,align 8
%a5=getelementptr inbounds i8,i8*%aZ,i64 8
%a6=bitcast i8*%a5 to i8**
store i8*%a4,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%aZ,i64 16
%a8=bitcast i8*%a7 to i32*
store i32 3,i32*%a8,align 4
%a9=load i8*,i8**%c,align 8
%ba=tail call fastcc i8*@_SMLLLN17PolyTyElimination9equalListE_666(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@m,i64 0,i32 2)to i8*),i8*inreg%a9,i8*inreg%aZ)
ret i8*%ba
bb:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%bc=load i8*,i8**%f,align 8
%bd=icmp eq i8*%bc,null
store i8*null,i8**%f,align 8
br i1%bd,label%bp,label%be
be:
%bf=bitcast i8*%bc to i32*
%bg=load i32,i32*%bf,align 4
%bh=icmp eq i32%bg,3
br i1%bh,label%bp,label%bi
bi:
%bj=call i8*@sml_alloc(i32 inreg 60)#0
%bk=getelementptr inbounds i8,i8*%bj,i64 -4
%bl=bitcast i8*%bk to i32*
store i32 1342177336,i32*%bl,align 4
%bm=getelementptr inbounds i8,i8*%bj,i64 56
%bn=bitcast i8*%bm to i32*
store i32 1,i32*%bn,align 4
%bo=bitcast i8*%bj to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aT,i64 0,i32 2)to i8*),i8**%bo,align 8
call void@sml_raise(i8*inreg%bj)#1
unreachable
bp:
%bq=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 0,i32 inreg 4)
ret i8*%bq
br:
%bs=getelementptr inbounds i8,i8*%R,i64 8
%bt=bitcast i8*%bs to i8**
%bu=load i8*,i8**%bt,align 8
%bv=bitcast i8*%bu to i8**
%bw=load i8*,i8**%bv,align 8
store i8*%bw,i8**%d,align 8
%bx=getelementptr inbounds i8,i8*%bu,i64 8
%by=bitcast i8*%bx to i8**
%bz=load i8*,i8**%by,align 8
store i8*%bz,i8**%e,align 8
%bA=load i8*,i8**%f,align 8
%bB=icmp eq i8*%bA,null
br i1%bB,label%bG,label%bC
bC:
%bD=bitcast i8*%bA to i32*
%bE=load i32,i32*%bD,align 4
%bF=icmp eq i32%bE,1
br i1%bF,label%bN,label%bG
bG:
store i8*null,i8**%c,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%bH=call i8*@sml_alloc(i32 inreg 60)#0
%bI=getelementptr inbounds i8,i8*%bH,i64 -4
%bJ=bitcast i8*%bI to i32*
store i32 1342177336,i32*%bJ,align 4
%bK=getelementptr inbounds i8,i8*%bH,i64 56
%bL=bitcast i8*%bK to i32*
store i32 1,i32*%bL,align 4
%bM=bitcast i8*%bH to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aR,i64 0,i32 2)to i8*),i8**%bM,align 8
call void@sml_raise(i8*inreg%bH)#1
unreachable
bN:
%bO=getelementptr inbounds i8,i8*%bA,i64 8
%bP=bitcast i8*%bO to i8**
%bQ=load i8*,i8**%bP,align 8
%bR=bitcast i8*%bQ to i8**
%bS=load i8*,i8**%bR,align 8
store i8*%bS,i8**%f,align 8
%bT=getelementptr inbounds i8,i8*%bQ,i64 8
%bU=bitcast i8*%bT to i8**
%bV=load i8*,i8**%bU,align 8
store i8*%bV,i8**%g,align 8
%bW=call i8*@sml_alloc(i32 inreg 20)#0
%bX=getelementptr inbounds i8,i8*%bW,i64 -4
%bY=bitcast i8*%bX to i32*
store i32 1342177296,i32*%bY,align 4
%bZ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b0=bitcast i8*%bW to i8**
store i8*%bZ,i8**%b0,align 8
%b1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b2=getelementptr inbounds i8,i8*%bW,i64 8
%b3=bitcast i8*%b2 to i8**
store i8*%b1,i8**%b3,align 8
%b4=getelementptr inbounds i8,i8*%bW,i64 16
%b5=bitcast i8*%b4 to i32*
store i32 3,i32*%b5,align 4
%b6=load i8*,i8**%c,align 8
%b7=call fastcc i8*@_SMLLLN17PolyTyElimination9equalListE_666(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@m,i64 0,i32 2)to i8*),i8*inreg%b6,i8*inreg%bW)
store i8*%b7,i8**%d,align 8
%b8=call i8*@sml_alloc(i32 inreg 20)#0
%b9=getelementptr inbounds i8,i8*%b8,i64 -4
%ca=bitcast i8*%b9 to i32*
store i32 1342177296,i32*%ca,align 4
%cb=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cc=bitcast i8*%b8 to i8**
store i8*%cb,i8**%cc,align 8
%cd=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ce=getelementptr inbounds i8,i8*%b8,i64 8
%cf=bitcast i8*%ce to i8**
store i8*%cd,i8**%cf,align 8
%cg=getelementptr inbounds i8,i8*%b8,i64 16
%ch=bitcast i8*%cg to i32*
store i32 3,i32*%ch,align 4
%ci=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cj=call fastcc i8*@_SMLLLN17PolyTyElimination9equalListE_666(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@n,i64 0,i32 2)to i8*),i8*inreg%ci,i8*inreg%b8)
store i8*%cj,i8**%c,align 8
%ck=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 0,i32 inreg 4)
%cl=getelementptr inbounds i8,i8*%ck,i64 16
%cm=bitcast i8*%cl to i8*(i8*,i8*)**
%cn=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cm,align 8
%co=bitcast i8*%ck to i8**
%cp=load i8*,i8**%co,align 8
%cq=call fastcc i8*%cn(i8*inreg%cp,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aP,i64 0,i32 2)to i8*))
%cr=getelementptr inbounds i8,i8*%cq,i64 16
%cs=bitcast i8*%cr to i8*(i8*,i8*)**
%ct=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cs,align 8
%cu=bitcast i8*%cq to i8**
%cv=load i8*,i8**%cu,align 8
store i8*%cv,i8**%e,align 8
%cw=call i8*@sml_alloc(i32 inreg 20)#0
%cx=getelementptr inbounds i8,i8*%cw,i64 -4
%cy=bitcast i8*%cx to i32*
store i32 1342177296,i32*%cy,align 4
%cz=load i8*,i8**%d,align 8
%cA=bitcast i8*%cw to i8**
store i8*%cz,i8**%cA,align 8
%cB=load i8*,i8**%c,align 8
%cC=getelementptr inbounds i8,i8*%cw,i64 8
%cD=bitcast i8*%cC to i8**
store i8*%cB,i8**%cD,align 8
%cE=getelementptr inbounds i8,i8*%cw,i64 16
%cF=bitcast i8*%cE to i32*
store i32 3,i32*%cF,align 4
%cG=load i8*,i8**%e,align 8
%cH=tail call fastcc i8*%ct(i8*inreg%cG,i8*inreg%cw)
ret i8*%cH
cI:
%cJ=getelementptr inbounds i8,i8*%R,i64 8
%cK=bitcast i8*%cJ to i8**
%cL=load i8*,i8**%cK,align 8
store i8*%cL,i8**%d,align 8
%cM=load i8*,i8**%f,align 8
%cN=icmp eq i8*%cM,null
br i1%cN,label%cS,label%cO
cO:
%cP=bitcast i8*%cM to i32*
%cQ=load i32,i32*%cP,align 4
%cR=icmp eq i32%cQ,0
br i1%cR,label%cZ,label%cS
cS:
store i8*null,i8**%c,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%d,align 8
%cT=call i8*@sml_alloc(i32 inreg 60)#0
%cU=getelementptr inbounds i8,i8*%cT,i64 -4
%cV=bitcast i8*%cU to i32*
store i32 1342177336,i32*%cV,align 4
%cW=getelementptr inbounds i8,i8*%cT,i64 56
%cX=bitcast i8*%cW to i32*
store i32 1,i32*%cX,align 4
%cY=bitcast i8*%cT to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aM,i64 0,i32 2)to i8*),i8**%cY,align 8
call void@sml_raise(i8*inreg%cT)#1
unreachable
cZ:
store i8*null,i8**%f,align 8
%c0=getelementptr inbounds i8,i8*%cM,i64 8
%c1=bitcast i8*%c0 to i8**
%c2=load i8*,i8**%c1,align 8
store i8*%c2,i8**%e,align 8
%c3=call i8*@sml_alloc(i32 inreg 20)#0
%c4=getelementptr inbounds i8,i8*%c3,i64 -4
%c5=bitcast i8*%c4 to i32*
store i32 1342177296,i32*%c5,align 4
%c6=load i8*,i8**%d,align 8
%c7=bitcast i8*%c3 to i8**
store i8*%c6,i8**%c7,align 8
%c8=load i8*,i8**%e,align 8
%c9=getelementptr inbounds i8,i8*%c3,i64 8
%da=bitcast i8*%c9 to i8**
store i8*%c8,i8**%da,align 8
%db=getelementptr inbounds i8,i8*%c3,i64 16
%dc=bitcast i8*%db to i32*
store i32 3,i32*%dc,align 4
%dd=load i8*,i8**%c,align 8
%de=tail call fastcc i8*@_SMLLLN17PolyTyElimination9equalListE_666(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@m,i64 0,i32 2)to i8*),i8*inreg%dd,i8*inreg%c3)
ret i8*%de
df:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
%dg=call i8*@sml_alloc(i32 inreg 60)#0
%dh=getelementptr inbounds i8,i8*%dg,i64 -4
%di=bitcast i8*%dh to i32*
store i32 1342177336,i32*%di,align 4
%dj=getelementptr inbounds i8,i8*%dg,i64 56
%dk=bitcast i8*%dj to i32*
store i32 1,i32*%dk,align 4
%dl=bitcast i8*%dg to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aK,i64 0,i32 2)to i8*),i8**%dl,align 8
call void@sml_raise(i8*inreg%dg)#1
unreachable
}
define internal fastcc void@_SMLLLN17PolyTyElimination5equalE_928(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"personality i32(...)*@sml_personality{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%k,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%x=getelementptr inbounds i8,i8*%r,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%r,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=invoke fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_672(i8*inreg%B,i8*inreg%r)
to label%ap unwind label%D
D:
%E=landingpad{i8*,i8*}
catch i8*null
%F=extractvalue{i8*,i8*}%E,1
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%c,align 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
%K=icmp eq i8*%J,bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i64 0,i32 2)to i8*)
br i1%K,label%L,label%ah
L:
%M=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%M,i8**%c,align 8
%N=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aY,i64 0,i32 2)to i8*))
store i8*%N,i8**%d,align 8
%O=call i8*@sml_alloc(i32 inreg 28)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177304,i32*%Q,align 4
store i8*%O,i8**%e,align 8
%R=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%U,align 8
%V=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%W=getelementptr inbounds i8,i8*%O,i64 16
%X=bitcast i8*%W to i8**
store i8*%V,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%O,i64 24
%Z=bitcast i8*%Y to i32*
store i32 7,i32*%Z,align 4
%aa=call i8*@sml_alloc(i32 inreg 60)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177336,i32*%ac,align 4
%ad=getelementptr inbounds i8,i8*%aa,i64 56
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
%af=load i8*,i8**%e,align 8
%ag=bitcast i8*%aa to i8**
store i8*%af,i8**%ag,align 8
call void@sml_raise(i8*inreg%aa)#1
unreachable
ah:
%ai=call i8*@sml_alloc(i32 inreg 60)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177336,i32*%ak,align 4
%al=getelementptr inbounds i8,i8*%ai,i64 56
%am=bitcast i8*%al to i32*
store i32 1,i32*%am,align 4
%an=load i8*,i8**%c,align 8
%ao=bitcast i8*%ai to i8**
store i8*%an,i8**%ao,align 8
call void@sml_raise(i8*inreg%ai)#1
unreachable
ap:
ret void
}
define internal fastcc void@_SMLLLN17PolyTyElimination5equalE_930(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
tail call fastcc void@_SMLLLN17PolyTyElimination5equalE_928(i8*inreg%p,i8*inreg%o)
ret void
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination5equalE_931(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLLN17PolyTyElimination5equalE_930 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination5equalE_1684 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc void@_SMLLLN17PolyTyElimination9equalListE_937(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"personality i32(...)*@sml_personality{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%d,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=bitcast i8*%l to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=invoke fastcc i8*@_SMLFN8ListPair5appEqE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
to label%t unwind label%W
t:
%u=getelementptr inbounds i8,i8*%s,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%s to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%f,align 8
%z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A=call fastcc i8*@_SMLLLN17PolyTyElimination5equalE_931(i8*inreg%z)
%B=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%C=invoke fastcc i8*%w(i8*inreg%B,i8*inreg%A)
to label%D unwind label%W
D:
%E=getelementptr inbounds i8,i8*%C,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%C to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%c,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%J,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=invoke fastcc i8*%G(i8*inreg%T,i8*inreg%J)
to label%V unwind label%W
V:
ret void
W:
%X=landingpad{i8*,i8*}
catch i8*null
%Y=extractvalue{i8*,i8*}%X,1
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*%aa,i8**%c,align 8
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
%ad=load i8*,i8**@_SMLZN8ListPair14UnequalLengthsE,align 8
%ae=icmp eq i8*%ac,%ad
br i1%ae,label%af,label%aB
af:
%ag=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%ag,i8**%c,align 8
%ah=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a0,i64 0,i32 2)to i8*))
store i8*%ah,i8**%d,align 8
%ai=call i8*@sml_alloc(i32 inreg 28)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177304,i32*%ak,align 4
store i8*%ai,i8**%e,align 8
%al=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%am=bitcast i8*%ai to i8**
store i8*%al,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ai,i64 8
%ao=bitcast i8*%an to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%ao,align 8
%ap=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aq=getelementptr inbounds i8,i8*%ai,i64 16
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%ai,i64 24
%at=bitcast i8*%as to i32*
store i32 7,i32*%at,align 4
%au=call i8*@sml_alloc(i32 inreg 60)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177336,i32*%aw,align 4
%ax=getelementptr inbounds i8,i8*%au,i64 56
%ay=bitcast i8*%ax to i32*
store i32 1,i32*%ay,align 4
%az=load i8*,i8**%e,align 8
%aA=bitcast i8*%au to i8**
store i8*%az,i8**%aA,align 8
call void@sml_raise(i8*inreg%au)#1
unreachable
aB:
%aC=call i8*@sml_alloc(i32 inreg 60)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177336,i32*%aE,align 4
%aF=getelementptr inbounds i8,i8*%aC,i64 56
%aG=bitcast i8*%aF to i32*
store i32 1,i32*%aG,align 4
%aH=load i8*,i8**%c,align 8
%aI=bitcast i8*%aC to i8**
store i8*%aH,i8**%aI,align 8
call void@sml_raise(i8*inreg%aC)#1
unreachable
}
define internal fastcc void@_SMLLLN17PolyTyElimination8equalAllE_939(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
i:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
br label%g
g:
%h=phi i8*[%P,%y],[%b,%i]
store i8*%h,i8**%d,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%d,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%h,%g]
%p=icmp eq i8*%o,null
br i1%p,label%q,label%r
q:
ret void
r:
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%e,align 8
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
%x=icmp eq i8*%w,null
br i1%x,label%q,label%y
y:
%z=bitcast i8*%w to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%f,align 8
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
%H=load i8*,i8**%e,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%E,i64 16
%N=bitcast i8*%M to i32*
store i32 3,i32*%N,align 4
%O=load i8*,i8**%c,align 8
call fastcc void@_SMLLLN17PolyTyElimination5equalE_928(i8*inreg%O,i8*inreg%E)
%P=call i8*@sml_alloc(i32 inreg 20)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
%S=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%V=getelementptr inbounds i8,i8*%P,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%P,i64 16
%Y=bitcast i8*%X to i32*
store i32 3,i32*%Y,align 4
br label%g
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_945(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%m,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=getelementptr inbounds i8,i8*%j,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%d,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
%B=load i8*,i8**%c,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%E=getelementptr inbounds i8,i8*%y,i64 8
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%y,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
%I=call fastcc i32@_SMLFN16DynamicKindUtils6eqKindE(i8*inreg%y)
%J=icmp eq i32%I,0
br i1%J,label%V,label%K
K:
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
%O=load i8*,i8**%b,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%c,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%L,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
ret i8*%L
V:
store i8*null,i8**%c,align 8
%W=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%W,i8**%b,align 8
%X=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a2,i64 0,i32 2)to i8*))
store i8*%X,i8**%c,align 8
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
store i8*%Y,i8**%d,align 8
%ab=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%ae,align 8
%af=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ag=getelementptr inbounds i8,i8*%Y,i64 16
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Y,i64 24
%aj=bitcast i8*%ai to i32*
store i32 7,i32*%aj,align 4
%ak=call i8*@sml_alloc(i32 inreg 60)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177336,i32*%am,align 4
%an=getelementptr inbounds i8,i8*%ak,i64 56
%ao=bitcast i8*%an to i32*
store i32 1,i32*%ao,align 4
%ap=load i8*,i8**%d,align 8
%aq=bitcast i8*%ak to i8**
store i8*%ap,i8**%aq,align 8
call void@sml_raise(i8*inreg%ak)#1
unreachable
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_947(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 1,i32 inreg 8)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%t(i8*inreg%v,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a3,i64 0,i32 2)to i8*))
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%d,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=load i8*,i8**%b,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=load i8*,i8**%d,align 8
%N=tail call fastcc i8*%z(i8*inreg%M,i8*inreg%C)
ret i8*%N
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_949(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%c,align 8
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=load i8*,i8**%n,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
store i8*null,i8**%d,align 8
%y=bitcast i8**%n to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*%x(i8*inreg%A,i8*inreg%q)
store i8*%B,i8**%d,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=load i8*,i8**%d,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=tail call fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_947(i8*inreg%C)
ret i8*%M
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10getIdsListE_949 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10getIdsListE_949 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%c,align 8
%P=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=call fastcc i8*%M(i8*inreg%Q,i8*inreg%P)
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=load i8*,i8**%d,align 8
%Y=tail call fastcc i8*%U(i8*inreg%W,i8*inreg%X)
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_993(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=call fastcc i8*@_SMLFN16DynamicKindUtils16kindOfStaticKindE(i8*inreg%i)
%l=icmp eq i8*%k,null
br i1%l,label%m,label%G
m:
%n=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 28)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177304,i32*%q,align 4
store i8*%o,i8**%c,align 8
%r=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@br,i64 0,i32 2,i64 0),i8**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 16
%w=bitcast i8*%v to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@bs,i64 0,i32 2,i64 0),i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 24
%y=bitcast i8*%x to i32*
store i32 7,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 60)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177336,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 56
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
call void@sml_raise(i8*inreg%z)#1
unreachable
G:
%H=bitcast i8*%k to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%c,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
%M=load i8*,i8**%b,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%J,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
ret i8*%J
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_998(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=call fastcc i8*@_SMLFN16DynamicKindUtils16kindOfStaticKindE(i8*inreg%i)
%l=icmp eq i8*%k,null
br i1%l,label%m,label%G
m:
%n=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 28)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177304,i32*%q,align 4
store i8*%o,i8**%c,align 8
%r=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@br,i64 0,i32 2,i64 0),i8**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 16
%w=bitcast i8*%v to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@bs,i64 0,i32 2,i64 0),i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 24
%y=bitcast i8*%x to i32*
store i32 7,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 60)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177336,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 56
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
call void@sml_raise(i8*inreg%z)#1
unreachable
G:
%H=bitcast i8*%k to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%c,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
%M=load i8*,i8**%b,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%J,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
ret i8*%J
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_1014(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=call fastcc i8*@_SMLFN16DynamicKindUtils16kindOfStaticKindE(i8*inreg%i)
%l=icmp eq i8*%k,null
br i1%l,label%m,label%G
m:
%n=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 28)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177304,i32*%q,align 4
store i8*%o,i8**%c,align 8
%r=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@br,i64 0,i32 2,i64 0),i8**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 16
%w=bitcast i8*%v to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@bs,i64 0,i32 2,i64 0),i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 24
%y=bitcast i8*%x to i32*
store i32 7,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 60)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177336,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 56
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
call void@sml_raise(i8*inreg%z)#1
unreachable
G:
%H=bitcast i8*%k to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%c,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
%M=load i8*,i8**%b,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%J,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
ret i8*%J
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination19getIdsOverloadMatchE_1017(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=call fastcc i8*@_SMLLLN17PolyTyElimination19getIdsOverloadMatchE_953(i8*inreg%l)
store i8*%p,i8**%c,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=load i8*,i8**%b,align 8
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%q,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=tail call fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_947(i8*inreg%q)
ret i8*%A
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_952(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%b,align 8
br label%g
g:
%h=phi i8*[%a,%i],[%cd,%cc]
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%b,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%h,%g]
%p=icmp eq i8*%o,null
br i1%p,label%e0,label%q
q:
%r=bitcast i8*%o to i32*
%s=load i32,i32*%r,align 4
switch i32%s,label%t[
i32 9,label%iC
i32 0,label%fm
i32 4,label%e0
i32 3,label%dN
i32 5,label%cA
i32 10,label%bJ
i32 1,label%bH
i32 6,label%bn
i32 8,label%ba
i32 2,label%a4
i32 7,label%L
]
t:
call void@sml_matchcomp_bug()
%u=load i8*,i8**@_SMLZ5Match,align 8
store i8*%u,i8**%b,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%c,align 8
%y=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bh,i64 0,i32 2,i64 0),i8**%B,align 8
%C=getelementptr inbounds i8,i8*%v,i64 16
%D=bitcast i8*%C to i32*
store i32 3,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 60)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177336,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%E,i64 56
%I=bitcast i8*%H to i32*
store i32 1,i32*%I,align 4
%J=load i8*,i8**%c,align 8
%K=bitcast i8*%E to i8**
store i8*%J,i8**%K,align 8
call void@sml_raise(i8*inreg%E)#1
unreachable
L:
%M=getelementptr inbounds i8,i8*%o,i64 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%b,align 8
%R=getelementptr inbounds i8,i8*%O,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%c,align 8
%U=getelementptr inbounds i8,i8*%O,i64 16
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a7,i64 0,i32 2)to i8*),i8*inreg%W)
store i8*%X,i8**%d,align 8
%Y=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Z=call fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_952(i8*inreg%Y)
store i8*%Z,i8**%b,align 8
%aa=call i8*@sml_alloc(i32 inreg 20)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177296,i32*%ac,align 4
%ad=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ag=getelementptr inbounds i8,i8*%aa,i64 8
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%aa,i64 16
%aj=bitcast i8*%ai to i32*
store i32 3,i32*%aj,align 4
%ak=call fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_947(i8*inreg%aa)
store i8*%ak,i8**%b,align 8
%al=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%am=getelementptr inbounds i8,i8*%al,i64 16
%an=bitcast i8*%am to i8*(i8*,i8*)**
%ao=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%an,align 8
%ap=bitcast i8*%al to i8**
%aq=load i8*,i8**%ap,align 8
%ar=load i8*,i8**%c,align 8
%as=call fastcc i8*%ao(i8*inreg%aq,i8*inreg%ar)
%at=call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a6,i64 0,i32 2)to i8*),i8*inreg%as)
store i8*%at,i8**%d,align 8
%au=call fastcc i8*@_SMLFN14BoundTypeVarID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%av=getelementptr inbounds i8,i8*%au,i64 16
%aw=bitcast i8*%av to i8*(i8*,i8*)**
%ax=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aw,align 8
%ay=bitcast i8*%au to i8**
%az=load i8*,i8**%ay,align 8
%aA=call fastcc i8*%ax(i8*inreg%az,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bg,i64 0,i32 2)to i8*))
%aB=getelementptr inbounds i8,i8*%aA,i64 16
%aC=bitcast i8*%aB to i8*(i8*,i8*)**
%aD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aC,align 8
%aE=bitcast i8*%aA to i8**
%aF=load i8*,i8**%aE,align 8
%aG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aH=call fastcc i8*%aD(i8*inreg%aF,i8*inreg%aG)
store i8*%aH,i8**%c,align 8
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
%aL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aO=getelementptr inbounds i8,i8*%aI,i64 8
%aP=bitcast i8*%aO to i8**
store i8*%aN,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aI,i64 16
%aR=bitcast i8*%aQ to i32*
store i32 3,i32*%aR,align 4
%aS=call fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_947(i8*inreg%aI)
store i8*%aS,i8**%c,align 8
%aT=call i8*@sml_alloc(i32 inreg 20)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
%aW=load i8*,i8**%b,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%c,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aT,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
%a3=tail call fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_947(i8*inreg%aT)
ret i8*%a3
a4:
%a5=getelementptr inbounds i8,i8*%o,i64 8
%a6=bitcast i8*%a5 to i8***
%a7=load i8**,i8***%a6,align 8
%a8=load i8*,i8**%a7,align 8
%a9=tail call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%a8)
ret i8*%a9
ba:
%bb=getelementptr inbounds i8,i8*%o,i64 8
%bc=bitcast i8*%bb to i8**
%bd=load i8*,i8**%bc,align 8
store i8*%bd,i8**%b,align 8
%be=call fastcc i8*@_SMLFN11RecordLabel3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%bf=getelementptr inbounds i8,i8*%be,i64 16
%bg=bitcast i8*%bf to i8*(i8*,i8*)**
%bh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bg,align 8
%bi=bitcast i8*%be to i8**
%bj=load i8*,i8**%bi,align 8
%bk=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bl=call fastcc i8*%bh(i8*inreg%bj,i8*inreg%bk)
%bm=tail call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%bl)
ret i8*%bm
bn:
%bo=getelementptr inbounds i8,i8*%o,i64 8
%bp=bitcast i8*%bo to i8**
%bq=load i8*,i8**%bp,align 8
%br=bitcast i8*%bq to i8**
%bs=load i8*,i8**%br,align 8
store i8*%bs,i8**%b,align 8
%bt=getelementptr inbounds i8,i8*%bq,i64 8
%bu=bitcast i8*%bt to i8**
%bv=load i8*,i8**%bu,align 8
store i8*%bv,i8**%c,align 8
%bw=call i8*@sml_alloc(i32 inreg 20)#0
%bx=getelementptr inbounds i8,i8*%bw,i64 -4
%by=bitcast i8*%bx to i32*
store i32 1342177296,i32*%by,align 4
%bz=load i8*,i8**%c,align 8
%bA=bitcast i8*%bw to i8**
store i8*%bz,i8**%bA,align 8
%bB=load i8*,i8**%b,align 8
%bC=getelementptr inbounds i8,i8*%bw,i64 8
%bD=bitcast i8*%bC to i8**
store i8*%bB,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bw,i64 16
%bF=bitcast i8*%bE to i32*
store i32 3,i32*%bF,align 4
%bG=tail call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%bw)
ret i8*%bG
bH:
%bI=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
ret i8*%bI
bJ:
store i8*null,i8**%b,align 8
%bK=getelementptr inbounds i8,i8*%o,i64 8
%bL=bitcast i8*%bK to i8***
%bM=load i8**,i8***%bL,align 8
%bN=load i8*,i8**%bM,align 8
%bO=bitcast i8*%bN to i32*
%bP=load i32,i32*%bO,align 4
switch i32%bP,label%bQ[
i32 1,label%ce
i32 0,label%b8
]
bQ:
call void@sml_matchcomp_bug()
%bR=load i8*,i8**@_SMLZ5Match,align 8
store i8*%bR,i8**%b,align 8
%bS=call i8*@sml_alloc(i32 inreg 20)#0
%bT=getelementptr inbounds i8,i8*%bS,i64 -4
%bU=bitcast i8*%bT to i32*
store i32 1342177296,i32*%bU,align 4
store i8*%bS,i8**%c,align 8
%bV=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bW=bitcast i8*%bS to i8**
store i8*%bV,i8**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bS,i64 8
%bY=bitcast i8*%bX to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bh,i64 0,i32 2,i64 0),i8**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bS,i64 16
%b0=bitcast i8*%bZ to i32*
store i32 3,i32*%b0,align 4
%b1=call i8*@sml_alloc(i32 inreg 60)#0
%b2=getelementptr inbounds i8,i8*%b1,i64 -4
%b3=bitcast i8*%b2 to i32*
store i32 1342177336,i32*%b3,align 4
%b4=getelementptr inbounds i8,i8*%b1,i64 56
%b5=bitcast i8*%b4 to i32*
store i32 1,i32*%b5,align 4
%b6=load i8*,i8**%c,align 8
%b7=bitcast i8*%b1 to i8**
store i8*%b6,i8**%b7,align 8
call void@sml_raise(i8*inreg%b1)#1
unreachable
b8:
%b9=getelementptr inbounds i8,i8*%bN,i64 8
%ca=bitcast i8*%b9 to i8**
%cb=load i8*,i8**%ca,align 8
store i8*%cb,i8**%b,align 8
br label%cc
cc:
%cd=phi i8*[%cb,%b8],[%iq,%ik],[%ix,%ir],[%iB,%iy],[%i3,%i0],[%i7,%i4],[%jb,%i8],[%ji,%jc]
br label%g
ce:
%cf=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%cf,i8**%b,align 8
%cg=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bf,i64 0,i32 2)to i8*))
store i8*%cg,i8**%c,align 8
%ch=call i8*@sml_alloc(i32 inreg 28)#0
%ci=getelementptr inbounds i8,i8*%ch,i64 -4
%cj=bitcast i8*%ci to i32*
store i32 1342177304,i32*%cj,align 4
store i8*%ch,i8**%d,align 8
%ck=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%cl=bitcast i8*%ch to i8**
store i8*%ck,i8**%cl,align 8
%cm=getelementptr inbounds i8,i8*%ch,i64 8
%cn=bitcast i8*%cm to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%cn,align 8
%co=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cp=getelementptr inbounds i8,i8*%ch,i64 16
%cq=bitcast i8*%cp to i8**
store i8*%co,i8**%cq,align 8
%cr=getelementptr inbounds i8,i8*%ch,i64 24
%cs=bitcast i8*%cr to i32*
store i32 7,i32*%cs,align 4
%ct=call i8*@sml_alloc(i32 inreg 60)#0
%cu=getelementptr inbounds i8,i8*%ct,i64 -4
%cv=bitcast i8*%cu to i32*
store i32 1342177336,i32*%cv,align 4
%cw=getelementptr inbounds i8,i8*%ct,i64 56
%cx=bitcast i8*%cw to i32*
store i32 1,i32*%cx,align 4
%cy=load i8*,i8**%d,align 8
%cz=bitcast i8*%ct to i8**
store i8*%cy,i8**%cz,align 8
call void@sml_raise(i8*inreg%ct)#1
unreachable
cA:
%cB=getelementptr inbounds i8,i8*%o,i64 8
%cC=bitcast i8*%cB to i8**
%cD=load i8*,i8**%cC,align 8
%cE=getelementptr inbounds i8,i8*%cD,i64 8
%cF=bitcast i8*%cE to i8**
%cG=load i8*,i8**%cF,align 8
%cH=getelementptr inbounds i8,i8*%cG,i64 16
%cI=bitcast i8*%cH to i8**
%cJ=load i8*,i8**%cI,align 8
%cK=icmp eq i8*%cJ,null
br i1%cK,label%dj,label%cL
cL:
%cM=bitcast i8*%cJ to i32*
%cN=load i32,i32*%cM,align 4
switch i32%cN,label%cO[
i32 0,label%dI
i32 1,label%dl
i32 3,label%dj
i32 2,label%c6
]
cO:
call void@sml_matchcomp_bug()
%cP=load i8*,i8**@_SMLZ5Match,align 8
store i8*%cP,i8**%b,align 8
%cQ=call i8*@sml_alloc(i32 inreg 20)#0
%cR=getelementptr inbounds i8,i8*%cQ,i64 -4
%cS=bitcast i8*%cR to i32*
store i32 1342177296,i32*%cS,align 4
store i8*%cQ,i8**%c,align 8
%cT=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%cU=bitcast i8*%cQ to i8**
store i8*%cT,i8**%cU,align 8
%cV=getelementptr inbounds i8,i8*%cQ,i64 8
%cW=bitcast i8*%cV to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bk,i64 0,i32 2,i64 0),i8**%cW,align 8
%cX=getelementptr inbounds i8,i8*%cQ,i64 16
%cY=bitcast i8*%cX to i32*
store i32 3,i32*%cY,align 4
%cZ=call i8*@sml_alloc(i32 inreg 60)#0
%c0=getelementptr inbounds i8,i8*%cZ,i64 -4
%c1=bitcast i8*%c0 to i32*
store i32 1342177336,i32*%c1,align 4
%c2=getelementptr inbounds i8,i8*%cZ,i64 56
%c3=bitcast i8*%c2 to i32*
store i32 1,i32*%c3,align 4
%c4=load i8*,i8**%c,align 8
%c5=bitcast i8*%cZ to i8**
store i8*%c4,i8**%c5,align 8
call void@sml_raise(i8*inreg%cZ)#1
unreachable
c6:
%c7=getelementptr inbounds i8,i8*%cJ,i64 8
%c8=bitcast i8*%c7 to i8**
%c9=load i8*,i8**%c8,align 8
store i8*%c9,i8**%b,align 8
%da=call fastcc i8*@_SMLFN11RecordLabel3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%db=getelementptr inbounds i8,i8*%da,i64 16
%dc=bitcast i8*%db to i8*(i8*,i8*)**
%dd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dc,align 8
%de=bitcast i8*%da to i8**
%df=load i8*,i8**%de,align 8
%dg=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%dh=call fastcc i8*%dd(i8*inreg%df,i8*inreg%dg)
%di=tail call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%dh)
ret i8*%di
dj:
%dk=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
ret i8*%dk
dl:
%dm=getelementptr inbounds i8,i8*%cJ,i64 8
%dn=bitcast i8*%dm to i8**
%do=load i8*,i8**%dn,align 8
%dp=bitcast i8*%do to i8**
%dq=load i8*,i8**%dp,align 8
%dr=getelementptr inbounds i8,i8*%do,i64 8
%ds=bitcast i8*%dr to i8**
%dt=load i8*,i8**%ds,align 8
store i8*%dt,i8**%b,align 8
%du=call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%dq)
store i8*%du,i8**%c,align 8
%dv=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%dw=call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a5,i64 0,i32 2)to i8*),i8*inreg%dv)
store i8*%dw,i8**%b,align 8
%dx=call i8*@sml_alloc(i32 inreg 20)#0
%dy=getelementptr inbounds i8,i8*%dx,i64 -4
%dz=bitcast i8*%dy to i32*
store i32 1342177296,i32*%dz,align 4
%dA=load i8*,i8**%c,align 8
%dB=bitcast i8*%dx to i8**
store i8*%dA,i8**%dB,align 8
%dC=load i8*,i8**%b,align 8
%dD=getelementptr inbounds i8,i8*%dx,i64 8
%dE=bitcast i8*%dD to i8**
store i8*%dC,i8**%dE,align 8
%dF=getelementptr inbounds i8,i8*%dx,i64 16
%dG=bitcast i8*%dF to i32*
store i32 3,i32*%dG,align 4
%dH=tail call fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_947(i8*inreg%dx)
ret i8*%dH
dI:
%dJ=getelementptr inbounds i8,i8*%cJ,i64 8
%dK=bitcast i8*%dJ to i8**
%dL=load i8*,i8**%dK,align 8
%dM=tail call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%dL)
ret i8*%dM
dN:
%dO=getelementptr inbounds i8,i8*%o,i64 8
%dP=bitcast i8*%dO to i8**
%dQ=load i8*,i8**%dP,align 8
%dR=getelementptr inbounds i8,i8*%dQ,i64 8
%dS=bitcast i8*%dR to i8**
%dT=load i8*,i8**%dS,align 8
%dU=getelementptr inbounds i8,i8*%dT,i64 16
%dV=bitcast i8*%dU to i8**
%dW=load i8*,i8**%dV,align 8
%dX=icmp eq i8*%dW,null
br i1%dX,label%ew,label%dY
dY:
%dZ=bitcast i8*%dW to i32*
%d0=load i32,i32*%dZ,align 4
switch i32%d0,label%d1[
i32 0,label%eV
i32 1,label%ey
i32 3,label%ew
i32 2,label%ej
]
d1:
call void@sml_matchcomp_bug()
%d2=load i8*,i8**@_SMLZ5Match,align 8
store i8*%d2,i8**%b,align 8
%d3=call i8*@sml_alloc(i32 inreg 20)#0
%d4=getelementptr inbounds i8,i8*%d3,i64 -4
%d5=bitcast i8*%d4 to i32*
store i32 1342177296,i32*%d5,align 4
store i8*%d3,i8**%c,align 8
%d6=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%d7=bitcast i8*%d3 to i8**
store i8*%d6,i8**%d7,align 8
%d8=getelementptr inbounds i8,i8*%d3,i64 8
%d9=bitcast i8*%d8 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bk,i64 0,i32 2,i64 0),i8**%d9,align 8
%ea=getelementptr inbounds i8,i8*%d3,i64 16
%eb=bitcast i8*%ea to i32*
store i32 3,i32*%eb,align 4
%ec=call i8*@sml_alloc(i32 inreg 60)#0
%ed=getelementptr inbounds i8,i8*%ec,i64 -4
%ee=bitcast i8*%ed to i32*
store i32 1342177336,i32*%ee,align 4
%ef=getelementptr inbounds i8,i8*%ec,i64 56
%eg=bitcast i8*%ef to i32*
store i32 1,i32*%eg,align 4
%eh=load i8*,i8**%c,align 8
%ei=bitcast i8*%ec to i8**
store i8*%eh,i8**%ei,align 8
call void@sml_raise(i8*inreg%ec)#1
unreachable
ej:
%ek=getelementptr inbounds i8,i8*%dW,i64 8
%el=bitcast i8*%ek to i8**
%em=load i8*,i8**%el,align 8
store i8*%em,i8**%b,align 8
%en=call fastcc i8*@_SMLFN11RecordLabel3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%eo=getelementptr inbounds i8,i8*%en,i64 16
%ep=bitcast i8*%eo to i8*(i8*,i8*)**
%eq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ep,align 8
%er=bitcast i8*%en to i8**
%es=load i8*,i8**%er,align 8
%et=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%eu=call fastcc i8*%eq(i8*inreg%es,i8*inreg%et)
%ev=tail call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%eu)
ret i8*%ev
ew:
%ex=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
ret i8*%ex
ey:
%ez=getelementptr inbounds i8,i8*%dW,i64 8
%eA=bitcast i8*%ez to i8**
%eB=load i8*,i8**%eA,align 8
%eC=bitcast i8*%eB to i8**
%eD=load i8*,i8**%eC,align 8
%eE=getelementptr inbounds i8,i8*%eB,i64 8
%eF=bitcast i8*%eE to i8**
%eG=load i8*,i8**%eF,align 8
store i8*%eG,i8**%b,align 8
%eH=call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%eD)
store i8*%eH,i8**%c,align 8
%eI=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%eJ=call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a5,i64 0,i32 2)to i8*),i8*inreg%eI)
store i8*%eJ,i8**%b,align 8
%eK=call i8*@sml_alloc(i32 inreg 20)#0
%eL=getelementptr inbounds i8,i8*%eK,i64 -4
%eM=bitcast i8*%eL to i32*
store i32 1342177296,i32*%eM,align 4
%eN=load i8*,i8**%c,align 8
%eO=bitcast i8*%eK to i8**
store i8*%eN,i8**%eO,align 8
%eP=load i8*,i8**%b,align 8
%eQ=getelementptr inbounds i8,i8*%eK,i64 8
%eR=bitcast i8*%eQ to i8**
store i8*%eP,i8**%eR,align 8
%eS=getelementptr inbounds i8,i8*%eK,i64 16
%eT=bitcast i8*%eS to i32*
store i32 3,i32*%eT,align 4
%eU=tail call fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_947(i8*inreg%eK)
ret i8*%eU
eV:
%eW=getelementptr inbounds i8,i8*%dW,i64 8
%eX=bitcast i8*%eW to i8**
%eY=load i8*,i8**%eX,align 8
%eZ=tail call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%eY)
ret i8*%eZ
e0:
%e1=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%e1,i8**%b,align 8
%e2=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bd,i64 0,i32 2)to i8*))
store i8*%e2,i8**%c,align 8
%e3=call i8*@sml_alloc(i32 inreg 28)#0
%e4=getelementptr inbounds i8,i8*%e3,i64 -4
%e5=bitcast i8*%e4 to i32*
store i32 1342177304,i32*%e5,align 4
store i8*%e3,i8**%d,align 8
%e6=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%e7=bitcast i8*%e3 to i8**
store i8*%e6,i8**%e7,align 8
%e8=getelementptr inbounds i8,i8*%e3,i64 8
%e9=bitcast i8*%e8 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%e9,align 8
%fa=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%fb=getelementptr inbounds i8,i8*%e3,i64 16
%fc=bitcast i8*%fb to i8**
store i8*%fa,i8**%fc,align 8
%fd=getelementptr inbounds i8,i8*%e3,i64 24
%fe=bitcast i8*%fd to i32*
store i32 7,i32*%fe,align 4
%ff=call i8*@sml_alloc(i32 inreg 60)#0
%fg=getelementptr inbounds i8,i8*%ff,i64 -4
%fh=bitcast i8*%fg to i32*
store i32 1342177336,i32*%fh,align 4
%fi=getelementptr inbounds i8,i8*%ff,i64 56
%fj=bitcast i8*%fi to i32*
store i32 1,i32*%fj,align 4
%fk=load i8*,i8**%d,align 8
%fl=bitcast i8*%ff to i8**
store i8*%fk,i8**%fl,align 8
call void@sml_raise(i8*inreg%ff)#1
unreachable
fm:
store i8*null,i8**%b,align 8
%fn=getelementptr inbounds i8,i8*%o,i64 8
%fo=bitcast i8*%fn to i8**
%fp=load i8*,i8**%fo,align 8
%fq=bitcast i8*%fp to i32*
%fr=load i32,i32*%fq,align 4
switch i32%fr,label%fs[
i32 6,label%iy
i32 5,label%ir
i32 4,label%ik
i32 1,label%jr
i32 3,label%jr
i32 0,label%g2
i32 9,label%g0
i32 10,label%gY
i32 8,label%gW
i32 7,label%gU
i32 2,label%fK
]
fs:
call void@sml_matchcomp_bug()
%ft=load i8*,i8**@_SMLZ5Match,align 8
store i8*%ft,i8**%b,align 8
%fu=call i8*@sml_alloc(i32 inreg 20)#0
%fv=getelementptr inbounds i8,i8*%fu,i64 -4
%fw=bitcast i8*%fv to i32*
store i32 1342177296,i32*%fw,align 4
store i8*%fu,i8**%c,align 8
%fx=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%fy=bitcast i8*%fu to i8**
store i8*%fx,i8**%fy,align 8
%fz=getelementptr inbounds i8,i8*%fu,i64 8
%fA=bitcast i8*%fz to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bb,i64 0,i32 2,i64 0),i8**%fA,align 8
%fB=getelementptr inbounds i8,i8*%fu,i64 16
%fC=bitcast i8*%fB to i32*
store i32 3,i32*%fC,align 4
%fD=call i8*@sml_alloc(i32 inreg 60)#0
%fE=getelementptr inbounds i8,i8*%fD,i64 -4
%fF=bitcast i8*%fE to i32*
store i32 1342177336,i32*%fF,align 4
%fG=getelementptr inbounds i8,i8*%fD,i64 56
%fH=bitcast i8*%fG to i32*
store i32 1,i32*%fH,align 4
%fI=load i8*,i8**%c,align 8
%fJ=bitcast i8*%fD to i8**
store i8*%fI,i8**%fJ,align 8
call void@sml_raise(i8*inreg%fD)#1
unreachable
fK:
%fL=getelementptr inbounds i8,i8*%fp,i64 8
%fM=bitcast i8*%fL to i8**
%fN=load i8*,i8**%fM,align 8
%fO=bitcast i8*%fN to i8**
%fP=load i8*,i8**%fO,align 8
store i8*%fP,i8**%b,align 8
%fQ=getelementptr inbounds i8,i8*%fN,i64 16
%fR=bitcast i8*%fQ to i8**
%fS=load i8*,i8**%fR,align 8
store i8*%fS,i8**%c,align 8
%fT=getelementptr inbounds i8,i8*%fN,i64 24
%fU=bitcast i8*%fT to i8**
%fV=load i8*,i8**%fU,align 8
store i8*%fV,i8**%d,align 8
%fW=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%fX=getelementptr inbounds i8,i8*%fW,i64 16
%fY=bitcast i8*%fX to i8*(i8*,i8*)**
%fZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fY,align 8
%f0=bitcast i8*%fW to i8**
%f1=load i8*,i8**%f0,align 8
store i8*%f1,i8**%f,align 8
%f2=load i8*,i8**%c,align 8
%f3=icmp eq i8*%f2,null
br i1%f3,label%f4,label%f5
f4:
store i8*null,i8**%c,align 8
br label%gh
f5:
%f6=bitcast i8*%f2 to i8**
%f7=load i8*,i8**%f6,align 8
store i8*%f7,i8**%c,align 8
%f8=call i8*@sml_alloc(i32 inreg 20)#0
%f9=getelementptr inbounds i8,i8*%f8,i64 -4
%ga=bitcast i8*%f9 to i32*
store i32 1342177296,i32*%ga,align 4
%gb=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%gc=bitcast i8*%f8 to i8**
store i8*%gb,i8**%gc,align 8
%gd=getelementptr inbounds i8,i8*%f8,i64 8
%ge=bitcast i8*%gd to i8**
store i8*null,i8**%ge,align 8
%gf=getelementptr inbounds i8,i8*%f8,i64 16
%gg=bitcast i8*%gf to i32*
store i32 3,i32*%gg,align 4
br label%gh
gh:
%gi=phi i8*[%f8,%f5],[null,%f4]
store i8*%gi,i8**%e,align 8
%gj=load i8*,i8**%d,align 8
%gk=icmp eq i8*%gj,null
store i8*null,i8**%d,align 8
br i1%gk,label%gG,label%gl
gl:
%gm=bitcast i8*%gj to i8**
%gn=load i8*,i8**%gm,align 8
store i8*%gn,i8**%c,align 8
%go=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%gp=getelementptr inbounds i8,i8*%go,i64 16
%gq=bitcast i8*%gp to i8*(i8*,i8*)**
%gr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gq,align 8
%gs=bitcast i8*%go to i8**
%gt=load i8*,i8**%gs,align 8
store i8*%gt,i8**%d,align 8
%gu=call i8*@sml_alloc(i32 inreg 20)#0
%gv=getelementptr inbounds i8,i8*%gu,i64 -4
%gw=bitcast i8*%gv to i32*
store i32 1342177296,i32*%gw,align 4
%gx=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%gy=bitcast i8*%gu to i8**
store i8*%gx,i8**%gy,align 8
%gz=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%gA=getelementptr inbounds i8,i8*%gu,i64 8
%gB=bitcast i8*%gA to i8**
store i8*%gz,i8**%gB,align 8
%gC=getelementptr inbounds i8,i8*%gu,i64 16
%gD=bitcast i8*%gC to i32*
store i32 3,i32*%gD,align 4
%gE=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gF=call fastcc i8*%gr(i8*inreg%gE,i8*inreg%gu)
store i8*%gF,i8**%b,align 8
br label%gG
gG:
%gH=call i8*@sml_alloc(i32 inreg 20)#0
%gI=getelementptr inbounds i8,i8*%gH,i64 -4
%gJ=bitcast i8*%gI to i32*
store i32 1342177296,i32*%gJ,align 4
%gK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%gL=bitcast i8*%gH to i8**
store i8*%gK,i8**%gL,align 8
%gM=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%gN=getelementptr inbounds i8,i8*%gH,i64 8
%gO=bitcast i8*%gN to i8**
store i8*%gM,i8**%gO,align 8
%gP=getelementptr inbounds i8,i8*%gH,i64 16
%gQ=bitcast i8*%gP to i32*
store i32 3,i32*%gQ,align 4
%gR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gS=call fastcc i8*%fZ(i8*inreg%gR,i8*inreg%gH)
%gT=tail call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%gS)
ret i8*%gT
gU:
%gV=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
ret i8*%gV
gW:
%gX=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
ret i8*%gX
gY:
%gZ=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
ret i8*%gZ
g0:
%g1=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
ret i8*%g1
g2:
%g3=getelementptr inbounds i8,i8*%fp,i64 8
%g4=bitcast i8*%g3 to i8**
%g5=load i8*,i8**%g4,align 8
%g6=bitcast i8*%g5 to i8**
%g7=load i8*,i8**%g6,align 8
store i8*%g7,i8**%b,align 8
%g8=getelementptr inbounds i8,i8*%g5,i64 24
%g9=bitcast i8*%g8 to i8**
%ha=load i8*,i8**%g9,align 8
store i8*%ha,i8**%c,align 8
%hb=getelementptr inbounds i8,i8*%g5,i64 32
%hc=bitcast i8*%hb to i8**
%hd=load i8*,i8**%hc,align 8
store i8*%hd,i8**%d,align 8
%he=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%hf=getelementptr inbounds i8,i8*%he,i64 16
%hg=bitcast i8*%hf to i8*(i8*,i8*)**
%hh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hg,align 8
%hi=bitcast i8*%he to i8**
%hj=load i8*,i8**%hi,align 8
%hk=load i8*,i8**%d,align 8
%hl=call fastcc i8*%hh(i8*inreg%hj,i8*inreg%hk)
%hm=call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a6,i64 0,i32 2)to i8*),i8*inreg%hl)
store i8*%hm,i8**%e,align 8
%hn=call fastcc i8*@_SMLFN14BoundTypeVarID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ho=getelementptr inbounds i8,i8*%hn,i64 16
%hp=bitcast i8*%ho to i8*(i8*,i8*)**
%hq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hp,align 8
%hr=bitcast i8*%hn to i8**
%hs=load i8*,i8**%hr,align 8
%ht=call fastcc i8*%hq(i8*inreg%hs,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ba,i64 0,i32 2)to i8*))
%hu=getelementptr inbounds i8,i8*%ht,i64 16
%hv=bitcast i8*%hu to i8*(i8*,i8*)**
%hw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hv,align 8
%hx=bitcast i8*%ht to i8**
%hy=load i8*,i8**%hx,align 8
%hz=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hA=call fastcc i8*%hw(i8*inreg%hy,i8*inreg%hz)
store i8*%hA,i8**%d,align 8
%hB=call i8*@sml_alloc(i32 inreg 20)#0
%hC=getelementptr inbounds i8,i8*%hB,i64 -4
%hD=bitcast i8*%hC to i32*
store i32 1342177296,i32*%hD,align 4
%hE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hF=bitcast i8*%hB to i8**
store i8*%hE,i8**%hF,align 8
%hG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hH=getelementptr inbounds i8,i8*%hB,i64 8
%hI=bitcast i8*%hH to i8**
store i8*%hG,i8**%hI,align 8
%hJ=getelementptr inbounds i8,i8*%hB,i64 16
%hK=bitcast i8*%hJ to i32*
store i32 3,i32*%hK,align 4
%hL=call fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_947(i8*inreg%hB)
store i8*%hL,i8**%d,align 8
%hM=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%hN=call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%hM)
store i8*%hN,i8**%b,align 8
%hO=call i8*@sml_alloc(i32 inreg 20)#0
%hP=getelementptr inbounds i8,i8*%hO,i64 -4
%hQ=bitcast i8*%hP to i32*
store i32 1342177296,i32*%hQ,align 4
%hR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hS=bitcast i8*%hO to i8**
store i8*%hR,i8**%hS,align 8
%hT=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%hU=getelementptr inbounds i8,i8*%hO,i64 8
%hV=bitcast i8*%hU to i8**
store i8*%hT,i8**%hV,align 8
%hW=getelementptr inbounds i8,i8*%hO,i64 16
%hX=bitcast i8*%hW to i32*
store i32 3,i32*%hX,align 4
%hY=call fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_947(i8*inreg%hO)
store i8*%hY,i8**%b,align 8
%hZ=load i8*,i8**%c,align 8
%h0=icmp eq i8*%hZ,null
store i8*null,i8**%c,align 8
br i1%h0,label%h1,label%h3
h1:
%h2=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
br label%h7
h3:
%h4=bitcast i8*%hZ to i8**
%h5=load i8*,i8**%h4,align 8
%h6=call fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_952(i8*inreg%h5)
br label%h7
h7:
%h8=phi i8*[%h6,%h3],[%h2,%h1]
store i8*%h8,i8**%c,align 8
%h9=call i8*@sml_alloc(i32 inreg 20)#0
%ia=getelementptr inbounds i8,i8*%h9,i64 -4
%ib=bitcast i8*%ia to i32*
store i32 1342177296,i32*%ib,align 4
%ic=load i8*,i8**%b,align 8
%id=bitcast i8*%h9 to i8**
store i8*%ic,i8**%id,align 8
%ie=load i8*,i8**%c,align 8
%if=getelementptr inbounds i8,i8*%h9,i64 8
%ig=bitcast i8*%if to i8**
store i8*%ie,i8**%ig,align 8
%ih=getelementptr inbounds i8,i8*%h9,i64 16
%ii=bitcast i8*%ih to i32*
store i32 3,i32*%ii,align 4
%ij=tail call fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_947(i8*inreg%h9)
ret i8*%ij
ik:
%il=getelementptr inbounds i8,i8*%fp,i64 8
%im=bitcast i8*%il to i8**
%in=load i8*,i8**%im,align 8
%io=getelementptr inbounds i8,i8*%in,i64 8
%ip=bitcast i8*%io to i8**
%iq=load i8*,i8**%ip,align 8
store i8*%iq,i8**%b,align 8
br label%cc
ir:
%is=getelementptr inbounds i8,i8*%fp,i64 8
%it=bitcast i8*%is to i8**
%iu=load i8*,i8**%it,align 8
%iv=getelementptr inbounds i8,i8*%iu,i64 8
%iw=bitcast i8*%iv to i8**
%ix=load i8*,i8**%iw,align 8
store i8*%ix,i8**%b,align 8
br label%cc
iy:
%iz=getelementptr inbounds i8,i8*%fp,i64 8
%iA=bitcast i8*%iz to i8**
%iB=load i8*,i8**%iA,align 8
store i8*%iB,i8**%b,align 8
br label%cc
iC:
store i8*null,i8**%b,align 8
%iD=getelementptr inbounds i8,i8*%o,i64 8
%iE=bitcast i8*%iD to i8**
%iF=load i8*,i8**%iE,align 8
%iG=bitcast i8*%iF to i32*
%iH=load i32,i32*%iG,align 4
switch i32%iH,label%iI[
i32 1,label%jj
i32 0,label%jc
i32 4,label%i8
i32 3,label%i4
i32 2,label%i0
]
iI:
call void@sml_matchcomp_bug()
%iJ=load i8*,i8**@_SMLZ5Match,align 8
store i8*%iJ,i8**%b,align 8
%iK=call i8*@sml_alloc(i32 inreg 20)#0
%iL=getelementptr inbounds i8,i8*%iK,i64 -4
%iM=bitcast i8*%iL to i32*
store i32 1342177296,i32*%iM,align 4
store i8*%iK,i8**%c,align 8
%iN=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%iO=bitcast i8*%iK to i8**
store i8*%iN,i8**%iO,align 8
%iP=getelementptr inbounds i8,i8*%iK,i64 8
%iQ=bitcast i8*%iP to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@a9,i64 0,i32 2,i64 0),i8**%iQ,align 8
%iR=getelementptr inbounds i8,i8*%iK,i64 16
%iS=bitcast i8*%iR to i32*
store i32 3,i32*%iS,align 4
%iT=call i8*@sml_alloc(i32 inreg 60)#0
%iU=getelementptr inbounds i8,i8*%iT,i64 -4
%iV=bitcast i8*%iU to i32*
store i32 1342177336,i32*%iV,align 4
%iW=getelementptr inbounds i8,i8*%iT,i64 56
%iX=bitcast i8*%iW to i32*
store i32 1,i32*%iX,align 4
%iY=load i8*,i8**%c,align 8
%iZ=bitcast i8*%iT to i8**
store i8*%iY,i8**%iZ,align 8
call void@sml_raise(i8*inreg%iT)#1
unreachable
i0:
%i1=getelementptr inbounds i8,i8*%iF,i64 8
%i2=bitcast i8*%i1 to i8**
%i3=load i8*,i8**%i2,align 8
store i8*%i3,i8**%b,align 8
br label%cc
i4:
%i5=getelementptr inbounds i8,i8*%iF,i64 8
%i6=bitcast i8*%i5 to i8**
%i7=load i8*,i8**%i6,align 8
store i8*%i7,i8**%b,align 8
br label%cc
i8:
%i9=getelementptr inbounds i8,i8*%iF,i64 8
%ja=bitcast i8*%i9 to i8**
%jb=load i8*,i8**%ja,align 8
store i8*%jb,i8**%b,align 8
br label%cc
jc:
%jd=getelementptr inbounds i8,i8*%iF,i64 8
%je=bitcast i8*%jd to i8**
%jf=load i8*,i8**%je,align 8
%jg=getelementptr inbounds i8,i8*%jf,i64 8
%jh=bitcast i8*%jg to i8**
%ji=load i8*,i8**%jh,align 8
store i8*%ji,i8**%b,align 8
br label%cc
jj:
%jk=getelementptr inbounds i8,i8*%iF,i64 8
%jl=bitcast i8*%jk to i8**
%jm=load i8*,i8**%jl,align 8
%jn=getelementptr inbounds i8,i8*%jm,i64 8
%jo=bitcast i8*%jn to i8**
%jp=load i8*,i8**%jo,align 8
%jq=tail call fastcc i8*@_SMLLLN17PolyTyElimination19getIdsOverloadMatchE_953(i8*inreg%jp)
ret i8*%jq
jr:
%js=getelementptr inbounds i8,i8*%fp,i64 8
%jt=bitcast i8*%js to i8**
%ju=load i8*,i8**%jt,align 8
store i8*%ju,i8**%b,align 8
%jv=load atomic i32,i32*@sml_check_flag unordered,align 4
%jw=icmp eq i32%jv,0
br i1%jw,label%jx,label%jz
jx:
%jy=bitcast i8*%ju to i8**
br label%jC
jz:
call void@sml_check(i32 inreg%jv)
%jA=bitcast i8**%b to i8***
%jB=load i8**,i8***%jA,align 8
br label%jC
jC:
%jD=phi i8**[%jB,%jz],[%jy,%jx]
%jE=load i8*,i8**%jD,align 8
store i8*%jE,i8**%c,align 8
%jF=getelementptr inbounds i8*,i8**%jD,i64 2
%jG=load i8*,i8**%jF,align 8
store i8*%jG,i8**%d,align 8
%jH=getelementptr inbounds i8*,i8**%jD,i64 4
%jI=load i8*,i8**%jH,align 8
store i8*%jI,i8**%b,align 8
%jJ=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%jK=getelementptr inbounds i8,i8*%jJ,i64 16
%jL=bitcast i8*%jK to i8*(i8*,i8*)**
%jM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jL,align 8
%jN=bitcast i8*%jJ to i8**
%jO=load i8*,i8**%jN,align 8
%jP=load i8*,i8**%b,align 8
%jQ=call fastcc i8*%jM(i8*inreg%jO,i8*inreg%jP)
%jR=call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a6,i64 0,i32 2)to i8*),i8*inreg%jQ)
store i8*%jR,i8**%e,align 8
%jS=call fastcc i8*@_SMLFN14BoundTypeVarID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jT=getelementptr inbounds i8,i8*%jS,i64 16
%jU=bitcast i8*%jT to i8*(i8*,i8*)**
%jV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jU,align 8
%jW=bitcast i8*%jS to i8**
%jX=load i8*,i8**%jW,align 8
%jY=call fastcc i8*%jV(i8*inreg%jX,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a8,i64 0,i32 2)to i8*))
%jZ=getelementptr inbounds i8,i8*%jY,i64 16
%j0=bitcast i8*%jZ to i8*(i8*,i8*)**
%j1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j0,align 8
%j2=bitcast i8*%jY to i8**
%j3=load i8*,i8**%j2,align 8
%j4=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%j5=call fastcc i8*%j1(i8*inreg%j3,i8*inreg%j4)
store i8*%j5,i8**%b,align 8
%j6=call i8*@sml_alloc(i32 inreg 20)#0
%j7=getelementptr inbounds i8,i8*%j6,i64 -4
%j8=bitcast i8*%j7 to i32*
store i32 1342177296,i32*%j8,align 4
%j9=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ka=bitcast i8*%j6 to i8**
store i8*%j9,i8**%ka,align 8
%kb=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%kc=getelementptr inbounds i8,i8*%j6,i64 8
%kd=bitcast i8*%kc to i8**
store i8*%kb,i8**%kd,align 8
%ke=getelementptr inbounds i8,i8*%j6,i64 16
%kf=bitcast i8*%ke to i32*
store i32 3,i32*%kf,align 4
%kg=call fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_947(i8*inreg%j6)
store i8*%kg,i8**%b,align 8
%kh=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ki=call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%kh)
store i8*%ki,i8**%c,align 8
%kj=call i8*@sml_alloc(i32 inreg 20)#0
%kk=getelementptr inbounds i8,i8*%kj,i64 -4
%kl=bitcast i8*%kk to i32*
store i32 1342177296,i32*%kl,align 4
%km=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%kn=bitcast i8*%kj to i8**
store i8*%km,i8**%kn,align 8
%ko=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%kp=getelementptr inbounds i8,i8*%kj,i64 8
%kq=bitcast i8*%kp to i8**
store i8*%ko,i8**%kq,align 8
%kr=getelementptr inbounds i8,i8*%kj,i64 16
%ks=bitcast i8*%kr to i32*
store i32 3,i32*%ks,align 4
%kt=call fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_947(i8*inreg%kj)
store i8*%kt,i8**%b,align 8
%ku=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%kv=call fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_952(i8*inreg%ku)
store i8*%kv,i8**%c,align 8
%kw=call i8*@sml_alloc(i32 inreg 20)#0
%kx=getelementptr inbounds i8,i8*%kw,i64 -4
%ky=bitcast i8*%kx to i32*
store i32 1342177296,i32*%ky,align 4
%kz=load i8*,i8**%b,align 8
%kA=bitcast i8*%kw to i8**
store i8*%kz,i8**%kA,align 8
%kB=load i8*,i8**%c,align 8
%kC=getelementptr inbounds i8,i8*%kw,i64 8
%kD=bitcast i8*%kC to i8**
store i8*%kB,i8**%kD,align 8
%kE=getelementptr inbounds i8,i8*%kw,i64 16
%kF=bitcast i8*%kE to i32*
store i32 3,i32*%kF,align 4
%kG=tail call fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_947(i8*inreg%kw)
ret i8*%kG
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination19getIdsOverloadMatchE_953(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i32*
%m=load i32,i32*%l,align 4
switch i32%m,label%n[
i32 1,label%ap
i32 2,label%al
i32 0,label%F
]
n:
call void@sml_matchcomp_bug()
%o=load i8*,i8**@_SMLZ5Match,align 8
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
store i8*%p,i8**%c,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bj,i64 0,i32 2,i64 0),i8**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to i32*
store i32 3,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 60)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177336,i32*%A,align 4
%B=getelementptr inbounds i8,i8*%y,i64 56
%C=bitcast i8*%B to i32*
store i32 1,i32*%C,align 4
%D=load i8*,i8**%c,align 8
%E=bitcast i8*%y to i8**
store i8*%D,i8**%E,align 8
call void@sml_raise(i8*inreg%y)#1
unreachable
F:
%G=getelementptr inbounds i8,i8*%j,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%b,align 8
%L=getelementptr inbounds i8,i8*%I,i64 8
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%c,align 8
%O=call fastcc i8*@_SMLFN5TypID3Map5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8*(i8*,i8*)**
%R=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
%U=call fastcc i8*%R(i8*inreg%T,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bi,i64 0,i32 2)to i8*))
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%d,align 8
%aa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab=call fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_952(i8*inreg%aa)
%ac=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ad=call fastcc i8*%X(i8*inreg%ac,i8*inreg%ab)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=load i8*,i8**%c,align 8
%ak=tail call fastcc i8*%ag(i8*inreg%ai,i8*inreg%aj)
ret i8*%ak
al:
%am=getelementptr inbounds i8,i8*%j,i64 8
%an=bitcast i8*%am to i8***
%ao=load i8**,i8***%an,align 8
br label%av
ap:
%aq=getelementptr inbounds i8,i8*%j,i64 8
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
%at=getelementptr inbounds i8,i8*%as,i64 8
%au=bitcast i8*%at to i8**
br label%av
av:
%aw=phi i8**[%ao,%al],[%au,%ap]
%ax=load i8*,i8**%aw,align 8
%ay=icmp eq i8*%ax,null
br i1%ay,label%az,label%aB
az:
%aA=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
ret i8*%aA
aB:
%aC=bitcast i8*%ax to i8**
%aD=load i8*,i8**%aC,align 8
%aE=tail call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%aD)
ret i8*%aE
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination19getIdsOprimSelectorE_954(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=getelementptr inbounds i8,i8*%h,i64 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
%m=tail call fastcc i8*@_SMLLLN17PolyTyElimination19getIdsOverloadMatchE_953(i8*inreg%l)
ret i8*%m
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10getIdsKindE_955(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=getelementptr inbounds i8,i8*%i,i64 16
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
%n=icmp eq i8*%m,null
br i1%n,label%W,label%o
o:
%p=bitcast i8*%m to i32*
%q=load i32,i32*%p,align 4
switch i32%q,label%r[
i32 0,label%av
i32 1,label%Y
i32 3,label%W
i32 2,label%J
]
r:
call void@sml_matchcomp_bug()
%s=load i8*,i8**@_SMLZ5Match,align 8
store i8*%s,i8**%b,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%c,align 8
%w=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bk,i64 0,i32 2,i64 0),i8**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 60)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177336,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 56
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=load i8*,i8**%c,align 8
%I=bitcast i8*%C to i8**
store i8*%H,i8**%I,align 8
call void@sml_raise(i8*inreg%C)#1
unreachable
J:
%K=getelementptr inbounds i8,i8*%m,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%b,align 8
%N=call fastcc i8*@_SMLFN11RecordLabel3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%O=getelementptr inbounds i8,i8*%N,i64 16
%P=bitcast i8*%O to i8*(i8*,i8*)**
%Q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%P,align 8
%R=bitcast i8*%N to i8**
%S=load i8*,i8**%R,align 8
%T=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%U=call fastcc i8*%Q(i8*inreg%S,i8*inreg%T)
%V=tail call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%U)
ret i8*%V
W:
%X=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
ret i8*%X
Y:
%Z=getelementptr inbounds i8,i8*%m,i64 8
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
%ac=bitcast i8*%ab to i8**
%ad=load i8*,i8**%ac,align 8
%ae=getelementptr inbounds i8,i8*%ab,i64 8
%af=bitcast i8*%ae to i8**
%ag=load i8*,i8**%af,align 8
store i8*%ag,i8**%b,align 8
%ah=call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%ad)
store i8*%ah,i8**%c,align 8
%ai=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aj=call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a5,i64 0,i32 2)to i8*),i8*inreg%ai)
store i8*%aj,i8**%b,align 8
%ak=call i8*@sml_alloc(i32 inreg 20)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177296,i32*%am,align 4
%an=load i8*,i8**%c,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=load i8*,i8**%b,align 8
%aq=getelementptr inbounds i8,i8*%ak,i64 8
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%ak,i64 16
%at=bitcast i8*%as to i32*
store i32 3,i32*%at,align 4
%au=tail call fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_947(i8*inreg%ak)
ret i8*%au
av:
%aw=getelementptr inbounds i8,i8*%m,i64 8
%ax=bitcast i8*%aw to i8**
%ay=load i8*,i8**%ax,align 8
%az=tail call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%ay)
ret i8*%az
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination16getIdsConstraintE_956(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%n,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%k,i64 16
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%e,align 8
%z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i8**
store i8*null,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%w,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 20)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
store i8*%F,i8**%c,align 8
%I=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%L=getelementptr inbounds i8,i8*%F,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%F,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 20)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
%S=load i8*,i8**%d,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=load i8*,i8**%c,align 8
%V=getelementptr inbounds i8,i8*%P,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%P,i64 16
%Y=bitcast i8*%X to i32*
store i32 3,i32*%Y,align 4
%Z=tail call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*),i8*inreg%P)
ret i8*%Z
}
define internal fastcc void@_SMLLLN17PolyTyElimination6exportE_1021(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%n
j:
call void@sml_check(i32 inreg%f)
%k=load i8*,i8**%d,align 8
%l=bitcast i8**%c to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%j],[%i,%h]
%p=phi i8*[%k,%j],[%b,%h]
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=load i8*,i8**%o,align 8
store i8*%s,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%p,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
%w=getelementptr inbounds i8,i8*%v,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=bitcast i8*%z to i64*
store i64 0,i64*%C,align 4
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to i32*
store i32 2,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 20)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177296,i32*%K,align 4
%L=getelementptr inbounds i8,i8*%I,i64 12
%M=bitcast i8*%L to i32*
store i32 0,i32*%M,align 1
%N=load i8*,i8**%e,align 8
%O=bitcast i8*%I to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 8
%Q=bitcast i8*%P to i32*
store i32%r,i32*%Q,align 4
%R=getelementptr inbounds i8,i8*%I,i64 16
%S=bitcast i8*%R to i32*
store i32 1,i32*%S,align 4
%T=load i8*,i8**%d,align 8
tail call fastcc void@_SMLLLN17PolyTyElimination10instanceOfE_648(i8*inreg%T,i8*inreg%I)
ret void
}
define internal fastcc void@_SMLLLN17PolyTyElimination6exportE_1022(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call i8*@sml_alloc(i32 inreg 12)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177288,i32*%l,align 4
store i8*%j,i8**%e,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i32*
store i32 1,i32*%p,align 4
%q=call i8*@sml_alloc(i32 inreg 28)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177304,i32*%s,align 4
store i8*%q,i8**%c,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLLN17PolyTyElimination6exportE_1021 to void(...)*),void(...)**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination6exportE_1700 to void(...)*),void(...)**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 24
%A=bitcast i8*%z to i32*
store i32 -2147483647,i32*%A,align 4
%B=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4appiE(i32 inreg 1,i32 inreg 8)
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
%H=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%I=call fastcc i8*%E(i8*inreg%G,i8*inreg%H)
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%c,align 8
%O=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%P=call fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_952(i8*inreg%O)
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=call fastcc i8*%L(i8*inreg%Q,i8*inreg%P)
ret void
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
m:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%f,align 8
store i8*%c,i8**%e,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%f,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
store i8*null,i8**%f,align 8
%n=getelementptr inbounds i8,i8*%l,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLFN13TyAlphaRename6copyTyE(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
store i8*%x,i8**%e,align 8
%y=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%z=call fastcc i8*@_SMLLLN17PolyTyElimination5touchE_640(i8*inreg%y)
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%d,align 8
%F=load i8*,i8**%e,align 8
%G=call fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_952(i8*inreg%F)
%H=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I=call fastcc i8*%C(i8*inreg%H,i8*inreg%G)
%J=load i8*,i8**%e,align 8
ret i8*%J
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1026(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=bitcast i8*%k to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%o,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1027(i8*inreg%a,i8*inreg%b)unnamed_addr#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%a,i8**%c,align 8
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=getelementptr inbounds i8,i8*%f,i64 -4
%h=bitcast i8*%g to i32*
store i32 1342177296,i32*%h,align 4
store i8*%f,i8**%e,align 8
%i=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%j=bitcast i8*%f to i8**
store i8*%i,i8**%j,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i8**
store i8*%k,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%f,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
%s=load i8*,i8**%e,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination9analyzeTyE_1026 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination9analyzeTyE_1026 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 24
%z=bitcast i8*%y to i32*
store i32 -2147483647,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination14analyzeVarInfoE_1029(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
o:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%m,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%f,align 8
%k=load i8*,i8**%e,align 8
%l=load i8*,i8**%d,align 8
br label%m
m:
%n=phi i8*[%l,%i],[%a,%o]
%p=phi i8*[%k,%i],[%b,%o]
%q=phi i8*[%j,%i],[%c,%o]
store i8*null,i8**%f,align 8
store i8*null,i8**%e,align 8
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=getelementptr inbounds i8,i8*%q,i64 4
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%d,align 8
%z=getelementptr inbounds i8,i8*%q,i64 16
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%n,i8*inreg%p,i8*inreg%B)
store i8*%C,i8**%e,align 8
%D=call i8*@sml_alloc(i32 inreg 28)#0
%E=bitcast i8*%D to i32*
%F=getelementptr inbounds i8,i8*%D,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
store i32%s,i32*%E,align 4
%H=getelementptr inbounds i8,i8*%D,i64 4
%I=bitcast i8*%H to i32*
store i32%v,i32*%I,align 4
%J=load i8*,i8**%d,align 8
%K=getelementptr inbounds i8,i8*%D,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=load i8*,i8**%e,align 8
%N=getelementptr inbounds i8,i8*%D,i64 16
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%D,i64 24
%Q=bitcast i8*%P to i32*
store i32 6,i32*%Q,align 4
ret i8*%D
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination14analyzeVarInfoE_1031(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=bitcast i8*%k to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeVarInfoE_1029(i8*inreg%o,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination14analyzeVarInfoE_1032(i8*inreg%a,i8*inreg%b)unnamed_addr#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%a,i8**%c,align 8
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=getelementptr inbounds i8,i8*%f,i64 -4
%h=bitcast i8*%g to i32*
store i32 1342177296,i32*%h,align 4
store i8*%f,i8**%e,align 8
%i=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%j=bitcast i8*%f to i8**
store i8*%i,i8**%j,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i8**
store i8*%k,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%f,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
%s=load i8*,i8**%e,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination14analyzeVarInfoE_1031 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination14analyzeVarInfoE_1031 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 24
%z=bitcast i8*%y to i32*
store i32 -2147483647,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination14analyzeConInfoE_1034(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
o:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%m,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%f,align 8
%k=load i8*,i8**%e,align 8
%l=load i8*,i8**%d,align 8
br label%m
m:
%n=phi i8*[%l,%i],[%a,%o]
%p=phi i8*[%k,%i],[%b,%o]
%q=phi i8*[%j,%i],[%c,%o]
store i8*null,i8**%f,align 8
store i8*null,i8**%e,align 8
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=getelementptr inbounds i8,i8*%q,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%q,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%n,i8*inreg%p,i8*inreg%y)
store i8*%z,i8**%e,align 8
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=bitcast i8*%A to i32*
%C=getelementptr inbounds i8,i8*%A,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%A,i64 4
%F=bitcast i8*%E to i32*
store i32 0,i32*%F,align 1
store i32%s,i32*%B,align 4
%G=load i8*,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%A,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=load i8*,i8**%e,align 8
%K=getelementptr inbounds i8,i8*%A,i64 16
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%A,i64 24
%N=bitcast i8*%M to i32*
store i32 6,i32*%N,align 4
ret i8*%A
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination14analyzeExnInfoE_1036(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
o:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%m,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%f,align 8
%k=load i8*,i8**%e,align 8
%l=load i8*,i8**%d,align 8
br label%m
m:
%n=phi i8*[%l,%i],[%a,%o]
%p=phi i8*[%k,%i],[%b,%o]
%q=phi i8*[%j,%i],[%c,%o]
store i8*null,i8**%f,align 8
store i8*null,i8**%e,align 8
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=getelementptr inbounds i8,i8*%q,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%q,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%n,i8*inreg%p,i8*inreg%y)
store i8*%z,i8**%e,align 8
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=bitcast i8*%A to i32*
%C=getelementptr inbounds i8,i8*%A,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%A,i64 4
%F=bitcast i8*%E to i32*
store i32 0,i32*%F,align 1
store i32%s,i32*%B,align 4
%G=load i8*,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%A,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=load i8*,i8**%e,align 8
%K=getelementptr inbounds i8,i8*%A,i64 16
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%A,i64 24
%N=bitcast i8*%M to i32*
store i32 6,i32*%N,align 4
ret i8*%A
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination13analyzeExnConE_1047(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%d,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
store i8*null,i8**%d,align 8
%n=bitcast i8*%l to i32*
%o=load i32,i32*%n,align 4
switch i32%o,label%p[
i32 0,label%bv
i32 1,label%H
]
p:
call void@sml_matchcomp_bug()
%q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%d,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bp,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=load i8*,i8**%d,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
H:
%I=getelementptr inbounds i8,i8*%l,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%d,align 8
%L=call fastcc i8*@_SMLFN5ExnID3Map4findE(i32 inreg 1,i32 inreg 8)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%e,align 8
%R=bitcast i8**%c to i8***
%S=load i8**,i8***%R,align 8
%T=load i8*,i8**%S,align 8
%U=getelementptr inbounds i8,i8*%T,i64 24
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%c,align 8
%X=bitcast i8**%d to i32**
%Y=load i32*,i32**%X,align 8
%Z=load i32,i32*%Y,align 4
%aa=call i8*@sml_alloc(i32 inreg 20)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177296,i32*%ac,align 4
%ad=getelementptr inbounds i8,i8*%aa,i64 12
%ae=bitcast i8*%ad to i32*
store i32 0,i32*%ae,align 1
%af=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ag=bitcast i8*%aa to i8**
store i8*%af,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%aa,i64 8
%ai=bitcast i8*%ah to i32*
store i32%Z,i32*%ai,align 4
%aj=getelementptr inbounds i8,i8*%aa,i64 16
%ak=bitcast i8*%aj to i32*
store i32 1,i32*%ak,align 4
%al=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%am=call fastcc i8*%O(i8*inreg%al,i8*inreg%aa)
%an=icmp eq i8*%am,null
br i1%an,label%ao,label%aK
ao:
store i8*null,i8**%d,align 8
%ap=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%ap,i8**%c,align 8
%aq=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bo,i64 0,i32 2)to i8*))
store i8*%aq,i8**%d,align 8
%ar=call i8*@sml_alloc(i32 inreg 28)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177304,i32*%at,align 4
store i8*%ar,i8**%e,align 8
%au=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%ax,align 8
%ay=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%az=getelementptr inbounds i8,i8*%ar,i64 16
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%ar,i64 24
%aC=bitcast i8*%aB to i32*
store i32 7,i32*%aC,align 4
%aD=call i8*@sml_alloc(i32 inreg 60)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177336,i32*%aF,align 4
%aG=getelementptr inbounds i8,i8*%aD,i64 56
%aH=bitcast i8*%aG to i32*
store i32 1,i32*%aH,align 4
%aI=load i8*,i8**%e,align 8
%aJ=bitcast i8*%aD to i8**
store i8*%aI,i8**%aJ,align 8
call void@sml_raise(i8*inreg%aD)#1
unreachable
aK:
%aL=bitcast i8*%am to i8**
%aM=load i8*,i8**%aL,align 8
%aN=getelementptr inbounds i8,i8*%aM,i64 16
%aO=bitcast i8*%aN to i8**
%aP=load i8*,i8**%aO,align 8
store i8*%aP,i8**%c,align 8
%aQ=load i8*,i8**%d,align 8
%aR=bitcast i8*%aQ to i32*
%aS=load i32,i32*%aR,align 4
%aT=getelementptr inbounds i8,i8*%aQ,i64 8
%aU=bitcast i8*%aT to i8**
%aV=load i8*,i8**%aU,align 8
store i8*%aV,i8**%d,align 8
%aW=call i8*@sml_alloc(i32 inreg 28)#0
%aX=getelementptr inbounds i8,i8*%aW,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177304,i32*%aY,align 4
store i8*%aW,i8**%e,align 8
%aZ=getelementptr inbounds i8,i8*%aW,i64 4
%a0=bitcast i8*%aZ to i32*
store i32 0,i32*%a0,align 1
%a1=bitcast i8*%aW to i32*
store i32%aS,i32*%a1,align 4
%a2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a3=getelementptr inbounds i8,i8*%aW,i64 8
%a4=bitcast i8*%a3 to i8**
store i8*%a2,i8**%a4,align 8
%a5=load i8*,i8**%c,align 8
%a6=getelementptr inbounds i8,i8*%aW,i64 16
%a7=bitcast i8*%a6 to i8**
store i8*%a5,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%aW,i64 24
%a9=bitcast i8*%a8 to i32*
store i32 6,i32*%a9,align 4
%ba=call i8*@sml_alloc(i32 inreg 20)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177296,i32*%bc,align 4
store i8*%ba,i8**%d,align 8
%bd=getelementptr inbounds i8,i8*%ba,i64 4
%be=bitcast i8*%bd to i32*
store i32 0,i32*%be,align 1
%bf=bitcast i8*%ba to i32*
store i32 1,i32*%bf,align 4
%bg=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bh=getelementptr inbounds i8,i8*%ba,i64 8
%bi=bitcast i8*%bh to i8**
store i8*%bg,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%ba,i64 16
%bk=bitcast i8*%bj to i32*
store i32 2,i32*%bk,align 4
%bl=call i8*@sml_alloc(i32 inreg 20)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177296,i32*%bn,align 4
%bo=load i8*,i8**%d,align 8
%bp=bitcast i8*%bl to i8**
store i8*%bo,i8**%bp,align 8
%bq=load i8*,i8**%c,align 8
%br=getelementptr inbounds i8,i8*%bl,i64 8
%bs=bitcast i8*%br to i8**
store i8*%bq,i8**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bl,i64 16
%bu=bitcast i8*%bt to i32*
store i32 3,i32*%bu,align 4
ret i8*%bl
bv:
%bw=getelementptr inbounds i8,i8*%l,i64 8
%bx=bitcast i8*%bw to i8**
%by=load i8*,i8**%bx,align 8
store i8*%by,i8**%d,align 8
%bz=call fastcc i8*@_SMLFN13LongsymbolEnv4findE(i32 inreg 1,i32 inreg 8)
%bA=getelementptr inbounds i8,i8*%bz,i64 16
%bB=bitcast i8*%bA to i8*(i8*,i8*)**
%bC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bB,align 8
%bD=bitcast i8*%bz to i8**
%bE=load i8*,i8**%bD,align 8
store i8*%bE,i8**%f,align 8
%bF=bitcast i8**%c to i8***
%bG=load i8**,i8***%bF,align 8
%bH=load i8*,i8**%bG,align 8
%bI=getelementptr inbounds i8,i8*%bH,i64 8
%bJ=bitcast i8*%bI to i8**
%bK=load i8*,i8**%bJ,align 8
store i8*%bK,i8**%c,align 8
%bL=bitcast i8**%d to i8***
%bM=load i8**,i8***%bL,align 8
%bN=load i8*,i8**%bM,align 8
store i8*%bN,i8**%e,align 8
%bO=call i8*@sml_alloc(i32 inreg 20)#0
%bP=getelementptr inbounds i8,i8*%bO,i64 -4
%bQ=bitcast i8*%bP to i32*
store i32 1342177296,i32*%bQ,align 4
%bR=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bS=bitcast i8*%bO to i8**
store i8*%bR,i8**%bS,align 8
%bT=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bU=getelementptr inbounds i8,i8*%bO,i64 8
%bV=bitcast i8*%bU to i8**
store i8*%bT,i8**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bO,i64 16
%bX=bitcast i8*%bW to i32*
store i32 3,i32*%bX,align 4
%bY=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bZ=call fastcc i8*%bC(i8*inreg%bY,i8*inreg%bO)
%b0=icmp eq i8*%bZ,null
br i1%b0,label%b1,label%cn
b1:
store i8*null,i8**%d,align 8
%b2=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%b2,i8**%c,align 8
%b3=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bm,i64 0,i32 2)to i8*))
store i8*%b3,i8**%d,align 8
%b4=call i8*@sml_alloc(i32 inreg 28)#0
%b5=getelementptr inbounds i8,i8*%b4,i64 -4
%b6=bitcast i8*%b5 to i32*
store i32 1342177304,i32*%b6,align 4
store i8*%b4,i8**%e,align 8
%b7=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b8=bitcast i8*%b4 to i8**
store i8*%b7,i8**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b4,i64 8
%ca=bitcast i8*%b9 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%ca,align 8
%cb=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cc=getelementptr inbounds i8,i8*%b4,i64 16
%cd=bitcast i8*%cc to i8**
store i8*%cb,i8**%cd,align 8
%ce=getelementptr inbounds i8,i8*%b4,i64 24
%cf=bitcast i8*%ce to i32*
store i32 7,i32*%cf,align 4
%cg=call i8*@sml_alloc(i32 inreg 60)#0
%ch=getelementptr inbounds i8,i8*%cg,i64 -4
%ci=bitcast i8*%ch to i32*
store i32 1342177336,i32*%ci,align 4
%cj=getelementptr inbounds i8,i8*%cg,i64 56
%ck=bitcast i8*%cj to i32*
store i32 1,i32*%ck,align 4
%cl=load i8*,i8**%e,align 8
%cm=bitcast i8*%cg to i8**
store i8*%cl,i8**%cm,align 8
call void@sml_raise(i8*inreg%cg)#1
unreachable
cn:
%co=bitcast i8*%bZ to i8**
%cp=load i8*,i8**%co,align 8
%cq=getelementptr inbounds i8,i8*%cp,i64 8
%cr=bitcast i8*%cq to i8**
%cs=load i8*,i8**%cr,align 8
store i8*%cs,i8**%c,align 8
%ct=load i8**,i8***%bL,align 8
%cu=load i8*,i8**%ct,align 8
store i8*%cu,i8**%d,align 8
%cv=call i8*@sml_alloc(i32 inreg 20)#0
%cw=getelementptr inbounds i8,i8*%cv,i64 -4
%cx=bitcast i8*%cw to i32*
store i32 1342177296,i32*%cx,align 4
store i8*%cv,i8**%e,align 8
%cy=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cz=bitcast i8*%cv to i8**
store i8*%cy,i8**%cz,align 8
%cA=load i8*,i8**%c,align 8
%cB=getelementptr inbounds i8,i8*%cv,i64 8
%cC=bitcast i8*%cB to i8**
store i8*%cA,i8**%cC,align 8
%cD=getelementptr inbounds i8,i8*%cv,i64 16
%cE=bitcast i8*%cD to i32*
store i32 3,i32*%cE,align 4
%cF=call i8*@sml_alloc(i32 inreg 20)#0
%cG=getelementptr inbounds i8,i8*%cF,i64 -4
%cH=bitcast i8*%cG to i32*
store i32 1342177296,i32*%cH,align 4
store i8*%cF,i8**%d,align 8
%cI=bitcast i8*%cF to i64*
store i64 0,i64*%cI,align 4
%cJ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cK=getelementptr inbounds i8,i8*%cF,i64 8
%cL=bitcast i8*%cK to i8**
store i8*%cJ,i8**%cL,align 8
%cM=getelementptr inbounds i8,i8*%cF,i64 16
%cN=bitcast i8*%cM to i32*
store i32 2,i32*%cN,align 4
%cO=call i8*@sml_alloc(i32 inreg 20)#0
%cP=getelementptr inbounds i8,i8*%cO,i64 -4
%cQ=bitcast i8*%cP to i32*
store i32 1342177296,i32*%cQ,align 4
%cR=load i8*,i8**%d,align 8
%cS=bitcast i8*%cO to i8**
store i8*%cR,i8**%cS,align 8
%cT=load i8*,i8**%c,align 8
%cU=getelementptr inbounds i8,i8*%cO,i64 8
%cV=bitcast i8*%cU to i8**
store i8*%cT,i8**%cV,align 8
%cW=getelementptr inbounds i8,i8*%cO,i64 16
%cX=bitcast i8*%cW to i32*
store i32 3,i32*%cX,align 4
ret i8*%cO
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination12analyzeFFItyE_1056(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=bitcast i8*%k to i8**
%q=load i8*,i8**%p,align 8
store i8*null,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%k,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%m,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*@_SMLLLN17PolyTyElimination12analyzeFFItyE_1049(i8*inreg%q,i8*inreg%t,i8*inreg%w)
store i8*%x,i8**%c,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
%B=load i8*,i8**%d,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=load i8*,i8**%c,align 8
%E=getelementptr inbounds i8,i8*%y,i64 8
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%y,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination12analyzeFFItyE_1058(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=bitcast i8*%k to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLLN17PolyTyElimination12analyzeFFItyE_1049(i8*inreg%o,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination12analyzeFFItyE_1049(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
s:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%q,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%f,align 8
br label%q
q:
%r=phi i8*[%p,%o],[%c,%s]
store i8*null,i8**%f,align 8
%t=bitcast i8*%r to i32*
%u=load i32,i32*%t,align 4
switch i32%u,label%v[
i32 0,label%cN
i32 1,label%a1
i32 2,label%N
]
v:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%w=load i8*,i8**@_SMLZ5Match,align 8
store i8*%w,i8**%d,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%e,align 8
%A=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bq,i64 0,i32 2,i64 0),i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 60)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177336,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%G,i64 56
%K=bitcast i8*%J to i32*
store i32 1,i32*%K,align 4
%L=load i8*,i8**%e,align 8
%M=bitcast i8*%G to i8**
store i8*%L,i8**%M,align 8
call void@sml_raise(i8*inreg%G)#1
unreachable
N:
%O=getelementptr inbounds i8,i8*%r,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%f,align 8
%T=getelementptr inbounds i8,i8*%Q,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%g,align 8
%W=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%h,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
store i8*%ac,i8**%i,align 8
%af=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ai=getelementptr inbounds i8,i8*%ac,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ac,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=call i8*@sml_alloc(i32 inreg 28)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177304,i32*%ao,align 4
%ap=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%am,i64 8
%as=bitcast i8*%ar to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination12analyzeFFItyE_1056 to void(...)*),void(...)**%as,align 8
%at=getelementptr inbounds i8,i8*%am,i64 16
%au=bitcast i8*%at to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination12analyzeFFItyE_1056 to void(...)*),void(...)**%au,align 8
%av=getelementptr inbounds i8,i8*%am,i64 24
%aw=bitcast i8*%av to i32*
store i32 -2147483647,i32*%aw,align 4
%ax=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ay=call fastcc i8*%Z(i8*inreg%ax,i8*inreg%am)
%az=getelementptr inbounds i8,i8*%ay,i64 16
%aA=bitcast i8*%az to i8*(i8*,i8*)**
%aB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aA,align 8
%aC=bitcast i8*%ay to i8**
%aD=load i8*,i8**%aC,align 8
%aE=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aF=call fastcc i8*%aB(i8*inreg%aD,i8*inreg%aE)
store i8*%aF,i8**%d,align 8
%aG=call i8*@sml_alloc(i32 inreg 20)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177296,i32*%aI,align 4
store i8*%aG,i8**%e,align 8
%aJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aM=getelementptr inbounds i8,i8*%aG,i64 8
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aG,i64 16
%aP=bitcast i8*%aO to i32*
store i32 3,i32*%aP,align 4
%aQ=call i8*@sml_alloc(i32 inreg 20)#0
%aR=bitcast i8*%aQ to i32*
%aS=getelementptr inbounds i8,i8*%aQ,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177296,i32*%aT,align 4
%aU=getelementptr inbounds i8,i8*%aQ,i64 4
%aV=bitcast i8*%aU to i32*
store i32 0,i32*%aV,align 1
store i32 2,i32*%aR,align 4
%aW=load i8*,i8**%e,align 8
%aX=getelementptr inbounds i8,i8*%aQ,i64 8
%aY=bitcast i8*%aX to i8**
store i8*%aW,i8**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aQ,i64 16
%a0=bitcast i8*%aZ to i32*
store i32 2,i32*%a0,align 4
ret i8*%aQ
a1:
%a2=getelementptr inbounds i8,i8*%r,i64 8
%a3=bitcast i8*%a2 to i8**
%a4=load i8*,i8**%a3,align 8
%a5=bitcast i8*%a4 to i8**
%a6=load i8*,i8**%a5,align 8
store i8*%a6,i8**%f,align 8
%a7=getelementptr inbounds i8,i8*%a4,i64 8
%a8=bitcast i8*%a7 to i8**
%a9=load i8*,i8**%a8,align 8
store i8*%a9,i8**%g,align 8
%ba=getelementptr inbounds i8,i8*%a4,i64 16
%bb=bitcast i8*%ba to i8**
%bc=load i8*,i8**%bb,align 8
store i8*%bc,i8**%h,align 8
%bd=getelementptr inbounds i8,i8*%a4,i64 24
%be=bitcast i8*%bd to i8**
%bf=load i8*,i8**%be,align 8
store i8*%bf,i8**%i,align 8
%bg=getelementptr inbounds i8,i8*%a4,i64 32
%bh=bitcast i8*%bg to i8**
%bi=load i8*,i8**%bh,align 8
store i8*%bi,i8**%j,align 8
%bj=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bk=getelementptr inbounds i8,i8*%bj,i64 16
%bl=bitcast i8*%bk to i8*(i8*,i8*)**
%bm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bl,align 8
%bn=bitcast i8*%bj to i8**
%bo=load i8*,i8**%bn,align 8
store i8*%bo,i8**%k,align 8
%bp=load i8*,i8**%d,align 8
%bq=load i8*,i8**%e,align 8
%br=call fastcc i8*@_SMLLLN17PolyTyElimination12analyzeFFItyE_1050(i8*inreg%bp,i8*inreg%bq)
%bs=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bt=call fastcc i8*%bm(i8*inreg%bs,i8*inreg%br)
%bu=getelementptr inbounds i8,i8*%bt,i64 16
%bv=bitcast i8*%bu to i8*(i8*,i8*)**
%bw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bv,align 8
%bx=bitcast i8*%bt to i8**
%by=load i8*,i8**%bx,align 8
%bz=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bA=call fastcc i8*%bw(i8*inreg%by,i8*inreg%bz)
store i8*%bA,i8**%g,align 8
%bB=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bC=getelementptr inbounds i8,i8*%bB,i64 16
%bD=bitcast i8*%bC to i8*(i8*,i8*)**
%bE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bD,align 8
%bF=bitcast i8*%bB to i8**
%bG=load i8*,i8**%bF,align 8
store i8*%bG,i8**%l,align 8
%bH=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bI=getelementptr inbounds i8,i8*%bH,i64 16
%bJ=bitcast i8*%bI to i8*(i8*,i8*)**
%bK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bJ,align 8
%bL=bitcast i8*%bH to i8**
%bM=load i8*,i8**%bL,align 8
store i8*%bM,i8**%k,align 8
%bN=load i8*,i8**%d,align 8
%bO=load i8*,i8**%e,align 8
%bP=call fastcc i8*@_SMLLLN17PolyTyElimination12analyzeFFItyE_1050(i8*inreg%bN,i8*inreg%bO)
%bQ=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bR=call fastcc i8*%bK(i8*inreg%bQ,i8*inreg%bP)
%bS=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%bT=call fastcc i8*%bE(i8*inreg%bS,i8*inreg%bR)
%bU=getelementptr inbounds i8,i8*%bT,i64 16
%bV=bitcast i8*%bU to i8*(i8*,i8*)**
%bW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bV,align 8
%bX=bitcast i8*%bT to i8**
%bY=load i8*,i8**%bX,align 8
%bZ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%b0=call fastcc i8*%bW(i8*inreg%bY,i8*inreg%bZ)
store i8*%b0,i8**%h,align 8
%b1=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%b2=getelementptr inbounds i8,i8*%b1,i64 16
%b3=bitcast i8*%b2 to i8*(i8*,i8*)**
%b4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b3,align 8
%b5=bitcast i8*%b1 to i8**
%b6=load i8*,i8**%b5,align 8
store i8*%b6,i8**%k,align 8
%b7=load i8*,i8**%d,align 8
%b8=load i8*,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%b9=call fastcc i8*@_SMLLLN17PolyTyElimination12analyzeFFItyE_1050(i8*inreg%b7,i8*inreg%b8)
%ca=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cb=call fastcc i8*%b4(i8*inreg%ca,i8*inreg%b9)
%cc=getelementptr inbounds i8,i8*%cb,i64 16
%cd=bitcast i8*%cc to i8*(i8*,i8*)**
%ce=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cd,align 8
%cf=bitcast i8*%cb to i8**
%cg=load i8*,i8**%cf,align 8
%ch=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ci=call fastcc i8*%ce(i8*inreg%cg,i8*inreg%ch)
store i8*%ci,i8**%d,align 8
%cj=call i8*@sml_alloc(i32 inreg 44)#0
%ck=getelementptr inbounds i8,i8*%cj,i64 -4
%cl=bitcast i8*%ck to i32*
store i32 1342177320,i32*%cl,align 4
store i8*%cj,i8**%e,align 8
%cm=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cn=bitcast i8*%cj to i8**
store i8*%cm,i8**%cn,align 8
%co=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cp=getelementptr inbounds i8,i8*%cj,i64 8
%cq=bitcast i8*%cp to i8**
store i8*%co,i8**%cq,align 8
%cr=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cs=getelementptr inbounds i8,i8*%cj,i64 16
%ct=bitcast i8*%cs to i8**
store i8*%cr,i8**%ct,align 8
%cu=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cv=getelementptr inbounds i8,i8*%cj,i64 24
%cw=bitcast i8*%cv to i8**
store i8*%cu,i8**%cw,align 8
%cx=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cy=getelementptr inbounds i8,i8*%cj,i64 32
%cz=bitcast i8*%cy to i8**
store i8*%cx,i8**%cz,align 8
%cA=getelementptr inbounds i8,i8*%cj,i64 40
%cB=bitcast i8*%cA to i32*
store i32 31,i32*%cB,align 4
%cC=call i8*@sml_alloc(i32 inreg 20)#0
%cD=bitcast i8*%cC to i32*
%cE=getelementptr inbounds i8,i8*%cC,i64 -4
%cF=bitcast i8*%cE to i32*
store i32 1342177296,i32*%cF,align 4
%cG=getelementptr inbounds i8,i8*%cC,i64 4
%cH=bitcast i8*%cG to i32*
store i32 0,i32*%cH,align 1
store i32 1,i32*%cD,align 4
%cI=load i8*,i8**%e,align 8
%cJ=getelementptr inbounds i8,i8*%cC,i64 8
%cK=bitcast i8*%cJ to i8**
store i8*%cI,i8**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cC,i64 16
%cM=bitcast i8*%cL to i32*
store i32 2,i32*%cM,align 4
ret i8*%cC
cN:
%cO=getelementptr inbounds i8,i8*%r,i64 8
%cP=bitcast i8*%cO to i8**
%cQ=load i8*,i8**%cP,align 8
%cR=bitcast i8*%cQ to i8**
%cS=load i8*,i8**%cR,align 8
%cT=getelementptr inbounds i8,i8*%cQ,i64 8
%cU=bitcast i8*%cT to i8**
%cV=load i8*,i8**%cU,align 8
store i8*%cV,i8**%f,align 8
%cW=load i8*,i8**%d,align 8
%cX=load i8*,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%cY=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%cW,i8*inreg%cX,i8*inreg%cS)
store i8*%cY,i8**%d,align 8
%cZ=call i8*@sml_alloc(i32 inreg 20)#0
%c0=getelementptr inbounds i8,i8*%cZ,i64 -4
%c1=bitcast i8*%c0 to i32*
store i32 1342177296,i32*%c1,align 4
store i8*%cZ,i8**%e,align 8
%c2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%c3=bitcast i8*%cZ to i8**
store i8*%c2,i8**%c3,align 8
%c4=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%c5=getelementptr inbounds i8,i8*%cZ,i64 8
%c6=bitcast i8*%c5 to i8**
store i8*%c4,i8**%c6,align 8
%c7=getelementptr inbounds i8,i8*%cZ,i64 16
%c8=bitcast i8*%c7 to i32*
store i32 3,i32*%c8,align 4
%c9=call i8*@sml_alloc(i32 inreg 20)#0
%da=getelementptr inbounds i8,i8*%c9,i64 -4
%db=bitcast i8*%da to i32*
store i32 1342177296,i32*%db,align 4
%dc=bitcast i8*%c9 to i64*
store i64 0,i64*%dc,align 4
%dd=load i8*,i8**%e,align 8
%de=getelementptr inbounds i8,i8*%c9,i64 8
%df=bitcast i8*%de to i8**
store i8*%dd,i8**%df,align 8
%dg=getelementptr inbounds i8,i8*%c9,i64 16
%dh=bitcast i8*%dg to i32*
store i32 2,i32*%dh,align 4
ret i8*%c9
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination12analyzeFFItyE_1050(i8*inreg%a,i8*inreg%b)unnamed_addr#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%a,i8**%c,align 8
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=getelementptr inbounds i8,i8*%f,i64 -4
%h=bitcast i8*%g to i32*
store i32 1342177296,i32*%h,align 4
store i8*%f,i8**%e,align 8
%i=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%j=bitcast i8*%f to i8**
store i8*%i,i8**%j,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i8**
store i8*%k,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%f,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
%s=load i8*,i8**%e,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination12analyzeFFItyE_1058 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination12analyzeFFItyE_1058 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 24
%z=bitcast i8*%y to i32*
store i32 -2147483647,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18analyzeConstraintsE_1059(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%g,align 8
%r=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%s=getelementptr inbounds i8,i8*%r,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLFN13TyAlphaRename14copyConstraintE(i8*inreg%u)
%w=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%x=call fastcc i8*%o(i8*inreg%w,i8*inreg%v)
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
%D=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%E=call fastcc i8*%A(i8*inreg%C,i8*inreg%D)
store i8*%E,i8**%e,align 8
%F=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%G=call fastcc i8*@_SMLLLN17PolyTyElimination5touchE_640(i8*inreg%F)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%d,align 8
%M=load i8*,i8**%e,align 8
%N=call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a7,i64 0,i32 2)to i8*),i8*inreg%M)
%O=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%P=call fastcc i8*%J(i8*inreg%O,i8*inreg%N)
%Q=load i8*,i8**%e,align 8
ret i8*%Q
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination13analyzeBtvEnvE_1063(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=call fastcc i8*@_SMLFN16DynamicKindUtils16kindOfStaticKindE(i8*inreg%i)
%l=icmp eq i8*%k,null
br i1%l,label%m,label%G
m:
%n=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 28)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177304,i32*%q,align 4
store i8*%o,i8**%c,align 8
%r=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@br,i64 0,i32 2,i64 0),i8**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 16
%w=bitcast i8*%v to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@bs,i64 0,i32 2,i64 0),i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 24
%y=bitcast i8*%x to i32*
store i32 7,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 60)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177336,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 56
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
call void@sml_raise(i8*inreg%z)#1
unreachable
G:
%H=bitcast i8*%k to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%c,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
%M=load i8*,i8**%b,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%J,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
ret i8*%J
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination13analyzeBtvEnvE_1065(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
p:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%e,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%b,%p]
%q=getelementptr inbounds i8,i8*%o,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*@_SMLFN13TyAlphaRename9newBtvEnvE(i8*inreg%s)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%f,align 8
%D=getelementptr inbounds i8,i8*%A,i64 8
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%g,align 8
%G=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%H=call fastcc i8*@_SMLLLN17PolyTyElimination5touchE_640(i8*inreg%G)
store i8*%H,i8**%d,align 8
%I=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
%O=load i8*,i8**%g,align 8
%P=call fastcc i8*%L(i8*inreg%N,i8*inreg%O)
%Q=call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsListE_950(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a6,i64 0,i32 2)to i8*),i8*inreg%P)
store i8*%Q,i8**%h,align 8
%R=load i8*,i8**%d,align 8
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
store i8*null,i8**%d,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%i,align 8
%X=call fastcc i8*@_SMLFN14BoundTypeVarID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=call fastcc i8*%aa(i8*inreg%ac,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bt,i64 0,i32 2)to i8*))
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=load i8*,i8**%g,align 8
%ak=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%aj)
store i8*%ak,i8**%d,align 8
%al=call i8*@sml_alloc(i32 inreg 20)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177296,i32*%an,align 4
%ao=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ar=getelementptr inbounds i8,i8*%al,i64 8
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%al,i64 16
%au=bitcast i8*%at to i32*
store i32 3,i32*%au,align 4
%av=call fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_947(i8*inreg%al)
%aw=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ax=call fastcc i8*%U(i8*inreg%aw,i8*inreg%av)
%ay=load i8*,i8**%g,align 8
%az=call fastcc i8*@_SMLFN12TypedCalcCon6btvEnvE(i8*inreg%ay)
store i8*%az,i8**%d,align 8
%aA=bitcast i8**%e to i8***
%aB=load i8**,i8***%aA,align 8
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%h,align 8
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
%aG=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aD,i64 16
%aM=bitcast i8*%aL to i32*
store i32 3,i32*%aM,align 4
%aN=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%aD)
store i8*%aN,i8**%d,align 8
store i8*null,i8**%e,align 8
%aO=call i8*@sml_alloc(i32 inreg 20)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32 1342177296,i32*%aQ,align 4
store i8*%aO,i8**%e,align 8
%aR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aS=bitcast i8*%aO to i8**
store i8*%aR,i8**%aS,align 8
%aT=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aU=getelementptr inbounds i8,i8*%aO,i64 8
%aV=bitcast i8*%aU to i8**
store i8*%aT,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aO,i64 16
%aX=bitcast i8*%aW to i32*
store i32 3,i32*%aX,align 4
%aY=call i8*@sml_alloc(i32 inreg 20)#0
%aZ=getelementptr inbounds i8,i8*%aY,i64 -4
%a0=bitcast i8*%aZ to i32*
store i32 1342177296,i32*%a0,align 4
%a1=load i8*,i8**%g,align 8
%a2=bitcast i8*%aY to i8**
store i8*%a1,i8**%a2,align 8
%a3=load i8*,i8**%e,align 8
%a4=getelementptr inbounds i8,i8*%aY,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=getelementptr inbounds i8,i8*%aY,i64 16
%a7=bitcast i8*%a6 to i32*
store i32 3,i32*%a7,align 4
ret i8*%aY
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzePatE_1091(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzePatE_1094(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=bitcast i8*%k to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLLN17PolyTyElimination10analyzePatE_1067(i8*inreg%o,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzePatE_1067(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
r:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%p,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%f,align 8
br label%p
p:
%q=phi i8*[%o,%n],[%c,%r]
store i8*null,i8**%f,align 8
%s=bitcast i8*%q to i32*
%t=load i32,i32*%s,align 4
switch i32%t,label%u[
i32 0,label%hh
i32 1,label%fW
i32 2,label%fU
i32 3,label%e8
i32 4,label%ej
i32 5,label%ar
i32 6,label%aj
i32 7,label%M
]
u:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%v=load i8*,i8**@_SMLZ5Match,align 8
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%e,align 8
%z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@bz,i64 0,i32 2,i64 0),i8**%C,align 8
%D=getelementptr inbounds i8,i8*%w,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 60)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177336,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%F,i64 56
%J=bitcast i8*%I to i32*
store i32 1,i32*%J,align 4
%K=load i8*,i8**%e,align 8
%L=bitcast i8*%F to i8**
store i8*%K,i8**%L,align 8
call void@sml_raise(i8*inreg%F)#1
unreachable
M:
%N=getelementptr inbounds i8,i8*%q,i64 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
%S=getelementptr inbounds i8,i8*%P,i64 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%f,align 8
%V=load i8*,i8**%d,align 8
%W=load i8*,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%X=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%V,i8*inreg%W,i8*inreg%R)
store i8*%X,i8**%d,align 8
%Y=call i8*@sml_alloc(i32 inreg 20)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177296,i32*%aa,align 4
%ab=load i8*,i8**%d,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=load i8*,i8**%f,align 8
%ae=getelementptr inbounds i8,i8*%Y,i64 8
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%Y,i64 16
%ah=bitcast i8*%ag to i32*
store i32 3,i32*%ah,align 4
%ai=tail call fastcc i8*@_SMLFN12TypedCalcCon9TPPATWILDE(i8*inreg%Y)
ret i8*%ai
aj:
%ak=load i8*,i8**%d,align 8
%al=load i8*,i8**%e,align 8
%am=getelementptr inbounds i8,i8*%q,i64 8
%an=bitcast i8*%am to i8**
%ao=load i8*,i8**%an,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%ap=call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeVarInfoE_1029(i8*inreg%ak,i8*inreg%al,i8*inreg%ao)
%aq=tail call fastcc i8*@_SMLFN12TypedCalcCon8TPPATVARE(i8*inreg%ap)
ret i8*%aq
ar:
%as=getelementptr inbounds i8,i8*%q,i64 8
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
%av=bitcast i8*%au to i8**
%aw=load i8*,i8**%av,align 8
store i8*%aw,i8**%f,align 8
%ax=getelementptr inbounds i8,i8*%au,i64 8
%ay=bitcast i8*%ax to i8**
%az=load i8*,i8**%ay,align 8
store i8*%az,i8**%g,align 8
%aA=getelementptr inbounds i8,i8*%au,i64 16
%aB=bitcast i8*%aA to i8**
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%h,align 8
%aD=call fastcc i8*@_SMLFN11RecordLabel3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aE=getelementptr inbounds i8,i8*%aD,i64 16
%aF=bitcast i8*%aE to i8*(i8*,i8*)**
%aG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aF,align 8
%aH=bitcast i8*%aD to i8**
%aI=load i8*,i8**%aH,align 8
store i8*%aI,i8**%i,align 8
%aJ=load i8*,i8**%d,align 8
%aK=load i8*,i8**%e,align 8
%aL=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzePatE_1068(i8*inreg%aJ,i8*inreg%aK)
%aM=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aN=call fastcc i8*%aG(i8*inreg%aM,i8*inreg%aL)
%aO=getelementptr inbounds i8,i8*%aN,i64 16
%aP=bitcast i8*%aO to i8*(i8*,i8*)**
%aQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aP,align 8
%aR=bitcast i8*%aN to i8**
%aS=load i8*,i8**%aR,align 8
%aT=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aU=call fastcc i8*%aQ(i8*inreg%aS,i8*inreg%aT)
store i8*%aU,i8**%f,align 8
%aV=load i8*,i8**%d,align 8
%aW=load i8*,i8**%e,align 8
%aX=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aY=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%aV,i8*inreg%aW,i8*inreg%aX)
store i8*%aY,i8**%h,align 8
%aZ=call fastcc i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg%aY)
%a0=icmp eq i8*%aZ,null
br i1%a0,label%a4,label%a1
a1:
%a2=bitcast i8*%aZ to i32*
%a3=load i32,i32*%a2,align 4
switch i32%a3,label%a4[
i32 3,label%ck
i32 5,label%b4
i32 1,label%a5
i32 8,label%cA
]
a4:
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%h,align 8
br label%dX
a5:
%a6=getelementptr inbounds i8,i8*%aZ,i64 4
%a7=bitcast i8*%a6 to i32*
%a8=load i32,i32*%a7,align 4
%a9=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg 1,i32 inreg 8)
%ba=getelementptr inbounds i8,i8*%a9,i64 16
%bb=bitcast i8*%ba to i8*(i8*,i8*)**
%bc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bb,align 8
%bd=bitcast i8*%a9 to i8**
%be=load i8*,i8**%bd,align 8
store i8*%be,i8**%j,align 8
%bf=bitcast i8**%e to i8****
%bg=load i8***,i8****%bf,align 8
%bh=load i8**,i8***%bg,align 8
%bi=load i8*,i8**%bh,align 8
store i8*%bi,i8**%i,align 8
%bj=call i8*@sml_alloc(i32 inreg 20)#0
%bk=getelementptr inbounds i8,i8*%bj,i64 -4
%bl=bitcast i8*%bk to i32*
store i32 1342177296,i32*%bl,align 4
%bm=getelementptr inbounds i8,i8*%bj,i64 12
%bn=bitcast i8*%bm to i32*
store i32 0,i32*%bn,align 1
%bo=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bp=bitcast i8*%bj to i8**
store i8*%bo,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bj,i64 8
%br=bitcast i8*%bq to i32*
store i32%a8,i32*%br,align 4
%bs=getelementptr inbounds i8,i8*%bj,i64 16
%bt=bitcast i8*%bs to i32*
store i32 1,i32*%bt,align 4
%bu=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bv=call fastcc i8*%bc(i8*inreg%bu,i8*inreg%bj)
%bw=icmp eq i8*%bv,null
br i1%bw,label%bI,label%bx
bx:
%by=bitcast i8*%bv to i8**
%bz=load i8*,i8**%by,align 8
%bA=getelementptr inbounds i8,i8*%bz,i64 16
%bB=bitcast i8*%bA to i8**
%bC=load i8*,i8**%bB,align 8
%bD=icmp eq i8*%bC,null
br i1%bD,label%bI,label%bE
bE:
%bF=bitcast i8*%bC to i32*
%bG=load i32,i32*%bF,align 4
%bH=icmp eq i32%bG,2
br i1%bH,label%cA,label%bI
bI:
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%h,align 8
%bJ=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%bJ,i8**%d,align 8
%bK=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bx,i64 0,i32 2)to i8*))
store i8*%bK,i8**%e,align 8
%bL=call i8*@sml_alloc(i32 inreg 28)#0
%bM=getelementptr inbounds i8,i8*%bL,i64 -4
%bN=bitcast i8*%bM to i32*
store i32 1342177304,i32*%bN,align 4
store i8*%bL,i8**%f,align 8
%bO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bP=bitcast i8*%bL to i8**
store i8*%bO,i8**%bP,align 8
%bQ=getelementptr inbounds i8,i8*%bL,i64 8
%bR=bitcast i8*%bQ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%bR,align 8
%bS=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bT=getelementptr inbounds i8,i8*%bL,i64 16
%bU=bitcast i8*%bT to i8**
store i8*%bS,i8**%bU,align 8
%bV=getelementptr inbounds i8,i8*%bL,i64 24
%bW=bitcast i8*%bV to i32*
store i32 7,i32*%bW,align 4
%bX=call i8*@sml_alloc(i32 inreg 60)#0
%bY=getelementptr inbounds i8,i8*%bX,i64 -4
%bZ=bitcast i8*%bY to i32*
store i32 1342177336,i32*%bZ,align 4
%b0=getelementptr inbounds i8,i8*%bX,i64 56
%b1=bitcast i8*%b0 to i32*
store i32 1,i32*%b1,align 4
%b2=load i8*,i8**%f,align 8
%b3=bitcast i8*%bX to i8**
store i8*%b2,i8**%b3,align 8
call void@sml_raise(i8*inreg%bX)#1
unreachable
b4:
%b5=getelementptr inbounds i8,i8*%aZ,i64 8
%b6=bitcast i8*%b5 to i8**
%b7=load i8*,i8**%b6,align 8
%b8=getelementptr inbounds i8,i8*%b7,i64 8
%b9=bitcast i8*%b8 to i8**
%ca=load i8*,i8**%b9,align 8
%cb=getelementptr inbounds i8,i8*%ca,i64 16
%cc=bitcast i8*%cb to i8**
%cd=load i8*,i8**%cc,align 8
%ce=icmp eq i8*%cd,null
br i1%ce,label%cj,label%cf
cf:
%cg=bitcast i8*%cd to i32*
%ch=load i32,i32*%cg,align 4
%ci=icmp eq i32%ch,2
br i1%ci,label%cA,label%cj
cj:
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%h,align 8
br label%dX
ck:
%cl=getelementptr inbounds i8,i8*%aZ,i64 8
%cm=bitcast i8*%cl to i8**
%cn=load i8*,i8**%cm,align 8
%co=getelementptr inbounds i8,i8*%cn,i64 8
%cp=bitcast i8*%co to i8**
%cq=load i8*,i8**%cp,align 8
%cr=getelementptr inbounds i8,i8*%cq,i64 16
%cs=bitcast i8*%cr to i8**
%ct=load i8*,i8**%cs,align 8
%cu=icmp eq i8*%ct,null
br i1%cu,label%cz,label%cv
cv:
%cw=bitcast i8*%ct to i32*
%cx=load i32,i32*%cw,align 4
%cy=icmp eq i32%cx,2
br i1%cy,label%cA,label%cz
cz:
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%h,align 8
br label%dX
cA:
%cB=phi i8*[%aZ,%a1],[%bC,%bE],[%cd,%cf],[%ct,%cv]
%cC=getelementptr inbounds i8,i8*%cB,i64 8
%cD=bitcast i8*%cC to i8**
%cE=load i8*,i8**%cD,align 8
store i8*%cE,i8**%i,align 8
%cF=call fastcc i8*@_SMLFN11RecordLabel3Map13intersectWithE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%cG=getelementptr inbounds i8,i8*%cF,i64 16
%cH=bitcast i8*%cG to i8*(i8*,i8*)**
%cI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cH,align 8
%cJ=bitcast i8*%cF to i8**
%cK=load i8*,i8**%cJ,align 8
store i8*%cK,i8**%j,align 8
%cL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cM=call fastcc i8*@_SMLLLN17PolyTyElimination5equalE_931(i8*inreg%cL)
%cN=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cO=call fastcc i8*%cI(i8*inreg%cN,i8*inreg%cM)
%cP=getelementptr inbounds i8,i8*%cO,i64 16
%cQ=bitcast i8*%cP to i8*(i8*,i8*)**
%cR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cQ,align 8
%cS=bitcast i8*%cO to i8**
%cT=load i8*,i8**%cS,align 8
store i8*%cT,i8**%j,align 8
%cU=call fastcc i8*@_SMLFN11RecordLabel3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cV=getelementptr inbounds i8,i8*%cU,i64 16
%cW=bitcast i8*%cV to i8*(i8*,i8*)**
%cX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cW,align 8
%cY=bitcast i8*%cU to i8**
%cZ=load i8*,i8**%cY,align 8
%c0=call fastcc i8*%cX(i8*inreg%cZ,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@by,i64 0,i32 2)to i8*))
%c1=getelementptr inbounds i8,i8*%c0,i64 16
%c2=bitcast i8*%c1 to i8*(i8*,i8*)**
%c3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c2,align 8
%c4=bitcast i8*%c0 to i8**
%c5=load i8*,i8**%c4,align 8
%c6=load i8*,i8**%f,align 8
%c7=call fastcc i8*%c3(i8*inreg%c5,i8*inreg%c6)
store i8*%c7,i8**%d,align 8
%c8=call i8*@sml_alloc(i32 inreg 20)#0
%c9=getelementptr inbounds i8,i8*%c8,i64 -4
%da=bitcast i8*%c9 to i32*
store i32 1342177296,i32*%da,align 4
%db=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dc=bitcast i8*%c8 to i8**
store i8*%db,i8**%dc,align 8
%dd=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%de=getelementptr inbounds i8,i8*%c8,i64 8
%df=bitcast i8*%de to i8**
store i8*%dd,i8**%df,align 8
%dg=getelementptr inbounds i8,i8*%c8,i64 16
%dh=bitcast i8*%dg to i32*
store i32 3,i32*%dh,align 4
%di=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dj=call fastcc i8*%cR(i8*inreg%di,i8*inreg%c8)
%dk=bitcast i8**%e to i8****
%dl=load i8***,i8****%dk,align 8
store i8*null,i8**%e,align 8
%dm=load i8**,i8***%dl,align 8
%dn=load i8*,i8**%dm,align 8
store i8*%dn,i8**%d,align 8
%do=call i8*@sml_alloc(i32 inreg 12)#0
%dp=getelementptr inbounds i8,i8*%do,i64 -4
%dq=bitcast i8*%dp to i32*
store i32 1342177288,i32*%dq,align 4
%dr=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ds=bitcast i8*%do to i8**
store i8*%dr,i8**%ds,align 8
%dt=getelementptr inbounds i8,i8*%do,i64 8
%du=bitcast i8*%dt to i32*
store i32 1,i32*%du,align 4
%dv=call fastcc i8*@_SMLFN12TypedCalcCon11TPPATRECORDE(i8*inreg%do)
%dw=getelementptr inbounds i8,i8*%dv,i64 16
%dx=bitcast i8*%dw to i8*(i8*,i8*)**
%dy=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dx,align 8
%dz=bitcast i8*%dv to i8**
%dA=load i8*,i8**%dz,align 8
store i8*%dA,i8**%d,align 8
%dB=call i8*@sml_alloc(i32 inreg 12)#0
%dC=getelementptr inbounds i8,i8*%dB,i64 -4
%dD=bitcast i8*%dC to i32*
store i32 1342177288,i32*%dD,align 4
store i8*%dB,i8**%e,align 8
%dE=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dF=bitcast i8*%dB to i8**
store i8*%dE,i8**%dF,align 8
%dG=getelementptr inbounds i8,i8*%dB,i64 8
%dH=bitcast i8*%dG to i32*
store i32 1,i32*%dH,align 4
%dI=call i8*@sml_alloc(i32 inreg 28)#0
%dJ=getelementptr inbounds i8,i8*%dI,i64 -4
%dK=bitcast i8*%dJ to i32*
store i32 1342177304,i32*%dK,align 4
%dL=load i8*,i8**%f,align 8
%dM=bitcast i8*%dI to i8**
store i8*%dL,i8**%dM,align 8
%dN=load i8*,i8**%g,align 8
%dO=getelementptr inbounds i8,i8*%dI,i64 8
%dP=bitcast i8*%dO to i8**
store i8*%dN,i8**%dP,align 8
%dQ=load i8*,i8**%e,align 8
%dR=getelementptr inbounds i8,i8*%dI,i64 16
%dS=bitcast i8*%dR to i8**
store i8*%dQ,i8**%dS,align 8
%dT=getelementptr inbounds i8,i8*%dI,i64 24
%dU=bitcast i8*%dT to i32*
store i32 7,i32*%dU,align 4
%dV=load i8*,i8**%d,align 8
%dW=tail call fastcc i8*%dy(i8*inreg%dV,i8*inreg%dI)
ret i8*%dW
dX:
%dY=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%dY,i8**%d,align 8
%dZ=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bv,i64 0,i32 2)to i8*))
store i8*%dZ,i8**%e,align 8
%d0=call i8*@sml_alloc(i32 inreg 28)#0
%d1=getelementptr inbounds i8,i8*%d0,i64 -4
%d2=bitcast i8*%d1 to i32*
store i32 1342177304,i32*%d2,align 4
store i8*%d0,i8**%f,align 8
%d3=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%d4=bitcast i8*%d0 to i8**
store i8*%d3,i8**%d4,align 8
%d5=getelementptr inbounds i8,i8*%d0,i64 8
%d6=bitcast i8*%d5 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%d6,align 8
%d7=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%d8=getelementptr inbounds i8,i8*%d0,i64 16
%d9=bitcast i8*%d8 to i8**
store i8*%d7,i8**%d9,align 8
%ea=getelementptr inbounds i8,i8*%d0,i64 24
%eb=bitcast i8*%ea to i32*
store i32 7,i32*%eb,align 4
%ec=call i8*@sml_alloc(i32 inreg 60)#0
%ed=getelementptr inbounds i8,i8*%ec,i64 -4
%ee=bitcast i8*%ed to i32*
store i32 1342177336,i32*%ee,align 4
%ef=getelementptr inbounds i8,i8*%ec,i64 56
%eg=bitcast i8*%ef to i32*
store i32 1,i32*%eg,align 4
%eh=load i8*,i8**%f,align 8
%ei=bitcast i8*%ec to i8**
store i8*%eh,i8**%ei,align 8
call void@sml_raise(i8*inreg%ec)#1
unreachable
ej:
%ek=getelementptr inbounds i8,i8*%q,i64 8
%el=bitcast i8*%ek to i8**
%em=load i8*,i8**%el,align 8
%en=bitcast i8*%em to i8**
%eo=load i8*,i8**%en,align 8
store i8*%eo,i8**%f,align 8
%ep=getelementptr inbounds i8,i8*%em,i64 8
%eq=bitcast i8*%ep to i8**
%er=load i8*,i8**%eq,align 8
store i8*%er,i8**%g,align 8
%es=getelementptr inbounds i8,i8*%em,i64 16
%et=bitcast i8*%es to i8**
%eu=load i8*,i8**%et,align 8
%ev=load i8*,i8**%d,align 8
%ew=load i8*,i8**%e,align 8
%ex=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzePatE_1067(i8*inreg%ev,i8*inreg%ew,i8*inreg%eu)
store i8*%ex,i8**%h,align 8
%ey=load i8*,i8**%d,align 8
%ez=load i8*,i8**%e,align 8
%eA=load i8*,i8**%f,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%eB=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzePatE_1067(i8*inreg%ey,i8*inreg%ez,i8*inreg%eA)
store i8*%eB,i8**%e,align 8
%eC=getelementptr inbounds i8,i8*%eB,i64 8
%eD=bitcast i8*%eC to i8**
%eE=load i8*,i8**%eD,align 8
store i8*%eE,i8**%f,align 8
%eF=load i8*,i8**%h,align 8
%eG=getelementptr inbounds i8,i8*%eF,i64 8
%eH=bitcast i8*%eG to i8**
%eI=load i8*,i8**%eH,align 8
store i8*%eI,i8**%i,align 8
%eJ=call i8*@sml_alloc(i32 inreg 20)#0
%eK=getelementptr inbounds i8,i8*%eJ,i64 -4
%eL=bitcast i8*%eK to i32*
store i32 1342177296,i32*%eL,align 4
%eM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eN=bitcast i8*%eJ to i8**
store i8*%eM,i8**%eN,align 8
%eO=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%eP=getelementptr inbounds i8,i8*%eJ,i64 8
%eQ=bitcast i8*%eP to i8**
store i8*%eO,i8**%eQ,align 8
%eR=getelementptr inbounds i8,i8*%eJ,i64 16
%eS=bitcast i8*%eR to i32*
store i32 3,i32*%eS,align 4
%eT=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination5equalE_928(i8*inreg%eT,i8*inreg%eJ)
%eU=call i8*@sml_alloc(i32 inreg 28)#0
%eV=getelementptr inbounds i8,i8*%eU,i64 -4
%eW=bitcast i8*%eV to i32*
store i32 1342177304,i32*%eW,align 4
%eX=load i8*,i8**%e,align 8
%eY=bitcast i8*%eU to i8**
store i8*%eX,i8**%eY,align 8
%eZ=load i8*,i8**%g,align 8
%e0=getelementptr inbounds i8,i8*%eU,i64 8
%e1=bitcast i8*%e0 to i8**
store i8*%eZ,i8**%e1,align 8
%e2=load i8*,i8**%h,align 8
%e3=getelementptr inbounds i8,i8*%eU,i64 16
%e4=bitcast i8*%e3 to i8**
store i8*%e2,i8**%e4,align 8
%e5=getelementptr inbounds i8,i8*%eU,i64 24
%e6=bitcast i8*%e5 to i32*
store i32 7,i32*%e6,align 4
%e7=tail call fastcc i8*@_SMLFN12TypedCalcCon12TPPATLAYEREDE(i8*inreg%eU)
ret i8*%e7
e8:
%e9=getelementptr inbounds i8,i8*%q,i64 8
%fa=bitcast i8*%e9 to i8**
%fb=load i8*,i8**%fa,align 8
%fc=bitcast i8*%fb to i8**
%fd=load i8*,i8**%fc,align 8
store i8*%fd,i8**%f,align 8
%fe=getelementptr inbounds i8,i8*%fb,i64 8
%ff=bitcast i8*%fe to i8**
%fg=load i8*,i8**%ff,align 8
%fh=getelementptr inbounds i8,i8*%fb,i64 16
%fi=bitcast i8*%fh to i8**
%fj=load i8*,i8**%fi,align 8
store i8*%fj,i8**%g,align 8
%fk=load i8*,i8**%e,align 8
%fl=call fastcc i8*@_SMLLLN17PolyTyElimination13analyzeExnConE_1047(i8*inreg%fk,i8*inreg%fg)
%fm=bitcast i8*%fl to i8**
%fn=load i8*,i8**%fm,align 8
store i8*%fn,i8**%h,align 8
%fo=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%fp=getelementptr inbounds i8,i8*%fo,i64 16
%fq=bitcast i8*%fp to i8*(i8*,i8*)**
%fr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fq,align 8
%fs=bitcast i8*%fo to i8**
%ft=load i8*,i8**%fs,align 8
store i8*%ft,i8**%i,align 8
%fu=load i8*,i8**%d,align 8
%fv=load i8*,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%fw=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzePatE_1068(i8*inreg%fu,i8*inreg%fv)
%fx=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%fy=call fastcc i8*%fr(i8*inreg%fx,i8*inreg%fw)
%fz=getelementptr inbounds i8,i8*%fy,i64 16
%fA=bitcast i8*%fz to i8*(i8*,i8*)**
%fB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fA,align 8
%fC=bitcast i8*%fy to i8**
%fD=load i8*,i8**%fC,align 8
%fE=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fF=call fastcc i8*%fB(i8*inreg%fD,i8*inreg%fE)
store i8*%fF,i8**%d,align 8
%fG=call i8*@sml_alloc(i32 inreg 28)#0
%fH=getelementptr inbounds i8,i8*%fG,i64 -4
%fI=bitcast i8*%fH to i32*
store i32 1342177304,i32*%fI,align 4
%fJ=load i8*,i8**%d,align 8
%fK=bitcast i8*%fG to i8**
store i8*%fJ,i8**%fK,align 8
%fL=load i8*,i8**%h,align 8
%fM=getelementptr inbounds i8,i8*%fG,i64 8
%fN=bitcast i8*%fM to i8**
store i8*%fL,i8**%fN,align 8
%fO=load i8*,i8**%g,align 8
%fP=getelementptr inbounds i8,i8*%fG,i64 16
%fQ=bitcast i8*%fP to i8**
store i8*%fO,i8**%fQ,align 8
%fR=getelementptr inbounds i8,i8*%fG,i64 24
%fS=bitcast i8*%fR to i32*
store i32 7,i32*%fS,align 4
%fT=tail call fastcc i8*@_SMLFN12TypedCalcCon17TPPATEXNCONSTRUCTE(i8*inreg%fG)
ret i8*%fT
fU:
%fV=load i8*,i8**@_SMLZN12TypedCalcCon10TPPATERRORE,align 8
ret i8*%fV
fW:
%fX=getelementptr inbounds i8,i8*%q,i64 8
%fY=bitcast i8*%fX to i8**
%fZ=load i8*,i8**%fY,align 8
%f0=bitcast i8*%fZ to i8**
%f1=load i8*,i8**%f0,align 8
store i8*%f1,i8**%f,align 8
%f2=getelementptr inbounds i8,i8*%fZ,i64 8
%f3=bitcast i8*%f2 to i8**
%f4=load i8*,i8**%f3,align 8
%f5=getelementptr inbounds i8,i8*%fZ,i64 16
%f6=bitcast i8*%f5 to i8**
%f7=load i8*,i8**%f6,align 8
store i8*%f7,i8**%g,align 8
%f8=getelementptr inbounds i8,i8*%fZ,i64 24
%f9=bitcast i8*%f8 to i8**
%ga=load i8*,i8**%f9,align 8
store i8*%ga,i8**%h,align 8
%gb=load i8*,i8**%d,align 8
%gc=load i8*,i8**%e,align 8
%gd=call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeConInfoE_1034(i8*inreg%gb,i8*inreg%gc,i8*inreg%f4)
store i8*%gd,i8**%i,align 8
%ge=getelementptr inbounds i8,i8*%gd,i64 16
%gf=bitcast i8*%ge to i8**
%gg=load i8*,i8**%gf,align 8
%gh=load i8*,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination6exportE_1022(i8*inreg%gh,i8*inreg%gg)
%gi=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%gj=getelementptr inbounds i8,i8*%gi,i64 16
%gk=bitcast i8*%gj to i8*(i8*,i8*)**
%gl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gk,align 8
%gm=bitcast i8*%gi to i8**
%gn=load i8*,i8**%gm,align 8
store i8*%gn,i8**%k,align 8
%go=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%gp=getelementptr inbounds i8,i8*%go,i64 16
%gq=bitcast i8*%gp to i8*(i8*,i8*)**
%gr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gq,align 8
%gs=bitcast i8*%go to i8**
%gt=load i8*,i8**%gs,align 8
store i8*%gt,i8**%j,align 8
%gu=load i8*,i8**%d,align 8
%gv=load i8*,i8**%e,align 8
%gw=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1027(i8*inreg%gu,i8*inreg%gv)
%gx=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%gy=call fastcc i8*%gr(i8*inreg%gx,i8*inreg%gw)
%gz=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%gA=call fastcc i8*%gl(i8*inreg%gz,i8*inreg%gy)
%gB=getelementptr inbounds i8,i8*%gA,i64 16
%gC=bitcast i8*%gB to i8*(i8*,i8*)**
%gD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gC,align 8
%gE=bitcast i8*%gA to i8**
%gF=load i8*,i8**%gE,align 8
%gG=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gH=call fastcc i8*%gD(i8*inreg%gF,i8*inreg%gG)
store i8*%gH,i8**%g,align 8
%gI=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%gJ=getelementptr inbounds i8,i8*%gI,i64 16
%gK=bitcast i8*%gJ to i8*(i8*,i8*)**
%gL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gK,align 8
%gM=bitcast i8*%gI to i8**
%gN=load i8*,i8**%gM,align 8
store i8*%gN,i8**%j,align 8
%gO=load i8*,i8**%d,align 8
%gP=load i8*,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%gQ=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzePatE_1068(i8*inreg%gO,i8*inreg%gP)
%gR=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%gS=call fastcc i8*%gL(i8*inreg%gR,i8*inreg%gQ)
%gT=getelementptr inbounds i8,i8*%gS,i64 16
%gU=bitcast i8*%gT to i8*(i8*,i8*)**
%gV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gU,align 8
%gW=bitcast i8*%gS to i8**
%gX=load i8*,i8**%gW,align 8
%gY=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gZ=call fastcc i8*%gV(i8*inreg%gX,i8*inreg%gY)
store i8*%gZ,i8**%d,align 8
%g0=call i8*@sml_alloc(i32 inreg 36)#0
%g1=getelementptr inbounds i8,i8*%g0,i64 -4
%g2=bitcast i8*%g1 to i32*
store i32 1342177312,i32*%g2,align 4
%g3=load i8*,i8**%d,align 8
%g4=bitcast i8*%g0 to i8**
store i8*%g3,i8**%g4,align 8
%g5=load i8*,i8**%i,align 8
%g6=getelementptr inbounds i8,i8*%g0,i64 8
%g7=bitcast i8*%g6 to i8**
store i8*%g5,i8**%g7,align 8
%g8=load i8*,i8**%g,align 8
%g9=getelementptr inbounds i8,i8*%g0,i64 16
%ha=bitcast i8*%g9 to i8**
store i8*%g8,i8**%ha,align 8
%hb=load i8*,i8**%h,align 8
%hc=getelementptr inbounds i8,i8*%g0,i64 24
%hd=bitcast i8*%hc to i8**
store i8*%hb,i8**%hd,align 8
%he=getelementptr inbounds i8,i8*%g0,i64 32
%hf=bitcast i8*%he to i32*
store i32 15,i32*%hf,align 4
%hg=tail call fastcc i8*@_SMLFN12TypedCalcCon18TPPATDATACONSTRUCTE(i8*inreg%g0)
ret i8*%hg
hh:
%hi=getelementptr inbounds i8,i8*%q,i64 8
%hj=bitcast i8*%hi to i8**
%hk=load i8*,i8**%hj,align 8
%hl=bitcast i8*%hk to i8**
%hm=load i8*,i8**%hl,align 8
store i8*%hm,i8**%f,align 8
%hn=getelementptr inbounds i8,i8*%hk,i64 8
%ho=bitcast i8*%hn to i8**
%hp=load i8*,i8**%ho,align 8
%hq=getelementptr inbounds i8,i8*%hk,i64 16
%hr=bitcast i8*%hq to i8**
%hs=load i8*,i8**%hr,align 8
store i8*%hs,i8**%g,align 8
%ht=load i8*,i8**%d,align 8
%hu=load i8*,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%hv=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%ht,i8*inreg%hu,i8*inreg%hp)
store i8*%hv,i8**%d,align 8
%hw=call i8*@sml_alloc(i32 inreg 28)#0
%hx=getelementptr inbounds i8,i8*%hw,i64 -4
%hy=bitcast i8*%hx to i32*
store i32 1342177304,i32*%hy,align 4
%hz=load i8*,i8**%f,align 8
%hA=bitcast i8*%hw to i8**
store i8*%hz,i8**%hA,align 8
%hB=load i8*,i8**%d,align 8
%hC=getelementptr inbounds i8,i8*%hw,i64 8
%hD=bitcast i8*%hC to i8**
store i8*%hB,i8**%hD,align 8
%hE=load i8*,i8**%g,align 8
%hF=getelementptr inbounds i8,i8*%hw,i64 16
%hG=bitcast i8*%hF to i8**
store i8*%hE,i8**%hG,align 8
%hH=getelementptr inbounds i8,i8*%hw,i64 24
%hI=bitcast i8*%hH to i32*
store i32 7,i32*%hI,align 4
%hJ=tail call fastcc i8*@_SMLFN12TypedCalcCon13TPPATCONSTANTE(i8*inreg%hw)
ret i8*%hJ
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzePatE_1068(i8*inreg%a,i8*inreg%b)unnamed_addr#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%a,i8**%c,align 8
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=getelementptr inbounds i8,i8*%f,i64 -4
%h=bitcast i8*%g to i32*
store i32 1342177296,i32*%h,align 4
store i8*%f,i8**%e,align 8
%i=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%j=bitcast i8*%f to i8**
store i8*%i,i8**%j,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i8**
store i8*%k,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%f,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
%s=load i8*,i8**%e,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10analyzePatE_1094 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10analyzePatE_1094 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 24
%z=bitcast i8*%y to i32*
store i32 -2147483647,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1207(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1213(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLL11analyzeRule_1215(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%f,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=bitcast i8*%m to i8**
%v=load i8*,i8**%u,align 8
%w=getelementptr inbounds i8,i8*%m,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=getelementptr inbounds i8,i8*%o,i64 16
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%v,i8*inreg%y,i8*inreg%B)
store i8*%C,i8**%e,align 8
%D=load i8*,i8**%f,align 8
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%D,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%F,i8*inreg%I,i8*inreg%J)
store i8*%K,i8**%c,align 8
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%c,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%d,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=load i8*,i8**%e,align 8
%U=getelementptr inbounds i8,i8*%L,i64 16
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%L,i64 24
%X=bitcast i8*%W to i32*
store i32 7,i32*%X,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1216(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=getelementptr inbounds i8,i8*%c,i64 8
%e=bitcast i8*%d to i8**
%f=load i8*,i8**%e,align 8
ret i8*%f
}
define internal fastcc i8*@_SMLLL11analyzeRule_1218(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
s:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%a,i8**%i,align 8
store i8*%b,i8**%c,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%q,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%c,align 8
%p=load i8*,i8**%i,align 8
br label%q
q:
%r=phi i8*[%p,%n],[%a,%s]
%t=phi i8*[%o,%n],[%b,%s]
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=getelementptr inbounds i8,i8*%t,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%d,align 8
%z=getelementptr inbounds i8,i8*%t,i64 16
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=getelementptr inbounds i8,i8*%t,i64 24
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%e,align 8
%F=bitcast i8*%r to i8**
%G=load i8*,i8**%F,align 8
%H=getelementptr inbounds i8,i8*%r,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
%K=call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeConInfoE_1034(i8*inreg%G,i8*inreg%J,i8*inreg%B)
store i8*%K,i8**%f,align 8
%L=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%h,align 8
%R=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%g,align 8
%X=load i8*,i8**%i,align 8
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
%aa=getelementptr inbounds i8,i8*%X,i64 8
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
%ad=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1027(i8*inreg%Z,i8*inreg%ac)
%ae=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%af=call fastcc i8*%U(i8*inreg%ae,i8*inreg%ad)
%ag=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ah=call fastcc i8*%O(i8*inreg%ag,i8*inreg%af)
%ai=getelementptr inbounds i8,i8*%ah,i64 16
%aj=bitcast i8*%ai to i8*(i8*,i8*)**
%ak=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aj,align 8
%al=bitcast i8*%ah to i8**
%am=load i8*,i8**%al,align 8
%an=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ao=call fastcc i8*%ak(i8*inreg%am,i8*inreg%an)
store i8*%ao,i8**%e,align 8
%ap=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%g,align 8
%av=load i8*,i8**%i,align 8
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
%ay=getelementptr inbounds i8,i8*%av,i64 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
%aB=call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeVarInfoE_1032(i8*inreg%ax,i8*inreg%aA)
%aC=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aD=call fastcc i8*%as(i8*inreg%aC,i8*inreg%aB)
%aE=getelementptr inbounds i8,i8*%aD,i64 16
%aF=bitcast i8*%aE to i8*(i8*,i8*)**
%aG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aF,align 8
%aH=bitcast i8*%aD to i8**
%aI=load i8*,i8**%aH,align 8
%aJ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aK=call fastcc i8*%aG(i8*inreg%aI,i8*inreg%aJ)
store i8*%aK,i8**%c,align 8
%aL=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aM=getelementptr inbounds i8,i8*%aL,i64 16
%aN=bitcast i8*%aM to i8*(i8*,i8*)**
%aO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aN,align 8
%aP=bitcast i8*%aL to i8**
%aQ=load i8*,i8**%aP,align 8
%aR=load i8*,i8**@_SMLZN12TypedCalcCon8TPPATVARE,align 8
%aS=call fastcc i8*%aO(i8*inreg%aQ,i8*inreg%aR)
%aT=getelementptr inbounds i8,i8*%aS,i64 16
%aU=bitcast i8*%aT to i8*(i8*,i8*)**
%aV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aU,align 8
%aW=bitcast i8*%aS to i8**
%aX=load i8*,i8**%aW,align 8
%aY=load i8*,i8**%c,align 8
%aZ=call fastcc i8*%aV(i8*inreg%aX,i8*inreg%aY)
store i8*%aZ,i8**%g,align 8
%a0=load i8*,i8**%i,align 8
%a1=getelementptr inbounds i8,i8*%a0,i64 16
%a2=bitcast i8*%a1 to i8**
%a3=load i8*,i8**%a2,align 8
store i8*%a3,i8**%h,align 8
%a4=call i8*@sml_alloc(i32 inreg 36)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177312,i32*%a6,align 4
%a7=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a8=bitcast i8*%a4 to i8**
store i8*%a7,i8**%a8,align 8
%a9=load i8*,i8**%f,align 8
%ba=getelementptr inbounds i8,i8*%a4,i64 8
%bb=bitcast i8*%ba to i8**
store i8*%a9,i8**%bb,align 8
%bc=load i8*,i8**%e,align 8
%bd=getelementptr inbounds i8,i8*%a4,i64 16
%be=bitcast i8*%bd to i8**
store i8*%bc,i8**%be,align 8
%bf=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bg=getelementptr inbounds i8,i8*%a4,i64 24
%bh=bitcast i8*%bg to i8**
store i8*%bf,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%a4,i64 32
%bj=bitcast i8*%bi to i32*
store i32 15,i32*%bj,align 4
%bk=call fastcc i8*@_SMLFN12TypedCalcCon18TPPATDATACONSTRUCTE(i8*inreg%a4)
%bl=getelementptr inbounds i8,i8*%bk,i64 8
%bm=bitcast i8*%bl to i8**
%bn=load i8*,i8**%bm,align 8
store i8*%bn,i8**%g,align 8
%bo=getelementptr inbounds i8,i8*%bk,i64 16
%bp=bitcast i8*%bo to i8**
%bq=load i8*,i8**%bp,align 8
%br=call fastcc i8*@_SMLFN12TypedCalcCon6varEnvE(i8*inreg%bq)
store i8*%br,i8**%h,align 8
%bs=bitcast i8**%i to i8***
%bt=load i8**,i8***%bs,align 8
%bu=load i8*,i8**%bt,align 8
store i8*%bu,i8**%k,align 8
%bv=getelementptr inbounds i8*,i8**%bt,i64 1
%bw=bitcast i8**%bv to i8***
%bx=load i8**,i8***%bw,align 8
%by=load i8*,i8**%bx,align 8
store i8*%by,i8**%j,align 8
%bz=call i8*@sml_alloc(i32 inreg 20)#0
%bA=getelementptr inbounds i8,i8*%bz,i64 -4
%bB=bitcast i8*%bA to i32*
store i32 1342177296,i32*%bB,align 4
%bC=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bD=bitcast i8*%bz to i8**
store i8*%bC,i8**%bD,align 8
%bE=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bF=getelementptr inbounds i8,i8*%bz,i64 8
%bG=bitcast i8*%bF to i8**
store i8*%bE,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bz,i64 16
%bI=bitcast i8*%bH to i32*
store i32 3,i32*%bI,align 4
%bJ=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%bz)
store i8*%bJ,i8**%h,align 8
%bK=load i8*,i8**%i,align 8
%bL=getelementptr inbounds i8,i8*%bK,i64 8
%bM=bitcast i8*%bL to i8**
%bN=load i8*,i8**%bM,align 8
%bO=getelementptr inbounds i8,i8*%bN,i64 8
%bP=bitcast i8*%bO to i8**
%bQ=load i8*,i8**%bP,align 8
store i8*%bQ,i8**%j,align 8
%bR=call i8*@sml_alloc(i32 inreg 20)#0
%bS=getelementptr inbounds i8,i8*%bR,i64 -4
%bT=bitcast i8*%bS to i32*
store i32 1342177296,i32*%bT,align 4
%bU=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bV=bitcast i8*%bR to i8**
store i8*%bU,i8**%bV,align 8
%bW=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bX=getelementptr inbounds i8,i8*%bR,i64 8
%bY=bitcast i8*%bX to i8**
store i8*%bW,i8**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bR,i64 16
%b0=bitcast i8*%bZ to i32*
store i32 3,i32*%b0,align 4
%b1=load i8*,i8**%d,align 8
%b2=load i8*,i8**%k,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%k,align 8
%b3=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%b2,i8*inreg%bR,i8*inreg%b1)
store i8*%b3,i8**%d,align 8
%b4=load i8**,i8***%bs,align 8
store i8*null,i8**%i,align 8
%b5=load i8*,i8**%b4,align 8
%b6=load i8*,i8**%f,align 8
%b7=getelementptr inbounds i8,i8*%b6,i64 16
%b8=bitcast i8*%b7 to i8**
%b9=load i8*,i8**%b8,align 8
call fastcc void@_SMLLLN17PolyTyElimination6exportE_1022(i8*inreg%b5,i8*inreg%b9)
%ca=call i8*@sml_alloc(i32 inreg 36)#0
%cb=getelementptr inbounds i8,i8*%ca,i64 -4
%cc=bitcast i8*%cb to i32*
store i32 1342177312,i32*%cc,align 4
store i8*%ca,i8**%h,align 8
%cd=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ce=bitcast i8*%ca to i8**
store i8*%cd,i8**%ce,align 8
%cf=load i8*,i8**%d,align 8
%cg=getelementptr inbounds i8,i8*%ca,i64 8
%ch=bitcast i8*%cg to i8**
store i8*%cf,i8**%ch,align 8
%ci=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cj=getelementptr inbounds i8,i8*%ca,i64 16
%ck=bitcast i8*%cj to i8**
store i8*%ci,i8**%ck,align 8
%cl=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cm=getelementptr inbounds i8,i8*%ca,i64 24
%cn=bitcast i8*%cm to i8**
store i8*%cl,i8**%cn,align 8
%co=getelementptr inbounds i8,i8*%ca,i64 32
%cp=bitcast i8*%co to i32*
store i32 15,i32*%cp,align 4
%cq=call i8*@sml_alloc(i32 inreg 20)#0
%cr=getelementptr inbounds i8,i8*%cq,i64 -4
%cs=bitcast i8*%cr to i32*
store i32 1342177296,i32*%cs,align 4
store i8*%cq,i8**%e,align 8
%ct=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cu=bitcast i8*%cq to i8**
store i8*%ct,i8**%cu,align 8
%cv=getelementptr inbounds i8,i8*%cq,i64 8
%cw=bitcast i8*%cv to i8**
store i8*null,i8**%cw,align 8
%cx=getelementptr inbounds i8,i8*%cq,i64 16
%cy=bitcast i8*%cx to i32*
store i32 3,i32*%cy,align 4
%cz=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cA=getelementptr inbounds i8,i8*%cz,i64 8
%cB=bitcast i8*%cA to i8**
%cC=load i8*,i8**%cB,align 8
store i8*%cC,i8**%c,align 8
%cD=call i8*@sml_alloc(i32 inreg 20)#0
%cE=getelementptr inbounds i8,i8*%cD,i64 -4
%cF=bitcast i8*%cE to i32*
store i32 1342177296,i32*%cF,align 4
store i8*%cD,i8**%d,align 8
%cG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cH=bitcast i8*%cD to i8**
store i8*%cG,i8**%cH,align 8
%cI=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cJ=getelementptr inbounds i8,i8*%cD,i64 8
%cK=bitcast i8*%cJ to i8**
store i8*%cI,i8**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cD,i64 16
%cM=bitcast i8*%cL to i32*
store i32 3,i32*%cM,align 4
%cN=call i8*@sml_alloc(i32 inreg 20)#0
%cO=getelementptr inbounds i8,i8*%cN,i64 -4
%cP=bitcast i8*%cO to i32*
store i32 1342177296,i32*%cP,align 4
store i8*%cN,i8**%c,align 8
%cQ=getelementptr inbounds i8,i8*%cN,i64 4
%cR=bitcast i8*%cQ to i32*
store i32 0,i32*%cR,align 1
%cS=bitcast i8*%cN to i32*
store i32 6,i32*%cS,align 4
%cT=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cU=getelementptr inbounds i8,i8*%cN,i64 8
%cV=bitcast i8*%cU to i8**
store i8*%cT,i8**%cV,align 8
%cW=getelementptr inbounds i8,i8*%cN,i64 16
%cX=bitcast i8*%cW to i32*
store i32 2,i32*%cX,align 4
%cY=call i8*@sml_alloc(i32 inreg 20)#0
%cZ=getelementptr inbounds i8,i8*%cY,i64 -4
%c0=bitcast i8*%cZ to i32*
store i32 1342177296,i32*%c0,align 4
%c1=load i8*,i8**%h,align 8
%c2=bitcast i8*%cY to i8**
store i8*%c1,i8**%c2,align 8
%c3=load i8*,i8**%c,align 8
%c4=getelementptr inbounds i8,i8*%cY,i64 8
%c5=bitcast i8*%c4 to i8**
store i8*%c3,i8**%c5,align 8
%c6=getelementptr inbounds i8,i8*%cY,i64 16
%c7=bitcast i8*%c6 to i32*
store i32 3,i32*%c7,align 4
ret i8*%cY
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1219(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1221(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLL11analyzeRule_1223(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
r:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%c,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%p,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%c,align 8
%o=load i8*,i8**%h,align 8
br label%p
p:
%q=phi i8*[%o,%m],[%a,%r]
%s=phi i8*[%n,%m],[%b,%r]
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%s,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%q,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=getelementptr inbounds i8,i8*%s,i64 16
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
%E=call fastcc i8*@_SMLLLN17PolyTyElimination13analyzeExnConE_1047(i8*inreg%A,i8*inreg%D)
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%e,align 8
%H=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8*(i8*,i8*)**
%K=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%J,align 8
%L=bitcast i8*%H to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%f,align 8
%N=load i8*,i8**%h,align 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
%Q=getelementptr inbounds i8,i8*%N,i64 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
%T=call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeVarInfoE_1032(i8*inreg%P,i8*inreg%S)
%U=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%V=call fastcc i8*%K(i8*inreg%U,i8*inreg%T)
%W=getelementptr inbounds i8,i8*%V,i64 16
%X=bitcast i8*%W to i8*(i8*,i8*)**
%Y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%X,align 8
%Z=bitcast i8*%V to i8**
%aa=load i8*,i8**%Z,align 8
%ab=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ac=call fastcc i8*%Y(i8*inreg%aa,i8*inreg%ab)
store i8*%ac,i8**%c,align 8
%ad=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=load i8*,i8**@_SMLZN12TypedCalcCon8TPPATVARE,align 8
%ak=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%aj)
%al=getelementptr inbounds i8,i8*%ak,i64 16
%am=bitcast i8*%al to i8*(i8*,i8*)**
%an=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%am,align 8
%ao=bitcast i8*%ak to i8**
%ap=load i8*,i8**%ao,align 8
%aq=load i8*,i8**%c,align 8
%ar=call fastcc i8*%an(i8*inreg%ap,i8*inreg%aq)
store i8*%ar,i8**%f,align 8
%as=load i8*,i8**%h,align 8
%at=getelementptr inbounds i8,i8*%as,i64 16
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
store i8*%av,i8**%g,align 8
%aw=call i8*@sml_alloc(i32 inreg 28)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177304,i32*%ay,align 4
%az=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=load i8*,i8**%e,align 8
%aC=getelementptr inbounds i8,i8*%aw,i64 8
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aF=getelementptr inbounds i8,i8*%aw,i64 16
%aG=bitcast i8*%aF to i8**
store i8*%aE,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aw,i64 24
%aI=bitcast i8*%aH to i32*
store i32 7,i32*%aI,align 4
%aJ=call fastcc i8*@_SMLFN12TypedCalcCon17TPPATEXNCONSTRUCTE(i8*inreg%aw)
%aK=getelementptr inbounds i8,i8*%aJ,i64 8
%aL=bitcast i8*%aK to i8**
%aM=load i8*,i8**%aL,align 8
store i8*%aM,i8**%f,align 8
%aN=getelementptr inbounds i8,i8*%aJ,i64 16
%aO=bitcast i8*%aN to i8**
%aP=load i8*,i8**%aO,align 8
%aQ=call fastcc i8*@_SMLFN12TypedCalcCon6varEnvE(i8*inreg%aP)
store i8*%aQ,i8**%g,align 8
%aR=bitcast i8**%h to i8***
%aS=load i8**,i8***%aR,align 8
%aT=load i8*,i8**%aS,align 8
store i8*%aT,i8**%j,align 8
%aU=getelementptr inbounds i8*,i8**%aS,i64 1
%aV=bitcast i8**%aU to i8***
%aW=load i8**,i8***%aV,align 8
%aX=load i8*,i8**%aW,align 8
store i8*%aX,i8**%i,align 8
%aY=call i8*@sml_alloc(i32 inreg 20)#0
%aZ=getelementptr inbounds i8,i8*%aY,i64 -4
%a0=bitcast i8*%aZ to i32*
store i32 1342177296,i32*%a0,align 4
%a1=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%a2=bitcast i8*%aY to i8**
store i8*%a1,i8**%a2,align 8
%a3=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a4=getelementptr inbounds i8,i8*%aY,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=getelementptr inbounds i8,i8*%aY,i64 16
%a7=bitcast i8*%a6 to i32*
store i32 3,i32*%a7,align 4
%a8=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%aY)
store i8*%a8,i8**%g,align 8
%a9=load i8*,i8**%h,align 8
%ba=getelementptr inbounds i8,i8*%a9,i64 8
%bb=bitcast i8*%ba to i8**
%bc=load i8*,i8**%bb,align 8
%bd=getelementptr inbounds i8,i8*%bc,i64 8
%be=bitcast i8*%bd to i8**
%bf=load i8*,i8**%be,align 8
store i8*%bf,i8**%h,align 8
%bg=call i8*@sml_alloc(i32 inreg 20)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177296,i32*%bi,align 4
%bj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bk=bitcast i8*%bg to i8**
store i8*%bj,i8**%bk,align 8
%bl=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bm=getelementptr inbounds i8,i8*%bg,i64 8
%bn=bitcast i8*%bm to i8**
store i8*%bl,i8**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bg,i64 16
%bp=bitcast i8*%bo to i32*
store i32 3,i32*%bp,align 4
%bq=load i8*,i8**%d,align 8
%br=load i8*,i8**%j,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%j,align 8
%bs=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%br,i8*inreg%bg,i8*inreg%bq)
store i8*%bs,i8**%d,align 8
%bt=call i8*@sml_alloc(i32 inreg 28)#0
%bu=getelementptr inbounds i8,i8*%bt,i64 -4
%bv=bitcast i8*%bu to i32*
store i32 1342177304,i32*%bv,align 4
store i8*%bt,i8**%g,align 8
%bw=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bx=bitcast i8*%bt to i8**
store i8*%bw,i8**%bx,align 8
%by=load i8*,i8**%d,align 8
%bz=getelementptr inbounds i8,i8*%bt,i64 8
%bA=bitcast i8*%bz to i8**
store i8*%by,i8**%bA,align 8
%bB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bC=getelementptr inbounds i8,i8*%bt,i64 16
%bD=bitcast i8*%bC to i8**
store i8*%bB,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bt,i64 24
%bF=bitcast i8*%bE to i32*
store i32 7,i32*%bF,align 4
%bG=call i8*@sml_alloc(i32 inreg 20)#0
%bH=getelementptr inbounds i8,i8*%bG,i64 -4
%bI=bitcast i8*%bH to i32*
store i32 1342177296,i32*%bI,align 4
store i8*%bG,i8**%e,align 8
%bJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bK=bitcast i8*%bG to i8**
store i8*%bJ,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bG,i64 8
%bM=bitcast i8*%bL to i8**
store i8*null,i8**%bM,align 8
%bN=getelementptr inbounds i8,i8*%bG,i64 16
%bO=bitcast i8*%bN to i32*
store i32 3,i32*%bO,align 4
%bP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bQ=getelementptr inbounds i8,i8*%bP,i64 8
%bR=bitcast i8*%bQ to i8**
%bS=load i8*,i8**%bR,align 8
store i8*%bS,i8**%c,align 8
%bT=call i8*@sml_alloc(i32 inreg 20)#0
%bU=getelementptr inbounds i8,i8*%bT,i64 -4
%bV=bitcast i8*%bU to i32*
store i32 1342177296,i32*%bV,align 4
store i8*%bT,i8**%d,align 8
%bW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bX=bitcast i8*%bT to i8**
store i8*%bW,i8**%bX,align 8
%bY=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bZ=getelementptr inbounds i8,i8*%bT,i64 8
%b0=bitcast i8*%bZ to i8**
store i8*%bY,i8**%b0,align 8
%b1=getelementptr inbounds i8,i8*%bT,i64 16
%b2=bitcast i8*%b1 to i32*
store i32 3,i32*%b2,align 4
%b3=call i8*@sml_alloc(i32 inreg 20)#0
%b4=getelementptr inbounds i8,i8*%b3,i64 -4
%b5=bitcast i8*%b4 to i32*
store i32 1342177296,i32*%b5,align 4
store i8*%b3,i8**%c,align 8
%b6=getelementptr inbounds i8,i8*%b3,i64 4
%b7=bitcast i8*%b6 to i32*
store i32 0,i32*%b7,align 1
%b8=bitcast i8*%b3 to i32*
store i32 6,i32*%b8,align 4
%b9=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ca=getelementptr inbounds i8,i8*%b3,i64 8
%cb=bitcast i8*%ca to i8**
store i8*%b9,i8**%cb,align 8
%cc=getelementptr inbounds i8,i8*%b3,i64 16
%cd=bitcast i8*%cc to i32*
store i32 2,i32*%cd,align 4
%ce=call i8*@sml_alloc(i32 inreg 20)#0
%cf=getelementptr inbounds i8,i8*%ce,i64 -4
%cg=bitcast i8*%cf to i32*
store i32 1342177296,i32*%cg,align 4
%ch=load i8*,i8**%g,align 8
%ci=bitcast i8*%ce to i8**
store i8*%ch,i8**%ci,align 8
%cj=load i8*,i8**%c,align 8
%ck=getelementptr inbounds i8,i8*%ce,i64 8
%cl=bitcast i8*%ck to i8**
store i8*%cj,i8**%cl,align 8
%cm=getelementptr inbounds i8,i8*%ce,i64 16
%cn=bitcast i8*%cm to i32*
store i32 3,i32*%cn,align 4
ret i8*%ce
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1224(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1226(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1260(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 16
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177296,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%o,i64 12
%s=bitcast i8*%r to i32*
store i32 0,i32*%s,align 1
%t=load i8*,i8**%b,align 8
%u=bitcast i8*%o to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i32*
store i32%k,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 1,i32*%y,align 4
%z=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Set3addE(i8*inreg%o)
ret i8*%z
}
define internal fastcc void@_SMLLLN17PolyTyElimination10analyzeExpE_1266(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=bitcast i8*%l to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call fastcc i8*@_SMLFN11TypesBasics5EFBTVE(i8*inreg%r)
store i8*%s,i8**%d,align 8
%t=bitcast i8**%e to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%f,align 8
%w=call fastcc i8*@_SMLFN14BoundTypeVarID3Map6foldliE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*%z(i8*inreg%B,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bX,i64 0,i32 2)to i8*))
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=load i8*,i8**@_SMLZN14BoundTypeVarID3Set5emptyE,align 8
%J=call fastcc i8*%F(i8*inreg%H,i8*inreg%I)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Q=getelementptr inbounds i8,i8*%P,i64 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
%T=call fastcc i8*%M(i8*inreg%O,i8*inreg%S)
store i8*%T,i8**%e,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=load i8*,i8**%d,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aa=getelementptr inbounds i8,i8*%U,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=call fastcc i32@_SMLFN14BoundTypeVarID3Set8isSubsetE(i8*inreg%U)
%af=icmp eq i32%ae,0
br i1%af,label%aO,label%ag
ag:
%ah=call i8*@sml_alloc(i32 inreg 20)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177296,i32*%aj,align 4
store i8*%ah,i8**%e,align 8
%ak=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ah,i64 8
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ah,i64 16
%aq=bitcast i8*%ap to i32*
store i32 3,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%c,align 8
%au=getelementptr inbounds i8,i8*%ar,i64 4
%av=bitcast i8*%au to i32*
store i32 0,i32*%av,align 1
%aw=bitcast i8*%ar to i32*
store i32 1,i32*%aw,align 4
%ax=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 8
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%ar,i64 16
%aB=bitcast i8*%aA to i32*
store i32 2,i32*%aB,align 4
%aC=call i8*@sml_alloc(i32 inreg 20)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177296,i32*%aE,align 4
%aF=getelementptr inbounds i8,i8*%aC,i64 12
%aG=bitcast i8*%aF to i32*
store i32 0,i32*%aG,align 1
%aH=load i8*,i8**%c,align 8
%aI=bitcast i8*%aC to i8**
store i8*%aH,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aC,i64 8
%aK=bitcast i8*%aJ to i32*
store i32%o,i32*%aK,align 4
%aL=getelementptr inbounds i8,i8*%aC,i64 16
%aM=bitcast i8*%aL to i32*
store i32 1,i32*%aM,align 4
%aN=load i8*,i8**%f,align 8
tail call fastcc void@_SMLLLN17PolyTyElimination10instanceOfE_648(i8*inreg%aN,i8*inreg%aC)
ret void
aO:
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
%aP=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%aP,i8**%c,align 8
%aQ=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bZ,i64 0,i32 2)to i8*))
store i8*%aQ,i8**%d,align 8
%aR=call i8*@sml_alloc(i32 inreg 28)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177304,i32*%aT,align 4
store i8*%aR,i8**%e,align 8
%aU=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aR,i64 8
%aX=bitcast i8*%aW to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%aX,align 8
%aY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aZ=getelementptr inbounds i8,i8*%aR,i64 16
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aR,i64 24
%a2=bitcast i8*%a1 to i32*
store i32 7,i32*%a2,align 4
%a3=call i8*@sml_alloc(i32 inreg 60)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177336,i32*%a5,align 4
%a6=getelementptr inbounds i8,i8*%a3,i64 56
%a7=bitcast i8*%a6 to i32*
store i32 1,i32*%a7,align 4
%a8=load i8*,i8**%e,align 8
%a9=bitcast i8*%a3 to i8**
store i8*%a8,i8**%a9,align 8
call void@sml_raise(i8*inreg%a3)#1
unreachable
}
define internal fastcc i8*@_SMLLL7matches_1276(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%c,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%b,%o]
%p=bitcast i8*%n to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%n,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%e,align 8
%A=load i8*,i8**%f,align 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
%D=getelementptr inbounds i8,i8*%A,i64 8
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
%G=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzePatE_1068(i8*inreg%C,i8*inreg%F)
%H=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%I=call fastcc i8*%x(i8*inreg%H,i8*inreg%G)
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=call fastcc i8*%L(i8*inreg%N,i8*inreg%O)
store i8*%P,i8**%c,align 8
%Q=call fastcc i8*@_SMLFN12TypedCalcCon7patVarsE(i8*inreg%P)
%R=call fastcc i8*@_SMLFN12TypedCalcCon6varEnvE(i8*inreg%Q)
store i8*%R,i8**%e,align 8
%S=bitcast i8**%f to i8***
%T=load i8**,i8***%S,align 8
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%h,align 8
%V=getelementptr inbounds i8*,i8**%T,i64 1
%W=bitcast i8**%V to i8***
%X=load i8**,i8***%W,align 8
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%g,align 8
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%Z)
store i8*%aj,i8**%e,align 8
%ak=load i8*,i8**%f,align 8
%al=getelementptr inbounds i8,i8*%ak,i64 8
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
%ao=getelementptr inbounds i8,i8*%an,i64 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%f,align 8
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ax=getelementptr inbounds i8,i8*%ar,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%ar,i64 16
%aA=bitcast i8*%az to i32*
store i32 3,i32*%aA,align 4
%aB=load i8*,i8**%d,align 8
%aC=load i8*,i8**%h,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%h,align 8
%aD=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%aC,i8*inreg%ar,i8*inreg%aB)
store i8*%aD,i8**%d,align 8
%aE=call i8*@sml_alloc(i32 inreg 20)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177296,i32*%aG,align 4
%aH=load i8*,i8**%c,align 8
%aI=bitcast i8*%aE to i8**
store i8*%aH,i8**%aI,align 8
%aJ=load i8*,i8**%d,align 8
%aK=getelementptr inbounds i8,i8*%aE,i64 8
%aL=bitcast i8*%aK to i8**
store i8*%aJ,i8**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aE,i64 16
%aN=bitcast i8*%aM to i32*
store i32 3,i32*%aN,align 4
ret i8*%aE
}
define internal fastcc i8*@_SMLLL8matchTys_1277(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLL8matchTys_1279(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*%s(i8*inreg%u,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b5,i64 0,i32 2)to i8*))
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%y(i8*inreg%A,i8*inreg%B)
store i8*%C,i8**%b,align 8
%D=load i8*,i8**%c,align 8
%E=getelementptr inbounds i8,i8*%D,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%c,align 8
%H=call i8*@sml_alloc(i32 inreg 20)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=load i8*,i8**%b,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=load i8*,i8**%c,align 8
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%H,i64 16
%Q=bitcast i8*%P to i32*
store i32 3,i32*%Q,align 4
ret i8*%H
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination16analyzeMatchListE_1281(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 20)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
%g=getelementptr inbounds i8,i8*%c,i64 4
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 1
store i32 6,i32*%d,align 4
%i=load i8*,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%c,i64 8
%k=bitcast i8*%j to i8**
store i8*%i,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%c,i64 16
%m=bitcast i8*%l to i32*
store i32 2,i32*%m,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLL8recbinds_1287(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%m,i64 24
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
store i8*null,i8**%d,align 8
%v=getelementptr inbounds i8,i8*%k,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeVarInfoE_1029(i8*inreg%u,i8*inreg%x,i8*inreg%p)
store i8*%y,i8**%d,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%d,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%c,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
ret i8*%z
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18analyzeFunRecbindsE_1288(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18analyzeFunRecbindsE_1290(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%n,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%c,align 8
%m=load i8*,i8**%f,align 8
br label%n
n:
%o=phi i8*[%m,%k],[%a,%p]
%q=phi i8*[%l,%k],[%b,%p]
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=bitcast i8*%o to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=getelementptr inbounds i8,i8*%q,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*@_SMLLLN17PolyTyElimination16analyzeMatchListE_1096(i8*inreg%u,i8*inreg%x,i8*inreg%A)
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%d,align 8
%E=getelementptr inbounds i8,i8*%B,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%e,align 8
%H=bitcast i8**%f to i8***
%I=load i8**,i8***%H,align 8
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%g,align 8
%K=load i8*,i8**%c,align 8
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%f,align 8
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
store i8*%O,i8**%h,align 8
%R=getelementptr inbounds i8,i8*%O,i64 4
%S=bitcast i8*%R to i32*
store i32 0,i32*%S,align 1
%T=bitcast i8*%O to i32*
store i32 6,i32*%T,align 4
%U=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%V=getelementptr inbounds i8,i8*%O,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%O,i64 16
%Y=bitcast i8*%X to i32*
store i32 2,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
call fastcc void@_SMLLLN17PolyTyElimination5equalE_928(i8*inreg%aj,i8*inreg%Z)
%ak=call i8*@sml_alloc(i32 inreg 20)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177296,i32*%am,align 4
%an=load i8*,i8**%c,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=load i8*,i8**%d,align 8
%aq=getelementptr inbounds i8,i8*%ak,i64 8
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%ak,i64 16
%at=bitcast i8*%as to i32*
store i32 3,i32*%at,align 4
ret i8*%ak
}
define internal fastcc i8*@_SMLLL8recbinds_1291(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=bitcast i8*%k to i8**
%q=load i8*,i8**%p,align 8
store i8*null,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%k,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%m,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeVarInfoE_1029(i8*inreg%q,i8*inreg%t,i8*inreg%w)
store i8*%x,i8**%c,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
%B=load i8*,i8**%d,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=load i8*,i8**%c,align 8
%E=getelementptr inbounds i8,i8*%y,i64 8
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%y,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15analyzeRecbindsE_1292(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15analyzeRecbindsE_1294(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%m,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
%l=load i8*,i8**%e,align 8
br label%m
m:
%n=phi i8*[%l,%j],[%a,%o]
%p=phi i8*[%k,%j],[%b,%o]
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%p,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
%v=bitcast i8*%n to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8,i8*%n,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%w,i8*inreg%z,i8*inreg%r)
store i8*%A,i8**%d,align 8
%B=bitcast i8**%e to i8***
%C=load i8**,i8***%B,align 8
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%g,align 8
%E=load i8*,i8**%c,align 8
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%e,align 8
%I=getelementptr inbounds i8,i8*%A,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%f,align 8
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
%O=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%L,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
call fastcc void@_SMLLLN17PolyTyElimination5equalE_928(i8*inreg%V,i8*inreg%L)
%W=call i8*@sml_alloc(i32 inreg 20)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177296,i32*%Y,align 4
%Z=load i8*,i8**%d,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=load i8*,i8**%c,align 8
%ac=getelementptr inbounds i8,i8*%W,i64 8
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%W,i64 16
%af=bitcast i8*%ae to i32*
store i32 3,i32*%af,align 4
ret i8*%W
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1304(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=bitcast i8*%k to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%o,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"personality i32(...)*@sml_personality{
s:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%q,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%f,align 8
br label%q
q:
%r=phi i8*[%p,%o],[%c,%s]
store i8*null,i8**%f,align 8
%t=icmp eq i8*%r,null
br i1%t,label%Jf,label%u
u:
%v=bitcast i8*%r to i32*
%w=load i32,i32*%v,align 4
switch i32%w,label%x[
i32 0,label%Wg
i32 2,label%US
i32 37,label%Oa
i32 3,label%Nh
i32 5,label%MO
i32 6,label%Ls
i32 8,label%Kh
i32 9,label%Jh
i32 14,label%Jf
i32 16,label%It
i32 17,label%GU
i32 15,label%Fu
i32 18,label%D1
i32 19,label%CH
i32 22,label%Ce
i32 21,label%Bt
i32 1,label%zR
i32 20,label%yD
i32 23,label%xl
i32 4,label%vy
i32 39,label%uG
i32 25,label%t5
i32 26,label%s8
i32 27,label%sx
i32 28,label%p8
i32 29,label%pn
i32 30,label%mP
i32 31,label%mi
i32 32,label%kF
i32 33,label%j3
i32 35,label%jh
i32 36,label%iU
i32 38,label%fP
i32 40,label%es
i32 24,label%dv
i32 7,label%cO
i32 10,label%b7
i32 11,label%bA
i32 12,label%a3
i32 13,label%am
i32 34,label%P
]
x:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%y=load i8*,i8**@_SMLZ5Match,align 8
store i8*%y,i8**%d,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@b4,i64 0,i32 2,i64 0),i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 60)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177336,i32*%K,align 4
%L=getelementptr inbounds i8,i8*%I,i64 56
%M=bitcast i8*%L to i32*
store i32 1,i32*%M,align 4
%N=load i8*,i8**%e,align 8
%O=bitcast i8*%I to i8**
store i8*%N,i8**%O,align 8
call void@sml_raise(i8*inreg%I)#1
unreachable
P:
%Q=getelementptr inbounds i8,i8*%r,i64 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
%V=getelementptr inbounds i8,i8*%S,i64 8
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%f,align 8
%Y=load i8*,i8**%d,align 8
%Z=load i8*,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%aa=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%Y,i8*inreg%Z,i8*inreg%U)
store i8*%aa,i8**%d,align 8
%ab=call i8*@sml_alloc(i32 inreg 20)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177296,i32*%ad,align 4
%ae=load i8*,i8**%d,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=load i8*,i8**%f,align 8
%ah=getelementptr inbounds i8,i8*%ab,i64 8
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ab,i64 16
%ak=bitcast i8*%aj to i32*
store i32 3,i32*%ak,align 4
%al=tail call fastcc i8*@_SMLFN12TypedCalcCon9TPREIFYTYE(i8*inreg%ab)
ret i8*%al
am:
%an=getelementptr inbounds i8,i8*%r,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%f,align 8
%as=getelementptr inbounds i8,i8*%ap,i64 8
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%g,align 8
%av=getelementptr inbounds i8,i8*%ap,i64 16
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
%ay=getelementptr inbounds i8,i8*%ap,i64 24
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%h,align 8
%aB=load i8*,i8**%d,align 8
%aC=load i8*,i8**%e,align 8
%aD=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%aB,i8*inreg%aC,i8*inreg%ax)
store i8*%aD,i8**%i,align 8
%aE=load i8*,i8**%d,align 8
%aF=load i8*,i8**%e,align 8
%aG=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aH=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%aE,i8*inreg%aF,i8*inreg%aG)
store i8*%aH,i8**%f,align 8
%aI=load i8*,i8**%d,align 8
%aJ=load i8*,i8**%e,align 8
%aK=load i8*,i8**%g,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
%aL=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%aI,i8*inreg%aJ,i8*inreg%aK)
store i8*%aL,i8**%d,align 8
%aM=call i8*@sml_alloc(i32 inreg 36)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177312,i32*%aO,align 4
%aP=load i8*,i8**%f,align 8
%aQ=bitcast i8*%aM to i8**
store i8*%aP,i8**%aQ,align 8
%aR=load i8*,i8**%d,align 8
%aS=getelementptr inbounds i8,i8*%aM,i64 8
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=load i8*,i8**%i,align 8
%aV=getelementptr inbounds i8,i8*%aM,i64 16
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=load i8*,i8**%h,align 8
%aY=getelementptr inbounds i8,i8*%aM,i64 24
%aZ=bitcast i8*%aY to i8**
store i8*%aX,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aM,i64 32
%a1=bitcast i8*%a0 to i32*
store i32 15,i32*%a1,align 4
%a2=tail call fastcc i8*@_SMLFN12TypedCalcCon13TPDYNAMICVIEWE(i8*inreg%aM)
ret i8*%a2
a3:
%a4=getelementptr inbounds i8,i8*%r,i64 8
%a5=bitcast i8*%a4 to i8**
%a6=load i8*,i8**%a5,align 8
%a7=bitcast i8*%a6 to i8**
%a8=load i8*,i8**%a7,align 8
%a9=getelementptr inbounds i8,i8*%a6,i64 8
%ba=bitcast i8*%a9 to i8**
%bb=load i8*,i8**%ba,align 8
store i8*%bb,i8**%f,align 8
%bc=getelementptr inbounds i8,i8*%a6,i64 16
%bd=bitcast i8*%bc to i8**
%be=load i8*,i8**%bd,align 8
store i8*%be,i8**%g,align 8
%bf=load i8*,i8**%d,align 8
%bg=load i8*,i8**%e,align 8
%bh=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%bf,i8*inreg%bg,i8*inreg%a8)
store i8*%bh,i8**%h,align 8
%bi=load i8*,i8**%d,align 8
%bj=load i8*,i8**%e,align 8
%bk=load i8*,i8**%g,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
%bl=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%bi,i8*inreg%bj,i8*inreg%bk)
store i8*%bl,i8**%d,align 8
%bm=call i8*@sml_alloc(i32 inreg 28)#0
%bn=getelementptr inbounds i8,i8*%bm,i64 -4
%bo=bitcast i8*%bn to i32*
store i32 1342177304,i32*%bo,align 4
%bp=load i8*,i8**%h,align 8
%bq=bitcast i8*%bm to i8**
store i8*%bp,i8**%bq,align 8
%br=load i8*,i8**%f,align 8
%bs=getelementptr inbounds i8,i8*%bm,i64 8
%bt=bitcast i8*%bs to i8**
store i8*%br,i8**%bt,align 8
%bu=load i8*,i8**%d,align 8
%bv=getelementptr inbounds i8,i8*%bm,i64 16
%bw=bitcast i8*%bv to i8**
store i8*%bu,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bm,i64 24
%by=bitcast i8*%bx to i32*
store i32 7,i32*%by,align 4
%bz=tail call fastcc i8*@_SMLFN12TypedCalcCon12TPDYNAMICTOPE(i8*inreg%bm)
ret i8*%bz
bA:
%bB=getelementptr inbounds i8,i8*%r,i64 8
%bC=bitcast i8*%bB to i8**
%bD=load i8*,i8**%bC,align 8
%bE=bitcast i8*%bD to i8**
%bF=load i8*,i8**%bE,align 8
%bG=getelementptr inbounds i8,i8*%bD,i64 8
%bH=bitcast i8*%bG to i8**
%bI=load i8*,i8**%bH,align 8
store i8*%bI,i8**%f,align 8
%bJ=getelementptr inbounds i8,i8*%bD,i64 16
%bK=bitcast i8*%bJ to i8**
%bL=load i8*,i8**%bK,align 8
store i8*%bL,i8**%g,align 8
%bM=load i8*,i8**%d,align 8
%bN=load i8*,i8**%e,align 8
%bO=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%bM,i8*inreg%bN,i8*inreg%bF)
store i8*%bO,i8**%h,align 8
%bP=load i8*,i8**%d,align 8
%bQ=load i8*,i8**%e,align 8
%bR=load i8*,i8**%g,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
%bS=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%bP,i8*inreg%bQ,i8*inreg%bR)
store i8*%bS,i8**%d,align 8
%bT=call i8*@sml_alloc(i32 inreg 28)#0
%bU=getelementptr inbounds i8,i8*%bT,i64 -4
%bV=bitcast i8*%bU to i32*
store i32 1342177304,i32*%bV,align 4
%bW=load i8*,i8**%h,align 8
%bX=bitcast i8*%bT to i8**
store i8*%bW,i8**%bX,align 8
%bY=load i8*,i8**%f,align 8
%bZ=getelementptr inbounds i8,i8*%bT,i64 8
%b0=bitcast i8*%bZ to i8**
store i8*%bY,i8**%b0,align 8
%b1=load i8*,i8**%d,align 8
%b2=getelementptr inbounds i8,i8*%bT,i64 16
%b3=bitcast i8*%b2 to i8**
store i8*%b1,i8**%b3,align 8
%b4=getelementptr inbounds i8,i8*%bT,i64 24
%b5=bitcast i8*%b4 to i32*
store i32 7,i32*%b5,align 4
%b6=tail call fastcc i8*@_SMLFN12TypedCalcCon13TPDYNAMICNULLE(i8*inreg%bT)
ret i8*%b6
b7:
%b8=getelementptr inbounds i8,i8*%r,i64 8
%b9=bitcast i8*%b8 to i8**
%ca=load i8*,i8**%b9,align 8
%cb=bitcast i8*%ca to i8**
%cc=load i8*,i8**%cb,align 8
store i8*%cc,i8**%f,align 8
%cd=getelementptr inbounds i8,i8*%ca,i64 8
%ce=bitcast i8*%cd to i8**
%cf=load i8*,i8**%ce,align 8
store i8*%cf,i8**%g,align 8
%cg=getelementptr inbounds i8,i8*%ca,i64 16
%ch=bitcast i8*%cg to i8**
%ci=load i8*,i8**%ch,align 8
%cj=getelementptr inbounds i8,i8*%ca,i64 24
%ck=bitcast i8*%cj to i8**
%cl=load i8*,i8**%ck,align 8
store i8*%cl,i8**%h,align 8
%cm=load i8*,i8**%d,align 8
%cn=load i8*,i8**%e,align 8
%co=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%cm,i8*inreg%cn,i8*inreg%ci)
store i8*%co,i8**%i,align 8
%cp=load i8*,i8**%d,align 8
%cq=load i8*,i8**%e,align 8
%cr=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cs=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%cp,i8*inreg%cq,i8*inreg%cr)
store i8*%cs,i8**%f,align 8
%ct=load i8*,i8**%d,align 8
%cu=load i8*,i8**%e,align 8
%cv=load i8*,i8**%g,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
%cw=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%ct,i8*inreg%cu,i8*inreg%cv)
store i8*%cw,i8**%d,align 8
%cx=call i8*@sml_alloc(i32 inreg 36)#0
%cy=getelementptr inbounds i8,i8*%cx,i64 -4
%cz=bitcast i8*%cy to i32*
store i32 1342177312,i32*%cz,align 4
%cA=load i8*,i8**%f,align 8
%cB=bitcast i8*%cx to i8**
store i8*%cA,i8**%cB,align 8
%cC=load i8*,i8**%d,align 8
%cD=getelementptr inbounds i8,i8*%cx,i64 8
%cE=bitcast i8*%cD to i8**
store i8*%cC,i8**%cE,align 8
%cF=load i8*,i8**%i,align 8
%cG=getelementptr inbounds i8,i8*%cx,i64 16
%cH=bitcast i8*%cG to i8**
store i8*%cF,i8**%cH,align 8
%cI=load i8*,i8**%h,align 8
%cJ=getelementptr inbounds i8,i8*%cx,i64 24
%cK=bitcast i8*%cJ to i8**
store i8*%cI,i8**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cx,i64 32
%cM=bitcast i8*%cL to i32*
store i32 15,i32*%cM,align 4
%cN=tail call fastcc i8*@_SMLFN12TypedCalcCon11TPDYNAMICISE(i8*inreg%cx)
ret i8*%cN
cO:
%cP=getelementptr inbounds i8,i8*%r,i64 8
%cQ=bitcast i8*%cP to i8**
%cR=load i8*,i8**%cQ,align 8
%cS=bitcast i8*%cR to i8**
%cT=load i8*,i8**%cS,align 8
store i8*%cT,i8**%f,align 8
%cU=getelementptr inbounds i8,i8*%cR,i64 8
%cV=bitcast i8*%cU to i8**
%cW=load i8*,i8**%cV,align 8
store i8*%cW,i8**%g,align 8
%cX=getelementptr inbounds i8,i8*%cR,i64 16
%cY=bitcast i8*%cX to i8**
%cZ=load i8*,i8**%cY,align 8
%c0=getelementptr inbounds i8,i8*%cR,i64 24
%c1=bitcast i8*%c0 to i8**
%c2=load i8*,i8**%c1,align 8
store i8*%c2,i8**%h,align 8
%c3=load i8*,i8**%d,align 8
%c4=load i8*,i8**%e,align 8
%c5=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%c3,i8*inreg%c4,i8*inreg%cZ)
store i8*%c5,i8**%i,align 8
%c6=load i8*,i8**%d,align 8
%c7=load i8*,i8**%e,align 8
%c8=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%c9=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%c6,i8*inreg%c7,i8*inreg%c8)
store i8*%c9,i8**%f,align 8
%da=load i8*,i8**%d,align 8
%db=load i8*,i8**%e,align 8
%dc=load i8*,i8**%g,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
%dd=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%da,i8*inreg%db,i8*inreg%dc)
store i8*%dd,i8**%d,align 8
%de=call i8*@sml_alloc(i32 inreg 36)#0
%df=getelementptr inbounds i8,i8*%de,i64 -4
%dg=bitcast i8*%df to i32*
store i32 1342177312,i32*%dg,align 4
%dh=load i8*,i8**%f,align 8
%di=bitcast i8*%de to i8**
store i8*%dh,i8**%di,align 8
%dj=load i8*,i8**%d,align 8
%dk=getelementptr inbounds i8,i8*%de,i64 8
%dl=bitcast i8*%dk to i8**
store i8*%dj,i8**%dl,align 8
%dm=load i8*,i8**%i,align 8
%dn=getelementptr inbounds i8,i8*%de,i64 16
%do=bitcast i8*%dn to i8**
store i8*%dm,i8**%do,align 8
%dp=load i8*,i8**%h,align 8
%dq=getelementptr inbounds i8,i8*%de,i64 24
%dr=bitcast i8*%dq to i8**
store i8*%dp,i8**%dr,align 8
%ds=getelementptr inbounds i8,i8*%de,i64 32
%dt=bitcast i8*%ds to i32*
store i32 15,i32*%dt,align 4
%du=tail call fastcc i8*@_SMLFN12TypedCalcCon9TPDYNAMICE(i8*inreg%de)
ret i8*%du
dv:
%dw=getelementptr inbounds i8,i8*%r,i64 8
%dx=bitcast i8*%dw to i8**
%dy=load i8*,i8**%dx,align 8
%dz=bitcast i8*%dy to i8**
%dA=load i8*,i8**%dz,align 8
%dB=bitcast i8*%dA to i8**
%dC=load i8*,i8**%dB,align 8
%dD=getelementptr inbounds i8,i8*%dA,i64 8
%dE=bitcast i8*%dD to i8**
%dF=load i8*,i8**%dE,align 8
store i8*%dF,i8**%f,align 8
%dG=getelementptr inbounds i8,i8*%dy,i64 16
%dH=bitcast i8*%dG to i32*
%dI=load i32,i32*%dH,align 4
%dJ=getelementptr inbounds i8,i8*%dy,i64 24
%dK=bitcast i8*%dJ to i8**
%dL=load i8*,i8**%dK,align 8
store i8*%dL,i8**%g,align 8
%dM=getelementptr inbounds i8,i8*%dy,i64 32
%dN=bitcast i8*%dM to i8**
%dO=load i8*,i8**%dN,align 8
store i8*%dO,i8**%h,align 8
%dP=load i8*,i8**%d,align 8
%dQ=load i8*,i8**%e,align 8
%dR=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%dP,i8*inreg%dQ,i8*inreg%dC)
store i8*%dR,i8**%i,align 8
%dS=load i8*,i8**%d,align 8
%dT=load i8*,i8**%e,align 8
%dU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dV=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%dS,i8*inreg%dT,i8*inreg%dU)
store i8*%dV,i8**%f,align 8
%dW=call i8*@sml_alloc(i32 inreg 20)#0
%dX=getelementptr inbounds i8,i8*%dW,i64 -4
%dY=bitcast i8*%dX to i32*
store i32 1342177296,i32*%dY,align 4
store i8*%dW,i8**%j,align 8
%dZ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%d0=bitcast i8*%dW to i8**
store i8*%dZ,i8**%d0,align 8
%d1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%d2=getelementptr inbounds i8,i8*%dW,i64 8
%d3=bitcast i8*%d2 to i8**
store i8*%d1,i8**%d3,align 8
%d4=getelementptr inbounds i8,i8*%dW,i64 16
%d5=bitcast i8*%d4 to i32*
store i32 3,i32*%d5,align 4
%d6=load i8*,i8**%d,align 8
%d7=load i8*,i8**%e,align 8
%d8=load i8*,i8**%h,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%h,align 8
%d9=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%d6,i8*inreg%d7,i8*inreg%d8)
store i8*%d9,i8**%d,align 8
%ea=call i8*@sml_alloc(i32 inreg 36)#0
%eb=getelementptr inbounds i8,i8*%ea,i64 -4
%ec=bitcast i8*%eb to i32*
store i32 1342177312,i32*%ec,align 4
%ed=getelementptr inbounds i8,i8*%ea,i64 12
%ee=bitcast i8*%ed to i32*
store i32 0,i32*%ee,align 1
%ef=load i8*,i8**%j,align 8
%eg=bitcast i8*%ea to i8**
store i8*%ef,i8**%eg,align 8
%eh=getelementptr inbounds i8,i8*%ea,i64 8
%ei=bitcast i8*%eh to i32*
store i32%dI,i32*%ei,align 4
%ej=load i8*,i8**%g,align 8
%ek=getelementptr inbounds i8,i8*%ea,i64 16
%el=bitcast i8*%ek to i8**
store i8*%ej,i8**%el,align 8
%em=load i8*,i8**%d,align 8
%en=getelementptr inbounds i8,i8*%ea,i64 24
%eo=bitcast i8*%en to i8**
store i8*%em,i8**%eo,align 8
%ep=getelementptr inbounds i8,i8*%ea,i64 32
%eq=bitcast i8*%ep to i32*
store i32 13,i32*%eq,align 4
%er=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPJOINE(i8*inreg%ea)
ret i8*%er
es:
%et=getelementptr inbounds i8,i8*%r,i64 8
%eu=bitcast i8*%et to i8**
%ev=load i8*,i8**%eu,align 8
store i8*%ev,i8**%d,align 8
%ew=call fastcc i8*@_SMLFN5VarID3Map4findE(i32 inreg 1,i32 inreg 8)
%ex=getelementptr inbounds i8,i8*%ew,i64 16
%ey=bitcast i8*%ex to i8*(i8*,i8*)**
%ez=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ey,align 8
%eA=bitcast i8*%ew to i8**
%eB=load i8*,i8**%eA,align 8
store i8*%eB,i8**%f,align 8
%eC=bitcast i8**%e to i8***
%eD=load i8**,i8***%eC,align 8
%eE=load i8*,i8**%eD,align 8
%eF=getelementptr inbounds i8,i8*%eE,i64 32
%eG=bitcast i8*%eF to i8**
%eH=load i8*,i8**%eG,align 8
store i8*%eH,i8**%e,align 8
%eI=bitcast i8**%d to i32**
%eJ=load i32*,i32**%eI,align 8
%eK=load i32,i32*%eJ,align 4
%eL=call i8*@sml_alloc(i32 inreg 20)#0
%eM=getelementptr inbounds i8,i8*%eL,i64 -4
%eN=bitcast i8*%eM to i32*
store i32 1342177296,i32*%eN,align 4
%eO=getelementptr inbounds i8,i8*%eL,i64 12
%eP=bitcast i8*%eO to i32*
store i32 0,i32*%eP,align 1
%eQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%eR=bitcast i8*%eL to i8**
store i8*%eQ,i8**%eR,align 8
%eS=getelementptr inbounds i8,i8*%eL,i64 8
%eT=bitcast i8*%eS to i32*
store i32%eK,i32*%eT,align 4
%eU=getelementptr inbounds i8,i8*%eL,i64 16
%eV=bitcast i8*%eU to i32*
store i32 1,i32*%eV,align 4
%eW=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eX=call fastcc i8*%ez(i8*inreg%eW,i8*inreg%eL)
%eY=icmp eq i8*%eX,null
br i1%eY,label%eZ,label%fl
eZ:
%e0=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%e0,i8**%d,align 8
%e1=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b3,i64 0,i32 2)to i8*))
store i8*%e1,i8**%e,align 8
%e2=call i8*@sml_alloc(i32 inreg 28)#0
%e3=getelementptr inbounds i8,i8*%e2,i64 -4
%e4=bitcast i8*%e3 to i32*
store i32 1342177304,i32*%e4,align 4
store i8*%e2,i8**%f,align 8
%e5=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%e6=bitcast i8*%e2 to i8**
store i8*%e5,i8**%e6,align 8
%e7=getelementptr inbounds i8,i8*%e2,i64 8
%e8=bitcast i8*%e7 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%e8,align 8
%e9=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fa=getelementptr inbounds i8,i8*%e2,i64 16
%fb=bitcast i8*%fa to i8**
store i8*%e9,i8**%fb,align 8
%fc=getelementptr inbounds i8,i8*%e2,i64 24
%fd=bitcast i8*%fc to i32*
store i32 7,i32*%fd,align 4
%fe=call i8*@sml_alloc(i32 inreg 60)#0
%ff=getelementptr inbounds i8,i8*%fe,i64 -4
%fg=bitcast i8*%ff to i32*
store i32 1342177336,i32*%fg,align 4
%fh=getelementptr inbounds i8,i8*%fe,i64 56
%fi=bitcast i8*%fh to i32*
store i32 1,i32*%fi,align 4
%fj=load i8*,i8**%f,align 8
%fk=bitcast i8*%fe to i8**
store i8*%fj,i8**%fk,align 8
call void@sml_raise(i8*inreg%fe)#1
unreachable
fl:
%fm=bitcast i8*%eX to i8**
%fn=load i8*,i8**%fm,align 8
%fo=getelementptr inbounds i8,i8*%fn,i64 16
%fp=bitcast i8*%fo to i8**
%fq=load i8*,i8**%fp,align 8
store i8*%fq,i8**%e,align 8
%fr=load i8*,i8**%d,align 8
%fs=bitcast i8*%fr to i32*
%ft=load i32,i32*%fs,align 4
%fu=getelementptr inbounds i8,i8*%fr,i64 4
%fv=bitcast i8*%fu to i32*
%fw=load i32,i32*%fv,align 4
%fx=getelementptr inbounds i8,i8*%fr,i64 8
%fy=bitcast i8*%fx to i8**
%fz=load i8*,i8**%fy,align 8
store i8*%fz,i8**%d,align 8
%fA=call i8*@sml_alloc(i32 inreg 28)#0
%fB=bitcast i8*%fA to i32*
%fC=getelementptr inbounds i8,i8*%fA,i64 -4
%fD=bitcast i8*%fC to i32*
store i32 1342177304,i32*%fD,align 4
store i32%ft,i32*%fB,align 4
%fE=getelementptr inbounds i8,i8*%fA,i64 4
%fF=bitcast i8*%fE to i32*
store i32%fw,i32*%fF,align 4
%fG=load i8*,i8**%d,align 8
%fH=getelementptr inbounds i8,i8*%fA,i64 8
%fI=bitcast i8*%fH to i8**
store i8*%fG,i8**%fI,align 8
%fJ=load i8*,i8**%e,align 8
%fK=getelementptr inbounds i8,i8*%fA,i64 16
%fL=bitcast i8*%fK to i8**
store i8*%fJ,i8**%fL,align 8
%fM=getelementptr inbounds i8,i8*%fA,i64 24
%fN=bitcast i8*%fM to i32*
store i32 6,i32*%fN,align 4
%fO=tail call fastcc i8*@_SMLFN12TypedCalcCon5TPVARE(i8*inreg%fA)
ret i8*%fO
fP:
%fQ=getelementptr inbounds i8,i8*%r,i64 8
%fR=bitcast i8*%fQ to i8**
%fS=load i8*,i8**%fR,align 8
%fT=bitcast i8*%fS to i8**
%fU=load i8*,i8**%fT,align 8
%fV=getelementptr inbounds i8,i8*%fS,i64 16
%fW=bitcast i8*%fV to i8**
%fX=load i8*,i8**%fW,align 8
store i8*%fX,i8**%f,align 8
%fY=getelementptr inbounds i8,i8*%fS,i64 24
%fZ=bitcast i8*%fY to i8**
%f0=load i8*,i8**%fZ,align 8
store i8*%f0,i8**%g,align 8
%f1=load i8*,i8**%d,align 8
%f2=load i8*,i8**%e,align 8
%f3=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%f1,i8*inreg%f2,i8*inreg%fU)
store i8*%f3,i8**%h,align 8
%f4=getelementptr inbounds i8,i8*%f3,i64 8
%f5=bitcast i8*%f4 to i8**
%f6=load i8*,i8**%f5,align 8
store i8*%f6,i8**%i,align 8
%f7=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%f8=getelementptr inbounds i8,i8*%f7,i64 16
%f9=bitcast i8*%f8 to i8*(i8*,i8*)**
%ga=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%f9,align 8
%gb=bitcast i8*%f7 to i8**
%gc=load i8*,i8**%gb,align 8
store i8*%gc,i8**%j,align 8
%gd=load i8*,i8**%d,align 8
%ge=load i8*,i8**%e,align 8
%gf=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1027(i8*inreg%gd,i8*inreg%ge)
%gg=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%gh=call fastcc i8*%ga(i8*inreg%gg,i8*inreg%gf)
%gi=getelementptr inbounds i8,i8*%gh,i64 16
%gj=bitcast i8*%gi to i8*(i8*,i8*)**
%gk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gj,align 8
%gl=bitcast i8*%gh to i8**
%gm=load i8*,i8**%gl,align 8
%gn=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%go=call fastcc i8*%gk(i8*inreg%gm,i8*inreg%gn)
store i8*%go,i8**%f,align 8
%gp=bitcast i8**%e to i8****
%gq=load i8***,i8****%gp,align 8
%gr=load i8**,i8***%gq,align 8
%gs=load i8*,i8**%gr,align 8
store i8*%gs,i8**%e,align 8
%gt=icmp eq i8*%go,null
br i1%gt,label%gu,label%gv
gu:
store i8*null,i8**%d,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%e,align 8
br label%iF
gv:
%gw=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%gx=call fastcc i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg%gw)
%gy=icmp eq i8*%gx,null
br i1%gy,label%gD,label%gz
gz:
%gA=bitcast i8*%gx to i32*
%gB=load i32,i32*%gA,align 4
%gC=icmp eq i32%gB,7
br i1%gC,label%gZ,label%gD
gD:
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%e,align 8
%gE=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%gE,i8**%d,align 8
%gF=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bW,i64 0,i32 2)to i8*))
store i8*%gF,i8**%e,align 8
%gG=call i8*@sml_alloc(i32 inreg 28)#0
%gH=getelementptr inbounds i8,i8*%gG,i64 -4
%gI=bitcast i8*%gH to i32*
store i32 1342177304,i32*%gI,align 4
store i8*%gG,i8**%f,align 8
%gJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gK=bitcast i8*%gG to i8**
store i8*%gJ,i8**%gK,align 8
%gL=getelementptr inbounds i8,i8*%gG,i64 8
%gM=bitcast i8*%gL to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%gM,align 8
%gN=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%gO=getelementptr inbounds i8,i8*%gG,i64 16
%gP=bitcast i8*%gO to i8**
store i8*%gN,i8**%gP,align 8
%gQ=getelementptr inbounds i8,i8*%gG,i64 24
%gR=bitcast i8*%gQ to i32*
store i32 7,i32*%gR,align 4
%gS=call i8*@sml_alloc(i32 inreg 60)#0
%gT=getelementptr inbounds i8,i8*%gS,i64 -4
%gU=bitcast i8*%gT to i32*
store i32 1342177336,i32*%gU,align 4
%gV=getelementptr inbounds i8,i8*%gS,i64 56
%gW=bitcast i8*%gV to i32*
store i32 1,i32*%gW,align 4
%gX=load i8*,i8**%f,align 8
%gY=bitcast i8*%gS to i8**
store i8*%gX,i8**%gY,align 8
call void@sml_raise(i8*inreg%gS)#1
unreachable
gZ:
%g0=getelementptr inbounds i8,i8*%gx,i64 8
%g1=bitcast i8*%g0 to i8**
%g2=load i8*,i8**%g1,align 8
%g3=getelementptr inbounds i8,i8*%g2,i64 8
%g4=bitcast i8*%g3 to i8**
%g5=load i8*,i8**%g4,align 8
store i8*%g5,i8**%i,align 8
%g6=invoke fastcc i8*@_SMLFN8ListPair5appEqE(i32 inreg 0,i32 inreg 4,i32 inreg 1,i32 inreg 8)
to label%g7 unwind label%h2
g7:
%g8=getelementptr inbounds i8,i8*%g6,i64 16
%g9=bitcast i8*%g8 to i8*(i8*,i8*)**
%ha=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%g9,align 8
%hb=bitcast i8*%g6 to i8**
%hc=load i8*,i8**%hb,align 8
store i8*%hc,i8**%j,align 8
%hd=call i8*@sml_alloc(i32 inreg 20)#0
%he=getelementptr inbounds i8,i8*%hd,i64 -4
%hf=bitcast i8*%he to i32*
store i32 1342177296,i32*%hf,align 4
store i8*%hd,i8**%k,align 8
%hg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hh=bitcast i8*%hd to i8**
store i8*%hg,i8**%hh,align 8
%hi=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hj=getelementptr inbounds i8,i8*%hd,i64 8
%hk=bitcast i8*%hj to i8**
store i8*%hi,i8**%hk,align 8
%hl=getelementptr inbounds i8,i8*%hd,i64 16
%hm=bitcast i8*%hl to i32*
store i32 3,i32*%hm,align 4
%hn=call i8*@sml_alloc(i32 inreg 28)#0
%ho=getelementptr inbounds i8,i8*%hn,i64 -4
%hp=bitcast i8*%ho to i32*
store i32 1342177304,i32*%hp,align 4
%hq=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%hr=bitcast i8*%hn to i8**
store i8*%hq,i8**%hr,align 8
%hs=getelementptr inbounds i8,i8*%hn,i64 8
%ht=bitcast i8*%hs to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1266 to void(...)*),void(...)**%ht,align 8
%hu=getelementptr inbounds i8,i8*%hn,i64 16
%hv=bitcast i8*%hu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1725 to void(...)*),void(...)**%hv,align 8
%hw=getelementptr inbounds i8,i8*%hn,i64 24
%hx=bitcast i8*%hw to i32*
store i32 -2147483647,i32*%hx,align 4
%hy=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%hz=invoke fastcc i8*%ha(i8*inreg%hy,i8*inreg%hn)
to label%hA unwind label%h2
hA:
%hB=getelementptr inbounds i8,i8*%hz,i64 16
%hC=bitcast i8*%hB to i8*(i8*,i8*)**
%hD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hC,align 8
%hE=bitcast i8*%hz to i8**
%hF=load i8*,i8**%hE,align 8
store i8*%hF,i8**%e,align 8
%hG=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map8listKeysE(i32 inreg 1,i32 inreg 8)
to label%hH unwind label%h2
hH:
%hI=getelementptr inbounds i8,i8*%hG,i64 16
%hJ=bitcast i8*%hI to i8*(i8*,i8*)**
%hK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hJ,align 8
%hL=bitcast i8*%hG to i8**
%hM=load i8*,i8**%hL,align 8
%hN=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%hO=invoke fastcc i8*%hK(i8*inreg%hM,i8*inreg%hN)
to label%hP unwind label%h2
hP:
store i8*%hO,i8**%d,align 8
%hQ=call i8*@sml_alloc(i32 inreg 20)#0
%hR=getelementptr inbounds i8,i8*%hQ,i64 -4
%hS=bitcast i8*%hR to i32*
store i32 1342177296,i32*%hS,align 4
%hT=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hU=bitcast i8*%hQ to i8**
store i8*%hT,i8**%hU,align 8
%hV=load i8*,i8**%f,align 8
%hW=getelementptr inbounds i8,i8*%hQ,i64 8
%hX=bitcast i8*%hW to i8**
store i8*%hV,i8**%hX,align 8
%hY=getelementptr inbounds i8,i8*%hQ,i64 16
%hZ=bitcast i8*%hY to i32*
store i32 3,i32*%hZ,align 4
%h0=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%h1=invoke fastcc i8*%hD(i8*inreg%h0,i8*inreg%hQ)
to label%iF unwind label%h2
h2:
%h3=landingpad{i8*,i8*}
catch i8*null
%h4=extractvalue{i8*,i8*}%h3,1
%h5=bitcast i8*%h4 to i8**
%h6=load i8*,i8**%h5,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%e,align 8
store i8*%h6,i8**%d,align 8
%h7=bitcast i8*%h6 to i8**
%h8=load i8*,i8**%h7,align 8
%h9=load i8*,i8**@_SMLZN8ListPair14UnequalLengthsE,align 8
%ia=icmp eq i8*%h8,%h9
br i1%ia,label%ib,label%ix
ib:
%ic=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%ic,i8**%d,align 8
%id=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b1,i64 0,i32 2)to i8*))
store i8*%id,i8**%e,align 8
%ie=call i8*@sml_alloc(i32 inreg 28)#0
%if=getelementptr inbounds i8,i8*%ie,i64 -4
%ig=bitcast i8*%if to i32*
store i32 1342177304,i32*%ig,align 4
store i8*%ie,i8**%f,align 8
%ih=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ii=bitcast i8*%ie to i8**
store i8*%ih,i8**%ii,align 8
%ij=getelementptr inbounds i8,i8*%ie,i64 8
%ik=bitcast i8*%ij to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%ik,align 8
%il=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%im=getelementptr inbounds i8,i8*%ie,i64 16
%in=bitcast i8*%im to i8**
store i8*%il,i8**%in,align 8
%io=getelementptr inbounds i8,i8*%ie,i64 24
%ip=bitcast i8*%io to i32*
store i32 7,i32*%ip,align 4
%iq=call i8*@sml_alloc(i32 inreg 60)#0
%ir=getelementptr inbounds i8,i8*%iq,i64 -4
%is=bitcast i8*%ir to i32*
store i32 1342177336,i32*%is,align 4
%it=getelementptr inbounds i8,i8*%iq,i64 56
%iu=bitcast i8*%it to i32*
store i32 1,i32*%iu,align 4
%iv=load i8*,i8**%f,align 8
%iw=bitcast i8*%iq to i8**
store i8*%iv,i8**%iw,align 8
call void@sml_raise(i8*inreg%iq)#1
unreachable
ix:
%iy=call i8*@sml_alloc(i32 inreg 60)#0
%iz=getelementptr inbounds i8,i8*%iy,i64 -4
%iA=bitcast i8*%iz to i32*
store i32 1342177336,i32*%iA,align 4
%iB=getelementptr inbounds i8,i8*%iy,i64 56
%iC=bitcast i8*%iB to i32*
store i32 1,i32*%iC,align 4
%iD=load i8*,i8**%d,align 8
%iE=bitcast i8*%iy to i8**
store i8*%iD,i8**%iE,align 8
call void@sml_raise(i8*inreg%iy)#1
unreachable
iF:
%iG=call i8*@sml_alloc(i32 inreg 28)#0
%iH=getelementptr inbounds i8,i8*%iG,i64 -4
%iI=bitcast i8*%iH to i32*
store i32 1342177304,i32*%iI,align 4
%iJ=load i8*,i8**%h,align 8
%iK=bitcast i8*%iG to i8**
store i8*%iJ,i8**%iK,align 8
%iL=load i8*,i8**%f,align 8
%iM=getelementptr inbounds i8,i8*%iG,i64 8
%iN=bitcast i8*%iM to i8**
store i8*%iL,i8**%iN,align 8
%iO=load i8*,i8**%g,align 8
%iP=getelementptr inbounds i8,i8*%iG,i64 16
%iQ=bitcast i8*%iP to i8**
store i8*%iO,i8**%iQ,align 8
%iR=getelementptr inbounds i8,i8*%iG,i64 24
%iS=bitcast i8*%iR to i32*
store i32 7,i32*%iS,align 4
%iT=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPTAPPE(i8*inreg%iG)
ret i8*%iT
iU:
%iV=getelementptr inbounds i8,i8*%r,i64 8
%iW=bitcast i8*%iV to i8**
%iX=load i8*,i8**%iW,align 8
%iY=bitcast i8*%iX to i8**
%iZ=load i8*,i8**%iY,align 8
%i0=getelementptr inbounds i8,i8*%iX,i64 8
%i1=bitcast i8*%i0 to i8**
%i2=load i8*,i8**%i1,align 8
store i8*%i2,i8**%f,align 8
%i3=load i8*,i8**%d,align 8
%i4=load i8*,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%i5=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%i3,i8*inreg%i4,i8*inreg%iZ)
store i8*%i5,i8**%d,align 8
%i6=call i8*@sml_alloc(i32 inreg 20)#0
%i7=getelementptr inbounds i8,i8*%i6,i64 -4
%i8=bitcast i8*%i7 to i32*
store i32 1342177296,i32*%i8,align 4
%i9=load i8*,i8**%d,align 8
%ja=bitcast i8*%i6 to i8**
store i8*%i9,i8**%ja,align 8
%jb=load i8*,i8**%f,align 8
%jc=getelementptr inbounds i8,i8*%i6,i64 8
%jd=bitcast i8*%jc to i8**
store i8*%jb,i8**%jd,align 8
%je=getelementptr inbounds i8,i8*%i6,i64 16
%jf=bitcast i8*%je to i32*
store i32 3,i32*%jf,align 4
%jg=tail call fastcc i8*@_SMLFN12TypedCalcCon8TPSIZEOFE(i8*inreg%i6)
ret i8*%jg
jh:
%ji=getelementptr inbounds i8,i8*%r,i64 8
%jj=bitcast i8*%ji to i8**
%jk=load i8*,i8**%jj,align 8
%jl=bitcast i8*%jk to i8**
%jm=load i8*,i8**%jl,align 8
store i8*%jm,i8**%f,align 8
%jn=getelementptr inbounds i8,i8*%jk,i64 16
%jo=bitcast i8*%jn to i8**
%jp=load i8*,i8**%jo,align 8
store i8*%jp,i8**%g,align 8
%jq=getelementptr inbounds i8,i8*%jk,i64 24
%jr=bitcast i8*%jq to i8**
%js=load i8*,i8**%jr,align 8
store i8*%js,i8**%h,align 8
%jt=bitcast i8**%e to i8****
%ju=load i8***,i8****%jt,align 8
%jv=load i8**,i8***%ju,align 8
%jw=load i8*,i8**%jv,align 8
store i8*%jw,i8**%i,align 8
%jx=call i8*@sml_alloc(i32 inreg 12)#0
%jy=getelementptr inbounds i8,i8*%jx,i64 -4
%jz=bitcast i8*%jy to i32*
store i32 1342177288,i32*%jz,align 4
%jA=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%jB=bitcast i8*%jx to i8**
store i8*%jA,i8**%jB,align 8
%jC=getelementptr inbounds i8,i8*%jx,i64 8
%jD=bitcast i8*%jC to i32*
store i32 1,i32*%jD,align 4
%jE=call fastcc i8*@_SMLFN12TypedCalcCon8TPSELECTE(i8*inreg%jx)
%jF=getelementptr inbounds i8,i8*%jE,i64 16
%jG=bitcast i8*%jF to i8*(i8*,i8*)**
%jH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jG,align 8
%jI=bitcast i8*%jE to i8**
%jJ=load i8*,i8**%jI,align 8
store i8*%jJ,i8**%i,align 8
%jK=load i8*,i8**%d,align 8
%jL=load i8*,i8**%e,align 8
%jM=load i8*,i8**%f,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%jN=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%jK,i8*inreg%jL,i8*inreg%jM)
store i8*%jN,i8**%d,align 8
%jO=call i8*@sml_alloc(i32 inreg 28)#0
%jP=getelementptr inbounds i8,i8*%jO,i64 -4
%jQ=bitcast i8*%jP to i32*
store i32 1342177304,i32*%jQ,align 4
%jR=load i8*,i8**%d,align 8
%jS=bitcast i8*%jO to i8**
store i8*%jR,i8**%jS,align 8
%jT=load i8*,i8**%g,align 8
%jU=getelementptr inbounds i8,i8*%jO,i64 8
%jV=bitcast i8*%jU to i8**
store i8*%jT,i8**%jV,align 8
%jW=load i8*,i8**%h,align 8
%jX=getelementptr inbounds i8,i8*%jO,i64 16
%jY=bitcast i8*%jX to i8**
store i8*%jW,i8**%jY,align 8
%jZ=getelementptr inbounds i8,i8*%jO,i64 24
%j0=bitcast i8*%jZ to i32*
store i32 7,i32*%j0,align 4
%j1=load i8*,i8**%i,align 8
%j2=tail call fastcc i8*%jH(i8*inreg%j1,i8*inreg%jO)
ret i8*%j2
j3:
%j4=getelementptr inbounds i8,i8*%r,i64 8
%j5=bitcast i8*%j4 to i8**
%j6=load i8*,i8**%j5,align 8
%j7=bitcast i8*%j6 to i8**
%j8=load i8*,i8**%j7,align 8
store i8*%j8,i8**%f,align 8
%j9=getelementptr inbounds i8,i8*%j6,i64 8
%ka=bitcast i8*%j9 to i8**
%kb=load i8*,i8**%ka,align 8
store i8*%kb,i8**%g,align 8
%kc=call fastcc i8*@_SMLFN11RecordLabel3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%kd=getelementptr inbounds i8,i8*%kc,i64 16
%ke=bitcast i8*%kd to i8*(i8*,i8*)**
%kf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ke,align 8
%kg=bitcast i8*%kc to i8**
%kh=load i8*,i8**%kg,align 8
store i8*%kh,i8**%h,align 8
%ki=load i8*,i8**%d,align 8
%kj=load i8*,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%kk=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1101(i8*inreg%ki,i8*inreg%kj)
%kl=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%km=call fastcc i8*%kf(i8*inreg%kl,i8*inreg%kk)
%kn=getelementptr inbounds i8,i8*%km,i64 16
%ko=bitcast i8*%kn to i8*(i8*,i8*)**
%kp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ko,align 8
%kq=bitcast i8*%km to i8**
%kr=load i8*,i8**%kq,align 8
%ks=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%kt=call fastcc i8*%kp(i8*inreg%kr,i8*inreg%ks)
store i8*%kt,i8**%d,align 8
%ku=call i8*@sml_alloc(i32 inreg 20)#0
%kv=getelementptr inbounds i8,i8*%ku,i64 -4
%kw=bitcast i8*%kv to i32*
store i32 1342177296,i32*%kw,align 4
%kx=load i8*,i8**%d,align 8
%ky=bitcast i8*%ku to i8**
store i8*%kx,i8**%ky,align 8
%kz=load i8*,i8**%g,align 8
%kA=getelementptr inbounds i8,i8*%ku,i64 8
%kB=bitcast i8*%kA to i8**
store i8*%kz,i8**%kB,align 8
%kC=getelementptr inbounds i8,i8*%ku,i64 16
%kD=bitcast i8*%kC to i32*
store i32 3,i32*%kD,align 4
%kE=tail call fastcc i8*@_SMLFN12TypedCalcCon8TPRECORDE(i8*inreg%ku)
ret i8*%kE
kF:
%kG=getelementptr inbounds i8,i8*%r,i64 8
%kH=bitcast i8*%kG to i8**
%kI=load i8*,i8**%kH,align 8
%kJ=bitcast i8*%kI to i32*
%kK=load i32,i32*%kJ,align 4
%kL=getelementptr inbounds i8,i8*%kI,i64 8
%kM=bitcast i8*%kL to i8**
%kN=load i8*,i8**%kM,align 8
store i8*%kN,i8**%d,align 8
%kO=call fastcc i8*@_SMLFN5VarID3Map4findE(i32 inreg 1,i32 inreg 8)
%kP=getelementptr inbounds i8,i8*%kO,i64 16
%kQ=bitcast i8*%kP to i8*(i8*,i8*)**
%kR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kQ,align 8
%kS=bitcast i8*%kO to i8**
%kT=load i8*,i8**%kS,align 8
store i8*%kT,i8**%f,align 8
%kU=bitcast i8**%e to i8***
%kV=load i8**,i8***%kU,align 8
%kW=load i8*,i8**%kV,align 8
%kX=getelementptr inbounds i8,i8*%kW,i64 32
%kY=bitcast i8*%kX to i8**
%kZ=load i8*,i8**%kY,align 8
store i8*%kZ,i8**%e,align 8
%k0=bitcast i8**%d to i32**
%k1=load i32*,i32**%k0,align 8
%k2=load i32,i32*%k1,align 4
%k3=call i8*@sml_alloc(i32 inreg 20)#0
%k4=getelementptr inbounds i8,i8*%k3,i64 -4
%k5=bitcast i8*%k4 to i32*
store i32 1342177296,i32*%k5,align 4
%k6=getelementptr inbounds i8,i8*%k3,i64 12
%k7=bitcast i8*%k6 to i32*
store i32 0,i32*%k7,align 1
%k8=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%k9=bitcast i8*%k3 to i8**
store i8*%k8,i8**%k9,align 8
%la=getelementptr inbounds i8,i8*%k3,i64 8
%lb=bitcast i8*%la to i32*
store i32%k2,i32*%lb,align 4
%lc=getelementptr inbounds i8,i8*%k3,i64 16
%ld=bitcast i8*%lc to i32*
store i32 1,i32*%ld,align 4
%le=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%lf=call fastcc i8*%kR(i8*inreg%le,i8*inreg%k3)
%lg=icmp eq i8*%lf,null
br i1%lg,label%lh,label%lD
lh:
%li=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%li,i8**%d,align 8
%lj=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bU,i64 0,i32 2)to i8*))
store i8*%lj,i8**%e,align 8
%lk=call i8*@sml_alloc(i32 inreg 28)#0
%ll=getelementptr inbounds i8,i8*%lk,i64 -4
%lm=bitcast i8*%ll to i32*
store i32 1342177304,i32*%lm,align 4
store i8*%lk,i8**%f,align 8
%ln=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%lo=bitcast i8*%lk to i8**
store i8*%ln,i8**%lo,align 8
%lp=getelementptr inbounds i8,i8*%lk,i64 8
%lq=bitcast i8*%lp to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%lq,align 8
%lr=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ls=getelementptr inbounds i8,i8*%lk,i64 16
%lt=bitcast i8*%ls to i8**
store i8*%lr,i8**%lt,align 8
%lu=getelementptr inbounds i8,i8*%lk,i64 24
%lv=bitcast i8*%lu to i32*
store i32 7,i32*%lv,align 4
%lw=call i8*@sml_alloc(i32 inreg 60)#0
%lx=getelementptr inbounds i8,i8*%lw,i64 -4
%ly=bitcast i8*%lx to i32*
store i32 1342177336,i32*%ly,align 4
%lz=getelementptr inbounds i8,i8*%lw,i64 56
%lA=bitcast i8*%lz to i32*
store i32 1,i32*%lA,align 4
%lB=load i8*,i8**%f,align 8
%lC=bitcast i8*%lw to i8**
store i8*%lB,i8**%lC,align 8
call void@sml_raise(i8*inreg%lw)#1
unreachable
lD:
%lE=bitcast i8*%lf to i8**
%lF=load i8*,i8**%lE,align 8
%lG=getelementptr inbounds i8,i8*%lF,i64 16
%lH=bitcast i8*%lG to i8**
%lI=load i8*,i8**%lH,align 8
store i8*%lI,i8**%e,align 8
%lJ=load i8*,i8**%d,align 8
%lK=bitcast i8*%lJ to i32*
%lL=load i32,i32*%lK,align 4
%lM=getelementptr inbounds i8,i8*%lJ,i64 4
%lN=bitcast i8*%lM to i32*
%lO=load i32,i32*%lN,align 4
%lP=getelementptr inbounds i8,i8*%lJ,i64 8
%lQ=bitcast i8*%lP to i8**
%lR=load i8*,i8**%lQ,align 8
store i8*%lR,i8**%d,align 8
%lS=call i8*@sml_alloc(i32 inreg 28)#0
%lT=bitcast i8*%lS to i32*
%lU=getelementptr inbounds i8,i8*%lS,i64 -4
%lV=bitcast i8*%lU to i32*
store i32 1342177304,i32*%lV,align 4
store i8*%lS,i8**%f,align 8
store i32%lL,i32*%lT,align 4
%lW=getelementptr inbounds i8,i8*%lS,i64 4
%lX=bitcast i8*%lW to i32*
store i32%lO,i32*%lX,align 4
%lY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%lZ=getelementptr inbounds i8,i8*%lS,i64 8
%l0=bitcast i8*%lZ to i8**
store i8*%lY,i8**%l0,align 8
%l1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%l2=getelementptr inbounds i8,i8*%lS,i64 16
%l3=bitcast i8*%l2 to i8**
store i8*%l1,i8**%l3,align 8
%l4=getelementptr inbounds i8,i8*%lS,i64 24
%l5=bitcast i8*%l4 to i32*
store i32 6,i32*%l5,align 4
%l6=call i8*@sml_alloc(i32 inreg 20)#0
%l7=bitcast i8*%l6 to i32*
%l8=getelementptr inbounds i8,i8*%l6,i64 -4
%l9=bitcast i8*%l8 to i32*
store i32 1342177296,i32*%l9,align 4
%ma=getelementptr inbounds i8,i8*%l6,i64 4
%mb=bitcast i8*%ma to i32*
store i32 0,i32*%mb,align 1
store i32%kK,i32*%l7,align 4
%mc=load i8*,i8**%f,align 8
%md=getelementptr inbounds i8,i8*%l6,i64 8
%me=bitcast i8*%md to i8**
store i8*%mc,i8**%me,align 8
%mf=getelementptr inbounds i8,i8*%l6,i64 16
%mg=bitcast i8*%mf to i32*
store i32 2,i32*%mg,align 4
%mh=tail call fastcc i8*@_SMLFN12TypedCalcCon11TPRECFUNVARE(i8*inreg%l6)
ret i8*%mh
mi:
%mj=getelementptr inbounds i8,i8*%r,i64 8
%mk=bitcast i8*%mj to i8**
%ml=load i8*,i8**%mk,align 8
%mm=bitcast i8*%ml to i8**
%mn=load i8*,i8**%mm,align 8
%mo=getelementptr inbounds i8,i8*%ml,i64 8
%mp=bitcast i8*%mo to i8**
%mq=load i8*,i8**%mp,align 8
store i8*%mq,i8**%f,align 8
%mr=getelementptr inbounds i8,i8*%ml,i64 16
%ms=bitcast i8*%mr to i8**
%mt=load i8*,i8**%ms,align 8
store i8*%mt,i8**%g,align 8
%mu=load i8*,i8**%d,align 8
%mv=load i8*,i8**%e,align 8
%mw=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%mu,i8*inreg%mv,i8*inreg%mn)
store i8*%mw,i8**%h,align 8
%mx=load i8*,i8**%d,align 8
%my=load i8*,i8**%e,align 8
%mz=load i8*,i8**%g,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
%mA=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%mx,i8*inreg%my,i8*inreg%mz)
store i8*%mA,i8**%d,align 8
%mB=call i8*@sml_alloc(i32 inreg 28)#0
%mC=getelementptr inbounds i8,i8*%mB,i64 -4
%mD=bitcast i8*%mC to i32*
store i32 1342177304,i32*%mD,align 4
%mE=load i8*,i8**%h,align 8
%mF=bitcast i8*%mB to i8**
store i8*%mE,i8**%mF,align 8
%mG=load i8*,i8**%f,align 8
%mH=getelementptr inbounds i8,i8*%mB,i64 8
%mI=bitcast i8*%mH to i8**
store i8*%mG,i8**%mI,align 8
%mJ=load i8*,i8**%d,align 8
%mK=getelementptr inbounds i8,i8*%mB,i64 16
%mL=bitcast i8*%mK to i8**
store i8*%mJ,i8**%mL,align 8
%mM=getelementptr inbounds i8,i8*%mB,i64 24
%mN=bitcast i8*%mM to i32*
store i32 7,i32*%mN,align 4
%mO=tail call fastcc i8*@_SMLFN12TypedCalcCon7TPRAISEE(i8*inreg%mB)
ret i8*%mO
mP:
%mQ=getelementptr inbounds i8,i8*%r,i64 8
%mR=bitcast i8*%mQ to i8**
%mS=load i8*,i8**%mR,align 8
%mT=bitcast i8*%mS to i8**
%mU=load i8*,i8**%mT,align 8
%mV=getelementptr inbounds i8,i8*%mS,i64 8
%mW=bitcast i8*%mV to i8**
%mX=load i8*,i8**%mW,align 8
store i8*%mX,i8**%f,align 8
%mY=getelementptr inbounds i8,i8*%mS,i64 16
%mZ=bitcast i8*%mY to i8**
%m0=load i8*,i8**%mZ,align 8
store i8*%m0,i8**%g,align 8
%m1=getelementptr inbounds i8,i8*%mS,i64 24
%m2=bitcast i8*%m1 to i8**
%m3=load i8*,i8**%m2,align 8
store i8*%m3,i8**%h,align 8
%m4=load i8*,i8**%d,align 8
%m5=load i8*,i8**%e,align 8
%m6=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%m4,i8*inreg%m5,i8*inreg%mU)
store i8*%m6,i8**%i,align 8
%m7=load i8*,i8**%h,align 8
%m8=getelementptr inbounds i8,i8*%m7,i64 8
%m9=bitcast i8*%m8 to i8**
%na=load i8*,i8**%m9,align 8
%nb=load i8*,i8**%d,align 8
%nc=load i8*,i8**%e,align 8
%nd=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%nb,i8*inreg%nc,i8*inreg%na)
store i8*%nd,i8**%j,align 8
%ne=load i8*,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination6exportE_1022(i8*inreg%ne,i8*inreg%nd)
%nf=bitcast i8**%h to i8***
%ng=load i8**,i8***%nf,align 8
store i8*null,i8**%h,align 8
%nh=load i8*,i8**%ng,align 8
store i8*%nh,i8**%k,align 8
%ni=call i8*@sml_alloc(i32 inreg 20)#0
%nj=getelementptr inbounds i8,i8*%ni,i64 -4
%nk=bitcast i8*%nj to i32*
store i32 1342177296,i32*%nk,align 4
store i8*%ni,i8**%h,align 8
%nl=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%nm=bitcast i8*%ni to i8**
store i8*%nl,i8**%nm,align 8
%nn=load i8*,i8**%j,align 8
%no=getelementptr inbounds i8,i8*%ni,i64 8
%np=bitcast i8*%no to i8**
store i8*%nn,i8**%np,align 8
%nq=getelementptr inbounds i8,i8*%ni,i64 16
%nr=bitcast i8*%nq to i32*
store i32 3,i32*%nr,align 4
%ns=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%nt=getelementptr inbounds i8,i8*%ns,i64 16
%nu=bitcast i8*%nt to i8*(i8*,i8*)**
%nv=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nu,align 8
%nw=bitcast i8*%ns to i8**
%nx=load i8*,i8**%nw,align 8
store i8*%nx,i8**%l,align 8
%ny=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%nz=getelementptr inbounds i8,i8*%ny,i64 16
%nA=bitcast i8*%nz to i8*(i8*,i8*)**
%nB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nA,align 8
%nC=bitcast i8*%ny to i8**
%nD=load i8*,i8**%nC,align 8
store i8*%nD,i8**%k,align 8
%nE=load i8*,i8**%d,align 8
%nF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%nG=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1027(i8*inreg%nE,i8*inreg%nF)
%nH=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%nI=call fastcc i8*%nB(i8*inreg%nH,i8*inreg%nG)
%nJ=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%nK=call fastcc i8*%nv(i8*inreg%nJ,i8*inreg%nI)
%nL=getelementptr inbounds i8,i8*%nK,i64 16
%nM=bitcast i8*%nL to i8*(i8*,i8*)**
%nN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nM,align 8
%nO=bitcast i8*%nK to i8**
%nP=load i8*,i8**%nO,align 8
%nQ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%nR=call fastcc i8*%nN(i8*inreg%nP,i8*inreg%nQ)
store i8*%nR,i8**%e,align 8
%nS=icmp eq i8*%nR,null
br i1%nS,label%nT,label%nV
nT:
%nU=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
br label%n9
nV:
%nW=bitcast i8*%nR to i8**
%nX=load i8*,i8**%nW,align 8
store i8*%nX,i8**%f,align 8
%nY=call i8*@sml_alloc(i32 inreg 20)#0
%nZ=getelementptr inbounds i8,i8*%nY,i64 -4
%n0=bitcast i8*%nZ to i32*
store i32 1342177296,i32*%n0,align 4
%n1=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%n2=bitcast i8*%nY to i8**
store i8*%n1,i8**%n2,align 8
%n3=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%n4=getelementptr inbounds i8,i8*%nY,i64 8
%n5=bitcast i8*%n4 to i8**
store i8*%n3,i8**%n5,align 8
%n6=getelementptr inbounds i8,i8*%nY,i64 16
%n7=bitcast i8*%n6 to i32*
store i32 3,i32*%n7,align 4
%n8=call fastcc i8*@_SMLFN11TypesBasics7tpappTyE(i8*inreg%nY)
br label%n9
n9:
%oa=phi i8*[%nU,%nT],[%n8,%nV]
%ob=call fastcc i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg%oa)
%oc=icmp eq i8*%ob,null
br i1%oc,label%oh,label%od
od:
%oe=bitcast i8*%ob to i32*
%of=load i32,i32*%oe,align 4
%og=icmp eq i32%of,6
br i1%og,label%oD,label%oh
oh:
store i8*null,i8**%g,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%e,align 8
%oi=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%oi,i8**%d,align 8
%oj=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bS,i64 0,i32 2)to i8*))
store i8*%oj,i8**%e,align 8
%ok=call i8*@sml_alloc(i32 inreg 28)#0
%ol=getelementptr inbounds i8,i8*%ok,i64 -4
%om=bitcast i8*%ol to i32*
store i32 1342177304,i32*%om,align 4
store i8*%ok,i8**%f,align 8
%on=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%oo=bitcast i8*%ok to i8**
store i8*%on,i8**%oo,align 8
%op=getelementptr inbounds i8,i8*%ok,i64 8
%oq=bitcast i8*%op to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%oq,align 8
%or=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%os=getelementptr inbounds i8,i8*%ok,i64 16
%ot=bitcast i8*%os to i8**
store i8*%or,i8**%ot,align 8
%ou=getelementptr inbounds i8,i8*%ok,i64 24
%ov=bitcast i8*%ou to i32*
store i32 7,i32*%ov,align 4
%ow=call i8*@sml_alloc(i32 inreg 60)#0
%ox=getelementptr inbounds i8,i8*%ow,i64 -4
%oy=bitcast i8*%ox to i32*
store i32 1342177336,i32*%oy,align 4
%oz=getelementptr inbounds i8,i8*%ow,i64 56
%oA=bitcast i8*%oz to i32*
store i32 1,i32*%oA,align 4
%oB=load i8*,i8**%f,align 8
%oC=bitcast i8*%ow to i8**
store i8*%oB,i8**%oC,align 8
call void@sml_raise(i8*inreg%ow)#1
unreachable
oD:
%oE=getelementptr inbounds i8,i8*%ob,i64 8
%oF=bitcast i8*%oE to i8***
%oG=load i8**,i8***%oF,align 8
%oH=load i8*,i8**%oG,align 8
store i8*%oH,i8**%f,align 8
%oI=load i8*,i8**%i,align 8
%oJ=getelementptr inbounds i8,i8*%oI,i64 8
%oK=bitcast i8*%oJ to i8**
%oL=load i8*,i8**%oK,align 8
store i8*%oL,i8**%j,align 8
%oM=call i8*@sml_alloc(i32 inreg 20)#0
%oN=getelementptr inbounds i8,i8*%oM,i64 -4
%oO=bitcast i8*%oN to i32*
store i32 1342177296,i32*%oO,align 4
store i8*%oM,i8**%k,align 8
%oP=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%oQ=bitcast i8*%oM to i8**
store i8*%oP,i8**%oQ,align 8
%oR=getelementptr inbounds i8,i8*%oM,i64 8
%oS=bitcast i8*%oR to i8**
store i8*null,i8**%oS,align 8
%oT=getelementptr inbounds i8,i8*%oM,i64 16
%oU=bitcast i8*%oT to i32*
store i32 3,i32*%oU,align 4
%oV=call i8*@sml_alloc(i32 inreg 20)#0
%oW=getelementptr inbounds i8,i8*%oV,i64 -4
%oX=bitcast i8*%oW to i32*
store i32 1342177296,i32*%oX,align 4
%oY=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%oZ=bitcast i8*%oV to i8**
store i8*%oY,i8**%oZ,align 8
%o0=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%o1=getelementptr inbounds i8,i8*%oV,i64 8
%o2=bitcast i8*%o1 to i8**
store i8*%o0,i8**%o2,align 8
%o3=getelementptr inbounds i8,i8*%oV,i64 16
%o4=bitcast i8*%o3 to i32*
store i32 3,i32*%o4,align 4
%o5=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination9equalListE_937(i8*inreg%o5,i8*inreg%oV)
%o6=call i8*@sml_alloc(i32 inreg 36)#0
%o7=getelementptr inbounds i8,i8*%o6,i64 -4
%o8=bitcast i8*%o7 to i32*
store i32 1342177312,i32*%o8,align 4
%o9=load i8*,i8**%i,align 8
%pa=bitcast i8*%o6 to i8**
store i8*%o9,i8**%pa,align 8
%pb=load i8*,i8**%e,align 8
%pc=getelementptr inbounds i8,i8*%o6,i64 8
%pd=bitcast i8*%pc to i8**
store i8*%pb,i8**%pd,align 8
%pe=load i8*,i8**%g,align 8
%pf=getelementptr inbounds i8,i8*%o6,i64 16
%pg=bitcast i8*%pf to i8**
store i8*%pe,i8**%pg,align 8
%ph=load i8*,i8**%h,align 8
%pi=getelementptr inbounds i8,i8*%o6,i64 24
%pj=bitcast i8*%pi to i8**
store i8*%ph,i8**%pj,align 8
%pk=getelementptr inbounds i8,i8*%o6,i64 32
%pl=bitcast i8*%pk to i32*
store i32 15,i32*%pl,align 4
%pm=tail call fastcc i8*@_SMLFN12TypedCalcCon11TPPRIMAPPLYE(i8*inreg%o6)
ret i8*%pm
pn:
%po=getelementptr inbounds i8,i8*%r,i64 8
%pp=bitcast i8*%po to i8**
%pq=load i8*,i8**%pp,align 8
%pr=bitcast i8*%pq to i8**
%ps=load i8*,i8**%pr,align 8
%pt=getelementptr inbounds i8,i8*%pq,i64 8
%pu=bitcast i8*%pt to i8**
%pv=load i8*,i8**%pu,align 8
store i8*%pv,i8**%f,align 8
%pw=getelementptr inbounds i8,i8*%pq,i64 16
%px=bitcast i8*%pw to i8**
%py=load i8*,i8**%px,align 8
store i8*%py,i8**%g,align 8
%pz=getelementptr inbounds i8,i8*%pq,i64 32
%pA=bitcast i8*%pz to i8**
%pB=load i8*,i8**%pA,align 8
store i8*%pB,i8**%h,align 8
%pC=load i8*,i8**%d,align 8
%pD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%pE=call fastcc i8*@_SMLLLN17PolyTyElimination13analyzeBtvEnvE_1065(i8*inreg%pC,i8*inreg%pD,i8*inreg%ps)
%pF=bitcast i8*%pE to i8**
%pG=load i8*,i8**%pF,align 8
store i8*%pG,i8**%e,align 8
%pH=getelementptr inbounds i8,i8*%pE,i64 8
%pI=bitcast i8*%pH to i8**
%pJ=load i8*,i8**%pI,align 8
store i8*%pJ,i8**%i,align 8
%pK=load i8*,i8**%d,align 8
%pL=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%pM=call fastcc i8*@_SMLLLN17PolyTyElimination18analyzeConstraintsE_1059(i8*inreg%pK,i8*inreg%pJ,i8*inreg%pL)
store i8*%pM,i8**%f,align 8
%pN=load i8*,i8**%d,align 8
%pO=load i8*,i8**%g,align 8
%pP=load i8*,i8**%i,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%i,align 8
%pQ=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%pN,i8*inreg%pP,i8*inreg%pO)
store i8*%pQ,i8**%d,align 8
%pR=call i8*@sml_alloc(i32 inreg 36)#0
%pS=getelementptr inbounds i8,i8*%pR,i64 -4
%pT=bitcast i8*%pS to i32*
store i32 1342177312,i32*%pT,align 4
%pU=load i8*,i8**%e,align 8
%pV=bitcast i8*%pR to i8**
store i8*%pU,i8**%pV,align 8
%pW=load i8*,i8**%f,align 8
%pX=getelementptr inbounds i8,i8*%pR,i64 8
%pY=bitcast i8*%pX to i8**
store i8*%pW,i8**%pY,align 8
%pZ=load i8*,i8**%d,align 8
%p0=getelementptr inbounds i8,i8*%pR,i64 16
%p1=bitcast i8*%p0 to i8**
store i8*%pZ,i8**%p1,align 8
%p2=load i8*,i8**%h,align 8
%p3=getelementptr inbounds i8,i8*%pR,i64 24
%p4=bitcast i8*%p3 to i8**
store i8*%p2,i8**%p4,align 8
%p5=getelementptr inbounds i8,i8*%pR,i64 32
%p6=bitcast i8*%p5 to i32*
store i32 15,i32*%p6,align 4
%p7=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPPOLYE(i8*inreg%pR)
ret i8*%p7
p8:
%p9=getelementptr inbounds i8,i8*%r,i64 8
%qa=bitcast i8*%p9 to i8**
%qb=load i8*,i8**%qa,align 8
%qc=bitcast i8*%qb to i8**
%qd=load i8*,i8**%qc,align 8
%qe=getelementptr inbounds i8,i8*%qb,i64 8
%qf=bitcast i8*%qe to i8**
%qg=load i8*,i8**%qf,align 8
store i8*%qg,i8**%f,align 8
%qh=getelementptr inbounds i8,i8*%qb,i64 16
%qi=bitcast i8*%qh to i8**
%qj=load i8*,i8**%qi,align 8
store i8*%qj,i8**%g,align 8
%qk=getelementptr inbounds i8,i8*%qb,i64 24
%ql=bitcast i8*%qk to i8**
%qm=load i8*,i8**%ql,align 8
store i8*%qm,i8**%h,align 8
%qn=load i8*,i8**%d,align 8
%qo=load i8*,i8**%e,align 8
%qp=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%qn,i8*inreg%qo,i8*inreg%qd)
store i8*%qp,i8**%i,align 8
%qq=load i8*,i8**%h,align 8
%qr=getelementptr inbounds i8,i8*%qq,i64 16
%qs=bitcast i8*%qr to i8**
%qt=load i8*,i8**%qs,align 8
%qu=load i8*,i8**%d,align 8
%qv=load i8*,i8**%e,align 8
%qw=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%qu,i8*inreg%qv,i8*inreg%qt)
store i8*%qw,i8**%j,align 8
%qx=load i8*,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination6exportE_1022(i8*inreg%qx,i8*inreg%qw)
%qy=load i8*,i8**%h,align 8
%qz=bitcast i8*%qy to i32*
%qA=load i32,i32*%qz,align 4
store i8*null,i8**%h,align 8
%qB=getelementptr inbounds i8,i8*%qy,i64 8
%qC=bitcast i8*%qB to i8**
%qD=load i8*,i8**%qC,align 8
store i8*%qD,i8**%k,align 8
%qE=call i8*@sml_alloc(i32 inreg 28)#0
%qF=getelementptr inbounds i8,i8*%qE,i64 -4
%qG=bitcast i8*%qF to i32*
store i32 1342177304,i32*%qG,align 4
store i8*%qE,i8**%h,align 8
%qH=getelementptr inbounds i8,i8*%qE,i64 4
%qI=bitcast i8*%qH to i32*
store i32 0,i32*%qI,align 1
%qJ=bitcast i8*%qE to i32*
store i32%qA,i32*%qJ,align 4
%qK=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%qL=getelementptr inbounds i8,i8*%qE,i64 8
%qM=bitcast i8*%qL to i8**
store i8*%qK,i8**%qM,align 8
%qN=load i8*,i8**%j,align 8
%qO=getelementptr inbounds i8,i8*%qE,i64 16
%qP=bitcast i8*%qO to i8**
store i8*%qN,i8**%qP,align 8
%qQ=getelementptr inbounds i8,i8*%qE,i64 24
%qR=bitcast i8*%qQ to i32*
store i32 6,i32*%qR,align 4
%qS=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%qT=getelementptr inbounds i8,i8*%qS,i64 16
%qU=bitcast i8*%qT to i8*(i8*,i8*)**
%qV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qU,align 8
%qW=bitcast i8*%qS to i8**
%qX=load i8*,i8**%qW,align 8
store i8*%qX,i8**%k,align 8
%qY=load i8*,i8**%d,align 8
%qZ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%q0=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1027(i8*inreg%qY,i8*inreg%qZ)
%q1=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%q2=call fastcc i8*%qV(i8*inreg%q1,i8*inreg%q0)
%q3=getelementptr inbounds i8,i8*%q2,i64 16
%q4=bitcast i8*%q3 to i8*(i8*,i8*)**
%q5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q4,align 8
%q6=bitcast i8*%q2 to i8**
%q7=load i8*,i8**%q6,align 8
%q8=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%q9=call fastcc i8*%q5(i8*inreg%q7,i8*inreg%q8)
store i8*%q9,i8**%e,align 8
%ra=call i8*@sml_alloc(i32 inreg 20)#0
%rb=getelementptr inbounds i8,i8*%ra,i64 -4
%rc=bitcast i8*%rb to i32*
store i32 1342177296,i32*%rc,align 4
%rd=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%re=bitcast i8*%ra to i8**
store i8*%rd,i8**%re,align 8
%rf=load i8*,i8**%e,align 8
%rg=getelementptr inbounds i8,i8*%ra,i64 8
%rh=bitcast i8*%rg to i8**
store i8*%rf,i8**%rh,align 8
%ri=getelementptr inbounds i8,i8*%ra,i64 16
%rj=bitcast i8*%ri to i32*
store i32 3,i32*%rj,align 4
%rk=call fastcc i8*@_SMLFN11TypesBasics7tpappTyE(i8*inreg%ra)
%rl=call fastcc i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg%rk)
%rm=icmp eq i8*%rl,null
br i1%rm,label%rr,label%rn
rn:
%ro=bitcast i8*%rl to i32*
%rp=load i32,i32*%ro,align 4
%rq=icmp eq i32%rp,6
br i1%rq,label%rN,label%rr
rr:
store i8*null,i8**%g,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%e,align 8
%rs=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%rs,i8**%d,align 8
%rt=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bQ,i64 0,i32 2)to i8*))
store i8*%rt,i8**%e,align 8
%ru=call i8*@sml_alloc(i32 inreg 28)#0
%rv=getelementptr inbounds i8,i8*%ru,i64 -4
%rw=bitcast i8*%rv to i32*
store i32 1342177304,i32*%rw,align 4
store i8*%ru,i8**%f,align 8
%rx=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ry=bitcast i8*%ru to i8**
store i8*%rx,i8**%ry,align 8
%rz=getelementptr inbounds i8,i8*%ru,i64 8
%rA=bitcast i8*%rz to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%rA,align 8
%rB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%rC=getelementptr inbounds i8,i8*%ru,i64 16
%rD=bitcast i8*%rC to i8**
store i8*%rB,i8**%rD,align 8
%rE=getelementptr inbounds i8,i8*%ru,i64 24
%rF=bitcast i8*%rE to i32*
store i32 7,i32*%rF,align 4
%rG=call i8*@sml_alloc(i32 inreg 60)#0
%rH=getelementptr inbounds i8,i8*%rG,i64 -4
%rI=bitcast i8*%rH to i32*
store i32 1342177336,i32*%rI,align 4
%rJ=getelementptr inbounds i8,i8*%rG,i64 56
%rK=bitcast i8*%rJ to i32*
store i32 1,i32*%rK,align 4
%rL=load i8*,i8**%f,align 8
%rM=bitcast i8*%rG to i8**
store i8*%rL,i8**%rM,align 8
call void@sml_raise(i8*inreg%rG)#1
unreachable
rN:
%rO=getelementptr inbounds i8,i8*%rl,i64 8
%rP=bitcast i8*%rO to i8***
%rQ=load i8**,i8***%rP,align 8
%rR=load i8*,i8**%rQ,align 8
store i8*%rR,i8**%f,align 8
%rS=load i8*,i8**%i,align 8
%rT=getelementptr inbounds i8,i8*%rS,i64 8
%rU=bitcast i8*%rT to i8**
%rV=load i8*,i8**%rU,align 8
store i8*%rV,i8**%j,align 8
%rW=call i8*@sml_alloc(i32 inreg 20)#0
%rX=getelementptr inbounds i8,i8*%rW,i64 -4
%rY=bitcast i8*%rX to i32*
store i32 1342177296,i32*%rY,align 4
store i8*%rW,i8**%k,align 8
%rZ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%r0=bitcast i8*%rW to i8**
store i8*%rZ,i8**%r0,align 8
%r1=getelementptr inbounds i8,i8*%rW,i64 8
%r2=bitcast i8*%r1 to i8**
store i8*null,i8**%r2,align 8
%r3=getelementptr inbounds i8,i8*%rW,i64 16
%r4=bitcast i8*%r3 to i32*
store i32 3,i32*%r4,align 4
%r5=call i8*@sml_alloc(i32 inreg 20)#0
%r6=getelementptr inbounds i8,i8*%r5,i64 -4
%r7=bitcast i8*%r6 to i32*
store i32 1342177296,i32*%r7,align 4
%r8=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%r9=bitcast i8*%r5 to i8**
store i8*%r8,i8**%r9,align 8
%sa=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%sb=getelementptr inbounds i8,i8*%r5,i64 8
%sc=bitcast i8*%sb to i8**
store i8*%sa,i8**%sc,align 8
%sd=getelementptr inbounds i8,i8*%r5,i64 16
%se=bitcast i8*%sd to i32*
store i32 3,i32*%se,align 4
%sf=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination9equalListE_937(i8*inreg%sf,i8*inreg%r5)
%sg=call i8*@sml_alloc(i32 inreg 36)#0
%sh=getelementptr inbounds i8,i8*%sg,i64 -4
%si=bitcast i8*%sh to i32*
store i32 1342177312,i32*%si,align 4
%sj=load i8*,i8**%i,align 8
%sk=bitcast i8*%sg to i8**
store i8*%sj,i8**%sk,align 8
%sl=load i8*,i8**%e,align 8
%sm=getelementptr inbounds i8,i8*%sg,i64 8
%sn=bitcast i8*%sm to i8**
store i8*%sl,i8**%sn,align 8
%so=load i8*,i8**%g,align 8
%sp=getelementptr inbounds i8,i8*%sg,i64 16
%sq=bitcast i8*%sp to i8**
store i8*%so,i8**%sq,align 8
%sr=load i8*,i8**%h,align 8
%ss=getelementptr inbounds i8,i8*%sg,i64 24
%st=bitcast i8*%ss to i8**
store i8*%sr,i8**%st,align 8
%su=getelementptr inbounds i8,i8*%sg,i64 32
%sv=bitcast i8*%su to i32*
store i32 15,i32*%sv,align 4
%sw=tail call fastcc i8*@_SMLFN12TypedCalcCon12TPOPRIMAPPLYE(i8*inreg%sg)
ret i8*%sw
sx:
%sy=getelementptr inbounds i8,i8*%r,i64 8
%sz=bitcast i8*%sy to i8**
%sA=load i8*,i8**%sz,align 8
%sB=bitcast i8*%sA to i8**
%sC=load i8*,i8**%sB,align 8
%sD=getelementptr inbounds i8,i8*%sA,i64 8
%sE=bitcast i8*%sD to i8**
%sF=load i8*,i8**%sE,align 8
store i8*%sF,i8**%f,align 8
%sG=getelementptr inbounds i8,i8*%sA,i64 16
%sH=bitcast i8*%sG to i8**
%sI=load i8*,i8**%sH,align 8
store i8*%sI,i8**%g,align 8
%sJ=load i8*,i8**%d,align 8
%sK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%sL=call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeMonoLetE_1098(i8*inreg%sJ,i8*inreg%sK,i8*inreg%sC)
%sM=bitcast i8*%sL to i8**
%sN=load i8*,i8**%sM,align 8
store i8*%sN,i8**%e,align 8
%sO=getelementptr inbounds i8,i8*%sL,i64 8
%sP=bitcast i8*%sO to i8**
%sQ=load i8*,i8**%sP,align 8
%sR=load i8*,i8**%d,align 8
%sS=load i8*,i8**%f,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
%sT=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%sR,i8*inreg%sQ,i8*inreg%sS)
store i8*%sT,i8**%d,align 8
%sU=call i8*@sml_alloc(i32 inreg 28)#0
%sV=getelementptr inbounds i8,i8*%sU,i64 -4
%sW=bitcast i8*%sV to i32*
store i32 1342177304,i32*%sW,align 4
%sX=load i8*,i8**%e,align 8
%sY=bitcast i8*%sU to i8**
store i8*%sX,i8**%sY,align 8
%sZ=load i8*,i8**%d,align 8
%s0=getelementptr inbounds i8,i8*%sU,i64 8
%s1=bitcast i8*%s0 to i8**
store i8*%sZ,i8**%s1,align 8
%s2=load i8*,i8**%g,align 8
%s3=getelementptr inbounds i8,i8*%sU,i64 16
%s4=bitcast i8*%s3 to i8**
store i8*%s2,i8**%s4,align 8
%s5=getelementptr inbounds i8,i8*%sU,i64 24
%s6=bitcast i8*%s5 to i32*
store i32 7,i32*%s6,align 4
%s7=tail call fastcc i8*@_SMLFN12TypedCalcCon9TPMONOLETE(i8*inreg%sU)
ret i8*%s7
s8:
%s9=getelementptr inbounds i8,i8*%r,i64 8
%ta=bitcast i8*%s9 to i8**
%tb=load i8*,i8**%ta,align 8
%tc=bitcast i8*%tb to i8**
%td=load i8*,i8**%tc,align 8
store i8*%td,i8**%f,align 8
%te=getelementptr inbounds i8,i8*%tb,i64 16
%tf=bitcast i8*%te to i8**
%tg=load i8*,i8**%tf,align 8
store i8*%tg,i8**%g,align 8
%th=getelementptr inbounds i8,i8*%tb,i64 24
%ti=bitcast i8*%th to i8**
%tj=load i8*,i8**%ti,align 8
store i8*%tj,i8**%h,align 8
%tk=getelementptr inbounds i8,i8*%tb,i64 32
%tl=bitcast i8*%tk to i8**
%tm=load i8*,i8**%tl,align 8
store i8*%tm,i8**%i,align 8
%tn=bitcast i8**%e to i8****
%to=load i8***,i8****%tn,align 8
%tp=load i8**,i8***%to,align 8
%tq=load i8*,i8**%tp,align 8
store i8*%tq,i8**%j,align 8
%tr=call i8*@sml_alloc(i32 inreg 12)#0
%ts=getelementptr inbounds i8,i8*%tr,i64 -4
%tt=bitcast i8*%ts to i32*
store i32 1342177288,i32*%tt,align 4
%tu=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%tv=bitcast i8*%tr to i8**
store i8*%tu,i8**%tv,align 8
%tw=getelementptr inbounds i8,i8*%tr,i64 8
%tx=bitcast i8*%tw to i32*
store i32 1,i32*%tx,align 4
%ty=call fastcc i8*@_SMLFN12TypedCalcCon8TPMODIFYE(i8*inreg%tr)
store i8*%ty,i8**%j,align 8
%tz=load i8*,i8**%d,align 8
%tA=load i8*,i8**%e,align 8
%tB=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%tC=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%tz,i8*inreg%tA,i8*inreg%tB)
store i8*%tC,i8**%i,align 8
%tD=load i8*,i8**%j,align 8
%tE=getelementptr inbounds i8,i8*%tD,i64 16
%tF=bitcast i8*%tE to i8*(i8*,i8*)**
%tG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%tF,align 8
%tH=bitcast i8*%tD to i8**
%tI=load i8*,i8**%tH,align 8
store i8*%tI,i8**%j,align 8
%tJ=load i8*,i8**%d,align 8
%tK=load i8*,i8**%e,align 8
%tL=load i8*,i8**%f,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%tM=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%tJ,i8*inreg%tK,i8*inreg%tL)
store i8*%tM,i8**%d,align 8
%tN=call i8*@sml_alloc(i32 inreg 36)#0
%tO=getelementptr inbounds i8,i8*%tN,i64 -4
%tP=bitcast i8*%tO to i32*
store i32 1342177312,i32*%tP,align 4
%tQ=load i8*,i8**%d,align 8
%tR=bitcast i8*%tN to i8**
store i8*%tQ,i8**%tR,align 8
%tS=load i8*,i8**%g,align 8
%tT=getelementptr inbounds i8,i8*%tN,i64 8
%tU=bitcast i8*%tT to i8**
store i8*%tS,i8**%tU,align 8
%tV=load i8*,i8**%h,align 8
%tW=getelementptr inbounds i8,i8*%tN,i64 16
%tX=bitcast i8*%tW to i8**
store i8*%tV,i8**%tX,align 8
%tY=load i8*,i8**%i,align 8
%tZ=getelementptr inbounds i8,i8*%tN,i64 24
%t0=bitcast i8*%tZ to i8**
store i8*%tY,i8**%t0,align 8
%t1=getelementptr inbounds i8,i8*%tN,i64 32
%t2=bitcast i8*%t1 to i32*
store i32 15,i32*%t2,align 4
%t3=load i8*,i8**%j,align 8
%t4=tail call fastcc i8*%tG(i8*inreg%t3,i8*inreg%tN)
ret i8*%t4
t5:
%t6=getelementptr inbounds i8,i8*%r,i64 8
%t7=bitcast i8*%t6 to i8**
%t8=load i8*,i8**%t7,align 8
%t9=bitcast i8*%t8 to i8**
%ua=load i8*,i8**%t9,align 8
store i8*%ua,i8**%f,align 8
%ub=getelementptr inbounds i8,i8*%t8,i64 8
%uc=bitcast i8*%ub to i8**
%ud=load i8*,i8**%uc,align 8
%ue=getelementptr inbounds i8,i8*%t8,i64 16
%uf=bitcast i8*%ue to i8**
%ug=load i8*,i8**%uf,align 8
store i8*%ug,i8**%g,align 8
%uh=load i8*,i8**%d,align 8
%ui=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%uj=call fastcc i8*@_SMLLLN17PolyTyElimination15analyzeDeclListE_1100(i8*inreg%uh,i8*inreg%ui,i8*inreg%ud)
%uk=bitcast i8*%uj to i8**
%ul=load i8*,i8**%uk,align 8
store i8*%ul,i8**%e,align 8
%um=getelementptr inbounds i8,i8*%uj,i64 8
%un=bitcast i8*%um to i8**
%uo=load i8*,i8**%un,align 8
%up=load i8*,i8**%d,align 8
%uq=load i8*,i8**%f,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
%ur=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%up,i8*inreg%uo,i8*inreg%uq)
store i8*%ur,i8**%d,align 8
%us=call i8*@sml_alloc(i32 inreg 28)#0
%ut=getelementptr inbounds i8,i8*%us,i64 -4
%uu=bitcast i8*%ut to i32*
store i32 1342177304,i32*%uu,align 4
%uv=load i8*,i8**%d,align 8
%uw=bitcast i8*%us to i8**
store i8*%uv,i8**%uw,align 8
%ux=load i8*,i8**%e,align 8
%uy=getelementptr inbounds i8,i8*%us,i64 8
%uz=bitcast i8*%uy to i8**
store i8*%ux,i8**%uz,align 8
%uA=load i8*,i8**%g,align 8
%uB=getelementptr inbounds i8,i8*%us,i64 16
%uC=bitcast i8*%uB to i8**
store i8*%uA,i8**%uC,align 8
%uD=getelementptr inbounds i8,i8*%us,i64 24
%uE=bitcast i8*%uD to i32*
store i32 7,i32*%uE,align 4
%uF=tail call fastcc i8*@_SMLFN12TypedCalcCon5TPLETE(i8*inreg%us)
ret i8*%uF
uG:
%uH=getelementptr inbounds i8,i8*%r,i64 8
%uI=bitcast i8*%uH to i8**
%uJ=load i8*,i8**%uI,align 8
%uK=bitcast i8*%uJ to i8**
%uL=load i8*,i8**%uK,align 8
store i8*%uL,i8**%f,align 8
%uM=getelementptr inbounds i8,i8*%uJ,i64 8
%uN=bitcast i8*%uM to i8**
%uO=load i8*,i8**%uN,align 8
store i8*%uO,i8**%g,align 8
%uP=getelementptr inbounds i8,i8*%uJ,i64 16
%uQ=bitcast i8*%uP to i8**
%uR=load i8*,i8**%uQ,align 8
store i8*%uR,i8**%h,align 8
%uS=getelementptr inbounds i8,i8*%uJ,i64 24
%uT=bitcast i8*%uS to i8**
%uU=load i8*,i8**%uT,align 8
store i8*%uU,i8**%i,align 8
%uV=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%uW=getelementptr inbounds i8,i8*%uV,i64 16
%uX=bitcast i8*%uW to i8*(i8*,i8*)**
%uY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%uX,align 8
%uZ=bitcast i8*%uV to i8**
%u0=load i8*,i8**%uZ,align 8
store i8*%u0,i8**%j,align 8
%u1=load i8*,i8**%d,align 8
%u2=load i8*,i8**%e,align 8
%u3=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1101(i8*inreg%u1,i8*inreg%u2)
%u4=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%u5=call fastcc i8*%uY(i8*inreg%u4,i8*inreg%u3)
%u6=getelementptr inbounds i8,i8*%u5,i64 16
%u7=bitcast i8*%u6 to i8*(i8*,i8*)**
%u8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u7,align 8
%u9=bitcast i8*%u5 to i8**
%va=load i8*,i8**%u9,align 8
%vb=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%vc=call fastcc i8*%u8(i8*inreg%va,i8*inreg%vb)
store i8*%vc,i8**%f,align 8
%vd=load i8*,i8**%d,align 8
%ve=load i8*,i8**%e,align 8
%vf=load i8*,i8**%i,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%i,align 8
%vg=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%vd,i8*inreg%ve,i8*inreg%vf)
store i8*%vg,i8**%d,align 8
%vh=call i8*@sml_alloc(i32 inreg 36)#0
%vi=getelementptr inbounds i8,i8*%vh,i64 -4
%vj=bitcast i8*%vi to i32*
store i32 1342177312,i32*%vj,align 4
%vk=load i8*,i8**%f,align 8
%vl=bitcast i8*%vh to i8**
store i8*%vk,i8**%vl,align 8
%vm=load i8*,i8**%g,align 8
%vn=getelementptr inbounds i8,i8*%vh,i64 8
%vo=bitcast i8*%vn to i8**
store i8*%vm,i8**%vo,align 8
%vp=load i8*,i8**%h,align 8
%vq=getelementptr inbounds i8,i8*%vh,i64 16
%vr=bitcast i8*%vq to i8**
store i8*%vp,i8**%vr,align 8
%vs=load i8*,i8**%d,align 8
%vt=getelementptr inbounds i8,i8*%vh,i64 24
%vu=bitcast i8*%vt to i8**
store i8*%vs,i8**%vu,align 8
%vv=getelementptr inbounds i8,i8*%vh,i64 32
%vw=bitcast i8*%vv to i32*
store i32 15,i32*%vw,align 4
%vx=tail call fastcc i8*@_SMLFN12TypedCalcCon7TPTHROWE(i8*inreg%vh)
ret i8*%vx
vy:
%vz=getelementptr inbounds i8,i8*%r,i64 8
%vA=bitcast i8*%vz to i8**
%vB=load i8*,i8**%vA,align 8
%vC=bitcast i8*%vB to i8**
%vD=load i8*,i8**%vC,align 8
store i8*%vD,i8**%f,align 8
%vE=getelementptr inbounds i8,i8*%vB,i64 8
%vF=bitcast i8*%vE to i8**
%vG=load i8*,i8**%vF,align 8
store i8*%vG,i8**%g,align 8
%vH=getelementptr inbounds i8,i8*%vB,i64 16
%vI=bitcast i8*%vH to i8**
%vJ=load i8*,i8**%vI,align 8
store i8*%vJ,i8**%h,align 8
%vK=getelementptr inbounds i8,i8*%vB,i64 24
%vL=bitcast i8*%vK to i8**
%vM=load i8*,i8**%vL,align 8
store i8*%vM,i8**%i,align 8
%vN=getelementptr inbounds i8,i8*%vB,i64 40
%vO=bitcast i8*%vN to i8**
%vP=load i8*,i8**%vO,align 8
store i8*%vP,i8**%j,align 8
%vQ=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%vR=getelementptr inbounds i8,i8*%vQ,i64 16
%vS=bitcast i8*%vR to i8*(i8*,i8*)**
%vT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%vS,align 8
%vU=bitcast i8*%vQ to i8**
%vV=load i8*,i8**%vU,align 8
store i8*%vV,i8**%k,align 8
%vW=load i8*,i8**%d,align 8
%vX=load i8*,i8**%e,align 8
%vY=call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeVarInfoE_1032(i8*inreg%vW,i8*inreg%vX)
%vZ=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%v0=call fastcc i8*%vT(i8*inreg%vZ,i8*inreg%vY)
%v1=getelementptr inbounds i8,i8*%v0,i64 16
%v2=bitcast i8*%v1 to i8*(i8*,i8*)**
%v3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v2,align 8
%v4=bitcast i8*%v0 to i8**
%v5=load i8*,i8**%v4,align 8
%v6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%v7=call fastcc i8*%v3(i8*inreg%v5,i8*inreg%v6)
store i8*%v7,i8**%f,align 8
%v8=load i8*,i8**%d,align 8
%v9=load i8*,i8**%e,align 8
%wa=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%wb=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%v8,i8*inreg%v9,i8*inreg%wa)
store i8*%wb,i8**%j,align 8
%wc=load i8*,i8**%f,align 8
%wd=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%wc)
store i8*%wd,i8**%k,align 8
%we=bitcast i8**%e to i8***
%wf=load i8**,i8***%we,align 8
%wg=load i8*,i8**%wf,align 8
store i8*%wg,i8**%l,align 8
%wh=call i8*@sml_alloc(i32 inreg 20)#0
%wi=getelementptr inbounds i8,i8*%wh,i64 -4
%wj=bitcast i8*%wi to i32*
store i32 1342177296,i32*%wj,align 4
%wk=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%wl=bitcast i8*%wh to i8**
store i8*%wk,i8**%wl,align 8
%wm=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%wn=getelementptr inbounds i8,i8*%wh,i64 8
%wo=bitcast i8*%wn to i8**
store i8*%wm,i8**%wo,align 8
%wp=getelementptr inbounds i8,i8*%wh,i64 16
%wq=bitcast i8*%wp to i32*
store i32 3,i32*%wq,align 4
%wr=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%wh)
store i8*%wr,i8**%k,align 8
%ws=load i8*,i8**%e,align 8
%wt=getelementptr inbounds i8,i8*%ws,i64 8
%wu=bitcast i8*%wt to i8**
%wv=load i8*,i8**%wu,align 8
store i8*%wv,i8**%e,align 8
%ww=call i8*@sml_alloc(i32 inreg 20)#0
%wx=getelementptr inbounds i8,i8*%ww,i64 -4
%wy=bitcast i8*%wx to i32*
store i32 1342177296,i32*%wy,align 4
%wz=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%wA=bitcast i8*%ww to i8**
store i8*%wz,i8**%wA,align 8
%wB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%wC=getelementptr inbounds i8,i8*%ww,i64 8
%wD=bitcast i8*%wC to i8**
store i8*%wB,i8**%wD,align 8
%wE=getelementptr inbounds i8,i8*%ww,i64 16
%wF=bitcast i8*%wE to i32*
store i32 3,i32*%wF,align 4
%wG=load i8*,i8**%d,align 8
%wH=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%wI=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%wG,i8*inreg%ww,i8*inreg%wH)
store i8*%wI,i8**%e,align 8
%wJ=load i8*,i8**%j,align 8
%wK=getelementptr inbounds i8,i8*%wJ,i64 8
%wL=bitcast i8*%wK to i8**
%wM=load i8*,i8**%wL,align 8
store i8*%wM,i8**%g,align 8
%wN=getelementptr inbounds i8,i8*%wI,i64 8
%wO=bitcast i8*%wN to i8**
%wP=load i8*,i8**%wO,align 8
store i8*%wP,i8**%k,align 8
%wQ=call i8*@sml_alloc(i32 inreg 20)#0
%wR=getelementptr inbounds i8,i8*%wQ,i64 -4
%wS=bitcast i8*%wR to i32*
store i32 1342177296,i32*%wS,align 4
%wT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%wU=bitcast i8*%wQ to i8**
store i8*%wT,i8**%wU,align 8
%wV=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%wW=getelementptr inbounds i8,i8*%wQ,i64 8
%wX=bitcast i8*%wW to i8**
store i8*%wV,i8**%wX,align 8
%wY=getelementptr inbounds i8,i8*%wQ,i64 16
%wZ=bitcast i8*%wY to i32*
store i32 3,i32*%wZ,align 4
%w0=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination5equalE_928(i8*inreg%w0,i8*inreg%wQ)
%w1=call i8*@sml_alloc(i32 inreg 44)#0
%w2=getelementptr inbounds i8,i8*%w1,i64 -4
%w3=bitcast i8*%w2 to i32*
store i32 1342177320,i32*%w3,align 4
%w4=load i8*,i8**%f,align 8
%w5=bitcast i8*%w1 to i8**
store i8*%w4,i8**%w5,align 8
%w6=load i8*,i8**%e,align 8
%w7=getelementptr inbounds i8,i8*%w1,i64 8
%w8=bitcast i8*%w7 to i8**
store i8*%w6,i8**%w8,align 8
%w9=load i8*,i8**%h,align 8
%xa=getelementptr inbounds i8,i8*%w1,i64 16
%xb=bitcast i8*%xa to i8**
store i8*%w9,i8**%xb,align 8
%xc=load i8*,i8**%i,align 8
%xd=getelementptr inbounds i8,i8*%w1,i64 24
%xe=bitcast i8*%xd to i8**
store i8*%xc,i8**%xe,align 8
%xf=load i8*,i8**%j,align 8
%xg=getelementptr inbounds i8,i8*%w1,i64 32
%xh=bitcast i8*%xg to i8**
store i8*%xf,i8**%xh,align 8
%xi=getelementptr inbounds i8,i8*%w1,i64 40
%xj=bitcast i8*%xi to i32*
store i32 31,i32*%xj,align 4
%xk=tail call fastcc i8*@_SMLFN12TypedCalcCon7TPCATCHE(i8*inreg%w1)
ret i8*%xk
xl:
%xm=getelementptr inbounds i8,i8*%r,i64 8
%xn=bitcast i8*%xm to i8**
%xo=load i8*,i8**%xn,align 8
%xp=bitcast i8*%xo to i8**
%xq=load i8*,i8**%xp,align 8
%xr=getelementptr inbounds i8,i8*%xo,i64 8
%xs=bitcast i8*%xr to i8**
%xt=load i8*,i8**%xs,align 8
store i8*%xt,i8**%f,align 8
%xu=getelementptr inbounds i8,i8*%xo,i64 16
%xv=bitcast i8*%xu to i8**
%xw=load i8*,i8**%xv,align 8
store i8*%xw,i8**%g,align 8
%xx=getelementptr inbounds i8,i8*%xo,i64 24
%xy=bitcast i8*%xx to i8**
%xz=load i8*,i8**%xy,align 8
store i8*%xz,i8**%h,align 8
%xA=load i8*,i8**%d,align 8
%xB=load i8*,i8**%e,align 8
%xC=call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeVarInfoE_1029(i8*inreg%xA,i8*inreg%xB,i8*inreg%xq)
store i8*%xC,i8**%i,align 8
%xD=load i8*,i8**%d,align 8
%xE=load i8*,i8**%e,align 8
%xF=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%xG=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%xD,i8*inreg%xE,i8*inreg%xF)
store i8*%xG,i8**%f,align 8
%xH=call i8*@sml_alloc(i32 inreg 20)#0
%xI=getelementptr inbounds i8,i8*%xH,i64 -4
%xJ=bitcast i8*%xI to i32*
store i32 1342177296,i32*%xJ,align 4
%xK=load i8*,i8**%i,align 8
%xL=bitcast i8*%xH to i8**
store i8*%xK,i8**%xL,align 8
%xM=getelementptr inbounds i8,i8*%xH,i64 8
%xN=bitcast i8*%xM to i8**
store i8*null,i8**%xN,align 8
%xO=getelementptr inbounds i8,i8*%xH,i64 16
%xP=bitcast i8*%xO to i32*
store i32 3,i32*%xP,align 4
%xQ=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%xH)
store i8*%xQ,i8**%j,align 8
%xR=bitcast i8**%e to i8***
%xS=load i8**,i8***%xR,align 8
%xT=load i8*,i8**%xS,align 8
store i8*%xT,i8**%k,align 8
%xU=call i8*@sml_alloc(i32 inreg 20)#0
%xV=getelementptr inbounds i8,i8*%xU,i64 -4
%xW=bitcast i8*%xV to i32*
store i32 1342177296,i32*%xW,align 4
%xX=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%xY=bitcast i8*%xU to i8**
store i8*%xX,i8**%xY,align 8
%xZ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%x0=getelementptr inbounds i8,i8*%xU,i64 8
%x1=bitcast i8*%x0 to i8**
store i8*%xZ,i8**%x1,align 8
%x2=getelementptr inbounds i8,i8*%xU,i64 16
%x3=bitcast i8*%x2 to i32*
store i32 3,i32*%x3,align 4
%x4=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%xU)
store i8*%x4,i8**%j,align 8
%x5=load i8*,i8**%e,align 8
%x6=getelementptr inbounds i8,i8*%x5,i64 8
%x7=bitcast i8*%x6 to i8**
%x8=load i8*,i8**%x7,align 8
store i8*%x8,i8**%e,align 8
%x9=call i8*@sml_alloc(i32 inreg 20)#0
%ya=getelementptr inbounds i8,i8*%x9,i64 -4
%yb=bitcast i8*%ya to i32*
store i32 1342177296,i32*%yb,align 4
%yc=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%yd=bitcast i8*%x9 to i8**
store i8*%yc,i8**%yd,align 8
%ye=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%yf=getelementptr inbounds i8,i8*%x9,i64 8
%yg=bitcast i8*%yf to i8**
store i8*%ye,i8**%yg,align 8
%yh=getelementptr inbounds i8,i8*%x9,i64 16
%yi=bitcast i8*%yh to i32*
store i32 3,i32*%yi,align 4
%yj=load i8*,i8**%d,align 8
%yk=load i8*,i8**%g,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%g,align 8
%yl=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%yj,i8*inreg%x9,i8*inreg%yk)
store i8*%yl,i8**%d,align 8
%ym=call i8*@sml_alloc(i32 inreg 36)#0
%yn=getelementptr inbounds i8,i8*%ym,i64 -4
%yo=bitcast i8*%yn to i32*
store i32 1342177312,i32*%yo,align 4
%yp=load i8*,i8**%i,align 8
%yq=bitcast i8*%ym to i8**
store i8*%yp,i8**%yq,align 8
%yr=load i8*,i8**%f,align 8
%ys=getelementptr inbounds i8,i8*%ym,i64 8
%yt=bitcast i8*%ys to i8**
store i8*%yr,i8**%yt,align 8
%yu=load i8*,i8**%d,align 8
%yv=getelementptr inbounds i8,i8*%ym,i64 16
%yw=bitcast i8*%yv to i8**
store i8*%yu,i8**%yw,align 8
%yx=load i8*,i8**%h,align 8
%yy=getelementptr inbounds i8,i8*%ym,i64 24
%yz=bitcast i8*%yy to i8**
store i8*%yx,i8**%yz,align 8
%yA=getelementptr inbounds i8,i8*%ym,i64 32
%yB=bitcast i8*%yA to i32*
store i32 15,i32*%yB,align 4
%yC=tail call fastcc i8*@_SMLFN12TypedCalcCon8TPHANDLEE(i8*inreg%ym)
ret i8*%yC
yD:
%yE=getelementptr inbounds i8,i8*%r,i64 8
%yF=bitcast i8*%yE to i8**
%yG=load i8*,i8**%yF,align 8
%yH=bitcast i8*%yG to i8**
%yI=load i8*,i8**%yH,align 8
store i8*%yI,i8**%f,align 8
%yJ=getelementptr inbounds i8,i8*%yG,i64 8
%yK=bitcast i8*%yJ to i8**
%yL=load i8*,i8**%yK,align 8
store i8*%yL,i8**%g,align 8
%yM=getelementptr inbounds i8,i8*%yG,i64 24
%yN=bitcast i8*%yM to i8**
%yO=load i8*,i8**%yN,align 8
store i8*%yO,i8**%h,align 8
%yP=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%yQ=getelementptr inbounds i8,i8*%yP,i64 16
%yR=bitcast i8*%yQ to i8*(i8*,i8*)**
%yS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%yR,align 8
%yT=bitcast i8*%yP to i8**
%yU=load i8*,i8**%yT,align 8
store i8*%yU,i8**%i,align 8
%yV=load i8*,i8**%d,align 8
%yW=load i8*,i8**%e,align 8
%yX=call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeVarInfoE_1032(i8*inreg%yV,i8*inreg%yW)
%yY=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%yZ=call fastcc i8*%yS(i8*inreg%yY,i8*inreg%yX)
%y0=getelementptr inbounds i8,i8*%yZ,i64 16
%y1=bitcast i8*%y0 to i8*(i8*,i8*)**
%y2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y1,align 8
%y3=bitcast i8*%yZ to i8**
%y4=load i8*,i8**%y3,align 8
%y5=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%y6=call fastcc i8*%y2(i8*inreg%y4,i8*inreg%y5)
store i8*%y6,i8**%f,align 8
%y7=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%y6)
store i8*%y7,i8**%i,align 8
%y8=bitcast i8**%e to i8***
%y9=load i8**,i8***%y8,align 8
%za=load i8*,i8**%y9,align 8
store i8*%za,i8**%j,align 8
%zb=call i8*@sml_alloc(i32 inreg 20)#0
%zc=getelementptr inbounds i8,i8*%zb,i64 -4
%zd=bitcast i8*%zc to i32*
store i32 1342177296,i32*%zd,align 4
%ze=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%zf=bitcast i8*%zb to i8**
store i8*%ze,i8**%zf,align 8
%zg=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%zh=getelementptr inbounds i8,i8*%zb,i64 8
%zi=bitcast i8*%zh to i8**
store i8*%zg,i8**%zi,align 8
%zj=getelementptr inbounds i8,i8*%zb,i64 16
%zk=bitcast i8*%zj to i32*
store i32 3,i32*%zk,align 4
%zl=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%zb)
store i8*%zl,i8**%i,align 8
%zm=load i8*,i8**%e,align 8
%zn=getelementptr inbounds i8,i8*%zm,i64 8
%zo=bitcast i8*%zn to i8**
%zp=load i8*,i8**%zo,align 8
store i8*%zp,i8**%e,align 8
%zq=call i8*@sml_alloc(i32 inreg 20)#0
%zr=getelementptr inbounds i8,i8*%zq,i64 -4
%zs=bitcast i8*%zr to i32*
store i32 1342177296,i32*%zs,align 4
%zt=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%zu=bitcast i8*%zq to i8**
store i8*%zt,i8**%zu,align 8
%zv=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%zw=getelementptr inbounds i8,i8*%zq,i64 8
%zx=bitcast i8*%zw to i8**
store i8*%zv,i8**%zx,align 8
%zy=getelementptr inbounds i8,i8*%zq,i64 16
%zz=bitcast i8*%zy to i32*
store i32 3,i32*%zz,align 4
%zA=load i8*,i8**%d,align 8
%zB=load i8*,i8**%g,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%g,align 8
%zC=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%zA,i8*inreg%zq,i8*inreg%zB)
store i8*%zC,i8**%d,align 8
%zD=call i8*@sml_alloc(i32 inreg 28)#0
%zE=getelementptr inbounds i8,i8*%zD,i64 -4
%zF=bitcast i8*%zE to i32*
store i32 1342177304,i32*%zF,align 4
%zG=load i8*,i8**%f,align 8
%zH=bitcast i8*%zD to i8**
store i8*%zG,i8**%zH,align 8
%zI=load i8*,i8**%d,align 8
%zJ=getelementptr inbounds i8,i8*%zD,i64 8
%zK=bitcast i8*%zJ to i8**
store i8*%zI,i8**%zK,align 8
%zL=load i8*,i8**%h,align 8
%zM=getelementptr inbounds i8,i8*%zD,i64 16
%zN=bitcast i8*%zM to i8**
store i8*%zL,i8**%zN,align 8
%zO=getelementptr inbounds i8,i8*%zD,i64 24
%zP=bitcast i8*%zO to i32*
store i32 7,i32*%zP,align 4
%zQ=tail call fastcc i8*@_SMLFN12TypedCalcCon5TPFNME(i8*inreg%zD)
ret i8*%zQ
zR:
%zS=getelementptr inbounds i8,i8*%r,i64 8
%zT=bitcast i8*%zS to i8**
%zU=load i8*,i8**%zT,align 8
%zV=bitcast i8*%zU to i8**
%zW=load i8*,i8**%zV,align 8
store i8*%zW,i8**%f,align 8
%zX=getelementptr inbounds i8,i8*%zU,i64 8
%zY=bitcast i8*%zX to i8**
%zZ=load i8*,i8**%zY,align 8
store i8*%zZ,i8**%g,align 8
%z0=getelementptr inbounds i8,i8*%zU,i64 16
%z1=bitcast i8*%z0 to i8**
%z2=load i8*,i8**%z1,align 8
store i8*%z2,i8**%h,align 8
%z3=getelementptr inbounds i8,i8*%zU,i64 24
%z4=bitcast i8*%z3 to i8**
%z5=load i8*,i8**%z4,align 8
store i8*%z5,i8**%i,align 8
%z6=getelementptr inbounds i8,i8*%zU,i64 32
%z7=bitcast i8*%z6 to i8**
%z8=load i8*,i8**%z7,align 8
store i8*%z8,i8**%j,align 8
%z9=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Aa=getelementptr inbounds i8,i8*%z9,i64 16
%Ab=bitcast i8*%Aa to i8*(i8*,i8*)**
%Ac=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Ab,align 8
%Ad=bitcast i8*%z9 to i8**
%Ae=load i8*,i8**%Ad,align 8
store i8*%Ae,i8**%k,align 8
%Af=load i8*,i8**%d,align 8
%Ag=load i8*,i8**%e,align 8
%Ah=call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeVarInfoE_1032(i8*inreg%Af,i8*inreg%Ag)
%Ai=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%Aj=call fastcc i8*%Ac(i8*inreg%Ai,i8*inreg%Ah)
%Ak=getelementptr inbounds i8,i8*%Aj,i64 16
%Al=bitcast i8*%Ak to i8*(i8*,i8*)**
%Am=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Al,align 8
%An=bitcast i8*%Aj to i8**
%Ao=load i8*,i8**%An,align 8
%Ap=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Aq=call fastcc i8*%Am(i8*inreg%Ao,i8*inreg%Ap)
store i8*%Aq,i8**%f,align 8
%Ar=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%Aq)
store i8*%Ar,i8**%k,align 8
%As=bitcast i8**%e to i8***
%At=load i8**,i8***%As,align 8
%Au=load i8*,i8**%At,align 8
store i8*%Au,i8**%l,align 8
%Av=call i8*@sml_alloc(i32 inreg 20)#0
%Aw=getelementptr inbounds i8,i8*%Av,i64 -4
%Ax=bitcast i8*%Aw to i32*
store i32 1342177296,i32*%Ax,align 4
%Ay=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%Az=bitcast i8*%Av to i8**
store i8*%Ay,i8**%Az,align 8
%AA=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%AB=getelementptr inbounds i8,i8*%Av,i64 8
%AC=bitcast i8*%AB to i8**
store i8*%AA,i8**%AC,align 8
%AD=getelementptr inbounds i8,i8*%Av,i64 16
%AE=bitcast i8*%AD to i32*
store i32 3,i32*%AE,align 4
%AF=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%Av)
store i8*%AF,i8**%k,align 8
%AG=load i8*,i8**%e,align 8
%AH=getelementptr inbounds i8,i8*%AG,i64 8
%AI=bitcast i8*%AH to i8**
%AJ=load i8*,i8**%AI,align 8
store i8*%AJ,i8**%e,align 8
%AK=call i8*@sml_alloc(i32 inreg 20)#0
%AL=getelementptr inbounds i8,i8*%AK,i64 -4
%AM=bitcast i8*%AL to i32*
store i32 1342177296,i32*%AM,align 4
%AN=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%AO=bitcast i8*%AK to i8**
store i8*%AN,i8**%AO,align 8
%AP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%AQ=getelementptr inbounds i8,i8*%AK,i64 8
%AR=bitcast i8*%AQ to i8**
store i8*%AP,i8**%AR,align 8
%AS=getelementptr inbounds i8,i8*%AK,i64 16
%AT=bitcast i8*%AS to i32*
store i32 3,i32*%AT,align 4
%AU=load i8*,i8**%d,align 8
%AV=load i8*,i8**%h,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%h,align 8
%AW=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%AU,i8*inreg%AK,i8*inreg%AV)
store i8*%AW,i8**%d,align 8
%AX=call fastcc i8*@_SMLFN6Option6isSomeE(i32 inreg 1,i32 inreg 8)
%AY=getelementptr inbounds i8,i8*%AX,i64 16
%AZ=bitcast i8*%AY to i8*(i8*,i8*)**
%A0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%AZ,align 8
%A1=bitcast i8*%AX to i8**
%A2=load i8*,i8**%A1,align 8
%A3=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%A4=call fastcc i8*%A0(i8*inreg%A2,i8*inreg%A3)
%A5=bitcast i8*%A4 to i32*
%A6=load i32,i32*%A5,align 4
%A7=call fastcc i32@_SMLFN4Bool3notE(i32 inreg%A6)
%A8=call i8*@sml_alloc(i32 inreg 44)#0
%A9=getelementptr inbounds i8,i8*%A8,i64 -4
%Ba=bitcast i8*%A9 to i32*
store i32 1342177320,i32*%Ba,align 4
%Bb=getelementptr inbounds i8,i8*%A8,i64 28
%Bc=bitcast i8*%Bb to i32*
store i32 0,i32*%Bc,align 1
%Bd=load i8*,i8**%f,align 8
%Be=bitcast i8*%A8 to i8**
store i8*%Bd,i8**%Be,align 8
%Bf=load i8*,i8**%g,align 8
%Bg=getelementptr inbounds i8,i8*%A8,i64 8
%Bh=bitcast i8*%Bg to i8**
store i8*%Bf,i8**%Bh,align 8
%Bi=load i8*,i8**%d,align 8
%Bj=getelementptr inbounds i8,i8*%A8,i64 16
%Bk=bitcast i8*%Bj to i8**
store i8*%Bi,i8**%Bk,align 8
%Bl=getelementptr inbounds i8,i8*%A8,i64 24
%Bm=bitcast i8*%Bl to i32*
store i32%A7,i32*%Bm,align 4
%Bn=load i8*,i8**%i,align 8
%Bo=getelementptr inbounds i8,i8*%A8,i64 32
%Bp=bitcast i8*%Bo to i8**
store i8*%Bn,i8**%Bp,align 8
%Bq=getelementptr inbounds i8,i8*%A8,i64 40
%Br=bitcast i8*%Bq to i32*
store i32 23,i32*%Br,align 4
%Bs=tail call fastcc i8*@_SMLFN12TypedCalcCon12TPCALLBACKFNE(i8*inreg%A8)
ret i8*%Bs
Bt:
%Bu=getelementptr inbounds i8,i8*%r,i64 8
%Bv=bitcast i8*%Bu to i8**
%Bw=load i8*,i8**%Bv,align 8
%Bx=bitcast i8*%Bw to i8**
%By=load i8*,i8**%Bx,align 8
store i8*%By,i8**%f,align 8
%Bz=getelementptr inbounds i8,i8*%Bw,i64 16
%BA=bitcast i8*%Bz to i8**
%BB=load i8*,i8**%BA,align 8
%BC=getelementptr inbounds i8,i8*%Bw,i64 24
%BD=bitcast i8*%BC to i8**
%BE=load i8*,i8**%BD,align 8
store i8*%BE,i8**%g,align 8
%BF=load i8*,i8**%d,align 8
%BG=load i8*,i8**%e,align 8
%BH=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%BF,i8*inreg%BG,i8*inreg%BB)
store i8*%BH,i8**%h,align 8
%BI=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%BJ=getelementptr inbounds i8,i8*%BI,i64 16
%BK=bitcast i8*%BJ to i8*(i8*,i8*)**
%BL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%BK,align 8
%BM=bitcast i8*%BI to i8**
%BN=load i8*,i8**%BM,align 8
store i8*%BN,i8**%i,align 8
%BO=load i8*,i8**%d,align 8
%BP=load i8*,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%BQ=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1101(i8*inreg%BO,i8*inreg%BP)
%BR=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%BS=call fastcc i8*%BL(i8*inreg%BR,i8*inreg%BQ)
%BT=getelementptr inbounds i8,i8*%BS,i64 16
%BU=bitcast i8*%BT to i8*(i8*,i8*)**
%BV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%BU,align 8
%BW=bitcast i8*%BS to i8**
%BX=load i8*,i8**%BW,align 8
%BY=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%BZ=call fastcc i8*%BV(i8*inreg%BX,i8*inreg%BY)
store i8*%BZ,i8**%d,align 8
%B0=call i8*@sml_alloc(i32 inreg 28)#0
%B1=getelementptr inbounds i8,i8*%B0,i64 -4
%B2=bitcast i8*%B1 to i32*
store i32 1342177304,i32*%B2,align 4
%B3=load i8*,i8**%d,align 8
%B4=bitcast i8*%B0 to i8**
store i8*%B3,i8**%B4,align 8
%B5=load i8*,i8**%h,align 8
%B6=getelementptr inbounds i8,i8*%B0,i64 8
%B7=bitcast i8*%B6 to i8**
store i8*%B5,i8**%B7,align 8
%B8=load i8*,i8**%g,align 8
%B9=getelementptr inbounds i8,i8*%B0,i64 16
%Ca=bitcast i8*%B9 to i8**
store i8*%B8,i8**%Ca,align 8
%Cb=getelementptr inbounds i8,i8*%B0,i64 24
%Cc=bitcast i8*%Cb to i32*
store i32 7,i32*%Cc,align 4
%Cd=tail call fastcc i8*@_SMLFN12TypedCalcCon14TPFOREIGNAPPLYE(i8*inreg%B0)
ret i8*%Cd
Ce:
%Cf=getelementptr inbounds i8,i8*%r,i64 8
%Cg=bitcast i8*%Cf to i8**
%Ch=load i8*,i8**%Cg,align 8
%Ci=bitcast i8*%Ch to i8**
%Cj=load i8*,i8**%Ci,align 8
store i8*%Cj,i8**%f,align 8
%Ck=getelementptr inbounds i8,i8*%Ch,i64 8
%Cl=bitcast i8*%Ck to i8**
%Cm=load i8*,i8**%Cl,align 8
store i8*%Cm,i8**%g,align 8
%Cn=getelementptr inbounds i8,i8*%Ch,i64 16
%Co=bitcast i8*%Cn to i8**
%Cp=load i8*,i8**%Co,align 8
%Cq=load i8*,i8**%d,align 8
%Cr=load i8*,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%Cs=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%Cq,i8*inreg%Cr,i8*inreg%Cp)
store i8*%Cs,i8**%d,align 8
%Ct=call i8*@sml_alloc(i32 inreg 28)#0
%Cu=getelementptr inbounds i8,i8*%Ct,i64 -4
%Cv=bitcast i8*%Cu to i32*
store i32 1342177304,i32*%Cv,align 4
%Cw=load i8*,i8**%f,align 8
%Cx=bitcast i8*%Ct to i8**
store i8*%Cw,i8**%Cx,align 8
%Cy=load i8*,i8**%g,align 8
%Cz=getelementptr inbounds i8,i8*%Ct,i64 8
%CA=bitcast i8*%Cz to i8**
store i8*%Cy,i8**%CA,align 8
%CB=load i8*,i8**%d,align 8
%CC=getelementptr inbounds i8,i8*%Ct,i64 16
%CD=bitcast i8*%CC to i8**
store i8*%CB,i8**%CD,align 8
%CE=getelementptr inbounds i8,i8*%Ct,i64 24
%CF=bitcast i8*%CE to i32*
store i32 7,i32*%CF,align 4
%CG=tail call fastcc i8*@_SMLFN12TypedCalcCon15TPFOREIGNSYMBOLE(i8*inreg%Ct)
ret i8*%CG
CH:
%CI=getelementptr inbounds i8,i8*%r,i64 8
%CJ=bitcast i8*%CI to i8**
%CK=load i8*,i8**%CJ,align 8
%CL=bitcast i8*%CK to i8**
%CM=load i8*,i8**%CL,align 8
store i8*%CM,i8**%f,align 8
%CN=getelementptr inbounds i8,i8*%CK,i64 8
%CO=bitcast i8*%CN to i8**
%CP=load i8*,i8**%CO,align 8
%CQ=bitcast i8*%CP to i32*
%CR=load i32,i32*%CQ,align 4
switch i32%CR,label%CS[
i32 1,label%Dy
i32 0,label%Da
]
CS:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%CT=load i8*,i8**@_SMLZ5Match,align 8
store i8*%CT,i8**%d,align 8
%CU=call i8*@sml_alloc(i32 inreg 20)#0
%CV=getelementptr inbounds i8,i8*%CU,i64 -4
%CW=bitcast i8*%CV to i32*
store i32 1342177296,i32*%CW,align 4
store i8*%CU,i8**%e,align 8
%CX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%CY=bitcast i8*%CU to i8**
store i8*%CX,i8**%CY,align 8
%CZ=getelementptr inbounds i8,i8*%CU,i64 8
%C0=bitcast i8*%CZ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@b4,i64 0,i32 2,i64 0),i8**%C0,align 8
%C1=getelementptr inbounds i8,i8*%CU,i64 16
%C2=bitcast i8*%C1 to i32*
store i32 3,i32*%C2,align 4
%C3=call i8*@sml_alloc(i32 inreg 60)#0
%C4=getelementptr inbounds i8,i8*%C3,i64 -4
%C5=bitcast i8*%C4 to i32*
store i32 1342177336,i32*%C5,align 4
%C6=getelementptr inbounds i8,i8*%C3,i64 56
%C7=bitcast i8*%C6 to i32*
store i32 1,i32*%C7,align 4
%C8=load i8*,i8**%e,align 8
%C9=bitcast i8*%C3 to i8**
store i8*%C8,i8**%C9,align 8
call void@sml_raise(i8*inreg%C3)#1
unreachable
Da:
%Db=getelementptr inbounds i8,i8*%CP,i64 8
%Dc=bitcast i8*%Db to i8**
%Dd=load i8*,i8**%Dc,align 8
store i8*%Dd,i8**%g,align 8
%De=getelementptr inbounds i8,i8*%CK,i64 16
%Df=bitcast i8*%De to i8**
%Dg=load i8*,i8**%Df,align 8
store i8*%Dg,i8**%h,align 8
%Dh=load i8*,i8**%d,align 8
%Di=load i8*,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%Dj=call fastcc i8*@_SMLLLN17PolyTyElimination12analyzeFFItyE_1049(i8*inreg%Dh,i8*inreg%Di,i8*inreg%CM)
store i8*%Dj,i8**%d,align 8
%Dk=call i8*@sml_alloc(i32 inreg 28)#0
%Dl=getelementptr inbounds i8,i8*%Dk,i64 -4
%Dm=bitcast i8*%Dl to i32*
store i32 1342177304,i32*%Dm,align 4
%Dn=load i8*,i8**%d,align 8
%Do=bitcast i8*%Dk to i8**
store i8*%Dn,i8**%Do,align 8
%Dp=load i8*,i8**%g,align 8
%Dq=getelementptr inbounds i8,i8*%Dk,i64 8
%Dr=bitcast i8*%Dq to i8**
store i8*%Dp,i8**%Dr,align 8
%Ds=load i8*,i8**%h,align 8
%Dt=getelementptr inbounds i8,i8*%Dk,i64 16
%Du=bitcast i8*%Dt to i8**
store i8*%Ds,i8**%Du,align 8
%Dv=getelementptr inbounds i8,i8*%Dk,i64 24
%Dw=bitcast i8*%Dv to i32*
store i32 7,i32*%Dw,align 4
%Dx=tail call fastcc i8*@_SMLFN12TypedCalcCon15TPFFIIMPORT__EXTE(i8*inreg%Dk)
ret i8*%Dx
Dy:
%Dz=getelementptr inbounds i8,i8*%CP,i64 8
%DA=bitcast i8*%Dz to i8***
%DB=load i8**,i8***%DA,align 8
%DC=load i8*,i8**%DB,align 8
%DD=getelementptr inbounds i8,i8*%CK,i64 16
%DE=bitcast i8*%DD to i8**
%DF=load i8*,i8**%DE,align 8
store i8*%DF,i8**%g,align 8
%DG=load i8*,i8**%d,align 8
%DH=load i8*,i8**%e,align 8
%DI=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%DG,i8*inreg%DH,i8*inreg%DC)
store i8*%DI,i8**%h,align 8
%DJ=load i8*,i8**%d,align 8
%DK=load i8*,i8**%e,align 8
%DL=load i8*,i8**%f,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%DM=call fastcc i8*@_SMLLLN17PolyTyElimination12analyzeFFItyE_1049(i8*inreg%DJ,i8*inreg%DK,i8*inreg%DL)
store i8*%DM,i8**%d,align 8
%DN=call i8*@sml_alloc(i32 inreg 28)#0
%DO=getelementptr inbounds i8,i8*%DN,i64 -4
%DP=bitcast i8*%DO to i32*
store i32 1342177304,i32*%DP,align 4
%DQ=load i8*,i8**%d,align 8
%DR=bitcast i8*%DN to i8**
store i8*%DQ,i8**%DR,align 8
%DS=load i8*,i8**%h,align 8
%DT=getelementptr inbounds i8,i8*%DN,i64 8
%DU=bitcast i8*%DT to i8**
store i8*%DS,i8**%DU,align 8
%DV=load i8*,i8**%g,align 8
%DW=getelementptr inbounds i8,i8*%DN,i64 16
%DX=bitcast i8*%DW to i8**
store i8*%DV,i8**%DX,align 8
%DY=getelementptr inbounds i8,i8*%DN,i64 24
%DZ=bitcast i8*%DY to i32*
store i32 7,i32*%DZ,align 4
%D0=tail call fastcc i8*@_SMLFN12TypedCalcCon15TPFFIIMPORT__FUNE(i8*inreg%DN)
ret i8*%D0
D1:
%D2=getelementptr inbounds i8,i8*%r,i64 8
%D3=bitcast i8*%D2 to i8**
%D4=load i8*,i8**%D3,align 8
%D5=bitcast i8*%D4 to i8**
%D6=load i8*,i8**%D5,align 8
store i8*%D6,i8**%d,align 8
%D7=getelementptr inbounds i8,i8*%D4,i64 8
%D8=bitcast i8*%D7 to i8**
%D9=load i8*,i8**%D8,align 8
store i8*%D9,i8**%f,align 8
%Ea=call fastcc i8*@_SMLFN13LongsymbolEnv4findE(i32 inreg 1,i32 inreg 8)
%Eb=getelementptr inbounds i8,i8*%Ea,i64 16
%Ec=bitcast i8*%Eb to i8*(i8*,i8*)**
%Ed=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Ec,align 8
%Ee=bitcast i8*%Ea to i8**
%Ef=load i8*,i8**%Ee,align 8
store i8*%Ef,i8**%h,align 8
%Eg=bitcast i8**%e to i8***
%Eh=load i8**,i8***%Eg,align 8
%Ei=load i8*,i8**%Eh,align 8
%Ej=getelementptr inbounds i8,i8*%Ei,i64 16
%Ek=bitcast i8*%Ej to i8**
%El=load i8*,i8**%Ek,align 8
store i8*%El,i8**%e,align 8
%Em=bitcast i8**%d to i8***
%En=load i8**,i8***%Em,align 8
%Eo=load i8*,i8**%En,align 8
store i8*%Eo,i8**%g,align 8
%Ep=call i8*@sml_alloc(i32 inreg 20)#0
%Eq=getelementptr inbounds i8,i8*%Ep,i64 -4
%Er=bitcast i8*%Eq to i32*
store i32 1342177296,i32*%Er,align 4
%Es=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Et=bitcast i8*%Ep to i8**
store i8*%Es,i8**%Et,align 8
%Eu=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Ev=getelementptr inbounds i8,i8*%Ep,i64 8
%Ew=bitcast i8*%Ev to i8**
store i8*%Eu,i8**%Ew,align 8
%Ex=getelementptr inbounds i8,i8*%Ep,i64 16
%Ey=bitcast i8*%Ex to i32*
store i32 3,i32*%Ey,align 4
%Ez=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%EA=call fastcc i8*%Ed(i8*inreg%Ez,i8*inreg%Ep)
%EB=icmp eq i8*%EA,null
br i1%EB,label%EC,label%E1
EC:
store i8*null,i8**%f,align 8
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@c7,i64 0,i32 2,i64 0))
%ED=load i8**,i8***%Em,align 8
store i8*null,i8**%d,align 8
%EE=load i8*,i8**%ED,align 8
%EF=call fastcc i8*@_SMLFN6Symbol18longsymbolToStringE(i8*inreg%EE)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%EF)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@do,i64 0,i32 2,i64 0))
%EG=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%EG,i8**%d,align 8
%EH=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bO,i64 0,i32 2)to i8*))
store i8*%EH,i8**%e,align 8
%EI=call i8*@sml_alloc(i32 inreg 28)#0
%EJ=getelementptr inbounds i8,i8*%EI,i64 -4
%EK=bitcast i8*%EJ to i32*
store i32 1342177304,i32*%EK,align 4
store i8*%EI,i8**%f,align 8
%EL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%EM=bitcast i8*%EI to i8**
store i8*%EL,i8**%EM,align 8
%EN=getelementptr inbounds i8,i8*%EI,i64 8
%EO=bitcast i8*%EN to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%EO,align 8
%EP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%EQ=getelementptr inbounds i8,i8*%EI,i64 16
%ER=bitcast i8*%EQ to i8**
store i8*%EP,i8**%ER,align 8
%ES=getelementptr inbounds i8,i8*%EI,i64 24
%ET=bitcast i8*%ES to i32*
store i32 7,i32*%ET,align 4
%EU=call i8*@sml_alloc(i32 inreg 60)#0
%EV=getelementptr inbounds i8,i8*%EU,i64 -4
%EW=bitcast i8*%EV to i32*
store i32 1342177336,i32*%EW,align 4
%EX=getelementptr inbounds i8,i8*%EU,i64 56
%EY=bitcast i8*%EX to i32*
store i32 1,i32*%EY,align 4
%EZ=load i8*,i8**%f,align 8
%E0=bitcast i8*%EU to i8**
store i8*%EZ,i8**%E0,align 8
call void@sml_raise(i8*inreg%EU)#1
unreachable
E1:
%E2=bitcast i8*%EA to i8**
%E3=load i8*,i8**%E2,align 8
%E4=getelementptr inbounds i8,i8*%E3,i64 8
%E5=bitcast i8*%E4 to i8**
%E6=load i8*,i8**%E5,align 8
store i8*%E6,i8**%e,align 8
%E7=load i8**,i8***%Em,align 8
%E8=load i8*,i8**%E7,align 8
store i8*%E8,i8**%d,align 8
%E9=call i8*@sml_alloc(i32 inreg 20)#0
%Fa=getelementptr inbounds i8,i8*%E9,i64 -4
%Fb=bitcast i8*%Fa to i32*
store i32 1342177296,i32*%Fb,align 4
store i8*%E9,i8**%g,align 8
%Fc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Fd=bitcast i8*%E9 to i8**
store i8*%Fc,i8**%Fd,align 8
%Fe=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Ff=getelementptr inbounds i8,i8*%E9,i64 8
%Fg=bitcast i8*%Ff to i8**
store i8*%Fe,i8**%Fg,align 8
%Fh=getelementptr inbounds i8,i8*%E9,i64 16
%Fi=bitcast i8*%Fh to i32*
store i32 3,i32*%Fi,align 4
%Fj=call i8*@sml_alloc(i32 inreg 20)#0
%Fk=getelementptr inbounds i8,i8*%Fj,i64 -4
%Fl=bitcast i8*%Fk to i32*
store i32 1342177296,i32*%Fl,align 4
%Fm=load i8*,i8**%g,align 8
%Fn=bitcast i8*%Fj to i8**
store i8*%Fm,i8**%Fn,align 8
%Fo=load i8*,i8**%f,align 8
%Fp=getelementptr inbounds i8,i8*%Fj,i64 8
%Fq=bitcast i8*%Fp to i8**
store i8*%Fo,i8**%Fq,align 8
%Fr=getelementptr inbounds i8,i8*%Fj,i64 16
%Fs=bitcast i8*%Fr to i32*
store i32 3,i32*%Fs,align 4
%Ft=tail call fastcc i8*@_SMLFN12TypedCalcCon7TPEXVARE(i8*inreg%Fj)
ret i8*%Ft
Fu:
%Fv=getelementptr inbounds i8,i8*%r,i64 8
%Fw=bitcast i8*%Fv to i8**
%Fx=load i8*,i8**%Fw,align 8
%Fy=bitcast i8*%Fx to i8**
%Fz=load i8*,i8**%Fy,align 8
store i8*%Fz,i8**%d,align 8
%FA=getelementptr inbounds i8,i8*%Fx,i64 8
%FB=bitcast i8*%FA to i8**
%FC=load i8*,i8**%FB,align 8
store i8*%FC,i8**%f,align 8
%FD=call fastcc i8*@_SMLFN13LongsymbolEnv4findE(i32 inreg 1,i32 inreg 8)
%FE=getelementptr inbounds i8,i8*%FD,i64 16
%FF=bitcast i8*%FE to i8*(i8*,i8*)**
%FG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%FF,align 8
%FH=bitcast i8*%FD to i8**
%FI=load i8*,i8**%FH,align 8
store i8*%FI,i8**%h,align 8
%FJ=bitcast i8**%e to i8***
%FK=load i8**,i8***%FJ,align 8
%FL=load i8*,i8**%FK,align 8
%FM=getelementptr inbounds i8,i8*%FL,i64 8
%FN=bitcast i8*%FM to i8**
%FO=load i8*,i8**%FN,align 8
store i8*%FO,i8**%e,align 8
%FP=bitcast i8**%d to i8***
%FQ=load i8**,i8***%FP,align 8
%FR=load i8*,i8**%FQ,align 8
store i8*%FR,i8**%g,align 8
%FS=call i8*@sml_alloc(i32 inreg 20)#0
%FT=getelementptr inbounds i8,i8*%FS,i64 -4
%FU=bitcast i8*%FT to i32*
store i32 1342177296,i32*%FU,align 4
%FV=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%FW=bitcast i8*%FS to i8**
store i8*%FV,i8**%FW,align 8
%FX=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%FY=getelementptr inbounds i8,i8*%FS,i64 8
%FZ=bitcast i8*%FY to i8**
store i8*%FX,i8**%FZ,align 8
%F0=getelementptr inbounds i8,i8*%FS,i64 16
%F1=bitcast i8*%F0 to i32*
store i32 3,i32*%F1,align 4
%F2=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%F3=call fastcc i8*%FG(i8*inreg%F2,i8*inreg%FS)
%F4=icmp eq i8*%F3,null
br i1%F4,label%F5,label%Gr
F5:
store i8*null,i8**%f,align 8
%F6=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%F6,i8**%d,align 8
%F7=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bM,i64 0,i32 2)to i8*))
store i8*%F7,i8**%e,align 8
%F8=call i8*@sml_alloc(i32 inreg 28)#0
%F9=getelementptr inbounds i8,i8*%F8,i64 -4
%Ga=bitcast i8*%F9 to i32*
store i32 1342177304,i32*%Ga,align 4
store i8*%F8,i8**%f,align 8
%Gb=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Gc=bitcast i8*%F8 to i8**
store i8*%Gb,i8**%Gc,align 8
%Gd=getelementptr inbounds i8,i8*%F8,i64 8
%Ge=bitcast i8*%Gd to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%Ge,align 8
%Gf=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Gg=getelementptr inbounds i8,i8*%F8,i64 16
%Gh=bitcast i8*%Gg to i8**
store i8*%Gf,i8**%Gh,align 8
%Gi=getelementptr inbounds i8,i8*%F8,i64 24
%Gj=bitcast i8*%Gi to i32*
store i32 7,i32*%Gj,align 4
%Gk=call i8*@sml_alloc(i32 inreg 60)#0
%Gl=getelementptr inbounds i8,i8*%Gk,i64 -4
%Gm=bitcast i8*%Gl to i32*
store i32 1342177336,i32*%Gm,align 4
%Gn=getelementptr inbounds i8,i8*%Gk,i64 56
%Go=bitcast i8*%Gn to i32*
store i32 1,i32*%Go,align 4
%Gp=load i8*,i8**%f,align 8
%Gq=bitcast i8*%Gk to i8**
store i8*%Gp,i8**%Gq,align 8
call void@sml_raise(i8*inreg%Gk)#1
unreachable
Gr:
%Gs=bitcast i8*%F3 to i8**
%Gt=load i8*,i8**%Gs,align 8
%Gu=getelementptr inbounds i8,i8*%Gt,i64 8
%Gv=bitcast i8*%Gu to i8**
%Gw=load i8*,i8**%Gv,align 8
store i8*%Gw,i8**%e,align 8
%Gx=load i8**,i8***%FP,align 8
%Gy=load i8*,i8**%Gx,align 8
store i8*%Gy,i8**%d,align 8
%Gz=call i8*@sml_alloc(i32 inreg 20)#0
%GA=getelementptr inbounds i8,i8*%Gz,i64 -4
%GB=bitcast i8*%GA to i32*
store i32 1342177296,i32*%GB,align 4
store i8*%Gz,i8**%g,align 8
%GC=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%GD=bitcast i8*%Gz to i8**
store i8*%GC,i8**%GD,align 8
%GE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%GF=getelementptr inbounds i8,i8*%Gz,i64 8
%GG=bitcast i8*%GF to i8**
store i8*%GE,i8**%GG,align 8
%GH=getelementptr inbounds i8,i8*%Gz,i64 16
%GI=bitcast i8*%GH to i32*
store i32 3,i32*%GI,align 4
%GJ=call i8*@sml_alloc(i32 inreg 20)#0
%GK=getelementptr inbounds i8,i8*%GJ,i64 -4
%GL=bitcast i8*%GK to i32*
store i32 1342177296,i32*%GL,align 4
%GM=load i8*,i8**%g,align 8
%GN=bitcast i8*%GJ to i8**
store i8*%GM,i8**%GN,align 8
%GO=load i8*,i8**%f,align 8
%GP=getelementptr inbounds i8,i8*%GJ,i64 8
%GQ=bitcast i8*%GP to i8**
store i8*%GO,i8**%GQ,align 8
%GR=getelementptr inbounds i8,i8*%GJ,i64 16
%GS=bitcast i8*%GR to i32*
store i32 3,i32*%GS,align 4
%GT=tail call fastcc i8*@_SMLFN12TypedCalcCon10TPEXEXNTAGE(i8*inreg%GJ)
ret i8*%GT
GU:
%GV=getelementptr inbounds i8,i8*%r,i64 8
%GW=bitcast i8*%GV to i8**
%GX=load i8*,i8**%GW,align 8
%GY=bitcast i8*%GX to i8**
%GZ=load i8*,i8**%GY,align 8
store i8*%GZ,i8**%d,align 8
%G0=getelementptr inbounds i8,i8*%GX,i64 8
%G1=bitcast i8*%G0 to i8**
%G2=load i8*,i8**%G1,align 8
store i8*%G2,i8**%f,align 8
%G3=call fastcc i8*@_SMLFN5ExnID3Map4findE(i32 inreg 1,i32 inreg 8)
%G4=getelementptr inbounds i8,i8*%G3,i64 16
%G5=bitcast i8*%G4 to i8*(i8*,i8*)**
%G6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G5,align 8
%G7=bitcast i8*%G3 to i8**
%G8=load i8*,i8**%G7,align 8
store i8*%G8,i8**%g,align 8
%G9=bitcast i8**%e to i8***
%Ha=load i8**,i8***%G9,align 8
%Hb=load i8*,i8**%Ha,align 8
%Hc=getelementptr inbounds i8,i8*%Hb,i64 24
%Hd=bitcast i8*%Hc to i8**
%He=load i8*,i8**%Hd,align 8
store i8*%He,i8**%e,align 8
%Hf=bitcast i8**%d to i32**
%Hg=load i32*,i32**%Hf,align 8
%Hh=load i32,i32*%Hg,align 4
%Hi=call i8*@sml_alloc(i32 inreg 20)#0
%Hj=getelementptr inbounds i8,i8*%Hi,i64 -4
%Hk=bitcast i8*%Hj to i32*
store i32 1342177296,i32*%Hk,align 4
%Hl=getelementptr inbounds i8,i8*%Hi,i64 12
%Hm=bitcast i8*%Hl to i32*
store i32 0,i32*%Hm,align 1
%Hn=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Ho=bitcast i8*%Hi to i8**
store i8*%Hn,i8**%Ho,align 8
%Hp=getelementptr inbounds i8,i8*%Hi,i64 8
%Hq=bitcast i8*%Hp to i32*
store i32%Hh,i32*%Hq,align 4
%Hr=getelementptr inbounds i8,i8*%Hi,i64 16
%Hs=bitcast i8*%Hr to i32*
store i32 1,i32*%Hs,align 4
%Ht=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Hu=call fastcc i8*%G6(i8*inreg%Ht,i8*inreg%Hi)
%Hv=icmp eq i8*%Hu,null
br i1%Hv,label%Hw,label%HS
Hw:
store i8*null,i8**%f,align 8
%Hx=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%Hx,i8**%d,align 8
%Hy=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bK,i64 0,i32 2)to i8*))
store i8*%Hy,i8**%e,align 8
%Hz=call i8*@sml_alloc(i32 inreg 28)#0
%HA=getelementptr inbounds i8,i8*%Hz,i64 -4
%HB=bitcast i8*%HA to i32*
store i32 1342177304,i32*%HB,align 4
store i8*%Hz,i8**%f,align 8
%HC=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%HD=bitcast i8*%Hz to i8**
store i8*%HC,i8**%HD,align 8
%HE=getelementptr inbounds i8,i8*%Hz,i64 8
%HF=bitcast i8*%HE to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%HF,align 8
%HG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%HH=getelementptr inbounds i8,i8*%Hz,i64 16
%HI=bitcast i8*%HH to i8**
store i8*%HG,i8**%HI,align 8
%HJ=getelementptr inbounds i8,i8*%Hz,i64 24
%HK=bitcast i8*%HJ to i32*
store i32 7,i32*%HK,align 4
%HL=call i8*@sml_alloc(i32 inreg 60)#0
%HM=getelementptr inbounds i8,i8*%HL,i64 -4
%HN=bitcast i8*%HM to i32*
store i32 1342177336,i32*%HN,align 4
%HO=getelementptr inbounds i8,i8*%HL,i64 56
%HP=bitcast i8*%HO to i32*
store i32 1,i32*%HP,align 4
%HQ=load i8*,i8**%f,align 8
%HR=bitcast i8*%HL to i8**
store i8*%HQ,i8**%HR,align 8
call void@sml_raise(i8*inreg%HL)#1
unreachable
HS:
%HT=bitcast i8*%Hu to i8**
%HU=load i8*,i8**%HT,align 8
%HV=getelementptr inbounds i8,i8*%HU,i64 16
%HW=bitcast i8*%HV to i8**
%HX=load i8*,i8**%HW,align 8
store i8*%HX,i8**%e,align 8
%HY=load i8*,i8**%d,align 8
%HZ=bitcast i8*%HY to i32*
%H0=load i32,i32*%HZ,align 4
%H1=getelementptr inbounds i8,i8*%HY,i64 8
%H2=bitcast i8*%H1 to i8**
%H3=load i8*,i8**%H2,align 8
store i8*%H3,i8**%d,align 8
%H4=call i8*@sml_alloc(i32 inreg 28)#0
%H5=getelementptr inbounds i8,i8*%H4,i64 -4
%H6=bitcast i8*%H5 to i32*
store i32 1342177304,i32*%H6,align 4
store i8*%H4,i8**%g,align 8
%H7=getelementptr inbounds i8,i8*%H4,i64 4
%H8=bitcast i8*%H7 to i32*
store i32 0,i32*%H8,align 1
%H9=bitcast i8*%H4 to i32*
store i32%H0,i32*%H9,align 4
%Ia=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Ib=getelementptr inbounds i8,i8*%H4,i64 8
%Ic=bitcast i8*%Ib to i8**
store i8*%Ia,i8**%Ic,align 8
%Id=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Ie=getelementptr inbounds i8,i8*%H4,i64 16
%If=bitcast i8*%Ie to i8**
store i8*%Id,i8**%If,align 8
%Ig=getelementptr inbounds i8,i8*%H4,i64 24
%Ih=bitcast i8*%Ig to i32*
store i32 6,i32*%Ih,align 4
%Ii=call i8*@sml_alloc(i32 inreg 20)#0
%Ij=getelementptr inbounds i8,i8*%Ii,i64 -4
%Ik=bitcast i8*%Ij to i32*
store i32 1342177296,i32*%Ik,align 4
%Il=load i8*,i8**%g,align 8
%Im=bitcast i8*%Ii to i8**
store i8*%Il,i8**%Im,align 8
%In=load i8*,i8**%f,align 8
%Io=getelementptr inbounds i8,i8*%Ii,i64 8
%Ip=bitcast i8*%Io to i8**
store i8*%In,i8**%Ip,align 8
%Iq=getelementptr inbounds i8,i8*%Ii,i64 16
%Ir=bitcast i8*%Iq to i32*
store i32 3,i32*%Ir,align 4
%Is=tail call fastcc i8*@_SMLFN12TypedCalcCon8TPEXNTAGE(i8*inreg%Ii)
ret i8*%Is
It:
%Iu=getelementptr inbounds i8,i8*%r,i64 8
%Iv=bitcast i8*%Iu to i8**
%Iw=load i8*,i8**%Iv,align 8
%Ix=bitcast i8*%Iw to i8**
%Iy=load i8*,i8**%Ix,align 8
store i8*%Iy,i8**%f,align 8
%Iz=getelementptr inbounds i8,i8*%Iw,i64 8
%IA=bitcast i8*%Iz to i8**
%IB=load i8*,i8**%IA,align 8
%IC=getelementptr inbounds i8,i8*%Iw,i64 16
%ID=bitcast i8*%IC to i8**
%IE=load i8*,i8**%ID,align 8
store i8*%IE,i8**%g,align 8
%IF=load i8*,i8**%e,align 8
%IG=call fastcc i8*@_SMLLLN17PolyTyElimination13analyzeExnConE_1047(i8*inreg%IF,i8*inreg%IB)
%IH=bitcast i8*%IG to i8**
%II=load i8*,i8**%IH,align 8
store i8*%II,i8**%h,align 8
%IJ=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%IK=getelementptr inbounds i8,i8*%IJ,i64 16
%IL=bitcast i8*%IK to i8*(i8*,i8*)**
%IM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%IL,align 8
%IN=bitcast i8*%IJ to i8**
%IO=load i8*,i8**%IN,align 8
store i8*%IO,i8**%i,align 8
%IP=load i8*,i8**%d,align 8
%IQ=load i8*,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%IR=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1101(i8*inreg%IP,i8*inreg%IQ)
%IS=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%IT=call fastcc i8*%IM(i8*inreg%IS,i8*inreg%IR)
%IU=getelementptr inbounds i8,i8*%IT,i64 16
%IV=bitcast i8*%IU to i8*(i8*,i8*)**
%IW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%IV,align 8
%IX=bitcast i8*%IT to i8**
%IY=load i8*,i8**%IX,align 8
%IZ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%I0=call fastcc i8*%IW(i8*inreg%IY,i8*inreg%IZ)
store i8*%I0,i8**%d,align 8
%I1=call i8*@sml_alloc(i32 inreg 28)#0
%I2=getelementptr inbounds i8,i8*%I1,i64 -4
%I3=bitcast i8*%I2 to i32*
store i32 1342177304,i32*%I3,align 4
%I4=load i8*,i8**%d,align 8
%I5=bitcast i8*%I1 to i8**
store i8*%I4,i8**%I5,align 8
%I6=load i8*,i8**%h,align 8
%I7=getelementptr inbounds i8,i8*%I1,i64 8
%I8=bitcast i8*%I7 to i8**
store i8*%I6,i8**%I8,align 8
%I9=load i8*,i8**%g,align 8
%Ja=getelementptr inbounds i8,i8*%I1,i64 16
%Jb=bitcast i8*%Ja to i8**
store i8*%I9,i8**%Jb,align 8
%Jc=getelementptr inbounds i8,i8*%I1,i64 24
%Jd=bitcast i8*%Jc to i32*
store i32 7,i32*%Jd,align 4
%Je=tail call fastcc i8*@_SMLFN12TypedCalcCon14TPEXNCONSTRUCTE(i8*inreg%I1)
ret i8*%Je
Jf:
%Jg=load i8*,i8**@_SMLZN12TypedCalcCon7TPERRORE,align 8
ret i8*%Jg
Jh:
%Ji=getelementptr inbounds i8,i8*%r,i64 8
%Jj=bitcast i8*%Ji to i8**
%Jk=load i8*,i8**%Jj,align 8
%Jl=bitcast i8*%Jk to i8**
%Jm=load i8*,i8**%Jl,align 8
%Jn=getelementptr inbounds i8,i8*%Jk,i64 8
%Jo=bitcast i8*%Jn to i8**
%Jp=load i8*,i8**%Jo,align 8
store i8*%Jp,i8**%f,align 8
%Jq=getelementptr inbounds i8,i8*%Jk,i64 24
%Jr=bitcast i8*%Jq to i8**
%Js=load i8*,i8**%Jr,align 8
store i8*%Js,i8**%g,align 8
%Jt=getelementptr inbounds i8,i8*%Jk,i64 32
%Ju=bitcast i8*%Jt to i8**
%Jv=load i8*,i8**%Ju,align 8
store i8*%Jv,i8**%h,align 8
%Jw=load i8*,i8**%d,align 8
%Jx=load i8*,i8**%e,align 8
%Jy=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%Jw,i8*inreg%Jx,i8*inreg%Jm)
store i8*%Jy,i8**%i,align 8
%Jz=load i8*,i8**%d,align 8
%JA=load i8*,i8**%e,align 8
%JB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%JC=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%Jz,i8*inreg%JA,i8*inreg%JB)
store i8*%JC,i8**%f,align 8
%JD=getelementptr inbounds i8,i8*%JC,i64 8
%JE=bitcast i8*%JD to i8**
%JF=load i8*,i8**%JE,align 8
store i8*%JF,i8**%j,align 8
%JG=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%JH=getelementptr inbounds i8,i8*%JG,i64 16
%JI=bitcast i8*%JH to i8*(i8*,i8*)**
%JJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%JI,align 8
%JK=bitcast i8*%JG to i8**
%JL=load i8*,i8**%JK,align 8
store i8*%JL,i8**%k,align 8
%JM=load i8*,i8**%d,align 8
%JN=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%JO=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1027(i8*inreg%JM,i8*inreg%JN)
%JP=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%JQ=call fastcc i8*%JJ(i8*inreg%JP,i8*inreg%JO)
%JR=getelementptr inbounds i8,i8*%JQ,i64 16
%JS=bitcast i8*%JR to i8*(i8*,i8*)**
%JT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%JS,align 8
%JU=bitcast i8*%JQ to i8**
%JV=load i8*,i8**%JU,align 8
%JW=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%JX=call fastcc i8*%JT(i8*inreg%JV,i8*inreg%JW)
store i8*%JX,i8**%e,align 8
%JY=load i8*,i8**%d,align 8
%JZ=load i8*,i8**%j,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%j,align 8
call fastcc void@_SMLLLN17PolyTyElimination6exportE_1022(i8*inreg%JY,i8*inreg%JZ)
%J0=call i8*@sml_alloc(i32 inreg 36)#0
%J1=getelementptr inbounds i8,i8*%J0,i64 -4
%J2=bitcast i8*%J1 to i32*
store i32 1342177312,i32*%J2,align 4
%J3=load i8*,i8**%i,align 8
%J4=bitcast i8*%J0 to i8**
store i8*%J3,i8**%J4,align 8
%J5=load i8*,i8**%f,align 8
%J6=getelementptr inbounds i8,i8*%J0,i64 8
%J7=bitcast i8*%J6 to i8**
store i8*%J5,i8**%J7,align 8
%J8=load i8*,i8**%e,align 8
%J9=getelementptr inbounds i8,i8*%J0,i64 16
%Ka=bitcast i8*%J9 to i8**
store i8*%J8,i8**%Ka,align 8
%Kb=load i8*,i8**%h,align 8
%Kc=getelementptr inbounds i8,i8*%J0,i64 24
%Kd=bitcast i8*%Kc to i8**
store i8*%Kb,i8**%Kd,align 8
%Ke=getelementptr inbounds i8,i8*%J0,i64 32
%Kf=bitcast i8*%Ke to i32*
store i32 15,i32*%Kf,align 4
%Kg=tail call fastcc i8*@_SMLFN12TypedCalcCon18TPDYNAMICEXISTTAPPE(i8*inreg%J0)
ret i8*%Kg
Kh:
%Ki=getelementptr inbounds i8,i8*%r,i64 8
%Kj=bitcast i8*%Ki to i8**
%Kk=load i8*,i8**%Kj,align 8
%Kl=bitcast i8*%Kk to i8**
%Km=load i8*,i8**%Kl,align 8
store i8*%Km,i8**%f,align 8
%Kn=getelementptr inbounds i8,i8*%Kk,i64 8
%Ko=bitcast i8*%Kn to i8**
%Kp=load i8*,i8**%Ko,align 8
store i8*%Kp,i8**%g,align 8
%Kq=getelementptr inbounds i8,i8*%Kk,i64 16
%Kr=bitcast i8*%Kq to i8**
%Ks=load i8*,i8**%Kr,align 8
store i8*%Ks,i8**%h,align 8
%Kt=getelementptr inbounds i8,i8*%Kk,i64 24
%Ku=bitcast i8*%Kt to i8**
%Kv=load i8*,i8**%Ku,align 8
%Kw=getelementptr inbounds i8,i8*%Kk,i64 32
%Kx=bitcast i8*%Kw to i8**
%Ky=load i8*,i8**%Kx,align 8
store i8*%Ky,i8**%i,align 8
%Kz=getelementptr inbounds i8,i8*%Kk,i64 40
%KA=bitcast i8*%Kz to i8**
%KB=load i8*,i8**%KA,align 8
store i8*%KB,i8**%j,align 8
%KC=getelementptr inbounds i8,i8*%Kk,i64 48
%KD=bitcast i8*%KC to i8**
%KE=load i8*,i8**%KD,align 8
store i8*%KE,i8**%k,align 8
%KF=load i8*,i8**%d,align 8
%KG=load i8*,i8**%e,align 8
%KH=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%KF,i8*inreg%KG,i8*inreg%Kv)
store i8*%KH,i8**%l,align 8
%KI=load i8*,i8**%d,align 8
%KJ=load i8*,i8**%e,align 8
%KK=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%KL=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%KI,i8*inreg%KJ,i8*inreg%KK)
store i8*%KL,i8**%i,align 8
%KM=load i8*,i8**%d,align 8
%KN=load i8*,i8**%e,align 8
%KO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%KP=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%KM,i8*inreg%KN,i8*inreg%KO)
store i8*%KP,i8**%f,align 8
%KQ=load i8*,i8**%d,align 8
%KR=load i8*,i8**%e,align 8
%KS=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%KT=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%KQ,i8*inreg%KR,i8*inreg%KS)
store i8*%KT,i8**%g,align 8
%KU=load i8*,i8**%d,align 8
%KV=load i8*,i8**%e,align 8
%KW=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%KX=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%KU,i8*inreg%KV,i8*inreg%KW)
store i8*%KX,i8**%h,align 8
%KY=load i8*,i8**%d,align 8
%KZ=load i8*,i8**%e,align 8
%K0=load i8*,i8**%k,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%k,align 8
%K1=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%KY,i8*inreg%KZ,i8*inreg%K0)
store i8*%K1,i8**%d,align 8
%K2=call i8*@sml_alloc(i32 inreg 60)#0
%K3=getelementptr inbounds i8,i8*%K2,i64 -4
%K4=bitcast i8*%K3 to i32*
store i32 1342177336,i32*%K4,align 4
%K5=load i8*,i8**%f,align 8
%K6=bitcast i8*%K2 to i8**
store i8*%K5,i8**%K6,align 8
%K7=load i8*,i8**%g,align 8
%K8=getelementptr inbounds i8,i8*%K2,i64 8
%K9=bitcast i8*%K8 to i8**
store i8*%K7,i8**%K9,align 8
%La=load i8*,i8**%h,align 8
%Lb=getelementptr inbounds i8,i8*%K2,i64 16
%Lc=bitcast i8*%Lb to i8**
store i8*%La,i8**%Lc,align 8
%Ld=load i8*,i8**%l,align 8
%Le=getelementptr inbounds i8,i8*%K2,i64 24
%Lf=bitcast i8*%Le to i8**
store i8*%Ld,i8**%Lf,align 8
%Lg=load i8*,i8**%i,align 8
%Lh=getelementptr inbounds i8,i8*%K2,i64 32
%Li=bitcast i8*%Lh to i8**
store i8*%Lg,i8**%Li,align 8
%Lj=load i8*,i8**%j,align 8
%Lk=getelementptr inbounds i8,i8*%K2,i64 40
%Ll=bitcast i8*%Lk to i8**
store i8*%Lj,i8**%Ll,align 8
%Lm=load i8*,i8**%d,align 8
%Ln=getelementptr inbounds i8,i8*%K2,i64 48
%Lo=bitcast i8*%Ln to i8**
store i8*%Lm,i8**%Lo,align 8
%Lp=getelementptr inbounds i8,i8*%K2,i64 56
%Lq=bitcast i8*%Lp to i32*
store i32 127,i32*%Lq,align 4
%Lr=tail call fastcc i8*@_SMLFN12TypedCalcCon13TPDYNAMICCASEE(i8*inreg%K2)
ret i8*%Lr
Ls:
%Lt=getelementptr inbounds i8,i8*%r,i64 8
%Lu=bitcast i8*%Lt to i8**
%Lv=load i8*,i8**%Lu,align 8
%Lw=bitcast i8*%Lv to i8**
%Lx=load i8*,i8**%Lw,align 8
store i8*%Lx,i8**%f,align 8
%Ly=getelementptr inbounds i8,i8*%Lv,i64 8
%Lz=bitcast i8*%Ly to i8**
%LA=load i8*,i8**%Lz,align 8
%LB=getelementptr inbounds i8,i8*%Lv,i64 16
%LC=bitcast i8*%LB to i8**
%LD=load i8*,i8**%LC,align 8
store i8*%LD,i8**%g,align 8
%LE=getelementptr inbounds i8,i8*%Lv,i64 24
%LF=bitcast i8*%LE to i8**
%LG=load i8*,i8**%LF,align 8
store i8*%LG,i8**%h,align 8
%LH=load i8*,i8**%d,align 8
%LI=load i8*,i8**%e,align 8
%LJ=call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeConInfoE_1034(i8*inreg%LH,i8*inreg%LI,i8*inreg%LA)
store i8*%LJ,i8**%i,align 8
%LK=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%LL=getelementptr inbounds i8,i8*%LK,i64 16
%LM=bitcast i8*%LL to i8*(i8*,i8*)**
%LN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%LM,align 8
%LO=bitcast i8*%LK to i8**
%LP=load i8*,i8**%LO,align 8
store i8*%LP,i8**%k,align 8
%LQ=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%LR=getelementptr inbounds i8,i8*%LQ,i64 16
%LS=bitcast i8*%LR to i8*(i8*,i8*)**
%LT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%LS,align 8
%LU=bitcast i8*%LQ to i8**
%LV=load i8*,i8**%LU,align 8
store i8*%LV,i8**%j,align 8
%LW=load i8*,i8**%d,align 8
%LX=load i8*,i8**%e,align 8
%LY=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1027(i8*inreg%LW,i8*inreg%LX)
%LZ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%L0=call fastcc i8*%LT(i8*inreg%LZ,i8*inreg%LY)
%L1=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%L2=call fastcc i8*%LN(i8*inreg%L1,i8*inreg%L0)
%L3=getelementptr inbounds i8,i8*%L2,i64 16
%L4=bitcast i8*%L3 to i8*(i8*,i8*)**
%L5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L4,align 8
%L6=bitcast i8*%L2 to i8**
%L7=load i8*,i8**%L6,align 8
%L8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%L9=call fastcc i8*%L5(i8*inreg%L7,i8*inreg%L8)
store i8*%L9,i8**%g,align 8
%Ma=load i8*,i8**%i,align 8
%Mb=getelementptr inbounds i8,i8*%Ma,i64 16
%Mc=bitcast i8*%Mb to i8**
%Md=load i8*,i8**%Mc,align 8
%Me=load i8*,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination6exportE_1022(i8*inreg%Me,i8*inreg%Md)
%Mf=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Mg=getelementptr inbounds i8,i8*%Mf,i64 16
%Mh=bitcast i8*%Mg to i8*(i8*,i8*)**
%Mi=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Mh,align 8
%Mj=bitcast i8*%Mf to i8**
%Mk=load i8*,i8**%Mj,align 8
store i8*%Mk,i8**%j,align 8
%Ml=load i8*,i8**%d,align 8
%Mm=load i8*,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%Mn=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1101(i8*inreg%Ml,i8*inreg%Mm)
%Mo=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%Mp=call fastcc i8*%Mi(i8*inreg%Mo,i8*inreg%Mn)
%Mq=getelementptr inbounds i8,i8*%Mp,i64 16
%Mr=bitcast i8*%Mq to i8*(i8*,i8*)**
%Ms=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Mr,align 8
%Mt=bitcast i8*%Mp to i8**
%Mu=load i8*,i8**%Mt,align 8
%Mv=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Mw=call fastcc i8*%Ms(i8*inreg%Mu,i8*inreg%Mv)
store i8*%Mw,i8**%d,align 8
%Mx=call i8*@sml_alloc(i32 inreg 36)#0
%My=getelementptr inbounds i8,i8*%Mx,i64 -4
%Mz=bitcast i8*%My to i32*
store i32 1342177312,i32*%Mz,align 4
%MA=load i8*,i8**%d,align 8
%MB=bitcast i8*%Mx to i8**
store i8*%MA,i8**%MB,align 8
%MC=load i8*,i8**%i,align 8
%MD=getelementptr inbounds i8,i8*%Mx,i64 8
%ME=bitcast i8*%MD to i8**
store i8*%MC,i8**%ME,align 8
%MF=load i8*,i8**%g,align 8
%MG=getelementptr inbounds i8,i8*%Mx,i64 16
%MH=bitcast i8*%MG to i8**
store i8*%MF,i8**%MH,align 8
%MI=load i8*,i8**%h,align 8
%MJ=getelementptr inbounds i8,i8*%Mx,i64 24
%MK=bitcast i8*%MJ to i8**
store i8*%MI,i8**%MK,align 8
%ML=getelementptr inbounds i8,i8*%Mx,i64 32
%MM=bitcast i8*%ML to i32*
store i32 15,i32*%MM,align 4
%MN=tail call fastcc i8*@_SMLFN12TypedCalcCon15TPDATACONSTRUCTE(i8*inreg%Mx)
ret i8*%MN
MO:
%MP=getelementptr inbounds i8,i8*%r,i64 8
%MQ=bitcast i8*%MP to i8**
%MR=load i8*,i8**%MQ,align 8
%MS=bitcast i8*%MR to i8**
%MT=load i8*,i8**%MS,align 8
store i8*%MT,i8**%f,align 8
%MU=getelementptr inbounds i8,i8*%MR,i64 8
%MV=bitcast i8*%MU to i8**
%MW=load i8*,i8**%MV,align 8
store i8*%MW,i8**%g,align 8
%MX=getelementptr inbounds i8,i8*%MR,i64 16
%MY=bitcast i8*%MX to i8**
%MZ=load i8*,i8**%MY,align 8
%M0=load i8*,i8**%d,align 8
%M1=load i8*,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%M2=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%M0,i8*inreg%M1,i8*inreg%MZ)
store i8*%M2,i8**%d,align 8
%M3=call i8*@sml_alloc(i32 inreg 28)#0
%M4=getelementptr inbounds i8,i8*%M3,i64 -4
%M5=bitcast i8*%M4 to i32*
store i32 1342177304,i32*%M5,align 4
%M6=load i8*,i8**%f,align 8
%M7=bitcast i8*%M3 to i8**
store i8*%M6,i8**%M7,align 8
%M8=load i8*,i8**%g,align 8
%M9=getelementptr inbounds i8,i8*%M3,i64 8
%Na=bitcast i8*%M9 to i8**
store i8*%M8,i8**%Na,align 8
%Nb=load i8*,i8**%d,align 8
%Nc=getelementptr inbounds i8,i8*%M3,i64 16
%Nd=bitcast i8*%Nc to i8**
store i8*%Nb,i8**%Nd,align 8
%Ne=getelementptr inbounds i8,i8*%M3,i64 24
%Nf=bitcast i8*%Ne to i32*
store i32 7,i32*%Nf,align 4
%Ng=tail call fastcc i8*@_SMLFN12TypedCalcCon10TPCONSTANTE(i8*inreg%M3)
ret i8*%Ng
Nh:
%Ni=getelementptr inbounds i8,i8*%r,i64 8
%Nj=bitcast i8*%Ni to i8**
%Nk=load i8*,i8**%Nj,align 8
%Nl=bitcast i8*%Nk to i8**
%Nm=load i8*,i8**%Nl,align 8
%Nn=bitcast i8*%Nm to i8**
%No=load i8*,i8**%Nn,align 8
%Np=getelementptr inbounds i8,i8*%Nm,i64 8
%Nq=bitcast i8*%Np to i8**
%Nr=load i8*,i8**%Nq,align 8
store i8*%Nr,i8**%f,align 8
%Ns=getelementptr inbounds i8,i8*%Nk,i64 8
%Nt=bitcast i8*%Ns to i8**
%Nu=load i8*,i8**%Nt,align 8
store i8*%Nu,i8**%g,align 8
%Nv=getelementptr inbounds i8,i8*%Nk,i64 16
%Nw=bitcast i8*%Nv to i8**
%Nx=load i8*,i8**%Nw,align 8
store i8*%Nx,i8**%h,align 8
%Ny=load i8*,i8**%d,align 8
%Nz=load i8*,i8**%e,align 8
%NA=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%Ny,i8*inreg%Nz,i8*inreg%No)
store i8*%NA,i8**%i,align 8
%NB=getelementptr inbounds i8,i8*%NA,i64 8
%NC=bitcast i8*%NB to i8**
%ND=load i8*,i8**%NC,align 8
store i8*%ND,i8**%j,align 8
%NE=load i8*,i8**%d,align 8
%NF=load i8*,i8**%e,align 8
%NG=load i8*,i8**%g,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
%NH=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%NE,i8*inreg%NF,i8*inreg%NG)
store i8*%NH,i8**%e,align 8
%NI=load i8*,i8**%d,align 8
%NJ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
call fastcc void@_SMLLLN17PolyTyElimination6exportE_1022(i8*inreg%NI,i8*inreg%NJ)
%NK=load i8*,i8**%d,align 8
%NL=load i8*,i8**%e,align 8
store i8*null,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination6exportE_1022(i8*inreg%NK,i8*inreg%NL)
%NM=call i8*@sml_alloc(i32 inreg 20)#0
%NN=getelementptr inbounds i8,i8*%NM,i64 -4
%NO=bitcast i8*%NN to i32*
store i32 1342177296,i32*%NO,align 4
store i8*%NM,i8**%d,align 8
%NP=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%NQ=bitcast i8*%NM to i8**
store i8*%NP,i8**%NQ,align 8
%NR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%NS=getelementptr inbounds i8,i8*%NM,i64 8
%NT=bitcast i8*%NS to i8**
store i8*%NR,i8**%NT,align 8
%NU=getelementptr inbounds i8,i8*%NM,i64 16
%NV=bitcast i8*%NU to i32*
store i32 3,i32*%NV,align 4
%NW=call i8*@sml_alloc(i32 inreg 28)#0
%NX=getelementptr inbounds i8,i8*%NW,i64 -4
%NY=bitcast i8*%NX to i32*
store i32 1342177304,i32*%NY,align 4
%NZ=load i8*,i8**%d,align 8
%N0=bitcast i8*%NW to i8**
store i8*%NZ,i8**%N0,align 8
%N1=load i8*,i8**%e,align 8
%N2=getelementptr inbounds i8,i8*%NW,i64 8
%N3=bitcast i8*%N2 to i8**
store i8*%N1,i8**%N3,align 8
%N4=load i8*,i8**%h,align 8
%N5=getelementptr inbounds i8,i8*%NW,i64 16
%N6=bitcast i8*%N5 to i8**
store i8*%N4,i8**%N6,align 8
%N7=getelementptr inbounds i8,i8*%NW,i64 24
%N8=bitcast i8*%N7 to i32*
store i32 7,i32*%N8,align 4
%N9=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPCASTE(i8*inreg%NW)
ret i8*%N9
Oa:
%Ob=getelementptr inbounds i8,i8*%r,i64 8
%Oc=bitcast i8*%Ob to i8**
%Od=load i8*,i8**%Oc,align 8
%Oe=bitcast i8*%Od to i8**
%Of=load i8*,i8**%Oe,align 8
store i8*%Of,i8**%f,align 8
%Og=getelementptr inbounds i8,i8*%Od,i64 8
%Oh=bitcast i8*%Og to i8**
%Oi=load i8*,i8**%Oh,align 8
%Oj=getelementptr inbounds i8,i8*%Od,i64 24
%Ok=bitcast i8*%Oj to i8**
%Ol=load i8*,i8**%Ok,align 8
store i8*%Ol,i8**%g,align 8
%Om=getelementptr inbounds i8,i8*%Od,i64 40
%On=bitcast i8*%Om to i8**
%Oo=load i8*,i8**%On,align 8
%Op=bitcast i8*%Oo to i32*
%Oq=load i32,i32*%Op,align 4
switch i32%Oq,label%Or[
i32 1,label%Tn
i32 0,label%Q3
i32 2,label%OJ
]
Or:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
call void@sml_matchcomp_bug()
%Os=load i8*,i8**@_SMLZ5Match,align 8
store i8*%Os,i8**%d,align 8
%Ot=call i8*@sml_alloc(i32 inreg 20)#0
%Ou=getelementptr inbounds i8,i8*%Ot,i64 -4
%Ov=bitcast i8*%Ou to i32*
store i32 1342177296,i32*%Ov,align 4
store i8*%Ot,i8**%e,align 8
%Ow=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Ox=bitcast i8*%Ot to i8**
store i8*%Ow,i8**%Ox,align 8
%Oy=getelementptr inbounds i8,i8*%Ot,i64 8
%Oz=bitcast i8*%Oy to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@b4,i64 0,i32 2,i64 0),i8**%Oz,align 8
%OA=getelementptr inbounds i8,i8*%Ot,i64 16
%OB=bitcast i8*%OA to i32*
store i32 3,i32*%OB,align 4
%OC=call i8*@sml_alloc(i32 inreg 60)#0
%OD=getelementptr inbounds i8,i8*%OC,i64 -4
%OE=bitcast i8*%OD to i32*
store i32 1342177336,i32*%OE,align 4
%OF=getelementptr inbounds i8,i8*%OC,i64 56
%OG=bitcast i8*%OF to i32*
store i32 1,i32*%OG,align 4
%OH=load i8*,i8**%e,align 8
%OI=bitcast i8*%OC to i8**
store i8*%OH,i8**%OI,align 8
call void@sml_raise(i8*inreg%OC)#1
unreachable
OJ:
%OK=getelementptr inbounds i8,i8*%Oo,i64 8
%OL=bitcast i8*%OK to i8**
%OM=load i8*,i8**%OL,align 8
store i8*%OM,i8**%h,align 8
%ON=load i8*,i8**%d,align 8
%OO=load i8*,i8**%e,align 8
%OP=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%ON,i8*inreg%OO,i8*inreg%Oi)
store i8*%OP,i8**%i,align 8
%OQ=load i8*,i8**%d,align 8
%OR=load i8*,i8**%e,align 8
%OS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%OT=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%OQ,i8*inreg%OR,i8*inreg%OS)
store i8*%OT,i8**%f,align 8
%OU=call i8*@sml_alloc(i32 inreg 28)#0
%OV=getelementptr inbounds i8,i8*%OU,i64 -4
%OW=bitcast i8*%OV to i32*
store i32 1342177304,i32*%OW,align 4
store i8*%OU,i8**%j,align 8
%OX=load i8*,i8**%d,align 8
%OY=bitcast i8*%OU to i8**
store i8*%OX,i8**%OY,align 8
%OZ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O0=getelementptr inbounds i8,i8*%OU,i64 8
%O1=bitcast i8*%O0 to i8**
store i8*%OZ,i8**%O1,align 8
%O2=load i8*,i8**%g,align 8
%O3=getelementptr inbounds i8,i8*%OU,i64 16
%O4=bitcast i8*%O3 to i8**
store i8*%O2,i8**%O4,align 8
%O5=getelementptr inbounds i8,i8*%OU,i64 24
%O6=bitcast i8*%O5 to i32*
store i32 7,i32*%O6,align 4
%O7=call i8*@sml_alloc(i32 inreg 28)#0
%O8=getelementptr inbounds i8,i8*%O7,i64 -4
%O9=bitcast i8*%O8 to i32*
store i32 1342177304,i32*%O9,align 4
store i8*%O7,i8**%e,align 8
%Pa=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%Pb=bitcast i8*%O7 to i8**
store i8*%Pa,i8**%Pb,align 8
%Pc=getelementptr inbounds i8,i8*%O7,i64 8
%Pd=bitcast i8*%Pc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL11analyzeRule_1223 to void(...)*),void(...)**%Pd,align 8
%Pe=getelementptr inbounds i8,i8*%O7,i64 16
%Pf=bitcast i8*%Pe to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL11analyzeRule_1223 to void(...)*),void(...)**%Pf,align 8
%Pg=getelementptr inbounds i8,i8*%O7,i64 24
%Ph=bitcast i8*%Pg to i32*
store i32 -2147483647,i32*%Ph,align 4
%Pi=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Pj=getelementptr inbounds i8,i8*%Pi,i64 16
%Pk=bitcast i8*%Pj to i8*(i8*,i8*)**
%Pl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Pk,align 8
%Pm=bitcast i8*%Pi to i8**
%Pn=load i8*,i8**%Pm,align 8
%Po=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Pp=call fastcc i8*%Pl(i8*inreg%Pn,i8*inreg%Po)
%Pq=getelementptr inbounds i8,i8*%Pp,i64 16
%Pr=bitcast i8*%Pq to i8*(i8*,i8*)**
%Ps=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Pr,align 8
%Pt=bitcast i8*%Pp to i8**
%Pu=load i8*,i8**%Pt,align 8
%Pv=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Pw=call fastcc i8*%Ps(i8*inreg%Pu,i8*inreg%Pv)
store i8*%Pw,i8**%e,align 8
%Px=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Py=getelementptr inbounds i8,i8*%Px,i64 16
%Pz=bitcast i8*%Py to i8*(i8*,i8*)**
%PA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Pz,align 8
%PB=bitcast i8*%Px to i8**
%PC=load i8*,i8**%PB,align 8
%PD=call fastcc i8*%PA(i8*inreg%PC,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bH,i64 0,i32 2)to i8*))
%PE=getelementptr inbounds i8,i8*%PD,i64 16
%PF=bitcast i8*%PE to i8*(i8*,i8*)**
%PG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%PF,align 8
%PH=bitcast i8*%PD to i8**
%PI=load i8*,i8**%PH,align 8
%PJ=load i8*,i8**%e,align 8
%PK=call fastcc i8*%PG(i8*inreg%PI,i8*inreg%PJ)
store i8*%PK,i8**%h,align 8
%PL=load i8*,i8**%i,align 8
%PM=getelementptr inbounds i8,i8*%PL,i64 8
%PN=bitcast i8*%PM to i8**
%PO=load i8*,i8**%PN,align 8
store i8*%PO,i8**%j,align 8
%PP=call i8*@sml_alloc(i32 inreg 20)#0
%PQ=getelementptr inbounds i8,i8*%PP,i64 -4
%PR=bitcast i8*%PQ to i32*
store i32 1342177296,i32*%PR,align 4
store i8*%PP,i8**%l,align 8
%PS=load i8*,i8**%j,align 8
%PT=bitcast i8*%PP to i8**
store i8*%PS,i8**%PT,align 8
%PU=getelementptr inbounds i8,i8*%PP,i64 8
%PV=bitcast i8*%PU to i8**
store i8*null,i8**%PV,align 8
%PW=getelementptr inbounds i8,i8*%PP,i64 16
%PX=bitcast i8*%PW to i32*
store i32 3,i32*%PX,align 4
%PY=load i8*,i8**%f,align 8
%PZ=getelementptr inbounds i8,i8*%PY,i64 8
%P0=bitcast i8*%PZ to i8**
%P1=load i8*,i8**%P0,align 8
store i8*%P1,i8**%j,align 8
%P2=call i8*@sml_alloc(i32 inreg 20)#0
%P3=getelementptr inbounds i8,i8*%P2,i64 -4
%P4=bitcast i8*%P3 to i32*
store i32 1342177296,i32*%P4,align 4
store i8*%P2,i8**%k,align 8
%P5=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%P6=bitcast i8*%P2 to i8**
store i8*%P5,i8**%P6,align 8
%P7=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%P8=getelementptr inbounds i8,i8*%P2,i64 8
%P9=bitcast i8*%P8 to i8**
store i8*%P7,i8**%P9,align 8
%Qa=getelementptr inbounds i8,i8*%P2,i64 16
%Qb=bitcast i8*%Qa to i32*
store i32 3,i32*%Qb,align 4
%Qc=call i8*@sml_alloc(i32 inreg 20)#0
%Qd=getelementptr inbounds i8,i8*%Qc,i64 -4
%Qe=bitcast i8*%Qd to i32*
store i32 1342177296,i32*%Qe,align 4
store i8*%Qc,i8**%j,align 8
%Qf=getelementptr inbounds i8,i8*%Qc,i64 4
%Qg=bitcast i8*%Qf to i32*
store i32 0,i32*%Qg,align 1
%Qh=bitcast i8*%Qc to i32*
store i32 6,i32*%Qh,align 4
%Qi=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%Qj=getelementptr inbounds i8,i8*%Qc,i64 8
%Qk=bitcast i8*%Qj to i8**
store i8*%Qi,i8**%Qk,align 8
%Ql=getelementptr inbounds i8,i8*%Qc,i64 16
%Qm=bitcast i8*%Ql to i32*
store i32 2,i32*%Qm,align 4
%Qn=call i8*@sml_alloc(i32 inreg 20)#0
%Qo=getelementptr inbounds i8,i8*%Qn,i64 -4
%Qp=bitcast i8*%Qo to i32*
store i32 1342177296,i32*%Qp,align 4
%Qq=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%Qr=bitcast i8*%Qn to i8**
store i8*%Qq,i8**%Qr,align 8
%Qs=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Qt=getelementptr inbounds i8,i8*%Qn,i64 8
%Qu=bitcast i8*%Qt to i8**
store i8*%Qs,i8**%Qu,align 8
%Qv=getelementptr inbounds i8,i8*%Qn,i64 16
%Qw=bitcast i8*%Qv to i32*
store i32 3,i32*%Qw,align 4
%Qx=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination8equalAllE_939(i8*inreg%Qx,i8*inreg%Qn)
%Qy=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Qz=getelementptr inbounds i8,i8*%Qy,i64 16
%QA=bitcast i8*%Qz to i8*(i8*,i8*)**
%QB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%QA,align 8
%QC=bitcast i8*%Qy to i8**
%QD=load i8*,i8**%QC,align 8
%QE=call fastcc i8*%QB(i8*inreg%QD,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bI,i64 0,i32 2)to i8*))
%QF=getelementptr inbounds i8,i8*%QE,i64 16
%QG=bitcast i8*%QF to i8*(i8*,i8*)**
%QH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%QG,align 8
%QI=bitcast i8*%QE to i8**
%QJ=load i8*,i8**%QI,align 8
%QK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%QL=call fastcc i8*%QH(i8*inreg%QJ,i8*inreg%QK)
store i8*%QL,i8**%d,align 8
%QM=call i8*@sml_alloc(i32 inreg 36)#0
%QN=getelementptr inbounds i8,i8*%QM,i64 -4
%QO=bitcast i8*%QN to i32*
store i32 1342177312,i32*%QO,align 4
%QP=load i8*,i8**%f,align 8
%QQ=bitcast i8*%QM to i8**
store i8*%QP,i8**%QQ,align 8
%QR=load i8*,i8**%i,align 8
%QS=getelementptr inbounds i8,i8*%QM,i64 8
%QT=bitcast i8*%QS to i8**
store i8*%QR,i8**%QT,align 8
%QU=load i8*,i8**%g,align 8
%QV=getelementptr inbounds i8,i8*%QM,i64 16
%QW=bitcast i8*%QV to i8**
store i8*%QU,i8**%QW,align 8
%QX=load i8*,i8**%d,align 8
%QY=getelementptr inbounds i8,i8*%QM,i64 24
%QZ=bitcast i8*%QY to i8**
store i8*%QX,i8**%QZ,align 8
%Q0=getelementptr inbounds i8,i8*%QM,i64 32
%Q1=bitcast i8*%Q0 to i32*
store i32 15,i32*%Q1,align 4
%Q2=tail call fastcc i8*@_SMLFN12TypedCalcCon16TPSWITCH__EXNCASEE(i8*inreg%QM)
ret i8*%Q2
Q3:
%Q4=getelementptr inbounds i8,i8*%Oo,i64 8
%Q5=bitcast i8*%Q4 to i8**
%Q6=load i8*,i8**%Q5,align 8
store i8*%Q6,i8**%h,align 8
%Q7=load i8*,i8**%d,align 8
%Q8=load i8*,i8**%e,align 8
%Q9=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%Q7,i8*inreg%Q8,i8*inreg%Oi)
store i8*%Q9,i8**%i,align 8
%Ra=load i8*,i8**%d,align 8
%Rb=load i8*,i8**%e,align 8
%Rc=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Rd=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%Ra,i8*inreg%Rb,i8*inreg%Rc)
store i8*%Rd,i8**%f,align 8
%Re=call i8*@sml_alloc(i32 inreg 28)#0
%Rf=getelementptr inbounds i8,i8*%Re,i64 -4
%Rg=bitcast i8*%Rf to i32*
store i32 1342177304,i32*%Rg,align 4
store i8*%Re,i8**%j,align 8
%Rh=load i8*,i8**%d,align 8
%Ri=bitcast i8*%Re to i8**
store i8*%Rh,i8**%Ri,align 8
%Rj=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Rk=getelementptr inbounds i8,i8*%Re,i64 8
%Rl=bitcast i8*%Rk to i8**
store i8*%Rj,i8**%Rl,align 8
%Rm=load i8*,i8**%g,align 8
%Rn=getelementptr inbounds i8,i8*%Re,i64 16
%Ro=bitcast i8*%Rn to i8**
store i8*%Rm,i8**%Ro,align 8
%Rp=getelementptr inbounds i8,i8*%Re,i64 24
%Rq=bitcast i8*%Rp to i32*
store i32 7,i32*%Rq,align 4
%Rr=call i8*@sml_alloc(i32 inreg 28)#0
%Rs=getelementptr inbounds i8,i8*%Rr,i64 -4
%Rt=bitcast i8*%Rs to i32*
store i32 1342177304,i32*%Rt,align 4
store i8*%Rr,i8**%e,align 8
%Ru=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%Rv=bitcast i8*%Rr to i8**
store i8*%Ru,i8**%Rv,align 8
%Rw=getelementptr inbounds i8,i8*%Rr,i64 8
%Rx=bitcast i8*%Rw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL11analyzeRule_1218 to void(...)*),void(...)**%Rx,align 8
%Ry=getelementptr inbounds i8,i8*%Rr,i64 16
%Rz=bitcast i8*%Ry to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL11analyzeRule_1218 to void(...)*),void(...)**%Rz,align 8
%RA=getelementptr inbounds i8,i8*%Rr,i64 24
%RB=bitcast i8*%RA to i32*
store i32 -2147483647,i32*%RB,align 4
%RC=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%RD=getelementptr inbounds i8,i8*%RC,i64 16
%RE=bitcast i8*%RD to i8*(i8*,i8*)**
%RF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%RE,align 8
%RG=bitcast i8*%RC to i8**
%RH=load i8*,i8**%RG,align 8
%RI=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%RJ=call fastcc i8*%RF(i8*inreg%RH,i8*inreg%RI)
%RK=getelementptr inbounds i8,i8*%RJ,i64 16
%RL=bitcast i8*%RK to i8*(i8*,i8*)**
%RM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%RL,align 8
%RN=bitcast i8*%RJ to i8**
%RO=load i8*,i8**%RN,align 8
%RP=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%RQ=call fastcc i8*%RM(i8*inreg%RO,i8*inreg%RP)
store i8*%RQ,i8**%e,align 8
%RR=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%RS=getelementptr inbounds i8,i8*%RR,i64 16
%RT=bitcast i8*%RS to i8*(i8*,i8*)**
%RU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%RT,align 8
%RV=bitcast i8*%RR to i8**
%RW=load i8*,i8**%RV,align 8
%RX=call fastcc i8*%RU(i8*inreg%RW,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bF,i64 0,i32 2)to i8*))
%RY=getelementptr inbounds i8,i8*%RX,i64 16
%RZ=bitcast i8*%RY to i8*(i8*,i8*)**
%R0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%RZ,align 8
%R1=bitcast i8*%RX to i8**
%R2=load i8*,i8**%R1,align 8
%R3=load i8*,i8**%e,align 8
%R4=call fastcc i8*%R0(i8*inreg%R2,i8*inreg%R3)
store i8*%R4,i8**%h,align 8
%R5=load i8*,i8**%i,align 8
%R6=getelementptr inbounds i8,i8*%R5,i64 8
%R7=bitcast i8*%R6 to i8**
%R8=load i8*,i8**%R7,align 8
store i8*%R8,i8**%j,align 8
%R9=call i8*@sml_alloc(i32 inreg 20)#0
%Sa=getelementptr inbounds i8,i8*%R9,i64 -4
%Sb=bitcast i8*%Sa to i32*
store i32 1342177296,i32*%Sb,align 4
store i8*%R9,i8**%l,align 8
%Sc=load i8*,i8**%j,align 8
%Sd=bitcast i8*%R9 to i8**
store i8*%Sc,i8**%Sd,align 8
%Se=getelementptr inbounds i8,i8*%R9,i64 8
%Sf=bitcast i8*%Se to i8**
store i8*null,i8**%Sf,align 8
%Sg=getelementptr inbounds i8,i8*%R9,i64 16
%Sh=bitcast i8*%Sg to i32*
store i32 3,i32*%Sh,align 4
%Si=load i8*,i8**%f,align 8
%Sj=getelementptr inbounds i8,i8*%Si,i64 8
%Sk=bitcast i8*%Sj to i8**
%Sl=load i8*,i8**%Sk,align 8
store i8*%Sl,i8**%j,align 8
%Sm=call i8*@sml_alloc(i32 inreg 20)#0
%Sn=getelementptr inbounds i8,i8*%Sm,i64 -4
%So=bitcast i8*%Sn to i32*
store i32 1342177296,i32*%So,align 4
store i8*%Sm,i8**%k,align 8
%Sp=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%Sq=bitcast i8*%Sm to i8**
store i8*%Sp,i8**%Sq,align 8
%Sr=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%Ss=getelementptr inbounds i8,i8*%Sm,i64 8
%St=bitcast i8*%Ss to i8**
store i8*%Sr,i8**%St,align 8
%Su=getelementptr inbounds i8,i8*%Sm,i64 16
%Sv=bitcast i8*%Su to i32*
store i32 3,i32*%Sv,align 4
%Sw=call i8*@sml_alloc(i32 inreg 20)#0
%Sx=getelementptr inbounds i8,i8*%Sw,i64 -4
%Sy=bitcast i8*%Sx to i32*
store i32 1342177296,i32*%Sy,align 4
store i8*%Sw,i8**%j,align 8
%Sz=getelementptr inbounds i8,i8*%Sw,i64 4
%SA=bitcast i8*%Sz to i32*
store i32 0,i32*%SA,align 1
%SB=bitcast i8*%Sw to i32*
store i32 6,i32*%SB,align 4
%SC=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%SD=getelementptr inbounds i8,i8*%Sw,i64 8
%SE=bitcast i8*%SD to i8**
store i8*%SC,i8**%SE,align 8
%SF=getelementptr inbounds i8,i8*%Sw,i64 16
%SG=bitcast i8*%SF to i32*
store i32 2,i32*%SG,align 4
%SH=call i8*@sml_alloc(i32 inreg 20)#0
%SI=getelementptr inbounds i8,i8*%SH,i64 -4
%SJ=bitcast i8*%SI to i32*
store i32 1342177296,i32*%SJ,align 4
%SK=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%SL=bitcast i8*%SH to i8**
store i8*%SK,i8**%SL,align 8
%SM=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%SN=getelementptr inbounds i8,i8*%SH,i64 8
%SO=bitcast i8*%SN to i8**
store i8*%SM,i8**%SO,align 8
%SP=getelementptr inbounds i8,i8*%SH,i64 16
%SQ=bitcast i8*%SP to i32*
store i32 3,i32*%SQ,align 4
%SR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination8equalAllE_939(i8*inreg%SR,i8*inreg%SH)
%SS=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ST=getelementptr inbounds i8,i8*%SS,i64 16
%SU=bitcast i8*%ST to i8*(i8*,i8*)**
%SV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%SU,align 8
%SW=bitcast i8*%SS to i8**
%SX=load i8*,i8**%SW,align 8
%SY=call fastcc i8*%SV(i8*inreg%SX,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bG,i64 0,i32 2)to i8*))
%SZ=getelementptr inbounds i8,i8*%SY,i64 16
%S0=bitcast i8*%SZ to i8*(i8*,i8*)**
%S1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S0,align 8
%S2=bitcast i8*%SY to i8**
%S3=load i8*,i8**%S2,align 8
%S4=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%S5=call fastcc i8*%S1(i8*inreg%S3,i8*inreg%S4)
store i8*%S5,i8**%d,align 8
%S6=call i8*@sml_alloc(i32 inreg 36)#0
%S7=getelementptr inbounds i8,i8*%S6,i64 -4
%S8=bitcast i8*%S7 to i32*
store i32 1342177312,i32*%S8,align 4
%S9=load i8*,i8**%f,align 8
%Ta=bitcast i8*%S6 to i8**
store i8*%S9,i8**%Ta,align 8
%Tb=load i8*,i8**%i,align 8
%Tc=getelementptr inbounds i8,i8*%S6,i64 8
%Td=bitcast i8*%Tc to i8**
store i8*%Tb,i8**%Td,align 8
%Te=load i8*,i8**%g,align 8
%Tf=getelementptr inbounds i8,i8*%S6,i64 16
%Tg=bitcast i8*%Tf to i8**
store i8*%Te,i8**%Tg,align 8
%Th=load i8*,i8**%d,align 8
%Ti=getelementptr inbounds i8,i8*%S6,i64 24
%Tj=bitcast i8*%Ti to i8**
store i8*%Th,i8**%Tj,align 8
%Tk=getelementptr inbounds i8,i8*%S6,i64 32
%Tl=bitcast i8*%Tk to i32*
store i32 15,i32*%Tl,align 4
%Tm=tail call fastcc i8*@_SMLFN12TypedCalcCon16TPSWITCH__CONCASEE(i8*inreg%S6)
ret i8*%Tm
Tn:
%To=getelementptr inbounds i8,i8*%Oo,i64 8
%Tp=bitcast i8*%To to i8**
%Tq=load i8*,i8**%Tp,align 8
store i8*%Tq,i8**%h,align 8
%Tr=load i8*,i8**%d,align 8
%Ts=load i8*,i8**%e,align 8
%Tt=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%Tr,i8*inreg%Ts,i8*inreg%Oi)
store i8*%Tt,i8**%i,align 8
%Tu=load i8*,i8**%d,align 8
%Tv=load i8*,i8**%e,align 8
%Tw=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Tx=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%Tu,i8*inreg%Tv,i8*inreg%Tw)
store i8*%Tx,i8**%f,align 8
%Ty=call i8*@sml_alloc(i32 inreg 20)#0
%Tz=getelementptr inbounds i8,i8*%Ty,i64 -4
%TA=bitcast i8*%Tz to i32*
store i32 1342177296,i32*%TA,align 4
store i8*%Ty,i8**%j,align 8
%TB=load i8*,i8**%d,align 8
%TC=bitcast i8*%Ty to i8**
store i8*%TB,i8**%TC,align 8
%TD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%TE=getelementptr inbounds i8,i8*%Ty,i64 8
%TF=bitcast i8*%TE to i8**
store i8*%TD,i8**%TF,align 8
%TG=getelementptr inbounds i8,i8*%Ty,i64 16
%TH=bitcast i8*%TG to i32*
store i32 3,i32*%TH,align 4
%TI=call i8*@sml_alloc(i32 inreg 28)#0
%TJ=getelementptr inbounds i8,i8*%TI,i64 -4
%TK=bitcast i8*%TJ to i32*
store i32 1342177304,i32*%TK,align 4
store i8*%TI,i8**%e,align 8
%TL=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%TM=bitcast i8*%TI to i8**
store i8*%TL,i8**%TM,align 8
%TN=getelementptr inbounds i8,i8*%TI,i64 8
%TO=bitcast i8*%TN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL11analyzeRule_1215 to void(...)*),void(...)**%TO,align 8
%TP=getelementptr inbounds i8,i8*%TI,i64 16
%TQ=bitcast i8*%TP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL11analyzeRule_1215 to void(...)*),void(...)**%TQ,align 8
%TR=getelementptr inbounds i8,i8*%TI,i64 24
%TS=bitcast i8*%TR to i32*
store i32 -2147483647,i32*%TS,align 4
%TT=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%TU=getelementptr inbounds i8,i8*%TT,i64 16
%TV=bitcast i8*%TU to i8*(i8*,i8*)**
%TW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%TV,align 8
%TX=bitcast i8*%TT to i8**
%TY=load i8*,i8**%TX,align 8
%TZ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%T0=call fastcc i8*%TW(i8*inreg%TY,i8*inreg%TZ)
%T1=getelementptr inbounds i8,i8*%T0,i64 16
%T2=bitcast i8*%T1 to i8*(i8*,i8*)**
%T3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T2,align 8
%T4=bitcast i8*%T0 to i8**
%T5=load i8*,i8**%T4,align 8
%T6=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%T7=call fastcc i8*%T3(i8*inreg%T5,i8*inreg%T6)
store i8*%T7,i8**%e,align 8
%T8=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%T9=getelementptr inbounds i8,i8*%T8,i64 16
%Ua=bitcast i8*%T9 to i8*(i8*,i8*)**
%Ub=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Ua,align 8
%Uc=bitcast i8*%T8 to i8**
%Ud=load i8*,i8**%Uc,align 8
%Ue=call fastcc i8*%Ub(i8*inreg%Ud,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bE,i64 0,i32 2)to i8*))
%Uf=getelementptr inbounds i8,i8*%Ue,i64 16
%Ug=bitcast i8*%Uf to i8*(i8*,i8*)**
%Uh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Ug,align 8
%Ui=bitcast i8*%Ue to i8**
%Uj=load i8*,i8**%Ui,align 8
%Uk=load i8*,i8**%e,align 8
%Ul=call fastcc i8*%Uh(i8*inreg%Uj,i8*inreg%Uk)
store i8*%Ul,i8**%h,align 8
%Um=load i8*,i8**%f,align 8
%Un=getelementptr inbounds i8,i8*%Um,i64 8
%Uo=bitcast i8*%Un to i8**
%Up=load i8*,i8**%Uo,align 8
store i8*%Up,i8**%j,align 8
%Uq=call i8*@sml_alloc(i32 inreg 20)#0
%Ur=getelementptr inbounds i8,i8*%Uq,i64 -4
%Us=bitcast i8*%Ur to i32*
store i32 1342177296,i32*%Us,align 4
%Ut=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%Uu=bitcast i8*%Uq to i8**
store i8*%Ut,i8**%Uu,align 8
%Uv=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Uw=getelementptr inbounds i8,i8*%Uq,i64 8
%Ux=bitcast i8*%Uw to i8**
store i8*%Uv,i8**%Ux,align 8
%Uy=getelementptr inbounds i8,i8*%Uq,i64 16
%Uz=bitcast i8*%Uy to i32*
store i32 3,i32*%Uz,align 4
%UA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination8equalAllE_939(i8*inreg%UA,i8*inreg%Uq)
%UB=call i8*@sml_alloc(i32 inreg 36)#0
%UC=getelementptr inbounds i8,i8*%UB,i64 -4
%UD=bitcast i8*%UC to i32*
store i32 1342177312,i32*%UD,align 4
%UE=load i8*,i8**%f,align 8
%UF=bitcast i8*%UB to i8**
store i8*%UE,i8**%UF,align 8
%UG=load i8*,i8**%i,align 8
%UH=getelementptr inbounds i8,i8*%UB,i64 8
%UI=bitcast i8*%UH to i8**
store i8*%UG,i8**%UI,align 8
%UJ=load i8*,i8**%g,align 8
%UK=getelementptr inbounds i8,i8*%UB,i64 16
%UL=bitcast i8*%UK to i8**
store i8*%UJ,i8**%UL,align 8
%UM=load i8*,i8**%e,align 8
%UN=getelementptr inbounds i8,i8*%UB,i64 24
%UO=bitcast i8*%UN to i8**
store i8*%UM,i8**%UO,align 8
%UP=getelementptr inbounds i8,i8*%UB,i64 32
%UQ=bitcast i8*%UP to i32*
store i32 15,i32*%UQ,align 4
%UR=tail call fastcc i8*@_SMLFN12TypedCalcCon18TPSWITCH__CONSTCASEE(i8*inreg%UB)
ret i8*%UR
US:
%UT=getelementptr inbounds i8,i8*%r,i64 8
%UU=bitcast i8*%UT to i8**
%UV=load i8*,i8**%UU,align 8
%UW=bitcast i8*%UV to i32*
%UX=load i32,i32*%UW,align 4
%UY=getelementptr inbounds i8,i8*%UV,i64 8
%UZ=bitcast i8*%UY to i8**
%U0=load i8*,i8**%UZ,align 8
store i8*%U0,i8**%f,align 8
%U1=getelementptr inbounds i8,i8*%UV,i64 24
%U2=bitcast i8*%U1 to i8**
%U3=load i8*,i8**%U2,align 8
store i8*%U3,i8**%g,align 8
%U4=getelementptr inbounds i8,i8*%UV,i64 40
%U5=bitcast i8*%U4 to i8**
%U6=load i8*,i8**%U5,align 8
store i8*%U6,i8**%h,align 8
%U7=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%U8=getelementptr inbounds i8,i8*%U7,i64 16
%U9=bitcast i8*%U8 to i8*(i8*,i8*)**
%Va=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U9,align 8
%Vb=bitcast i8*%U7 to i8**
%Vc=load i8*,i8**%Vb,align 8
store i8*%Vc,i8**%i,align 8
%Vd=load i8*,i8**%d,align 8
%Ve=load i8*,i8**%e,align 8
%Vf=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1101(i8*inreg%Vd,i8*inreg%Ve)
%Vg=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Vh=call fastcc i8*%Va(i8*inreg%Vg,i8*inreg%Vf)
%Vi=getelementptr inbounds i8,i8*%Vh,i64 16
%Vj=bitcast i8*%Vi to i8*(i8*,i8*)**
%Vk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Vj,align 8
%Vl=bitcast i8*%Vh to i8**
%Vm=load i8*,i8**%Vl,align 8
%Vn=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Vo=call fastcc i8*%Vk(i8*inreg%Vm,i8*inreg%Vn)
store i8*%Vo,i8**%f,align 8
%Vp=load i8*,i8**%d,align 8
%Vq=load i8*,i8**%e,align 8
%Vr=load i8*,i8**%h,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%h,align 8
%Vs=call fastcc i8*@_SMLLLN17PolyTyElimination16analyzeMatchListE_1096(i8*inreg%Vp,i8*inreg%Vq,i8*inreg%Vr)
%Vt=getelementptr inbounds i8,i8*%Vs,i64 8
%Vu=bitcast i8*%Vt to i8***
%Vv=load i8**,i8***%Vu,align 8
%Vw=bitcast i8*%Vs to i8**
%Vx=load i8*,i8**%Vw,align 8
store i8*%Vx,i8**%e,align 8
%Vy=load i8*,i8**%Vv,align 8
store i8*%Vy,i8**%h,align 8
%Vz=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%VA=getelementptr inbounds i8,i8*%Vz,i64 16
%VB=bitcast i8*%VA to i8*(i8*,i8*)**
%VC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%VB,align 8
%VD=bitcast i8*%Vz to i8**
%VE=load i8*,i8**%VD,align 8
%VF=call fastcc i8*%VC(i8*inreg%VE,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bD,i64 0,i32 2)to i8*))
%VG=getelementptr inbounds i8,i8*%VF,i64 16
%VH=bitcast i8*%VG to i8*(i8*,i8*)**
%VI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%VH,align 8
%VJ=bitcast i8*%VF to i8**
%VK=load i8*,i8**%VJ,align 8
%VL=load i8*,i8**%f,align 8
%VM=call fastcc i8*%VI(i8*inreg%VK,i8*inreg%VL)
store i8*%VM,i8**%i,align 8
%VN=call i8*@sml_alloc(i32 inreg 20)#0
%VO=getelementptr inbounds i8,i8*%VN,i64 -4
%VP=bitcast i8*%VO to i32*
store i32 1342177296,i32*%VP,align 4
%VQ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%VR=bitcast i8*%VN to i8**
store i8*%VQ,i8**%VR,align 8
%VS=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%VT=getelementptr inbounds i8,i8*%VN,i64 8
%VU=bitcast i8*%VT to i8**
store i8*%VS,i8**%VU,align 8
%VV=getelementptr inbounds i8,i8*%VN,i64 16
%VW=bitcast i8*%VV to i32*
store i32 3,i32*%VW,align 4
%VX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination9equalListE_937(i8*inreg%VX,i8*inreg%VN)
%VY=call i8*@sml_alloc(i32 inreg 36)#0
%VZ=bitcast i8*%VY to i32*
%V0=getelementptr inbounds i8,i8*%VY,i64 -4
%V1=bitcast i8*%V0 to i32*
store i32 1342177312,i32*%V1,align 4
%V2=getelementptr inbounds i8,i8*%VY,i64 4
%V3=bitcast i8*%V2 to i32*
store i32 0,i32*%V3,align 1
store i32%UX,i32*%VZ,align 4
%V4=load i8*,i8**%f,align 8
%V5=getelementptr inbounds i8,i8*%VY,i64 8
%V6=bitcast i8*%V5 to i8**
store i8*%V4,i8**%V6,align 8
%V7=load i8*,i8**%g,align 8
%V8=getelementptr inbounds i8,i8*%VY,i64 16
%V9=bitcast i8*%V8 to i8**
store i8*%V7,i8**%V9,align 8
%Wa=load i8*,i8**%e,align 8
%Wb=getelementptr inbounds i8,i8*%VY,i64 24
%Wc=bitcast i8*%Wb to i8**
store i8*%Wa,i8**%Wc,align 8
%Wd=getelementptr inbounds i8,i8*%VY,i64 32
%We=bitcast i8*%Wd to i32*
store i32 14,i32*%We,align 4
%Wf=tail call fastcc i8*@_SMLFN12TypedCalcCon7TPCASEME(i8*inreg%VY)
ret i8*%Wf
Wg:
%Wh=getelementptr inbounds i8,i8*%r,i64 8
%Wi=bitcast i8*%Wh to i8**
%Wj=load i8*,i8**%Wi,align 8
%Wk=bitcast i8*%Wj to i8**
%Wl=load i8*,i8**%Wk,align 8
store i8*%Wl,i8**%f,align 8
%Wm=getelementptr inbounds i8,i8*%Wj,i64 8
%Wn=bitcast i8*%Wm to i8**
%Wo=load i8*,i8**%Wn,align 8
%Wp=getelementptr inbounds i8,i8*%Wj,i64 24
%Wq=bitcast i8*%Wp to i8**
%Wr=load i8*,i8**%Wq,align 8
store i8*%Wr,i8**%g,align 8
%Ws=load i8*,i8**%d,align 8
%Wt=load i8*,i8**%e,align 8
%Wu=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%Ws,i8*inreg%Wt,i8*inreg%Wo)
store i8*%Wu,i8**%h,align 8
%Wv=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Ww=getelementptr inbounds i8,i8*%Wv,i64 16
%Wx=bitcast i8*%Ww to i8*(i8*,i8*)**
%Wy=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Wx,align 8
%Wz=bitcast i8*%Wv to i8**
%WA=load i8*,i8**%Wz,align 8
store i8*%WA,i8**%i,align 8
%WB=load i8*,i8**%d,align 8
%WC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%WD=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1101(i8*inreg%WB,i8*inreg%WC)
%WE=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%WF=call fastcc i8*%Wy(i8*inreg%WE,i8*inreg%WD)
%WG=getelementptr inbounds i8,i8*%WF,i64 16
%WH=bitcast i8*%WG to i8*(i8*,i8*)**
%WI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%WH,align 8
%WJ=bitcast i8*%WF to i8**
%WK=load i8*,i8**%WJ,align 8
%WL=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%WM=call fastcc i8*%WI(i8*inreg%WK,i8*inreg%WL)
store i8*%WM,i8**%e,align 8
%WN=load i8*,i8**%h,align 8
%WO=getelementptr inbounds i8,i8*%WN,i64 8
%WP=bitcast i8*%WO to i8**
%WQ=load i8*,i8**%WP,align 8
%WR=call fastcc i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg%WQ)
%WS=icmp eq i8*%WR,null
br i1%WS,label%WX,label%WT
WT:
%WU=bitcast i8*%WR to i32*
%WV=load i32,i32*%WU,align 4
%WW=icmp eq i32%WV,6
br i1%WW,label%Xj,label%WX
WX:
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%e,align 8
%WY=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%WY,i8**%d,align 8
%WZ=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bC,i64 0,i32 2)to i8*))
store i8*%WZ,i8**%e,align 8
%W0=call i8*@sml_alloc(i32 inreg 28)#0
%W1=getelementptr inbounds i8,i8*%W0,i64 -4
%W2=bitcast i8*%W1 to i32*
store i32 1342177304,i32*%W2,align 4
store i8*%W0,i8**%f,align 8
%W3=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%W4=bitcast i8*%W0 to i8**
store i8*%W3,i8**%W4,align 8
%W5=getelementptr inbounds i8,i8*%W0,i64 8
%W6=bitcast i8*%W5 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%W6,align 8
%W7=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%W8=getelementptr inbounds i8,i8*%W0,i64 16
%W9=bitcast i8*%W8 to i8**
store i8*%W7,i8**%W9,align 8
%Xa=getelementptr inbounds i8,i8*%W0,i64 24
%Xb=bitcast i8*%Xa to i32*
store i32 7,i32*%Xb,align 4
%Xc=call i8*@sml_alloc(i32 inreg 60)#0
%Xd=getelementptr inbounds i8,i8*%Xc,i64 -4
%Xe=bitcast i8*%Xd to i32*
store i32 1342177336,i32*%Xe,align 4
%Xf=getelementptr inbounds i8,i8*%Xc,i64 56
%Xg=bitcast i8*%Xf to i32*
store i32 1,i32*%Xg,align 4
%Xh=load i8*,i8**%f,align 8
%Xi=bitcast i8*%Xc to i8**
store i8*%Xh,i8**%Xi,align 8
call void@sml_raise(i8*inreg%Xc)#1
unreachable
Xj:
%Xk=getelementptr inbounds i8,i8*%WR,i64 8
%Xl=bitcast i8*%Xk to i8***
%Xm=load i8**,i8***%Xl,align 8
%Xn=load i8*,i8**%Xm,align 8
store i8*%Xn,i8**%f,align 8
%Xo=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Xp=getelementptr inbounds i8,i8*%Xo,i64 16
%Xq=bitcast i8*%Xp to i8*(i8*,i8*)**
%Xr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Xq,align 8
%Xs=bitcast i8*%Xo to i8**
%Xt=load i8*,i8**%Xs,align 8
%Xu=call fastcc i8*%Xr(i8*inreg%Xt,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bA,i64 0,i32 2)to i8*))
%Xv=getelementptr inbounds i8,i8*%Xu,i64 16
%Xw=bitcast i8*%Xv to i8*(i8*,i8*)**
%Xx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Xw,align 8
%Xy=bitcast i8*%Xu to i8**
%Xz=load i8*,i8**%Xy,align 8
%XA=load i8*,i8**%e,align 8
%XB=call fastcc i8*%Xx(i8*inreg%Xz,i8*inreg%XA)
store i8*%XB,i8**%i,align 8
%XC=call i8*@sml_alloc(i32 inreg 20)#0
%XD=getelementptr inbounds i8,i8*%XC,i64 -4
%XE=bitcast i8*%XD to i32*
store i32 1342177296,i32*%XE,align 4
%XF=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%XG=bitcast i8*%XC to i8**
store i8*%XF,i8**%XG,align 8
%XH=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%XI=getelementptr inbounds i8,i8*%XC,i64 8
%XJ=bitcast i8*%XI to i8**
store i8*%XH,i8**%XJ,align 8
%XK=getelementptr inbounds i8,i8*%XC,i64 16
%XL=bitcast i8*%XK to i32*
store i32 3,i32*%XL,align 4
%XM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination9equalListE_937(i8*inreg%XM,i8*inreg%XC)
%XN=call i8*@sml_alloc(i32 inreg 28)#0
%XO=getelementptr inbounds i8,i8*%XN,i64 -4
%XP=bitcast i8*%XO to i32*
store i32 1342177304,i32*%XP,align 4
%XQ=load i8*,i8**%e,align 8
%XR=bitcast i8*%XN to i8**
store i8*%XQ,i8**%XR,align 8
%XS=load i8*,i8**%h,align 8
%XT=getelementptr inbounds i8,i8*%XN,i64 8
%XU=bitcast i8*%XT to i8**
store i8*%XS,i8**%XU,align 8
%XV=load i8*,i8**%g,align 8
%XW=getelementptr inbounds i8,i8*%XN,i64 16
%XX=bitcast i8*%XW to i8**
store i8*%XV,i8**%XX,align 8
%XY=getelementptr inbounds i8,i8*%XN,i64 24
%XZ=bitcast i8*%XY to i32*
store i32 7,i32*%XZ,align 4
%X0=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPAPPME(i8*inreg%XN)
ret i8*%X0
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination16analyzeMatchListE_1096(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
%m=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%g,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%h,align 8
%v=load i8*,i8**%d,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177304,i32*%E,align 4
%F=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7matches_1276 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7matches_1276 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 24
%M=bitcast i8*%L to i32*
store i32 -2147483647,i32*%M,align 4
%N=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%O=call fastcc i8*%p(i8*inreg%N,i8*inreg%C)
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8*(i8*,i8*)**
%R=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
%U=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%V=call fastcc i8*%R(i8*inreg%T,i8*inreg%U)
store i8*%V,i8**%e,align 8
%W=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=call fastcc i8*%Z(i8*inreg%ab,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b6,i64 0,i32 2)to i8*))
%ad=getelementptr inbounds i8,i8*%ac,i64 16
%ae=bitcast i8*%ad to i8*(i8*,i8*)**
%af=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ae,align 8
%ag=bitcast i8*%ac to i8**
%ah=load i8*,i8**%ag,align 8
%ai=load i8*,i8**%e,align 8
%aj=call fastcc i8*%af(i8*inreg%ah,i8*inreg%ai)
store i8*%aj,i8**%f,align 8
%ak=icmp eq i8*%aj,null
br i1%ak,label%al,label%aH
al:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%am=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%am,i8**%d,align 8
%an=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b9,i64 0,i32 2)to i8*))
store i8*%an,i8**%e,align 8
%ao=call i8*@sml_alloc(i32 inreg 28)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177304,i32*%aq,align 4
store i8*%ao,i8**%f,align 8
%ar=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%ao,i64 8
%au=bitcast i8*%at to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%au,align 8
%av=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aw=getelementptr inbounds i8,i8*%ao,i64 16
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ao,i64 24
%az=bitcast i8*%ay to i32*
store i32 7,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 60)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177336,i32*%aC,align 4
%aD=getelementptr inbounds i8,i8*%aA,i64 56
%aE=bitcast i8*%aD to i32*
store i32 1,i32*%aE,align 4
%aF=load i8*,i8**%f,align 8
%aG=bitcast i8*%aA to i8**
store i8*%aF,i8**%aG,align 8
call void@sml_raise(i8*inreg%aA)#1
unreachable
aH:
%aI=bitcast i8*%aj to i8**
%aJ=load i8*,i8**%aI,align 8
store i8*%aJ,i8**%g,align 8
%aK=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aL=getelementptr inbounds i8,i8*%aK,i64 16
%aM=bitcast i8*%aL to i8*(i8*,i8*)**
%aN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aM,align 8
%aO=bitcast i8*%aK to i8**
%aP=load i8*,i8**%aO,align 8
%aQ=call fastcc i8*%aN(i8*inreg%aP,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b7,i64 0,i32 2)to i8*))
%aR=getelementptr inbounds i8,i8*%aQ,i64 16
%aS=bitcast i8*%aR to i8*(i8*,i8*)**
%aT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aS,align 8
%aU=bitcast i8*%aQ to i8**
%aV=load i8*,i8**%aU,align 8
%aW=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aX=call fastcc i8*%aT(i8*inreg%aV,i8*inreg%aW)
%aY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination8equalAllE_939(i8*inreg%aY,i8*inreg%aX)
%aZ=call i8*@sml_alloc(i32 inreg 20)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177296,i32*%a1,align 4
%a2=load i8*,i8**%e,align 8
%a3=bitcast i8*%aZ to i8**
store i8*%a2,i8**%a3,align 8
%a4=load i8*,i8**%g,align 8
%a5=getelementptr inbounds i8,i8*%aZ,i64 8
%a6=bitcast i8*%a5 to i8**
store i8*%a4,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%aZ,i64 16
%a8=bitcast i8*%a7 to i32*
store i32 3,i32*%a8,align 4
ret i8*%aZ
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18analyzeFunRecbindsE_1097(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
%m=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%g,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%h,align 8
%v=load i8*,i8**%d,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177304,i32*%E,align 4
%F=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL8recbinds_1287 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL8recbinds_1287 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 24
%M=bitcast i8*%L to i32*
store i32 -2147483647,i32*%M,align 4
%N=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%O=call fastcc i8*%p(i8*inreg%N,i8*inreg%C)
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8*(i8*,i8*)**
%R=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
%U=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%V=call fastcc i8*%R(i8*inreg%T,i8*inreg%U)
store i8*%V,i8**%f,align 8
%W=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=call fastcc i8*%Z(i8*inreg%ab,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ca,i64 0,i32 2)to i8*))
%ad=getelementptr inbounds i8,i8*%ac,i64 16
%ae=bitcast i8*%ad to i8*(i8*,i8*)**
%af=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ae,align 8
%ag=bitcast i8*%ac to i8**
%ah=load i8*,i8**%ag,align 8
%ai=load i8*,i8**%f,align 8
%aj=call fastcc i8*%af(i8*inreg%ah,i8*inreg%ai)
%ak=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%aj)
store i8*%ak,i8**%g,align 8
%al=bitcast i8**%e to i8***
%am=load i8**,i8***%al,align 8
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%h,align 8
%ao=call i8*@sml_alloc(i32 inreg 20)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177296,i32*%aq,align 4
%ar=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%au=getelementptr inbounds i8,i8*%ao,i64 8
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ao,i64 16
%ax=bitcast i8*%aw to i32*
store i32 3,i32*%ax,align 4
%ay=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%ao)
store i8*%ay,i8**%g,align 8
%az=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aA=getelementptr inbounds i8,i8*%az,i64 8
%aB=bitcast i8*%aA to i8**
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%h,align 8
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
store i8*%aD,i8**%e,align 8
%aG=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aD,i64 16
%aM=bitcast i8*%aL to i32*
store i32 3,i32*%aM,align 4
%aN=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aO=getelementptr inbounds i8,i8*%aN,i64 16
%aP=bitcast i8*%aO to i8*(i8*,i8*)**
%aQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aP,align 8
%aR=bitcast i8*%aN to i8**
%aS=load i8*,i8**%aR,align 8
store i8*%aS,i8**%g,align 8
%aT=call i8*@sml_alloc(i32 inreg 20)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
store i8*%aT,i8**%h,align 8
%aW=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aT,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
%a3=call i8*@sml_alloc(i32 inreg 28)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177304,i32*%a5,align 4
%a6=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%a3,i64 8
%a9=bitcast i8*%a8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination18analyzeFunRecbindsE_1290 to void(...)*),void(...)**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 16
%bb=bitcast i8*%ba to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination18analyzeFunRecbindsE_1290 to void(...)*),void(...)**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 24
%bd=bitcast i8*%bc to i32*
store i32 -2147483647,i32*%bd,align 4
%be=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bf=call fastcc i8*%aQ(i8*inreg%be,i8*inreg%a3)
%bg=getelementptr inbounds i8,i8*%bf,i64 16
%bh=bitcast i8*%bg to i8*(i8*,i8*)**
%bi=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bh,align 8
%bj=bitcast i8*%bf to i8**
%bk=load i8*,i8**%bj,align 8
%bl=load i8*,i8**%f,align 8
%bm=tail call fastcc i8*%bi(i8*inreg%bk,i8*inreg%bl)
ret i8*%bm
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination14analyzeMonoLetE_1098(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
q:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%f,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%c,%q]
store i8*null,i8**%f,align 8
%r=icmp eq i8*%p,null
br i1%r,label%s,label%C
s:
store i8*null,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
%w=bitcast i8*%t to i8**
store i8*null,i8**%w,align 8
%x=load i8*,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
ret i8*%t
C:
%D=bitcast i8*%p to i8**
%E=load i8*,i8**%D,align 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%f,align 8
%H=getelementptr inbounds i8,i8*%E,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
%K=getelementptr inbounds i8,i8*%p,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%g,align 8
%N=load i8*,i8**%d,align 8
%O=load i8*,i8**%e,align 8
%P=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%N,i8*inreg%O,i8*inreg%J)
store i8*%P,i8**%h,align 8
%Q=getelementptr inbounds i8,i8*%P,i64 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%i,align 8
%T=load i8*,i8**%f,align 8
%U=bitcast i8*%T to i32*
%V=load i32,i32*%U,align 4
%W=getelementptr inbounds i8,i8*%T,i64 4
%X=bitcast i8*%W to i32*
%Y=load i32,i32*%X,align 4
store i8*null,i8**%f,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%j,align 8
%ac=call i8*@sml_alloc(i32 inreg 28)#0
%ad=bitcast i8*%ac to i32*
%ae=getelementptr inbounds i8,i8*%ac,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177304,i32*%af,align 4
store i8*%ac,i8**%f,align 8
store i32%V,i32*%ad,align 4
%ag=getelementptr inbounds i8,i8*%ac,i64 4
%ah=bitcast i8*%ag to i32*
store i32%Y,i32*%ah,align 4
%ai=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aj=getelementptr inbounds i8,i8*%ac,i64 8
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%am=getelementptr inbounds i8,i8*%ac,i64 16
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ac,i64 24
%ap=bitcast i8*%ao to i32*
store i32 6,i32*%ap,align 4
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
%at=load i8*,i8**%f,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%aq,i64 8
%aw=bitcast i8*%av to i8**
store i8*null,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%aq,i64 16
%ay=bitcast i8*%ax to i32*
store i32 3,i32*%ay,align 4
%az=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%aq)
store i8*%az,i8**%i,align 8
%aA=bitcast i8**%e to i8***
%aB=load i8**,i8***%aA,align 8
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%j,align 8
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
%aG=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aD,i64 16
%aM=bitcast i8*%aL to i32*
store i32 3,i32*%aM,align 4
%aN=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%aD)
store i8*%aN,i8**%i,align 8
%aO=load i8*,i8**%e,align 8
%aP=getelementptr inbounds i8,i8*%aO,i64 8
%aQ=bitcast i8*%aP to i8**
%aR=load i8*,i8**%aQ,align 8
store i8*%aR,i8**%e,align 8
%aS=call i8*@sml_alloc(i32 inreg 20)#0
%aT=getelementptr inbounds i8,i8*%aS,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177296,i32*%aU,align 4
%aV=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aW=bitcast i8*%aS to i8**
store i8*%aV,i8**%aW,align 8
%aX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aY=getelementptr inbounds i8,i8*%aS,i64 8
%aZ=bitcast i8*%aY to i8**
store i8*%aX,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aS,i64 16
%a1=bitcast i8*%a0 to i32*
store i32 3,i32*%a1,align 4
%a2=load i8*,i8**%d,align 8
%a3=load i8*,i8**%g,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%g,align 8
%a4=call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeMonoLetE_1098(i8*inreg%a2,i8*inreg%aS,i8*inreg%a3)
%a5=bitcast i8*%a4 to i8**
%a6=load i8*,i8**%a5,align 8
store i8*%a6,i8**%d,align 8
%a7=getelementptr inbounds i8,i8*%a4,i64 8
%a8=bitcast i8*%a7 to i8**
%a9=load i8*,i8**%a8,align 8
store i8*%a9,i8**%e,align 8
%ba=call i8*@sml_alloc(i32 inreg 20)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177296,i32*%bc,align 4
store i8*%ba,i8**%g,align 8
%bd=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%be=bitcast i8*%ba to i8**
store i8*%bd,i8**%be,align 8
%bf=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bg=getelementptr inbounds i8,i8*%ba,i64 8
%bh=bitcast i8*%bg to i8**
store i8*%bf,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%ba,i64 16
%bj=bitcast i8*%bi to i32*
store i32 3,i32*%bj,align 4
%bk=call i8*@sml_alloc(i32 inreg 20)#0
%bl=getelementptr inbounds i8,i8*%bk,i64 -4
%bm=bitcast i8*%bl to i32*
store i32 1342177296,i32*%bm,align 4
store i8*%bk,i8**%f,align 8
%bn=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bo=bitcast i8*%bk to i8**
store i8*%bn,i8**%bo,align 8
%bp=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bq=getelementptr inbounds i8,i8*%bk,i64 8
%br=bitcast i8*%bq to i8**
store i8*%bp,i8**%br,align 8
%bs=getelementptr inbounds i8,i8*%bk,i64 16
%bt=bitcast i8*%bs to i32*
store i32 3,i32*%bt,align 4
%bu=call i8*@sml_alloc(i32 inreg 20)#0
%bv=getelementptr inbounds i8,i8*%bu,i64 -4
%bw=bitcast i8*%bv to i32*
store i32 1342177296,i32*%bw,align 4
%bx=load i8*,i8**%f,align 8
%by=bitcast i8*%bu to i8**
store i8*%bx,i8**%by,align 8
%bz=load i8*,i8**%e,align 8
%bA=getelementptr inbounds i8,i8*%bu,i64 8
%bB=bitcast i8*%bA to i8**
store i8*%bz,i8**%bB,align 8
%bC=getelementptr inbounds i8,i8*%bu,i64 16
%bD=bitcast i8*%bC to i32*
store i32 3,i32*%bD,align 4
ret i8*%bu
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15analyzeRecbindsE_1099(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
%m=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%g,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%h,align 8
%v=load i8*,i8**%d,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177304,i32*%E,align 4
%F=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL8recbinds_1291 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL8recbinds_1291 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 24
%M=bitcast i8*%L to i32*
store i32 -2147483647,i32*%M,align 4
%N=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%O=call fastcc i8*%p(i8*inreg%N,i8*inreg%C)
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8*(i8*,i8*)**
%R=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
%U=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%V=call fastcc i8*%R(i8*inreg%T,i8*inreg%U)
store i8*%V,i8**%f,align 8
%W=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=call fastcc i8*%Z(i8*inreg%ab,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cb,i64 0,i32 2)to i8*))
%ad=getelementptr inbounds i8,i8*%ac,i64 16
%ae=bitcast i8*%ad to i8*(i8*,i8*)**
%af=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ae,align 8
%ag=bitcast i8*%ac to i8**
%ah=load i8*,i8**%ag,align 8
%ai=load i8*,i8**%f,align 8
%aj=call fastcc i8*%af(i8*inreg%ah,i8*inreg%ai)
%ak=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%aj)
store i8*%ak,i8**%g,align 8
%al=bitcast i8**%e to i8***
%am=load i8**,i8***%al,align 8
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%h,align 8
%ao=call i8*@sml_alloc(i32 inreg 20)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177296,i32*%aq,align 4
%ar=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%au=getelementptr inbounds i8,i8*%ao,i64 8
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ao,i64 16
%ax=bitcast i8*%aw to i32*
store i32 3,i32*%ax,align 4
%ay=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%ao)
store i8*%ay,i8**%g,align 8
%az=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aA=getelementptr inbounds i8,i8*%az,i64 8
%aB=bitcast i8*%aA to i8**
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%h,align 8
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
store i8*%aD,i8**%e,align 8
%aG=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aD,i64 16
%aM=bitcast i8*%aL to i32*
store i32 3,i32*%aM,align 4
%aN=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aO=getelementptr inbounds i8,i8*%aN,i64 16
%aP=bitcast i8*%aO to i8*(i8*,i8*)**
%aQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aP,align 8
%aR=bitcast i8*%aN to i8**
%aS=load i8*,i8**%aR,align 8
store i8*%aS,i8**%g,align 8
%aT=call i8*@sml_alloc(i32 inreg 20)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
store i8*%aT,i8**%h,align 8
%aW=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aT,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
%a3=call i8*@sml_alloc(i32 inreg 28)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177304,i32*%a5,align 4
%a6=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%a3,i64 8
%a9=bitcast i8*%a8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15analyzeRecbindsE_1294 to void(...)*),void(...)**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 16
%bb=bitcast i8*%ba to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15analyzeRecbindsE_1294 to void(...)*),void(...)**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 24
%bd=bitcast i8*%bc to i32*
store i32 -2147483647,i32*%bd,align 4
%be=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bf=call fastcc i8*%aQ(i8*inreg%be,i8*inreg%a3)
%bg=getelementptr inbounds i8,i8*%bf,i64 16
%bh=bitcast i8*%bg to i8*(i8*,i8*)**
%bi=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bh,align 8
%bj=bitcast i8*%bf to i8**
%bk=load i8*,i8**%bj,align 8
%bl=load i8*,i8**%f,align 8
%bm=tail call fastcc i8*%bi(i8*inreg%bk,i8*inreg%bl)
ret i8*%bm
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15analyzeDeclListE_1100(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
r:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%p,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%f,align 8
br label%p
p:
%q=phi i8*[%o,%n],[%c,%r]
store i8*null,i8**%f,align 8
%s=icmp eq i8*%q,null
br i1%s,label%t,label%D
t:
store i8*null,i8**%d,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
%x=bitcast i8*%u to i8**
store i8*null,i8**%x,align 8
%y=load i8*,i8**%e,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
store i8*%y,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
ret i8*%u
D:
%E=bitcast i8*%q to i8**
%F=load i8*,i8**%E,align 8
%G=getelementptr inbounds i8,i8*%q,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%f,align 8
%J=bitcast i8*%F to i32*
%K=load i32,i32*%J,align 4
switch i32%K,label%L[
i32 1,label%iV
i32 2,label%g1
i32 3,label%fG
i32 4,label%eJ
i32 5,label%d6
i32 0,label%dI
i32 6,label%c5
i32 7,label%cI
i32 8,label%bX
i32 9,label%bl
i32 10,label%aA
i32 11,label%ad
]
L:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%M=load i8*,i8**@_SMLZ5Match,align 8
store i8*%M,i8**%d,align 8
%N=call i8*@sml_alloc(i32 inreg 20)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
store i8*%N,i8**%e,align 8
%Q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cg,i64 0,i32 2,i64 0),i8**%T,align 8
%U=getelementptr inbounds i8,i8*%N,i64 16
%V=bitcast i8*%U to i32*
store i32 3,i32*%V,align 4
%W=call i8*@sml_alloc(i32 inreg 60)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177336,i32*%Y,align 4
%Z=getelementptr inbounds i8,i8*%W,i64 56
%aa=bitcast i8*%Z to i32*
store i32 1,i32*%aa,align 4
%ab=load i8*,i8**%e,align 8
%ac=bitcast i8*%W to i8**
store i8*%ab,i8**%ac,align 8
call void@sml_raise(i8*inreg%W)#1
unreachable
ad:
%ae=getelementptr inbounds i8,i8*%F,i64 8
%af=bitcast i8*%ae to i8**
%ag=load i8*,i8**%af,align 8
%ah=bitcast i8*%ag to i8**
%ai=load i8*,i8**%ah,align 8
%aj=getelementptr inbounds i8,i8*%ag,i64 8
%ak=bitcast i8*%aj to i8**
%al=load i8*,i8**%ak,align 8
store i8*%al,i8**%g,align 8
%am=load i8*,i8**%d,align 8
%an=load i8*,i8**%e,align 8
%ao=call fastcc i8*@_SMLLLN17PolyTyElimination15analyzeRecbindsE_1099(i8*inreg%am,i8*inreg%an,i8*inreg%ai)
store i8*%ao,i8**%h,align 8
%ap=call i8*@sml_alloc(i32 inreg 20)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177296,i32*%ar,align 4
%as=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%at=bitcast i8*%ap to i8**
store i8*%as,i8**%at,align 8
%au=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%av=getelementptr inbounds i8,i8*%ap,i64 8
%aw=bitcast i8*%av to i8**
store i8*%au,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%ap,i64 16
%ay=bitcast i8*%ax to i32*
store i32 3,i32*%ay,align 4
%az=call fastcc i8*@_SMLFN12TypedCalcCon8TPVALRECE(i8*inreg%ap)
br label%ji
aA:
%aB=getelementptr inbounds i8,i8*%F,i64 8
%aC=bitcast i8*%aB to i8**
%aD=load i8*,i8**%aC,align 8
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
%aG=getelementptr inbounds i8,i8*%aD,i64 8
%aH=bitcast i8*%aG to i8**
%aI=load i8*,i8**%aH,align 8
store i8*%aI,i8**%g,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 16
%aK=bitcast i8*%aJ to i8**
%aL=load i8*,i8**%aK,align 8
store i8*%aL,i8**%h,align 8
%aM=getelementptr inbounds i8,i8*%aD,i64 24
%aN=bitcast i8*%aM to i8**
%aO=load i8*,i8**%aN,align 8
store i8*%aO,i8**%i,align 8
%aP=load i8*,i8**%d,align 8
%aQ=load i8*,i8**%e,align 8
%aR=call fastcc i8*@_SMLLLN17PolyTyElimination13analyzeBtvEnvE_1065(i8*inreg%aP,i8*inreg%aQ,i8*inreg%aF)
%aS=bitcast i8*%aR to i8**
%aT=load i8*,i8**%aS,align 8
store i8*%aT,i8**%j,align 8
%aU=getelementptr inbounds i8,i8*%aR,i64 8
%aV=bitcast i8*%aU to i8**
%aW=load i8*,i8**%aV,align 8
store i8*%aW,i8**%k,align 8
%aX=load i8*,i8**%d,align 8
%aY=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aZ=call fastcc i8*@_SMLLLN17PolyTyElimination18analyzeConstraintsE_1059(i8*inreg%aX,i8*inreg%aW,i8*inreg%aY)
store i8*%aZ,i8**%g,align 8
%a0=load i8*,i8**%d,align 8
%a1=load i8*,i8**%i,align 8
%a2=load i8*,i8**%k,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%k,align 8
%a3=call fastcc i8*@_SMLLLN17PolyTyElimination15analyzeRecbindsE_1099(i8*inreg%a0,i8*inreg%a2,i8*inreg%a1)
store i8*%a3,i8**%i,align 8
%a4=call i8*@sml_alloc(i32 inreg 36)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177312,i32*%a6,align 4
%a7=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%a8=bitcast i8*%a4 to i8**
store i8*%a7,i8**%a8,align 8
%a9=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ba=getelementptr inbounds i8,i8*%a4,i64 8
%bb=bitcast i8*%ba to i8**
store i8*%a9,i8**%bb,align 8
%bc=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bd=getelementptr inbounds i8,i8*%a4,i64 16
%be=bitcast i8*%bd to i8**
store i8*%bc,i8**%be,align 8
%bf=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bg=getelementptr inbounds i8,i8*%a4,i64 24
%bh=bitcast i8*%bg to i8**
store i8*%bf,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%a4,i64 32
%bj=bitcast i8*%bi to i32*
store i32 15,i32*%bj,align 4
%bk=call fastcc i8*@_SMLFN12TypedCalcCon12TPVALPOLYRECE(i8*inreg%a4)
br label%ji
bl:
%bm=getelementptr inbounds i8,i8*%F,i64 8
%bn=bitcast i8*%bm to i8**
%bo=load i8*,i8**%bn,align 8
%bp=bitcast i8*%bo to i8**
%bq=load i8*,i8**%bp,align 8
%br=bitcast i8*%bq to i8**
%bs=load i8*,i8**%br,align 8
store i8*%bs,i8**%g,align 8
%bt=getelementptr inbounds i8,i8*%bq,i64 8
%bu=bitcast i8*%bt to i8**
%bv=load i8*,i8**%bu,align 8
%bw=getelementptr inbounds i8,i8*%bo,i64 8
%bx=bitcast i8*%bw to i8**
%by=load i8*,i8**%bx,align 8
store i8*%by,i8**%h,align 8
%bz=load i8*,i8**%d,align 8
%bA=load i8*,i8**%e,align 8
%bB=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%bz,i8*inreg%bA,i8*inreg%bv)
store i8*%bB,i8**%i,align 8
%bC=call i8*@sml_alloc(i32 inreg 20)#0
%bD=getelementptr inbounds i8,i8*%bC,i64 -4
%bE=bitcast i8*%bD to i32*
store i32 1342177296,i32*%bE,align 4
store i8*%bC,i8**%j,align 8
%bF=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bG=bitcast i8*%bC to i8**
store i8*%bF,i8**%bG,align 8
%bH=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bI=getelementptr inbounds i8,i8*%bC,i64 8
%bJ=bitcast i8*%bI to i8**
store i8*%bH,i8**%bJ,align 8
%bK=getelementptr inbounds i8,i8*%bC,i64 16
%bL=bitcast i8*%bK to i32*
store i32 3,i32*%bL,align 4
%bM=call i8*@sml_alloc(i32 inreg 20)#0
%bN=getelementptr inbounds i8,i8*%bM,i64 -4
%bO=bitcast i8*%bN to i32*
store i32 1342177296,i32*%bO,align 4
%bP=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bQ=bitcast i8*%bM to i8**
store i8*%bP,i8**%bQ,align 8
%bR=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bS=getelementptr inbounds i8,i8*%bM,i64 8
%bT=bitcast i8*%bS to i8**
store i8*%bR,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bM,i64 16
%bV=bitcast i8*%bU to i32*
store i32 3,i32*%bV,align 4
%bW=call fastcc i8*@_SMLFN12TypedCalcCon5TPVALE(i8*inreg%bM)
br label%ji
bX:
%bY=getelementptr inbounds i8,i8*%F,i64 8
%bZ=bitcast i8*%bY to i8**
%b0=load i8*,i8**%bZ,align 8
%b1=bitcast i8*%b0 to i8**
%b2=load i8*,i8**%b1,align 8
%b3=getelementptr inbounds i8,i8*%b0,i64 8
%b4=bitcast i8*%b3 to i8**
%b5=load i8*,i8**%b4,align 8
store i8*%b5,i8**%g,align 8
%b6=getelementptr inbounds i8,i8*%b0,i64 16
%b7=bitcast i8*%b6 to i8**
%b8=load i8*,i8**%b7,align 8
store i8*%b8,i8**%h,align 8
%b9=getelementptr inbounds i8,i8*%b0,i64 24
%ca=bitcast i8*%b9 to i8**
%cb=load i8*,i8**%ca,align 8
store i8*%cb,i8**%i,align 8
%cc=load i8*,i8**%d,align 8
%cd=load i8*,i8**%e,align 8
%ce=call fastcc i8*@_SMLLLN17PolyTyElimination13analyzeBtvEnvE_1065(i8*inreg%cc,i8*inreg%cd,i8*inreg%b2)
%cf=bitcast i8*%ce to i8**
%cg=load i8*,i8**%cf,align 8
store i8*%cg,i8**%j,align 8
%ch=getelementptr inbounds i8,i8*%ce,i64 8
%ci=bitcast i8*%ch to i8**
%cj=load i8*,i8**%ci,align 8
store i8*%cj,i8**%k,align 8
%ck=load i8*,i8**%d,align 8
%cl=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cm=call fastcc i8*@_SMLLLN17PolyTyElimination18analyzeConstraintsE_1059(i8*inreg%ck,i8*inreg%cj,i8*inreg%cl)
store i8*%cm,i8**%g,align 8
%cn=load i8*,i8**%d,align 8
%co=load i8*,i8**%i,align 8
%cp=load i8*,i8**%k,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%k,align 8
%cq=call fastcc i8*@_SMLLLN17PolyTyElimination18analyzeFunRecbindsE_1097(i8*inreg%cn,i8*inreg%cp,i8*inreg%co)
store i8*%cq,i8**%i,align 8
%cr=call i8*@sml_alloc(i32 inreg 36)#0
%cs=getelementptr inbounds i8,i8*%cr,i64 -4
%ct=bitcast i8*%cs to i32*
store i32 1342177312,i32*%ct,align 4
%cu=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cv=bitcast i8*%cr to i8**
store i8*%cu,i8**%cv,align 8
%cw=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cx=getelementptr inbounds i8,i8*%cr,i64 8
%cy=bitcast i8*%cx to i8**
store i8*%cw,i8**%cy,align 8
%cz=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cA=getelementptr inbounds i8,i8*%cr,i64 16
%cB=bitcast i8*%cA to i8**
store i8*%cz,i8**%cB,align 8
%cC=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cD=getelementptr inbounds i8,i8*%cr,i64 24
%cE=bitcast i8*%cD to i8**
store i8*%cC,i8**%cE,align 8
%cF=getelementptr inbounds i8,i8*%cr,i64 32
%cG=bitcast i8*%cF to i32*
store i32 15,i32*%cG,align 4
%cH=call fastcc i8*@_SMLFN12TypedCalcCon13TPPOLYFUNDECLE(i8*inreg%cr)
br label%ji
cI:
%cJ=getelementptr inbounds i8,i8*%F,i64 8
%cK=bitcast i8*%cJ to i8**
%cL=load i8*,i8**%cK,align 8
%cM=bitcast i8*%cL to i8**
%cN=load i8*,i8**%cM,align 8
%cO=getelementptr inbounds i8,i8*%cL,i64 8
%cP=bitcast i8*%cO to i8**
%cQ=load i8*,i8**%cP,align 8
store i8*%cQ,i8**%g,align 8
%cR=load i8*,i8**%d,align 8
%cS=load i8*,i8**%e,align 8
%cT=call fastcc i8*@_SMLLLN17PolyTyElimination18analyzeFunRecbindsE_1097(i8*inreg%cR,i8*inreg%cS,i8*inreg%cN)
store i8*%cT,i8**%h,align 8
%cU=call i8*@sml_alloc(i32 inreg 20)#0
%cV=getelementptr inbounds i8,i8*%cU,i64 -4
%cW=bitcast i8*%cV to i32*
store i32 1342177296,i32*%cW,align 4
%cX=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cY=bitcast i8*%cU to i8**
store i8*%cX,i8**%cY,align 8
%cZ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%c0=getelementptr inbounds i8,i8*%cU,i64 8
%c1=bitcast i8*%c0 to i8**
store i8*%cZ,i8**%c1,align 8
%c2=getelementptr inbounds i8,i8*%cU,i64 16
%c3=bitcast i8*%c2 to i32*
store i32 3,i32*%c3,align 4
%c4=call fastcc i8*@_SMLFN12TypedCalcCon9TPFUNDECLE(i8*inreg%cU)
br label%ji
c5:
%c6=getelementptr inbounds i8,i8*%F,i64 8
%c7=bitcast i8*%c6 to i8**
%c8=load i8*,i8**%c7,align 8
%c9=bitcast i8*%c8 to i8**
%da=load i8*,i8**%c9,align 8
%db=bitcast i8*%da to i8**
%dc=load i8*,i8**%db,align 8
store i8*%dc,i8**%g,align 8
%dd=getelementptr inbounds i8,i8*%da,i64 8
%de=bitcast i8*%dd to i8**
%df=load i8*,i8**%de,align 8
%dg=getelementptr inbounds i8,i8*%c8,i64 8
%dh=bitcast i8*%dg to i8**
%di=load i8*,i8**%dh,align 8
store i8*%di,i8**%h,align 8
%dj=load i8*,i8**%d,align 8
%dk=load i8*,i8**%e,align 8
%dl=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%dj,i8*inreg%dk,i8*inreg%df)
store i8*%dl,i8**%i,align 8
%dm=load i8*,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination6exportE_1022(i8*inreg%dm,i8*inreg%dl)
%dn=call i8*@sml_alloc(i32 inreg 20)#0
%do=getelementptr inbounds i8,i8*%dn,i64 -4
%dp=bitcast i8*%do to i32*
store i32 1342177296,i32*%dp,align 4
store i8*%dn,i8**%j,align 8
%dq=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dr=bitcast i8*%dn to i8**
store i8*%dq,i8**%dr,align 8
%ds=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%dt=getelementptr inbounds i8,i8*%dn,i64 8
%du=bitcast i8*%dt to i8**
store i8*%ds,i8**%du,align 8
%dv=getelementptr inbounds i8,i8*%dn,i64 16
%dw=bitcast i8*%dv to i32*
store i32 3,i32*%dw,align 4
%dx=call i8*@sml_alloc(i32 inreg 20)#0
%dy=getelementptr inbounds i8,i8*%dx,i64 -4
%dz=bitcast i8*%dy to i32*
store i32 1342177296,i32*%dz,align 4
%dA=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dB=bitcast i8*%dx to i8**
store i8*%dA,i8**%dB,align 8
%dC=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dD=getelementptr inbounds i8,i8*%dx,i64 8
%dE=bitcast i8*%dD to i8**
store i8*%dC,i8**%dE,align 8
%dF=getelementptr inbounds i8,i8*%dx,i64 16
%dG=bitcast i8*%dF to i32*
store i32 3,i32*%dG,align 4
%dH=call fastcc i8*@_SMLFN12TypedCalcCon11TPEXTERNVARE(i8*inreg%dx)
br label%ji
dI:
%dJ=getelementptr inbounds i8,i8*%F,i64 8
%dK=bitcast i8*%dJ to i8**
%dL=load i8*,i8**%dK,align 8
%dM=bitcast i8*%dL to i8**
%dN=load i8*,i8**%dM,align 8
store i8*%dN,i8**%g,align 8
%dO=getelementptr inbounds i8,i8*%dL,i64 8
%dP=bitcast i8*%dO to i8**
%dQ=load i8*,i8**%dP,align 8
%dR=load i8*,i8**%d,align 8
%dS=load i8*,i8**%e,align 8
%dT=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%dR,i8*inreg%dS,i8*inreg%dQ)
store i8*%dT,i8**%h,align 8
%dU=load i8*,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination6exportE_1022(i8*inreg%dU,i8*inreg%dT)
%dV=call i8*@sml_alloc(i32 inreg 20)#0
%dW=getelementptr inbounds i8,i8*%dV,i64 -4
%dX=bitcast i8*%dW to i32*
store i32 1342177296,i32*%dX,align 4
%dY=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dZ=bitcast i8*%dV to i8**
store i8*%dY,i8**%dZ,align 8
%d0=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%d1=getelementptr inbounds i8,i8*%dV,i64 8
%d2=bitcast i8*%d1 to i8**
store i8*%d0,i8**%d2,align 8
%d3=getelementptr inbounds i8,i8*%dV,i64 16
%d4=bitcast i8*%d3 to i32*
store i32 3,i32*%d4,align 4
%d5=call fastcc i8*@_SMLFN12TypedCalcCon12TPBUILTINEXNE(i8*inreg%dV)
br label%ji
d6:
%d7=getelementptr inbounds i8,i8*%F,i64 8
%d8=bitcast i8*%d7 to i8**
%d9=load i8*,i8**%d8,align 8
%ea=bitcast i8*%d9 to i8**
%eb=load i8*,i8**%ea,align 8
%ec=bitcast i8*%eb to i8**
%ed=load i8*,i8**%ec,align 8
store i8*%ed,i8**%g,align 8
%ee=getelementptr inbounds i8,i8*%eb,i64 8
%ef=bitcast i8*%ee to i8**
%eg=load i8*,i8**%ef,align 8
%eh=getelementptr inbounds i8,i8*%d9,i64 8
%ei=bitcast i8*%eh to i8**
%ej=load i8*,i8**%ei,align 8
store i8*%ej,i8**%h,align 8
%ek=load i8*,i8**%d,align 8
%el=load i8*,i8**%e,align 8
%em=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%ek,i8*inreg%el,i8*inreg%eg)
store i8*%em,i8**%i,align 8
%en=load i8*,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination6exportE_1022(i8*inreg%en,i8*inreg%em)
%eo=call i8*@sml_alloc(i32 inreg 20)#0
%ep=getelementptr inbounds i8,i8*%eo,i64 -4
%eq=bitcast i8*%ep to i32*
store i32 1342177296,i32*%eq,align 4
store i8*%eo,i8**%j,align 8
%er=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%es=bitcast i8*%eo to i8**
store i8*%er,i8**%es,align 8
%et=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%eu=getelementptr inbounds i8,i8*%eo,i64 8
%ev=bitcast i8*%eu to i8**
store i8*%et,i8**%ev,align 8
%ew=getelementptr inbounds i8,i8*%eo,i64 16
%ex=bitcast i8*%ew to i32*
store i32 3,i32*%ex,align 4
%ey=call i8*@sml_alloc(i32 inreg 20)#0
%ez=getelementptr inbounds i8,i8*%ey,i64 -4
%eA=bitcast i8*%ez to i32*
store i32 1342177296,i32*%eA,align 4
%eB=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%eC=bitcast i8*%ey to i8**
store i8*%eB,i8**%eC,align 8
%eD=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%eE=getelementptr inbounds i8,i8*%ey,i64 8
%eF=bitcast i8*%eE to i8**
store i8*%eD,i8**%eF,align 8
%eG=getelementptr inbounds i8,i8*%ey,i64 16
%eH=bitcast i8*%eG to i32*
store i32 3,i32*%eH,align 4
%eI=call fastcc i8*@_SMLFN12TypedCalcCon11TPEXTERNEXNE(i8*inreg%ey)
br label%ji
eJ:
%eK=getelementptr inbounds i8,i8*%F,i64 8
%eL=bitcast i8*%eK to i8**
%eM=load i8*,i8**%eL,align 8
%eN=bitcast i8*%eM to i8**
%eO=load i8*,i8**%eN,align 8
store i8*%eO,i8**%g,align 8
%eP=getelementptr inbounds i8,i8*%eM,i64 8
%eQ=bitcast i8*%eP to i8**
%eR=load i8*,i8**%eQ,align 8
%eS=bitcast i8*%eR to i8**
%eT=load i8*,i8**%eS,align 8
store i8*%eT,i8**%h,align 8
%eU=getelementptr inbounds i8,i8*%eR,i64 8
%eV=bitcast i8*%eU to i8**
%eW=load i8*,i8**%eV,align 8
%eX=load i8*,i8**%d,align 8
%eY=load i8*,i8**%e,align 8
%eZ=call fastcc i8*@_SMLLLN17PolyTyElimination9analyzeTyE_1024(i8*inreg%eX,i8*inreg%eY,i8*inreg%eW)
store i8*%eZ,i8**%i,align 8
%e0=load i8*,i8**%d,align 8
%e1=load i8*,i8**%e,align 8
%e2=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%e3=call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1095(i8*inreg%e0,i8*inreg%e1,i8*inreg%e2)
store i8*%e3,i8**%g,align 8
%e4=load i8*,i8**%d,align 8
%e5=load i8*,i8**%i,align 8
call fastcc void@_SMLLLN17PolyTyElimination6exportE_1022(i8*inreg%e4,i8*inreg%e5)
%e6=load i8*,i8**%g,align 8
%e7=getelementptr inbounds i8,i8*%e6,i64 8
%e8=bitcast i8*%e7 to i8**
%e9=load i8*,i8**%e8,align 8
store i8*%e9,i8**%j,align 8
%fa=call i8*@sml_alloc(i32 inreg 20)#0
%fb=getelementptr inbounds i8,i8*%fa,i64 -4
%fc=bitcast i8*%fb to i32*
store i32 1342177296,i32*%fc,align 4
%fd=load i8*,i8**%i,align 8
%fe=bitcast i8*%fa to i8**
store i8*%fd,i8**%fe,align 8
%ff=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%fg=getelementptr inbounds i8,i8*%fa,i64 8
%fh=bitcast i8*%fg to i8**
store i8*%ff,i8**%fh,align 8
%fi=getelementptr inbounds i8,i8*%fa,i64 16
%fj=bitcast i8*%fi to i32*
store i32 3,i32*%fj,align 4
%fk=load i8*,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination5equalE_928(i8*inreg%fk,i8*inreg%fa)
%fl=call i8*@sml_alloc(i32 inreg 20)#0
%fm=getelementptr inbounds i8,i8*%fl,i64 -4
%fn=bitcast i8*%fm to i32*
store i32 1342177296,i32*%fn,align 4
store i8*%fl,i8**%j,align 8
%fo=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%fp=bitcast i8*%fl to i8**
store i8*%fo,i8**%fp,align 8
%fq=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%fr=getelementptr inbounds i8,i8*%fl,i64 8
%fs=bitcast i8*%fr to i8**
store i8*%fq,i8**%fs,align 8
%ft=getelementptr inbounds i8,i8*%fl,i64 16
%fu=bitcast i8*%ft to i32*
store i32 3,i32*%fu,align 4
%fv=call i8*@sml_alloc(i32 inreg 20)#0
%fw=getelementptr inbounds i8,i8*%fv,i64 -4
%fx=bitcast i8*%fw to i32*
store i32 1342177296,i32*%fx,align 4
%fy=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fz=bitcast i8*%fv to i8**
store i8*%fy,i8**%fz,align 8
%fA=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%fB=getelementptr inbounds i8,i8*%fv,i64 8
%fC=bitcast i8*%fB to i8**
store i8*%fA,i8**%fC,align 8
%fD=getelementptr inbounds i8,i8*%fv,i64 16
%fE=bitcast i8*%fD to i32*
store i32 3,i32*%fE,align 4
%fF=call fastcc i8*@_SMLFN12TypedCalcCon11TPEXPORTVARE(i8*inreg%fv)
br label%ji
fG:
%fH=getelementptr inbounds i8,i8*%F,i64 8
%fI=bitcast i8*%fH to i8**
%fJ=load i8*,i8**%fI,align 8
store i8*%fJ,i8**%g,align 8
%fK=call fastcc i8*@_SMLFN5ExnID3Map4findE(i32 inreg 1,i32 inreg 8)
%fL=getelementptr inbounds i8,i8*%fK,i64 16
%fM=bitcast i8*%fL to i8*(i8*,i8*)**
%fN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fM,align 8
%fO=bitcast i8*%fK to i8**
%fP=load i8*,i8**%fO,align 8
store i8*%fP,i8**%i,align 8
%fQ=bitcast i8**%e to i8***
%fR=load i8**,i8***%fQ,align 8
%fS=load i8*,i8**%fR,align 8
%fT=getelementptr inbounds i8,i8*%fS,i64 24
%fU=bitcast i8*%fT to i8**
%fV=load i8*,i8**%fU,align 8
store i8*%fV,i8**%h,align 8
%fW=bitcast i8**%g to i32**
%fX=load i32*,i32**%fW,align 8
%fY=load i32,i32*%fX,align 4
%fZ=call i8*@sml_alloc(i32 inreg 20)#0
%f0=getelementptr inbounds i8,i8*%fZ,i64 -4
%f1=bitcast i8*%f0 to i32*
store i32 1342177296,i32*%f1,align 4
%f2=getelementptr inbounds i8,i8*%fZ,i64 12
%f3=bitcast i8*%f2 to i32*
store i32 0,i32*%f3,align 1
%f4=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%f5=bitcast i8*%fZ to i8**
store i8*%f4,i8**%f5,align 8
%f6=getelementptr inbounds i8,i8*%fZ,i64 8
%f7=bitcast i8*%f6 to i32*
store i32%fY,i32*%f7,align 4
%f8=getelementptr inbounds i8,i8*%fZ,i64 16
%f9=bitcast i8*%f8 to i32*
store i32 1,i32*%f9,align 4
%ga=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%gb=call fastcc i8*%fN(i8*inreg%ga,i8*inreg%fZ)
%gc=icmp eq i8*%gb,null
br i1%gc,label%gd,label%gz
gd:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
%ge=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%ge,i8**%d,align 8
%gf=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cf,i64 0,i32 2)to i8*))
store i8*%gf,i8**%e,align 8
%gg=call i8*@sml_alloc(i32 inreg 28)#0
%gh=getelementptr inbounds i8,i8*%gg,i64 -4
%gi=bitcast i8*%gh to i32*
store i32 1342177304,i32*%gi,align 4
store i8*%gg,i8**%f,align 8
%gj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gk=bitcast i8*%gg to i8**
store i8*%gj,i8**%gk,align 8
%gl=getelementptr inbounds i8,i8*%gg,i64 8
%gm=bitcast i8*%gl to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%gm,align 8
%gn=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%go=getelementptr inbounds i8,i8*%gg,i64 16
%gp=bitcast i8*%go to i8**
store i8*%gn,i8**%gp,align 8
%gq=getelementptr inbounds i8,i8*%gg,i64 24
%gr=bitcast i8*%gq to i32*
store i32 7,i32*%gr,align 4
%gs=call i8*@sml_alloc(i32 inreg 60)#0
%gt=getelementptr inbounds i8,i8*%gs,i64 -4
%gu=bitcast i8*%gt to i32*
store i32 1342177336,i32*%gu,align 4
%gv=getelementptr inbounds i8,i8*%gs,i64 56
%gw=bitcast i8*%gv to i32*
store i32 1,i32*%gw,align 4
%gx=load i8*,i8**%f,align 8
%gy=bitcast i8*%gs to i8**
store i8*%gx,i8**%gy,align 8
call void@sml_raise(i8*inreg%gs)#1
unreachable
gz:
%gA=bitcast i8*%gb to i8**
%gB=load i8*,i8**%gA,align 8
%gC=getelementptr inbounds i8,i8*%gB,i64 16
%gD=bitcast i8*%gC to i8**
%gE=load i8*,i8**%gD,align 8
store i8*%gE,i8**%h,align 8
%gF=load i8*,i8**%d,align 8
call fastcc void@_SMLLLN17PolyTyElimination6exportE_1022(i8*inreg%gF,i8*inreg%gE)
%gG=load i8*,i8**%g,align 8
%gH=bitcast i8*%gG to i32*
%gI=load i32,i32*%gH,align 4
%gJ=getelementptr inbounds i8,i8*%gG,i64 8
%gK=bitcast i8*%gJ to i8**
%gL=load i8*,i8**%gK,align 8
store i8*%gL,i8**%g,align 8
%gM=call i8*@sml_alloc(i32 inreg 28)#0
%gN=bitcast i8*%gM to i32*
%gO=getelementptr inbounds i8,i8*%gM,i64 -4
%gP=bitcast i8*%gO to i32*
store i32 1342177304,i32*%gP,align 4
%gQ=getelementptr inbounds i8,i8*%gM,i64 4
%gR=bitcast i8*%gQ to i32*
store i32 0,i32*%gR,align 1
store i32%gI,i32*%gN,align 4
%gS=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gT=getelementptr inbounds i8,i8*%gM,i64 8
%gU=bitcast i8*%gT to i8**
store i8*%gS,i8**%gU,align 8
%gV=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gW=getelementptr inbounds i8,i8*%gM,i64 16
%gX=bitcast i8*%gW to i8**
store i8*%gV,i8**%gX,align 8
%gY=getelementptr inbounds i8,i8*%gM,i64 24
%gZ=bitcast i8*%gY to i32*
store i32 6,i32*%gZ,align 4
%g0=call fastcc i8*@_SMLFN12TypedCalcCon11TPEXPORTEXNE(i8*inreg%gM)
br label%ji
g1:
%g2=getelementptr inbounds i8,i8*%F,i64 8
%g3=bitcast i8*%g2 to i8**
%g4=load i8*,i8**%g3,align 8
%g5=bitcast i8*%g4 to i8**
%g6=load i8*,i8**%g5,align 8
%g7=bitcast i8*%g6 to i8**
%g8=load i8*,i8**%g7,align 8
%g9=getelementptr inbounds i8,i8*%g6,i64 8
%ha=bitcast i8*%g9 to i8**
%hb=load i8*,i8**%ha,align 8
store i8*%hb,i8**%g,align 8
%hc=getelementptr inbounds i8,i8*%g4,i64 8
%hd=bitcast i8*%hc to i8**
%he=load i8*,i8**%hd,align 8
store i8*%he,i8**%h,align 8
%hf=load i8*,i8**%d,align 8
%hg=load i8*,i8**%e,align 8
%hh=call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeExnInfoE_1036(i8*inreg%hf,i8*inreg%hg,i8*inreg%g8)
store i8*%hh,i8**%i,align 8
%hi=call fastcc i8*@_SMLFN5VarID3Map4findE(i32 inreg 1,i32 inreg 8)
%hj=getelementptr inbounds i8,i8*%hi,i64 16
%hk=bitcast i8*%hj to i8*(i8*,i8*)**
%hl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hk,align 8
%hm=bitcast i8*%hi to i8**
%hn=load i8*,i8**%hm,align 8
store i8*%hn,i8**%k,align 8
%ho=bitcast i8**%e to i8***
%hp=load i8**,i8***%ho,align 8
%hq=load i8*,i8**%hp,align 8
%hr=getelementptr inbounds i8,i8*%hq,i64 32
%hs=bitcast i8*%hr to i8**
%ht=load i8*,i8**%hs,align 8
store i8*%ht,i8**%j,align 8
%hu=bitcast i8**%g to i32**
%hv=load i32*,i32**%hu,align 8
%hw=load i32,i32*%hv,align 4
%hx=call i8*@sml_alloc(i32 inreg 20)#0
%hy=getelementptr inbounds i8,i8*%hx,i64 -4
%hz=bitcast i8*%hy to i32*
store i32 1342177296,i32*%hz,align 4
%hA=getelementptr inbounds i8,i8*%hx,i64 12
%hB=bitcast i8*%hA to i32*
store i32 0,i32*%hB,align 1
%hC=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%hD=bitcast i8*%hx to i8**
store i8*%hC,i8**%hD,align 8
%hE=getelementptr inbounds i8,i8*%hx,i64 8
%hF=bitcast i8*%hE to i32*
store i32%hw,i32*%hF,align 4
%hG=getelementptr inbounds i8,i8*%hx,i64 16
%hH=bitcast i8*%hG to i32*
store i32 1,i32*%hH,align 4
%hI=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%hJ=call fastcc i8*%hl(i8*inreg%hI,i8*inreg%hx)
%hK=icmp eq i8*%hJ,null
br i1%hK,label%hL,label%h7
hL:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
%hM=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%hM,i8**%d,align 8
%hN=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cd,i64 0,i32 2)to i8*))
store i8*%hN,i8**%e,align 8
%hO=call i8*@sml_alloc(i32 inreg 28)#0
%hP=getelementptr inbounds i8,i8*%hO,i64 -4
%hQ=bitcast i8*%hP to i32*
store i32 1342177304,i32*%hQ,align 4
store i8*%hO,i8**%f,align 8
%hR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hS=bitcast i8*%hO to i8**
store i8*%hR,i8**%hS,align 8
%hT=getelementptr inbounds i8,i8*%hO,i64 8
%hU=bitcast i8*%hT to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%hU,align 8
%hV=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hW=getelementptr inbounds i8,i8*%hO,i64 16
%hX=bitcast i8*%hW to i8**
store i8*%hV,i8**%hX,align 8
%hY=getelementptr inbounds i8,i8*%hO,i64 24
%hZ=bitcast i8*%hY to i32*
store i32 7,i32*%hZ,align 4
%h0=call i8*@sml_alloc(i32 inreg 60)#0
%h1=getelementptr inbounds i8,i8*%h0,i64 -4
%h2=bitcast i8*%h1 to i32*
store i32 1342177336,i32*%h2,align 4
%h3=getelementptr inbounds i8,i8*%h0,i64 56
%h4=bitcast i8*%h3 to i32*
store i32 1,i32*%h4,align 4
%h5=load i8*,i8**%f,align 8
%h6=bitcast i8*%h0 to i8**
store i8*%h5,i8**%h6,align 8
call void@sml_raise(i8*inreg%h0)#1
unreachable
h7:
%h8=bitcast i8*%hJ to i8**
%h9=load i8*,i8**%h8,align 8
%ia=getelementptr inbounds i8,i8*%h9,i64 16
%ib=bitcast i8*%ia to i8**
%ic=load i8*,i8**%ib,align 8
store i8*%ic,i8**%j,align 8
%id=load i8*,i8**%g,align 8
%ie=bitcast i8*%id to i32*
%if=load i32,i32*%ie,align 4
%ig=getelementptr inbounds i8,i8*%id,i64 4
%ih=bitcast i8*%ig to i32*
%ii=load i32,i32*%ih,align 4
%ij=getelementptr inbounds i8,i8*%id,i64 8
%ik=bitcast i8*%ij to i8**
%il=load i8*,i8**%ik,align 8
store i8*%il,i8**%g,align 8
%im=call i8*@sml_alloc(i32 inreg 28)#0
%in=bitcast i8*%im to i32*
%io=getelementptr inbounds i8,i8*%im,i64 -4
%ip=bitcast i8*%io to i32*
store i32 1342177304,i32*%ip,align 4
store i32%if,i32*%in,align 4
%iq=getelementptr inbounds i8,i8*%im,i64 4
%ir=bitcast i8*%iq to i32*
store i32%ii,i32*%ir,align 4
%is=load i8*,i8**%g,align 8
%it=getelementptr inbounds i8,i8*%im,i64 8
%iu=bitcast i8*%it to i8**
store i8*%is,i8**%iu,align 8
%iv=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%iw=getelementptr inbounds i8,i8*%im,i64 16
%ix=bitcast i8*%iw to i8**
store i8*%iv,i8**%ix,align 8
%iy=getelementptr inbounds i8,i8*%im,i64 24
%iz=bitcast i8*%iy to i32*
store i32 6,i32*%iz,align 4
store i8*%im,i8**%g,align 8
%iA=call i8*@sml_alloc(i32 inreg 20)#0
%iB=getelementptr inbounds i8,i8*%iA,i64 -4
%iC=bitcast i8*%iB to i32*
store i32 1342177296,i32*%iC,align 4
store i8*%iA,i8**%j,align 8
%iD=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%iE=bitcast i8*%iA to i8**
store i8*%iD,i8**%iE,align 8
%iF=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%iG=getelementptr inbounds i8,i8*%iA,i64 8
%iH=bitcast i8*%iG to i8**
store i8*%iF,i8**%iH,align 8
%iI=getelementptr inbounds i8,i8*%iA,i64 16
%iJ=bitcast i8*%iI to i32*
store i32 3,i32*%iJ,align 4
%iK=call i8*@sml_alloc(i32 inreg 20)#0
%iL=getelementptr inbounds i8,i8*%iK,i64 -4
%iM=bitcast i8*%iL to i32*
store i32 1342177296,i32*%iM,align 4
%iN=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%iO=bitcast i8*%iK to i8**
store i8*%iN,i8**%iO,align 8
%iP=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%iQ=getelementptr inbounds i8,i8*%iK,i64 8
%iR=bitcast i8*%iQ to i8**
store i8*%iP,i8**%iR,align 8
%iS=getelementptr inbounds i8,i8*%iK,i64 16
%iT=bitcast i8*%iS to i32*
store i32 3,i32*%iT,align 4
%iU=call fastcc i8*@_SMLFN12TypedCalcCon9TPEXNTAGDE(i8*inreg%iK)
br label%ji
iV:
%iW=getelementptr inbounds i8,i8*%F,i64 8
%iX=bitcast i8*%iW to i8**
%iY=load i8*,i8**%iX,align 8
%iZ=bitcast i8*%iY to i8**
%i0=load i8*,i8**%iZ,align 8
%i1=getelementptr inbounds i8,i8*%iY,i64 8
%i2=bitcast i8*%i1 to i8**
%i3=load i8*,i8**%i2,align 8
store i8*%i3,i8**%g,align 8
%i4=load i8*,i8**%d,align 8
%i5=load i8*,i8**%e,align 8
%i6=call fastcc i8*@_SMLLLN17PolyTyElimination14analyzeExnInfoE_1036(i8*inreg%i4,i8*inreg%i5,i8*inreg%i0)
store i8*%i6,i8**%h,align 8
%i7=call i8*@sml_alloc(i32 inreg 20)#0
%i8=getelementptr inbounds i8,i8*%i7,i64 -4
%i9=bitcast i8*%i8 to i32*
store i32 1342177296,i32*%i9,align 4
%ja=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%jb=bitcast i8*%i7 to i8**
store i8*%ja,i8**%jb,align 8
%jc=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%jd=getelementptr inbounds i8,i8*%i7,i64 8
%je=bitcast i8*%jd to i8**
store i8*%jc,i8**%je,align 8
%jf=getelementptr inbounds i8,i8*%i7,i64 16
%jg=bitcast i8*%jf to i32*
store i32 3,i32*%jg,align 4
%jh=call fastcc i8*@_SMLFN12TypedCalcCon5TPEXDE(i8*inreg%i7)
br label%ji
ji:
%jj=phi i8*[%az,%ad],[%bk,%aA],[%bW,%bl],[%cH,%bX],[%c4,%cI],[%dH,%c5],[%d5,%dI],[%eI,%d6],[%fF,%eJ],[%g0,%gz],[%iU,%h7],[%jh,%iV]
%jk=bitcast i8*%jj to i8**
%jl=load i8*,i8**%jk,align 8
store i8*%jl,i8**%g,align 8
%jm=getelementptr inbounds i8,i8*%jj,i64 8
%jn=bitcast i8*%jm to i8**
%jo=load i8*,i8**%jn,align 8
store i8*%jo,i8**%h,align 8
%jp=bitcast i8**%e to i8***
%jq=load i8**,i8***%jp,align 8
%jr=load i8*,i8**%jq,align 8
store i8*%jr,i8**%i,align 8
%js=call i8*@sml_alloc(i32 inreg 20)#0
%jt=getelementptr inbounds i8,i8*%js,i64 -4
%ju=bitcast i8*%jt to i32*
store i32 1342177296,i32*%ju,align 4
%jv=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%jw=bitcast i8*%js to i8**
store i8*%jv,i8**%jw,align 8
%jx=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%jy=getelementptr inbounds i8,i8*%js,i64 8
%jz=bitcast i8*%jy to i8**
store i8*%jx,i8**%jz,align 8
%jA=getelementptr inbounds i8,i8*%js,i64 16
%jB=bitcast i8*%jA to i32*
store i32 3,i32*%jB,align 4
%jC=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%js)
store i8*%jC,i8**%h,align 8
%jD=load i8*,i8**%e,align 8
%jE=getelementptr inbounds i8,i8*%jD,i64 8
%jF=bitcast i8*%jE to i8**
%jG=load i8*,i8**%jF,align 8
store i8*%jG,i8**%e,align 8
%jH=call i8*@sml_alloc(i32 inreg 20)#0
%jI=getelementptr inbounds i8,i8*%jH,i64 -4
%jJ=bitcast i8*%jI to i32*
store i32 1342177296,i32*%jJ,align 4
%jK=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%jL=bitcast i8*%jH to i8**
store i8*%jK,i8**%jL,align 8
%jM=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%jN=getelementptr inbounds i8,i8*%jH,i64 8
%jO=bitcast i8*%jN to i8**
store i8*%jM,i8**%jO,align 8
%jP=getelementptr inbounds i8,i8*%jH,i64 16
%jQ=bitcast i8*%jP to i32*
store i32 3,i32*%jQ,align 4
%jR=load i8*,i8**%d,align 8
%jS=load i8*,i8**%f,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
%jT=call fastcc i8*@_SMLLLN17PolyTyElimination15analyzeDeclListE_1100(i8*inreg%jR,i8*inreg%jH,i8*inreg%jS)
%jU=bitcast i8*%jT to i8**
%jV=load i8*,i8**%jU,align 8
store i8*%jV,i8**%d,align 8
%jW=getelementptr inbounds i8,i8*%jT,i64 8
%jX=bitcast i8*%jW to i8**
%jY=load i8*,i8**%jX,align 8
store i8*%jY,i8**%e,align 8
%jZ=call i8*@sml_alloc(i32 inreg 20)#0
%j0=getelementptr inbounds i8,i8*%jZ,i64 -4
%j1=bitcast i8*%j0 to i32*
store i32 1342177296,i32*%j1,align 4
store i8*%jZ,i8**%f,align 8
%j2=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%j3=bitcast i8*%jZ to i8**
store i8*%j2,i8**%j3,align 8
%j4=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%j5=getelementptr inbounds i8,i8*%jZ,i64 8
%j6=bitcast i8*%j5 to i8**
store i8*%j4,i8**%j6,align 8
%j7=getelementptr inbounds i8,i8*%jZ,i64 16
%j8=bitcast i8*%j7 to i32*
store i32 3,i32*%j8,align 4
%j9=call i8*@sml_alloc(i32 inreg 20)#0
%ka=getelementptr inbounds i8,i8*%j9,i64 -4
%kb=bitcast i8*%ka to i32*
store i32 1342177296,i32*%kb,align 4
%kc=load i8*,i8**%f,align 8
%kd=bitcast i8*%j9 to i8**
store i8*%kc,i8**%kd,align 8
%ke=load i8*,i8**%e,align 8
%kf=getelementptr inbounds i8,i8*%j9,i64 8
%kg=bitcast i8*%kf to i8**
store i8*%ke,i8**%kg,align 8
%kh=getelementptr inbounds i8,i8*%j9,i64 16
%ki=bitcast i8*%kh to i32*
store i32 3,i32*%ki,align 4
ret i8*%j9
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1101(i8*inreg%a,i8*inreg%b)unnamed_addr#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%a,i8**%c,align 8
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=getelementptr inbounds i8,i8*%f,i64 -4
%h=bitcast i8*%g to i32*
store i32 1342177296,i32*%h,align 4
store i8*%f,i8**%e,align 8
%i=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%j=bitcast i8*%f to i8**
store i8*%i,i8**%j,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i8**
store i8*%k,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%f,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
%s=load i8*,i8**%e,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1304 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10analyzeExpE_1304 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 24
%z=bitcast i8*%y to i32*
store i32 -2147483647,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination8traverseE_1311(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 8)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 805306376,i32*%i,align 4
store i8*%g,i8**%f,align 8
%j=bitcast i8*%g to i64*
store i64 0,i64*%j,align 1
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%e,align 8
%n=call i8*@sml_alloc(i32 inreg 20)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=bitcast i8*%n to i64*
store i64 0,i64*%q,align 4
%r=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to i8**
store i8*%r,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to i32*
store i32 2,i32*%v,align 4
%w=load i8*,i8**%f,align 8
%x=bitcast i8*%w to i8**
call void@sml_write(i8*inreg%w,i8**inreg%x,i8*inreg%n)#0
%y=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i32*
%B=load i32,i32*%A,align 4
%C=load i8*,i8**%c,align 8
%D=sext i32%B to i64
%E=getelementptr inbounds i8,i8*%C,i64%D
%F=bitcast i8*%E to i32*
%G=load i32,i32*%F,align 4
%H=call i8*@sml_alloc(i32 inreg 28)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177304,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%H,i64 12
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
%M=load i8*,i8**%f,align 8
%N=bitcast i8*%H to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%H,i64 8
%P=bitcast i8*%O to i32*
store i32%G,i32*%P,align 4
%Q=load i8*,i8**%c,align 8
%R=getelementptr inbounds i8,i8*%H,i64 16
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%H,i64 24
%U=bitcast i8*%T to i32*
store i32 5,i32*%U,align 4
ret i8*%H
}
define internal fastcc i8*@_SMLLL3get_1316(i8*inreg%a)#5 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 60)#0
%c=getelementptr inbounds i8,i8*%b,i64 -4
%d=bitcast i8*%c to i32*
store i32 1342177336,i32*%d,align 4
%e=getelementptr inbounds i8,i8*%b,i64 56
%f=bitcast i8*%e to i32*
store i32 1,i32*%f,align 4
%g=bitcast i8*%b to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cm,i64 0,i32 2)to i8*),i8**%g,align 8
tail call void@sml_raise(i8*inreg%b)#1
unreachable
}
define internal fastcc i8*@_SMLLL3get_1312(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i32*
%p=load i32,i32*%o,align 4
%q=getelementptr inbounds i8,i8*%m,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
%x=bitcast i8*%w to i32*
%y=load i32,i32*%x,align 4
switch i32%y,label%z[
i32 1,label%ba
i32 0,label%R
]
z:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%A=load i8*,i8**@_SMLZ5Match,align 8
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%d,align 8
%E=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cp,i64 0,i32 2,i64 0),i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 60)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177336,i32*%M,align 4
%N=getelementptr inbounds i8,i8*%K,i64 56
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
%P=load i8*,i8**%d,align 8
%Q=bitcast i8*%K to i8**
store i8*%P,i8**%Q,align 8
call void@sml_raise(i8*inreg%K)#1
unreachable
R:
%S=getelementptr inbounds i8,i8*%w,i64 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
%V=getelementptr inbounds i8,i8*%s,i64 8
%W=bitcast i8*%V to i32*
%X=load i32,i32*%W,align 4
%Y=getelementptr inbounds i8,i8*%s,i64 16
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
store i8*%aa,i8**%d,align 8
%ab=icmp eq i32%p,%X
br i1%ab,label%ac,label%aT
ac:
call void@sml_write(i8*inreg%u,i8**inreg%v,i8*inreg bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@co,i64 0,i32 2)to i8*))#0
%ad=getelementptr inbounds i8,i8*%U,i64 16
%ae=bitcast i8*%ad to i8*(i8*,i8*)**
%af=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ae,align 8
%ag=bitcast i8*%U to i8**
%ah=load i8*,i8**%ag,align 8
store i8*%ah,i8**%f,align 8
%ai=call i8*@sml_alloc(i32 inreg 28)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177304,i32*%ak,align 4
store i8*%ai,i8**%g,align 8
%al=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%am=bitcast i8*%ai to i8**
store i8*%al,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ai,i64 8
%ao=bitcast i8*%an to void(...)**
store void(...)*bitcast(i8*(i8*,i32)*@_SMLLL7getById_1313 to void(...)*),void(...)**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ai,i64 16
%aq=bitcast i8*%ap to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7getById_1739 to void(...)*),void(...)**%aq,align 8
%ar=getelementptr inbounds i8,i8*%ai,i64 24
%as=bitcast i8*%ar to i32*
store i32 -2147483647,i32*%as,align 4
%at=call i8*@sml_alloc(i32 inreg 20)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177296,i32*%av,align 4
%aw=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ax=bitcast i8*%at to i8**
store i8*%aw,i8**%ax,align 8
%ay=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%az=getelementptr inbounds i8,i8*%at,i64 8
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%at,i64 16
%aC=bitcast i8*%aB to i32*
store i32 3,i32*%aC,align 4
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=call fastcc i8*%af(i8*inreg%aD,i8*inreg%at)
store i8*%aE,i8**%d,align 8
%aF=call i8*@sml_alloc(i32 inreg 20)#0
%aG=bitcast i8*%aF to i32*
%aH=getelementptr inbounds i8,i8*%aF,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177296,i32*%aI,align 4
%aJ=getelementptr inbounds i8,i8*%aF,i64 4
%aK=bitcast i8*%aJ to i32*
store i32 0,i32*%aK,align 1
store i32 1,i32*%aG,align 4
%aL=load i8*,i8**%d,align 8
%aM=getelementptr inbounds i8,i8*%aF,i64 8
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aF,i64 16
%aP=bitcast i8*%aO to i32*
store i32 2,i32*%aP,align 4
%aQ=load i8*,i8**%c,align 8
%aR=bitcast i8*%aQ to i8**
call void@sml_write(i8*inreg%aQ,i8**inreg%aR,i8*inreg%aF)#0
%aS=load i8*,i8**%d,align 8
ret i8*%aS
aT:
store i8*null,i8**%d,align 8
%aU=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aV=call fastcc i8*@_SMLLL7getById_1313(i8*inreg%aU,i32 inreg%X)
store i8*%aV,i8**%d,align 8
%aW=call i8*@sml_alloc(i32 inreg 20)#0
%aX=bitcast i8*%aW to i32*
%aY=getelementptr inbounds i8,i8*%aW,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177296,i32*%aZ,align 4
%a0=getelementptr inbounds i8,i8*%aW,i64 4
%a1=bitcast i8*%a0 to i32*
store i32 0,i32*%a1,align 1
store i32 1,i32*%aX,align 4
%a2=load i8*,i8**%d,align 8
%a3=getelementptr inbounds i8,i8*%aW,i64 8
%a4=bitcast i8*%a3 to i8**
store i8*%a2,i8**%a4,align 8
%a5=getelementptr inbounds i8,i8*%aW,i64 16
%a6=bitcast i8*%a5 to i32*
store i32 2,i32*%a6,align 4
%a7=load i8*,i8**%c,align 8
%a8=bitcast i8*%a7 to i8**
call void@sml_write(i8*inreg%a7,i8**inreg%a8,i8*inreg%aW)#0
%a9=load i8*,i8**%d,align 8
ret i8*%a9
ba:
%bb=getelementptr inbounds i8,i8*%w,i64 8
%bc=bitcast i8*%bb to i8**
%bd=load i8*,i8**%bc,align 8
ret i8*%bd
}
define internal fastcc i8*@_SMLLL7getById_1313(i8*inreg%a,i32 inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%e to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
store i8*%p,i8**%c,align 8
%s=getelementptr inbounds i8,i8*%p,i64 12
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
%u=bitcast i8*%p to i8**
%v=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
store i8*%v,i8**%u,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i32*
store i32%b,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg 1,i32 inreg 8)
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=icmp eq i8*%H,null
br i1%I,label%J,label%Q
J:
store i8*null,i8**%e,align 8
%K=call i8*@sml_alloc(i32 inreg 60)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177336,i32*%M,align 4
%N=getelementptr inbounds i8,i8*%K,i64 56
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
%P=bitcast i8*%K to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cr,i64 0,i32 2)to i8*),i8**%P,align 8
call void@sml_raise(i8*inreg%K)#1
unreachable
Q:
%R=bitcast i8*%H to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%c,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=bitcast i8*%T to i32*
%V=getelementptr inbounds i8,i8*%T,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=getelementptr inbounds i8,i8*%T,i64 4
%Y=bitcast i8*%X to i32*
store i32 0,i32*%Y,align 1
store i32%b,i32*%U,align 4
%Z=load i8*,i8**%c,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 16
%ad=bitcast i8*%ac to i32*
store i32 2,i32*%ad,align 4
%ae=load i8*,i8**%e,align 8
%af=tail call fastcc i8*@_SMLLL3get_1312(i8*inreg%ae,i8*inreg%T)
ret i8*%af
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination8traverseE_1322(i32 inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call i8*@sml_alloc(i32 inreg 20)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177296,i32*%m,align 4
store i8*%k,i8**%f,align 8
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i32*
store i32%a,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to i32*
store i32 1,i32*%s,align 4
%t=call i8*@sml_alloc(i32 inreg 28)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177304,i32*%v,align 4
store i8*%t,i8**%d,align 8
%w=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination8traverseE_1311 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination8traverseE_1311 to void(...)*),void(...)**%B,align 8
%C=getelementptr inbounds i8,i8*%t,i64 24
%D=bitcast i8*%C to i32*
store i32 -2147483647,i32*%D,align 4
%E=call fastcc i8*@_SMLFN14BoundTypeVarID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%L=call fastcc i8*%H(i8*inreg%J,i8*inreg%K)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%S=call fastcc i8*%O(i8*inreg%Q,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 12)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177288,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to i32*
store i32 1,i32*%Z,align 4
%aa=call i8*@sml_alloc(i32 inreg 28)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177304,i32*%ac,align 4
store i8*%aa,i8**%f,align 8
%ad=load i8*,i8**%e,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%aa,i64 8
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL3get_1312 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%aa,i64 16
%ai=bitcast i8*%ah to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL3get_1312 to void(...)*),void(...)**%ai,align 8
%aj=getelementptr inbounds i8,i8*%aa,i64 24
%ak=bitcast i8*%aj to i32*
store i32 -2147483647,i32*%ak,align 4
%al=call i8*@sml_alloc(i32 inreg 28)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177304,i32*%an,align 4
%ao=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%al,i64 8
%ar=bitcast i8*%aq to void(...)**
store void(...)*bitcast(i8*(i8*,i32)*@_SMLLL7getById_1313 to void(...)*),void(...)**%ar,align 8
%as=getelementptr inbounds i8,i8*%al,i64 16
%at=bitcast i8*%as to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7getById_1739 to void(...)*),void(...)**%at,align 8
%au=getelementptr inbounds i8,i8*%al,i64 24
%av=bitcast i8*%au to i32*
store i32 -2147483647,i32*%av,align 4
%aw=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4mapiE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ax=getelementptr inbounds i8,i8*%aw,i64 16
%ay=bitcast i8*%ax to i8*(i8*,i8*)**
%az=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ay,align 8
%aA=bitcast i8*%aw to i8**
%aB=load i8*,i8**%aA,align 8
%aC=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aD=call fastcc i8*%az(i8*inreg%aB,i8*inreg%aC)
%aE=getelementptr inbounds i8,i8*%aD,i64 16
%aF=bitcast i8*%aE to i8*(i8*,i8*)**
%aG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aF,align 8
%aH=bitcast i8*%aD to i8**
%aI=load i8*,i8**%aH,align 8
%aJ=load i8*,i8**%d,align 8
%aK=tail call fastcc i8*%aG(i8*inreg%aI,i8*inreg%aJ)
ret i8*%aK
}
define internal fastcc i32@_SMLLLN17PolyTyElimination6instOfE_1324(i8*inreg%a,i32 inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg 1,i32 inreg 8)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%d,align 8
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%r,i64 12
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 1
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=bitcast i8*%r to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i32*
store i32%b,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D=call fastcc i8*%l(i8*inreg%C,i8*inreg%r)
%E=icmp eq i8*%D,null
br i1%E,label%P,label%F
F:
%G=bitcast i8*%D to i8**
%H=load i8*,i8**%G,align 8
%I=icmp eq i8*%H,null
br i1%I,label%N,label%J
J:
%K=bitcast i8*%H to i32*
%L=load i32,i32*%K,align 4
%M=icmp eq i32%L,0
br i1%M,label%N,label%P
N:
%O=phi i32[1,%J],[0,%P],[1,%F]
ret i32%O
P:
br label%N
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination6instOfE_1329(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call i8*@sml_alloc(i32 inreg 12)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177288,i32*%l,align 4
store i8*%j,i8**%e,align 8
%m=load i8*,i8**%d,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i32*
store i32 1,i32*%p,align 4
%q=call i8*@sml_alloc(i32 inreg 28)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177304,i32*%s,align 4
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to void(...)**
store void(...)*bitcast(i32(i8*,i32)*@_SMLLLN17PolyTyElimination6instOfE_1324 to void(...)*),void(...)**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination6instOfE_1741 to void(...)*),void(...)**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 24
%A=bitcast i8*%z to i32*
store i32 -2147483647,i32*%A,align 4
%B=call fastcc i8*@_SMLFN14BoundTypeVarID3Set6existsE(i8*inreg%q)
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%e,align 8
%H=load i8*,i8**%c,align 8
%I=call fastcc i8*@_SMLFN11TypesBasics5EFBTVE(i8*inreg%H)
%J=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%K=call fastcc i8*%E(i8*inreg%J,i8*inreg%I)
%L=bitcast i8*%K to i32*
%M=load i32,i32*%L,align 4
%N=icmp eq i32%M,0
br i1%N,label%P,label%O
O:
ret i8*null
P:
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=call fastcc i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg%Q)
%S=icmp eq i8*%R,null
br i1%S,label%X,label%T
T:
%U=bitcast i8*%R to i32*
%V=load i32,i32*%U,align 4
%W=icmp eq i32%V,1
br i1%W,label%ak,label%X
X:
store i8*null,i8**%d,align 8
%Y=call fastcc i8*@_SMLFN16DynamicKindUtils8kindOfTyE(i8*inreg%R)
store i8*%Y,i8**%c,align 8
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=bitcast i8*%Z to i32*
%ab=getelementptr inbounds i8,i8*%Z,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177296,i32*%ac,align 4
%ad=getelementptr inbounds i8,i8*%Z,i64 4
%ae=bitcast i8*%ad to i32*
store i32 0,i32*%ae,align 1
store i32 2,i32*%aa,align 4
%af=load i8*,i8**%c,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 8
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 16
%aj=bitcast i8*%ai to i32*
store i32 2,i32*%aj,align 4
ret i8*%Z
ak:
%al=getelementptr inbounds i8,i8*%R,i64 4
%am=bitcast i8*%al to i32*
%an=load i32,i32*%am,align 4
%ao=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg 1,i32 inreg 8)
%ap=getelementptr inbounds i8,i8*%ao,i64 16
%aq=bitcast i8*%ap to i8*(i8*,i8*)**
%ar=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aq,align 8
%as=bitcast i8*%ao to i8**
%at=load i8*,i8**%as,align 8
store i8*%at,i8**%c,align 8
%au=call i8*@sml_alloc(i32 inreg 20)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177296,i32*%aw,align 4
%ax=getelementptr inbounds i8,i8*%au,i64 12
%ay=bitcast i8*%ax to i32*
store i32 0,i32*%ay,align 1
%az=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aA=bitcast i8*%au to i8**
store i8*%az,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%au,i64 8
%aC=bitcast i8*%aB to i32*
store i32%an,i32*%aC,align 4
%aD=getelementptr inbounds i8,i8*%au,i64 16
%aE=bitcast i8*%aD to i32*
store i32 1,i32*%aE,align 4
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=call fastcc i8*%ar(i8*inreg%aF,i8*inreg%au)
%aH=icmp eq i8*%aG,null
br i1%aH,label%aI,label%a4
aI:
%aJ=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%aJ,i8**%c,align 8
%aK=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ct,i64 0,i32 2)to i8*))
store i8*%aK,i8**%d,align 8
%aL=call i8*@sml_alloc(i32 inreg 28)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177304,i32*%aN,align 4
store i8*%aL,i8**%e,align 8
%aO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aP=bitcast i8*%aL to i8**
store i8*%aO,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aL,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%aR,align 8
%aS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aT=getelementptr inbounds i8,i8*%aL,i64 16
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aL,i64 24
%aW=bitcast i8*%aV to i32*
store i32 7,i32*%aW,align 4
%aX=call i8*@sml_alloc(i32 inreg 60)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177336,i32*%aZ,align 4
%a0=getelementptr inbounds i8,i8*%aX,i64 56
%a1=bitcast i8*%a0 to i32*
store i32 1,i32*%a1,align 4
%a2=load i8*,i8**%e,align 8
%a3=bitcast i8*%aX to i8**
store i8*%a2,i8**%a3,align 8
call void@sml_raise(i8*inreg%aX)#1
unreachable
a4:
%a5=bitcast i8*%aG to i8**
%a6=load i8*,i8**%a5,align 8
ret i8*%a6
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7dummyTyE_1331(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=bitcast i8*%a to i32*
%e=load i32,i32*%d,align 4
%f=load i8**,i8***bitcast(i8**@_SMLZN5Types8univKindE to i8***),align 8
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%b,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%c,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32%e,i32*%m,align 4
%n=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=bitcast i8*%s to i32*
%u=getelementptr inbounds i8,i8*%s,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
%w=getelementptr inbounds i8,i8*%s,i64 4
%x=bitcast i8*%w to i32*
store i32 0,i32*%x,align 1
store i32 3,i32*%t,align 4
%y=load i8*,i8**%c,align 8
%z=getelementptr inbounds i8,i8*%s,i64 8
%A=bitcast i8*%z to i8**
store i8*%y,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%s,i64 16
%C=bitcast i8*%B to i32*
store i32 2,i32*%C,align 4
ret i8*%s
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination8dummyExpE_1334(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call i8*@sml_save()#0
%m=call i8*@sml_load_intinf(i8*inreg getelementptr inbounds([2x i8],[2x i8]*@cu,i64 0,i64 0))#0
call void@sml_unsave()#0
store i8*%m,i8**%e,align 8
%n=call i8*@sml_alloc(i32 inreg 20)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
store i8*%n,i8**%f,align 8
%q=getelementptr inbounds i8,i8*%n,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
%s=bitcast i8*%n to i32*
store i32 1,i32*%s,align 4
%t=load i8*,i8**%e,align 8
%u=getelementptr inbounds i8,i8*%n,i64 8
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 16
%x=bitcast i8*%w to i32*
store i32 2,i32*%x,align 4
%y=load i8*,i8**@_SMLZN12BuiltinTypes7int32TyE,align 8
store i8*%y,i8**%e,align 8
%z=call i8*@sml_alloc(i32 inreg 28)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177304,i32*%B,align 4
%C=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%z,i64 24
%L=bitcast i8*%K to i32*
store i32 7,i32*%L,align 4
%M=call fastcc i8*@_SMLFN12TypedCalcCon10TPCONSTANTE(i8*inreg%z)
store i8*%M,i8**%e,align 8
%N=load i8*,i8**@_SMLZN12BuiltinTypes7int32TyE,align 8
store i8*%N,i8**%f,align 8
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
store i8*%O,i8**%g,align 8
%R=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%U=getelementptr inbounds i8,i8*%O,i64 8
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%O,i64 16
%X=bitcast i8*%W to i32*
store i32 3,i32*%X,align 4
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=call fastcc i8*@_SMLLLN17PolyTyElimination7dummyTyE_1331(i8*inreg%Y)
store i8*%Z,i8**%c,align 8
%aa=call i8*@sml_alloc(i32 inreg 28)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177304,i32*%ac,align 4
%ad=load i8*,i8**%g,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=load i8*,i8**%c,align 8
%ag=getelementptr inbounds i8,i8*%aa,i64 8
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=load i8*,i8**%d,align 8
%aj=getelementptr inbounds i8,i8*%aa,i64 16
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%aa,i64 24
%am=bitcast i8*%al to i32*
store i32 7,i32*%am,align 4
%an=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPCASTE(i8*inreg%aa)
ret i8*%an
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1414(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination20compileOverloadMatchE_1415(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLLN17PolyTyElimination20compileOverloadMatchE_1338(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15compileTvarKindE_1417(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLLN17PolyTyElimination20compileOprimSelectorE_1339(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLL7instMap_1423(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%n
j:
call void@sml_check(i32 inreg%f)
%k=load i8*,i8**%c,align 8
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%j],[%i,%h]
%p=phi i8*[%k,%j],[%b,%h]
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=getelementptr inbounds i8,i8*%p,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
store i8*null,i8**%d,align 8
%v=load i8*,i8**%o,align 8
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%e,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%z,i64 12
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i8**
%F=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
store i8*%F,i8**%E,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i32*
store i32%r,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 1,i32*%J,align 4
%K=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg 1,i32 inreg 8)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
%Q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%R=call fastcc i8*%N(i8*inreg%P,i8*inreg%Q)
%S=icmp eq i8*%R,null
br i1%S,label%T,label%ap
T:
%U=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%U,i8**%c,align 8
%V=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cL,i64 0,i32 2)to i8*))
store i8*%V,i8**%d,align 8
%W=call i8*@sml_alloc(i32 inreg 28)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177304,i32*%Y,align 4
store i8*%W,i8**%e,align 8
%Z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%W,i64 8
%ac=bitcast i8*%ab to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%ac,align 8
%ad=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ae=getelementptr inbounds i8,i8*%W,i64 16
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%W,i64 24
%ah=bitcast i8*%ag to i32*
store i32 7,i32*%ah,align 4
%ai=call i8*@sml_alloc(i32 inreg 60)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177336,i32*%ak,align 4
%al=getelementptr inbounds i8,i8*%ai,i64 56
%am=bitcast i8*%al to i32*
store i32 1,i32*%am,align 4
%an=load i8*,i8**%e,align 8
%ao=bitcast i8*%ai to i8**
store i8*%an,i8**%ao,align 8
call void@sml_raise(i8*inreg%ai)#1
unreachable
ap:
%aq=bitcast i8*%R to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%d,align 8
%as=call i8*@sml_alloc(i32 inreg 20)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177296,i32*%au,align 4
%av=load i8*,i8**%c,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=load i8*,i8**%d,align 8
%ay=getelementptr inbounds i8,i8*%as,i64 8
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%as,i64 16
%aB=bitcast i8*%aA to i32*
store i32 3,i32*%aB,align 4
ret i8*%as
}
define internal fastcc i8*@_SMLLL5subst_1424(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 8
%e=bitcast i8*%d to i8**
%f=load i8*,i8**%e,align 8
%g=getelementptr inbounds i8,i8*%f,i64 8
%h=bitcast i8*%g to i8**
%i=load i8*,i8**%h,align 8
%j=icmp eq i8*%i,null
br i1%j,label%o,label%k
k:
%l=bitcast i8*%i to i32*
%m=load i32,i32*%l,align 4
%n=icmp eq i32%m,1
br i1%n,label%x,label%o
o:
%p=tail call i8*@sml_alloc(i32 inreg 12)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i32 1,i32*%q,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32%c,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
ret i8*%p
x:
%y=getelementptr inbounds i8,i8*%i,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
ret i8*%A
}
define internal fastcc i8*@_SMLLL6envTmp_1426(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLL6btvEnv_1429(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=bitcast i8*%l to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=getelementptr inbounds i8,i8*%o,i64 16
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%l,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=icmp eq i8*%x,null
br i1%y,label%U,label%z
z:
%A=bitcast i8*%x to i32*
%B=load i32,i32*%A,align 4
switch i32%B,label%C[
i32 1,label%U
i32 2,label%V
i32 0,label%U
]
C:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%D=load i8*,i8**@_SMLZ5Match,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
store i8*%E,i8**%d,align 8
%H=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@cO,i64 0,i32 2,i64 0),i8**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to i32*
store i32 3,i32*%M,align 4
%N=call i8*@sml_alloc(i32 inreg 60)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177336,i32*%P,align 4
%Q=getelementptr inbounds i8,i8*%N,i64 56
%R=bitcast i8*%Q to i32*
store i32 1,i32*%R,align 4
%S=load i8*,i8**%d,align 8
%T=bitcast i8*%N to i8**
store i8*%S,i8**%T,align 8
call void@sml_raise(i8*inreg%N)#1
unreachable
U:
ret i8*null
V:
%W=getelementptr inbounds i8,i8*%x,i64 8
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%d,align 8
%Z=bitcast i8**%e to i8***
%aa=load i8**,i8***%Z,align 8
store i8*null,i8**%e,align 8
%ab=load i8*,i8**%aa,align 8
%ac=call fastcc i8*@_SMLLLN17PolyTyElimination15compileTvarKindE_1340(i8*inreg%ab,i8*inreg%u)
store i8*%ac,i8**%e,align 8
%ad=call i8*@sml_alloc(i32 inreg 12)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177288,i32*%af,align 4
store i8*%ad,i8**%f,align 8
%ag=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to i32*
store i32 1,i32*%aj,align 4
%ak=call i8*@sml_alloc(i32 inreg 28)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177304,i32*%am,align 4
store i8*%ak,i8**%d,align 8
%an=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aq=getelementptr inbounds i8,i8*%ak,i64 8
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%at=getelementptr inbounds i8,i8*%ak,i64 16
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%ak,i64 24
%aw=bitcast i8*%av to i32*
store i32 7,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 12)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177288,i32*%az,align 4
%aA=load i8*,i8**%d,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%ax,i64 8
%aD=bitcast i8*%aC to i32*
store i32 1,i32*%aD,align 4
ret i8*%ax
}
define internal fastcc i8*@_SMLLL3env_1430(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i32@_SMLLLN17PolyTyElimination13compileBtvEnvE_1432(i8*inreg%a)#4 gc"smlsharp"{
t:
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=icmp eq i32%d,0
br i1%e,label%r,label%f
f:
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
%i=getelementptr inbounds i8,i8*%h,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%r,label%m
m:
%n=bitcast i8*%k to i32*
%o=load i32,i32*%n,align 4
%p=icmp ne i32%o,0
%q=zext i1%p to i32
br label%r
r:
%s=phi i32[0,%t],[%q,%m],[0,%f]
ret i32%s
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination13compileBtvEnvE_1434(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%m
j:
%k=bitcast i8*%a to i8**
%l=bitcast i8**%g to i8***
br label%q
m:
call void@sml_check(i32 inreg%h)
%n=load i8*,i8**%c,align 8
%o=bitcast i8**%g to i8***
%p=load i8**,i8***%o,align 8
br label%q
q:
%r=phi i8***[%l,%j],[%o,%m]
%s=phi i8**[%k,%j],[%p,%m]
%t=phi i8*[%b,%j],[%n,%m]
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%v,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=getelementptr inbounds i8,i8*%t,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%e,align 8
%E=load i8*,i8**%s,align 8
%F=getelementptr inbounds i8,i8*%t,i64 16
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%E,i8*inreg%H)
store i8*%I,i8**%f,align 8
%J=load i8**,i8***%r,align 8
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%K,i8*inreg%L)
store i8*%M,i8**%c,align 8
%N=load i8**,i8***%r,align 8
store i8*null,i8**%g,align 8
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Q=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%O,i8*inreg%P)
store i8*%Q,i8**%d,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
store i8*%R,i8**%g,align 8
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=getelementptr inbounds i8,i8*%R,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%R,i64 16
%aa=bitcast i8*%Z to i32*
store i32 3,i32*%aa,align 4
%ab=call i8*@sml_alloc(i32 inreg 28)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177304,i32*%ad,align 4
%ae=load i8*,i8**%g,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=load i8*,i8**%e,align 8
%ah=getelementptr inbounds i8,i8*%ab,i64 8
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=load i8*,i8**%f,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 16
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ab,i64 24
%an=bitcast i8*%am to i32*
store i32 7,i32*%an,align 4
ret i8*%ab
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18compileCodeEntryTyE_1435(i8*inreg%a,i32 inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg 1,i32 inreg 8)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%d,align 8
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%r,i64 12
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 1
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=bitcast i8*%r to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i32*
store i32%b,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D=call fastcc i8*%l(i8*inreg%C,i8*inreg%r)
%E=icmp eq i8*%D,null
br i1%E,label%Z,label%F
F:
%G=bitcast i8*%D to i8**
%H=load i8*,i8**%G,align 8
%I=icmp eq i8*%H,null
br i1%I,label%Z,label%J
J:
%K=bitcast i8*%H to i32*
%L=load i32,i32*%K,align 4
%M=icmp eq i32%L,1
br i1%M,label%N,label%Z
N:
%O=getelementptr inbounds i8,i8*%H,i64 4
%P=bitcast i8*%O to i32*
%Q=load i32,i32*%P,align 4
%R=call i8*@sml_alloc(i32 inreg 12)#0
%S=bitcast i8*%R to i32*
%T=getelementptr inbounds i8,i8*%R,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177288,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%R,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
store i32%Q,i32*%S,align 4
%X=getelementptr inbounds i8,i8*%R,i64 8
%Y=bitcast i8*%X to i32*
store i32 0,i32*%Y,align 4
ret i8*%R
Z:
ret i8*null
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
br label%j
j:
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%n,label%m
m:
call void@sml_check(i32 inreg%k)
br label%n
n:
%o=load i8*,i8**%d,align 8
%p=icmp eq i8*%o,null
br i1%p,label%f3,label%q
q:
%r=bitcast i8*%o to i32*
%s=load i32,i32*%r,align 4
switch i32%s,label%t[
i32 9,label%mf
i32 0,label%gp
i32 4,label%f3
i32 3,label%fw
i32 5,label%eZ
i32 10,label%ea
i32 1,label%dj
i32 6,label%cv
i32 8,label%bZ
i32 2,label%be
i32 7,label%L
]
t:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%u=load i8*,i8**@_SMLZ5Match,align 8
store i8*%u,i8**%c,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%d,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cH,i64 0,i32 2,i64 0),i8**%B,align 8
%C=getelementptr inbounds i8,i8*%v,i64 16
%D=bitcast i8*%C to i32*
store i32 3,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 60)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177336,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%E,i64 56
%I=bitcast i8*%H to i32*
store i32 1,i32*%I,align 4
%J=load i8*,i8**%d,align 8
%K=bitcast i8*%E to i8**
store i8*%J,i8**%K,align 8
call void@sml_raise(i8*inreg%E)#1
unreachable
L:
%M=getelementptr inbounds i8,i8*%o,i64 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%d,align 8
%R=getelementptr inbounds i8,i8*%O,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%e,align 8
%U=getelementptr inbounds i8,i8*%O,i64 16
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%f,align 8
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
%aa=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ad=getelementptr inbounds i8,i8*%X,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%X,i64 16
%ag=bitcast i8*%af to i32*
store i32 3,i32*%ag,align 4
%ah=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ai=call fastcc i8*@_SMLLLN17PolyTyElimination13compileBtvEnvE_1341(i8*inreg%ah,i8*inreg%X)
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%c,align 8
%al=getelementptr inbounds i8,i8*%ai,i64 8
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
%ao=icmp eq i8*%an,null
br i1%ao,label%ap,label%ar
ap:
%aq=tail call fastcc i8*@_SMLLLN17PolyTyElimination7dummyTyE_1331(i8*inreg%ak)
ret i8*%aq
ar:
%as=bitcast i8*%an to i8**
%at=load i8*,i8**%as,align 8
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
store i8*%av,i8**%e,align 8
%aw=getelementptr inbounds i8,i8*%at,i64 8
%ax=bitcast i8*%aw to i8**
%ay=load i8*,i8**%ax,align 8
store i8*%ay,i8**%f,align 8
%az=call fastcc i8*@_SMLFN14BoundTypeVarID3Map7isEmptyE(i32 inreg 1,i32 inreg 8)
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8*(i8*,i8*)**
%aC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aB,align 8
%aD=bitcast i8*%az to i8**
%aE=load i8*,i8**%aD,align 8
%aF=load i8*,i8**%e,align 8
%aG=call fastcc i8*%aC(i8*inreg%aE,i8*inreg%aF)
%aH=bitcast i8*%aG to i32*
%aI=load i32,i32*%aH,align 4
%aJ=icmp eq i32%aI,0
br i1%aJ,label%aM,label%aK
aK:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
br label%aL
aL:
br label%j
aM:
%aN=load i8*,i8**%d,align 8
%aO=load i8*,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
%aP=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%aO,i8*inreg%aN)
store i8*%aP,i8**%c,align 8
%aQ=call i8*@sml_alloc(i32 inreg 28)#0
%aR=getelementptr inbounds i8,i8*%aQ,i64 -4
%aS=bitcast i8*%aR to i32*
store i32 1342177304,i32*%aS,align 4
store i8*%aQ,i8**%d,align 8
%aT=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aU=bitcast i8*%aQ to i8**
store i8*%aT,i8**%aU,align 8
%aV=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aW=getelementptr inbounds i8,i8*%aQ,i64 8
%aX=bitcast i8*%aW to i8**
store i8*%aV,i8**%aX,align 8
%aY=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aZ=getelementptr inbounds i8,i8*%aQ,i64 16
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aQ,i64 24
%a2=bitcast i8*%a1 to i32*
store i32 7,i32*%a2,align 4
%a3=call i8*@sml_alloc(i32 inreg 20)#0
%a4=bitcast i8*%a3 to i32*
%a5=getelementptr inbounds i8,i8*%a3,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177296,i32*%a6,align 4
%a7=getelementptr inbounds i8,i8*%a3,i64 4
%a8=bitcast i8*%a7 to i32*
store i32 0,i32*%a8,align 1
store i32 7,i32*%a4,align 4
%a9=load i8*,i8**%d,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 8
%bb=bitcast i8*%ba to i8**
store i8*%a9,i8**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 16
%bd=bitcast i8*%bc to i32*
store i32 2,i32*%bd,align 4
ret i8*%a3
be:
%bf=getelementptr inbounds i8,i8*%o,i64 8
%bg=bitcast i8*%bf to i8**
%bh=load i8*,i8**%bg,align 8
%bi=bitcast i8*%bh to i8**
%bj=load i8*,i8**%bi,align 8
store i8*%bj,i8**%d,align 8
%bk=getelementptr inbounds i8,i8*%bh,i64 8
%bl=bitcast i8*%bk to i8**
%bm=load i8*,i8**%bl,align 8
store i8*%bm,i8**%e,align 8
%bn=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bo=getelementptr inbounds i8,i8*%bn,i64 16
%bp=bitcast i8*%bo to i8*(i8*,i8*)**
%bq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bp,align 8
%br=bitcast i8*%bn to i8**
%bs=load i8*,i8**%br,align 8
store i8*%bs,i8**%f,align 8
%bt=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bu=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%bt)
%bv=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bw=call fastcc i8*%bq(i8*inreg%bv,i8*inreg%bu)
%bx=getelementptr inbounds i8,i8*%bw,i64 16
%by=bitcast i8*%bx to i8*(i8*,i8*)**
%bz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%by,align 8
%bA=bitcast i8*%bw to i8**
%bB=load i8*,i8**%bA,align 8
%bC=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bD=call fastcc i8*%bz(i8*inreg%bB,i8*inreg%bC)
store i8*%bD,i8**%c,align 8
%bE=call i8*@sml_alloc(i32 inreg 20)#0
%bF=getelementptr inbounds i8,i8*%bE,i64 -4
%bG=bitcast i8*%bF to i32*
store i32 1342177296,i32*%bG,align 4
store i8*%bE,i8**%d,align 8
%bH=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bI=bitcast i8*%bE to i8**
store i8*%bH,i8**%bI,align 8
%bJ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bK=getelementptr inbounds i8,i8*%bE,i64 8
%bL=bitcast i8*%bK to i8**
store i8*%bJ,i8**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bE,i64 16
%bN=bitcast i8*%bM to i32*
store i32 3,i32*%bN,align 4
%bO=call i8*@sml_alloc(i32 inreg 20)#0
%bP=bitcast i8*%bO to i32*
%bQ=getelementptr inbounds i8,i8*%bO,i64 -4
%bR=bitcast i8*%bQ to i32*
store i32 1342177296,i32*%bR,align 4
%bS=getelementptr inbounds i8,i8*%bO,i64 4
%bT=bitcast i8*%bS to i32*
store i32 0,i32*%bT,align 1
store i32 2,i32*%bP,align 4
%bU=load i8*,i8**%d,align 8
%bV=getelementptr inbounds i8,i8*%bO,i64 8
%bW=bitcast i8*%bV to i8**
store i8*%bU,i8**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bO,i64 16
%bY=bitcast i8*%bX to i32*
store i32 2,i32*%bY,align 4
ret i8*%bO
bZ:
%b0=getelementptr inbounds i8,i8*%o,i64 8
%b1=bitcast i8*%b0 to i8**
%b2=load i8*,i8**%b1,align 8
store i8*%b2,i8**%d,align 8
%b3=call fastcc i8*@_SMLFN11RecordLabel3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%b4=getelementptr inbounds i8,i8*%b3,i64 16
%b5=bitcast i8*%b4 to i8*(i8*,i8*)**
%b6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b5,align 8
%b7=bitcast i8*%b3 to i8**
%b8=load i8*,i8**%b7,align 8
store i8*%b8,i8**%e,align 8
%b9=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ca=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%b9)
%cb=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cc=call fastcc i8*%b6(i8*inreg%cb,i8*inreg%ca)
%cd=getelementptr inbounds i8,i8*%cc,i64 16
%ce=bitcast i8*%cd to i8*(i8*,i8*)**
%cf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ce,align 8
%cg=bitcast i8*%cc to i8**
%ch=load i8*,i8**%cg,align 8
%ci=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cj=call fastcc i8*%cf(i8*inreg%ch,i8*inreg%ci)
store i8*%cj,i8**%c,align 8
%ck=call i8*@sml_alloc(i32 inreg 20)#0
%cl=bitcast i8*%ck to i32*
%cm=getelementptr inbounds i8,i8*%ck,i64 -4
%cn=bitcast i8*%cm to i32*
store i32 1342177296,i32*%cn,align 4
%co=getelementptr inbounds i8,i8*%ck,i64 4
%cp=bitcast i8*%co to i32*
store i32 0,i32*%cp,align 1
store i32 8,i32*%cl,align 4
%cq=load i8*,i8**%c,align 8
%cr=getelementptr inbounds i8,i8*%ck,i64 8
%cs=bitcast i8*%cr to i8**
store i8*%cq,i8**%cs,align 8
%ct=getelementptr inbounds i8,i8*%ck,i64 16
%cu=bitcast i8*%ct to i32*
store i32 2,i32*%cu,align 4
ret i8*%ck
cv:
%cw=getelementptr inbounds i8,i8*%o,i64 8
%cx=bitcast i8*%cw to i8**
%cy=load i8*,i8**%cx,align 8
%cz=bitcast i8*%cy to i8**
%cA=load i8*,i8**%cz,align 8
store i8*%cA,i8**%d,align 8
%cB=getelementptr inbounds i8,i8*%cy,i64 8
%cC=bitcast i8*%cB to i8**
%cD=load i8*,i8**%cC,align 8
store i8*%cD,i8**%e,align 8
%cE=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cF=getelementptr inbounds i8,i8*%cE,i64 16
%cG=bitcast i8*%cF to i8*(i8*,i8*)**
%cH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cG,align 8
%cI=bitcast i8*%cE to i8**
%cJ=load i8*,i8**%cI,align 8
store i8*%cJ,i8**%f,align 8
%cK=load i8*,i8**%c,align 8
%cL=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%cK)
%cM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cN=call fastcc i8*%cH(i8*inreg%cM,i8*inreg%cL)
%cO=getelementptr inbounds i8,i8*%cN,i64 16
%cP=bitcast i8*%cO to i8*(i8*,i8*)**
%cQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cP,align 8
%cR=bitcast i8*%cN to i8**
%cS=load i8*,i8**%cR,align 8
%cT=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cU=call fastcc i8*%cQ(i8*inreg%cS,i8*inreg%cT)
store i8*%cU,i8**%d,align 8
%cV=load i8*,i8**%c,align 8
%cW=load i8*,i8**%e,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%e,align 8
%cX=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%cV,i8*inreg%cW)
store i8*%cX,i8**%c,align 8
%cY=call i8*@sml_alloc(i32 inreg 20)#0
%cZ=getelementptr inbounds i8,i8*%cY,i64 -4
%c0=bitcast i8*%cZ to i32*
store i32 1342177296,i32*%c0,align 4
store i8*%cY,i8**%e,align 8
%c1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%c2=bitcast i8*%cY to i8**
store i8*%c1,i8**%c2,align 8
%c3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%c4=getelementptr inbounds i8,i8*%cY,i64 8
%c5=bitcast i8*%c4 to i8**
store i8*%c3,i8**%c5,align 8
%c6=getelementptr inbounds i8,i8*%cY,i64 16
%c7=bitcast i8*%c6 to i32*
store i32 3,i32*%c7,align 4
%c8=call i8*@sml_alloc(i32 inreg 20)#0
%c9=bitcast i8*%c8 to i32*
%da=getelementptr inbounds i8,i8*%c8,i64 -4
%db=bitcast i8*%da to i32*
store i32 1342177296,i32*%db,align 4
%dc=getelementptr inbounds i8,i8*%c8,i64 4
%dd=bitcast i8*%dc to i32*
store i32 0,i32*%dd,align 1
store i32 6,i32*%c9,align 4
%de=load i8*,i8**%e,align 8
%df=getelementptr inbounds i8,i8*%c8,i64 8
%dg=bitcast i8*%df to i8**
store i8*%de,i8**%dg,align 8
%dh=getelementptr inbounds i8,i8*%c8,i64 16
%di=bitcast i8*%dh to i32*
store i32 2,i32*%di,align 4
ret i8*%c8
dj:
store i8*null,i8**%d,align 8
%dk=getelementptr inbounds i8,i8*%o,i64 4
%dl=bitcast i8*%dk to i32*
%dm=load i32,i32*%dl,align 4
%dn=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg 1,i32 inreg 8)
%do=getelementptr inbounds i8,i8*%dn,i64 16
%dp=bitcast i8*%do to i8*(i8*,i8*)**
%dq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dp,align 8
%dr=bitcast i8*%dn to i8**
%ds=load i8*,i8**%dr,align 8
store i8*%ds,i8**%d,align 8
%dt=load i8*,i8**%c,align 8
%du=getelementptr inbounds i8,i8*%dt,i64 24
%dv=bitcast i8*%du to i8**
%dw=load i8*,i8**%dv,align 8
store i8*%dw,i8**%c,align 8
%dx=call i8*@sml_alloc(i32 inreg 20)#0
%dy=getelementptr inbounds i8,i8*%dx,i64 -4
%dz=bitcast i8*%dy to i32*
store i32 1342177296,i32*%dz,align 4
%dA=getelementptr inbounds i8,i8*%dx,i64 12
%dB=bitcast i8*%dA to i32*
store i32 0,i32*%dB,align 1
%dC=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dD=bitcast i8*%dx to i8**
store i8*%dC,i8**%dD,align 8
%dE=getelementptr inbounds i8,i8*%dx,i64 8
%dF=bitcast i8*%dE to i32*
store i32%dm,i32*%dF,align 4
%dG=getelementptr inbounds i8,i8*%dx,i64 16
%dH=bitcast i8*%dG to i32*
store i32 1,i32*%dH,align 4
%dI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dJ=call fastcc i8*%dq(i8*inreg%dI,i8*inreg%dx)
%dK=icmp eq i8*%dJ,null
br i1%dK,label%dL,label%d7
dL:
%dM=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%dM,i8**%c,align 8
%dN=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cG,i64 0,i32 2)to i8*))
store i8*%dN,i8**%d,align 8
%dO=call i8*@sml_alloc(i32 inreg 28)#0
%dP=getelementptr inbounds i8,i8*%dO,i64 -4
%dQ=bitcast i8*%dP to i32*
store i32 1342177304,i32*%dQ,align 4
store i8*%dO,i8**%e,align 8
%dR=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dS=bitcast i8*%dO to i8**
store i8*%dR,i8**%dS,align 8
%dT=getelementptr inbounds i8,i8*%dO,i64 8
%dU=bitcast i8*%dT to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%dU,align 8
%dV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dW=getelementptr inbounds i8,i8*%dO,i64 16
%dX=bitcast i8*%dW to i8**
store i8*%dV,i8**%dX,align 8
%dY=getelementptr inbounds i8,i8*%dO,i64 24
%dZ=bitcast i8*%dY to i32*
store i32 7,i32*%dZ,align 4
%d0=call i8*@sml_alloc(i32 inreg 60)#0
%d1=getelementptr inbounds i8,i8*%d0,i64 -4
%d2=bitcast i8*%d1 to i32*
store i32 1342177336,i32*%d2,align 4
%d3=getelementptr inbounds i8,i8*%d0,i64 56
%d4=bitcast i8*%d3 to i32*
store i32 1,i32*%d4,align 4
%d5=load i8*,i8**%e,align 8
%d6=bitcast i8*%d0 to i8**
store i8*%d5,i8**%d6,align 8
call void@sml_raise(i8*inreg%d0)#1
unreachable
d7:
%d8=bitcast i8*%dJ to i8**
%d9=load i8*,i8**%d8,align 8
ret i8*%d9
ea:
store i8*null,i8**%d,align 8
%eb=getelementptr inbounds i8,i8*%o,i64 8
%ec=bitcast i8*%eb to i8***
%ed=load i8**,i8***%ec,align 8
%ee=load i8*,i8**%ed,align 8
%ef=bitcast i8*%ee to i32*
%eg=load i32,i32*%ef,align 4
switch i32%eg,label%eh[
i32 1,label%eD
i32 0,label%ez
]
eh:
call void@sml_matchcomp_bug()
%ei=load i8*,i8**@_SMLZ5Match,align 8
store i8*%ei,i8**%c,align 8
%ej=call i8*@sml_alloc(i32 inreg 20)#0
%ek=getelementptr inbounds i8,i8*%ej,i64 -4
%el=bitcast i8*%ek to i32*
store i32 1342177296,i32*%el,align 4
store i8*%ej,i8**%d,align 8
%em=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%en=bitcast i8*%ej to i8**
store i8*%em,i8**%en,align 8
%eo=getelementptr inbounds i8,i8*%ej,i64 8
%ep=bitcast i8*%eo to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cH,i64 0,i32 2,i64 0),i8**%ep,align 8
%eq=getelementptr inbounds i8,i8*%ej,i64 16
%er=bitcast i8*%eq to i32*
store i32 3,i32*%er,align 4
%es=call i8*@sml_alloc(i32 inreg 60)#0
%et=getelementptr inbounds i8,i8*%es,i64 -4
%eu=bitcast i8*%et to i32*
store i32 1342177336,i32*%eu,align 4
%ev=getelementptr inbounds i8,i8*%es,i64 56
%ew=bitcast i8*%ev to i32*
store i32 1,i32*%ew,align 4
%ex=load i8*,i8**%d,align 8
%ey=bitcast i8*%es to i8**
store i8*%ex,i8**%ey,align 8
call void@sml_raise(i8*inreg%es)#1
unreachable
ez:
%eA=getelementptr inbounds i8,i8*%ee,i64 8
%eB=bitcast i8*%eA to i8**
%eC=load i8*,i8**%eB,align 8
store i8*%eC,i8**%d,align 8
br label%aL
eD:
%eE=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%eE,i8**%c,align 8
%eF=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cE,i64 0,i32 2)to i8*))
store i8*%eF,i8**%d,align 8
%eG=call i8*@sml_alloc(i32 inreg 28)#0
%eH=getelementptr inbounds i8,i8*%eG,i64 -4
%eI=bitcast i8*%eH to i32*
store i32 1342177304,i32*%eI,align 4
store i8*%eG,i8**%e,align 8
%eJ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%eK=bitcast i8*%eG to i8**
store i8*%eJ,i8**%eK,align 8
%eL=getelementptr inbounds i8,i8*%eG,i64 8
%eM=bitcast i8*%eL to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%eM,align 8
%eN=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eO=getelementptr inbounds i8,i8*%eG,i64 16
%eP=bitcast i8*%eO to i8**
store i8*%eN,i8**%eP,align 8
%eQ=getelementptr inbounds i8,i8*%eG,i64 24
%eR=bitcast i8*%eQ to i32*
store i32 7,i32*%eR,align 4
%eS=call i8*@sml_alloc(i32 inreg 60)#0
%eT=getelementptr inbounds i8,i8*%eS,i64 -4
%eU=bitcast i8*%eT to i32*
store i32 1342177336,i32*%eU,align 4
%eV=getelementptr inbounds i8,i8*%eS,i64 56
%eW=bitcast i8*%eV to i32*
store i32 1,i32*%eW,align 4
%eX=load i8*,i8**%e,align 8
%eY=bitcast i8*%eS to i8**
store i8*%eX,i8**%eY,align 8
call void@sml_raise(i8*inreg%eS)#1
unreachable
eZ:
store i8*null,i8**%d,align 8
%e0=getelementptr inbounds i8,i8*%o,i64 8
%e1=bitcast i8*%e0 to i8**
%e2=load i8*,i8**%e1,align 8
%e3=bitcast i8*%e2 to i32*
%e4=load i32,i32*%e3,align 4
%e5=getelementptr inbounds i8,i8*%e2,i64 8
%e6=bitcast i8*%e5 to i8**
%e7=load i8*,i8**%e6,align 8
%e8=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%e9=call fastcc i8*@_SMLLLN17PolyTyElimination11compileKindE_1342(i8*inreg%e8,i8*inreg%e7)
store i8*%e9,i8**%c,align 8
%fa=call i8*@sml_alloc(i32 inreg 20)#0
%fb=getelementptr inbounds i8,i8*%fa,i64 -4
%fc=bitcast i8*%fb to i32*
store i32 1342177296,i32*%fc,align 4
store i8*%fa,i8**%d,align 8
%fd=getelementptr inbounds i8,i8*%fa,i64 4
%fe=bitcast i8*%fd to i32*
store i32 0,i32*%fe,align 1
%ff=bitcast i8*%fa to i32*
store i32%e4,i32*%ff,align 4
%fg=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%fh=getelementptr inbounds i8,i8*%fa,i64 8
%fi=bitcast i8*%fh to i8**
store i8*%fg,i8**%fi,align 8
%fj=getelementptr inbounds i8,i8*%fa,i64 16
%fk=bitcast i8*%fj to i32*
store i32 2,i32*%fk,align 4
%fl=call i8*@sml_alloc(i32 inreg 20)#0
%fm=bitcast i8*%fl to i32*
%fn=getelementptr inbounds i8,i8*%fl,i64 -4
%fo=bitcast i8*%fn to i32*
store i32 1342177296,i32*%fo,align 4
%fp=getelementptr inbounds i8,i8*%fl,i64 4
%fq=bitcast i8*%fp to i32*
store i32 0,i32*%fq,align 1
store i32 5,i32*%fm,align 4
%fr=load i8*,i8**%d,align 8
%fs=getelementptr inbounds i8,i8*%fl,i64 8
%ft=bitcast i8*%fs to i8**
store i8*%fr,i8**%ft,align 8
%fu=getelementptr inbounds i8,i8*%fl,i64 16
%fv=bitcast i8*%fu to i32*
store i32 2,i32*%fv,align 4
ret i8*%fl
fw:
store i8*null,i8**%d,align 8
%fx=getelementptr inbounds i8,i8*%o,i64 8
%fy=bitcast i8*%fx to i8**
%fz=load i8*,i8**%fy,align 8
%fA=bitcast i8*%fz to i32*
%fB=load i32,i32*%fA,align 4
%fC=getelementptr inbounds i8,i8*%fz,i64 8
%fD=bitcast i8*%fC to i8**
%fE=load i8*,i8**%fD,align 8
%fF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%fG=call fastcc i8*@_SMLLLN17PolyTyElimination11compileKindE_1342(i8*inreg%fF,i8*inreg%fE)
store i8*%fG,i8**%c,align 8
%fH=call i8*@sml_alloc(i32 inreg 20)#0
%fI=getelementptr inbounds i8,i8*%fH,i64 -4
%fJ=bitcast i8*%fI to i32*
store i32 1342177296,i32*%fJ,align 4
store i8*%fH,i8**%d,align 8
%fK=getelementptr inbounds i8,i8*%fH,i64 4
%fL=bitcast i8*%fK to i32*
store i32 0,i32*%fL,align 1
%fM=bitcast i8*%fH to i32*
store i32%fB,i32*%fM,align 4
%fN=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%fO=getelementptr inbounds i8,i8*%fH,i64 8
%fP=bitcast i8*%fO to i8**
store i8*%fN,i8**%fP,align 8
%fQ=getelementptr inbounds i8,i8*%fH,i64 16
%fR=bitcast i8*%fQ to i32*
store i32 2,i32*%fR,align 4
%fS=call i8*@sml_alloc(i32 inreg 20)#0
%fT=bitcast i8*%fS to i32*
%fU=getelementptr inbounds i8,i8*%fS,i64 -4
%fV=bitcast i8*%fU to i32*
store i32 1342177296,i32*%fV,align 4
%fW=getelementptr inbounds i8,i8*%fS,i64 4
%fX=bitcast i8*%fW to i32*
store i32 0,i32*%fX,align 1
store i32 3,i32*%fT,align 4
%fY=load i8*,i8**%d,align 8
%fZ=getelementptr inbounds i8,i8*%fS,i64 8
%f0=bitcast i8*%fZ to i8**
store i8*%fY,i8**%f0,align 8
%f1=getelementptr inbounds i8,i8*%fS,i64 16
%f2=bitcast i8*%f1 to i32*
store i32 2,i32*%f2,align 4
ret i8*%fS
f3:
store i8*null,i8**%d,align 8
%f4=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%f4,i8**%c,align 8
%f5=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cC,i64 0,i32 2)to i8*))
store i8*%f5,i8**%d,align 8
%f6=call i8*@sml_alloc(i32 inreg 28)#0
%f7=getelementptr inbounds i8,i8*%f6,i64 -4
%f8=bitcast i8*%f7 to i32*
store i32 1342177304,i32*%f8,align 4
store i8*%f6,i8**%e,align 8
%f9=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ga=bitcast i8*%f6 to i8**
store i8*%f9,i8**%ga,align 8
%gb=getelementptr inbounds i8,i8*%f6,i64 8
%gc=bitcast i8*%gb to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%gc,align 8
%gd=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ge=getelementptr inbounds i8,i8*%f6,i64 16
%gf=bitcast i8*%ge to i8**
store i8*%gd,i8**%gf,align 8
%gg=getelementptr inbounds i8,i8*%f6,i64 24
%gh=bitcast i8*%gg to i32*
store i32 7,i32*%gh,align 4
%gi=call i8*@sml_alloc(i32 inreg 60)#0
%gj=getelementptr inbounds i8,i8*%gi,i64 -4
%gk=bitcast i8*%gj to i32*
store i32 1342177336,i32*%gk,align 4
%gl=getelementptr inbounds i8,i8*%gi,i64 56
%gm=bitcast i8*%gl to i32*
store i32 1,i32*%gm,align 4
%gn=load i8*,i8**%e,align 8
%go=bitcast i8*%gi to i8**
store i8*%gn,i8**%go,align 8
call void@sml_raise(i8*inreg%gi)#1
unreachable
gp:
store i8*null,i8**%d,align 8
%gq=getelementptr inbounds i8,i8*%o,i64 8
%gr=bitcast i8*%gq to i8**
%gs=load i8*,i8**%gr,align 8
%gt=bitcast i8*%gs to i32*
%gu=load i32,i32*%gt,align 4
switch i32%gu,label%gv[
i32 6,label%lO
i32 5,label%lh
i32 4,label%kK
i32 1,label%kt
i32 3,label%kc
i32 0,label%iu
i32 9,label%it
i32 10,label%is
i32 8,label%ir
i32 7,label%iq
i32 2,label%gN
]
gv:
call void@sml_matchcomp_bug()
%gw=load i8*,i8**@_SMLZ5Match,align 8
store i8*%gw,i8**%c,align 8
%gx=call i8*@sml_alloc(i32 inreg 20)#0
%gy=getelementptr inbounds i8,i8*%gx,i64 -4
%gz=bitcast i8*%gy to i32*
store i32 1342177296,i32*%gz,align 4
store i8*%gx,i8**%d,align 8
%gA=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%gB=bitcast i8*%gx to i8**
store i8*%gA,i8**%gB,align 8
%gC=getelementptr inbounds i8,i8*%gx,i64 8
%gD=bitcast i8*%gC to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cA,i64 0,i32 2,i64 0),i8**%gD,align 8
%gE=getelementptr inbounds i8,i8*%gx,i64 16
%gF=bitcast i8*%gE to i32*
store i32 3,i32*%gF,align 4
%gG=call i8*@sml_alloc(i32 inreg 60)#0
%gH=getelementptr inbounds i8,i8*%gG,i64 -4
%gI=bitcast i8*%gH to i32*
store i32 1342177336,i32*%gI,align 4
%gJ=getelementptr inbounds i8,i8*%gG,i64 56
%gK=bitcast i8*%gJ to i32*
store i32 1,i32*%gK,align 4
%gL=load i8*,i8**%d,align 8
%gM=bitcast i8*%gG to i8**
store i8*%gL,i8**%gM,align 8
call void@sml_raise(i8*inreg%gG)#1
unreachable
gN:
%gO=getelementptr inbounds i8,i8*%gs,i64 8
%gP=bitcast i8*%gO to i8**
%gQ=load i8*,i8**%gP,align 8
%gR=bitcast i8*%gQ to i8**
%gS=load i8*,i8**%gR,align 8
store i8*%gS,i8**%d,align 8
%gT=getelementptr inbounds i8,i8*%gQ,i64 8
%gU=bitcast i8*%gT to i8**
%gV=load i8*,i8**%gU,align 8
store i8*%gV,i8**%e,align 8
%gW=getelementptr inbounds i8,i8*%gQ,i64 16
%gX=bitcast i8*%gW to i8**
%gY=load i8*,i8**%gX,align 8
store i8*%gY,i8**%f,align 8
%gZ=getelementptr inbounds i8,i8*%gQ,i64 24
%g0=bitcast i8*%gZ to i8**
%g1=load i8*,i8**%g0,align 8
store i8*%g1,i8**%g,align 8
%g2=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%g3=getelementptr inbounds i8,i8*%g2,i64 16
%g4=bitcast i8*%g3 to i8*(i8*,i8*)**
%g5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%g4,align 8
%g6=bitcast i8*%g2 to i8**
%g7=load i8*,i8**%g6,align 8
store i8*%g7,i8**%h,align 8
%g8=load i8*,i8**%c,align 8
%g9=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%g8)
%ha=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hb=call fastcc i8*%g5(i8*inreg%ha,i8*inreg%g9)
%hc=getelementptr inbounds i8,i8*%hb,i64 16
%hd=bitcast i8*%hc to i8*(i8*,i8*)**
%he=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hd,align 8
%hf=bitcast i8*%hb to i8**
%hg=load i8*,i8**%hf,align 8
%hh=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hi=call fastcc i8*%he(i8*inreg%hg,i8*inreg%hh)
store i8*%hi,i8**%d,align 8
%hj=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%hk=getelementptr inbounds i8,i8*%hj,i64 16
%hl=bitcast i8*%hk to i8*(i8*,i8*)**
%hm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hl,align 8
%hn=bitcast i8*%hj to i8**
%ho=load i8*,i8**%hn,align 8
store i8*%ho,i8**%i,align 8
%hp=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%hq=getelementptr inbounds i8,i8*%hp,i64 16
%hr=bitcast i8*%hq to i8*(i8*,i8*)**
%hs=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hr,align 8
%ht=bitcast i8*%hp to i8**
%hu=load i8*,i8**%ht,align 8
store i8*%hu,i8**%h,align 8
%hv=load i8*,i8**%c,align 8
%hw=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%hv)
%hx=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hy=call fastcc i8*%hs(i8*inreg%hx,i8*inreg%hw)
%hz=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%hA=call fastcc i8*%hm(i8*inreg%hz,i8*inreg%hy)
%hB=getelementptr inbounds i8,i8*%hA,i64 16
%hC=bitcast i8*%hB to i8*(i8*,i8*)**
%hD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hC,align 8
%hE=bitcast i8*%hA to i8**
%hF=load i8*,i8**%hE,align 8
%hG=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%hH=call fastcc i8*%hD(i8*inreg%hF,i8*inreg%hG)
store i8*%hH,i8**%g,align 8
%hI=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%hJ=getelementptr inbounds i8,i8*%hI,i64 16
%hK=bitcast i8*%hJ to i8*(i8*,i8*)**
%hL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hK,align 8
%hM=bitcast i8*%hI to i8**
%hN=load i8*,i8**%hM,align 8
store i8*%hN,i8**%h,align 8
%hO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%hP=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%hO)
%hQ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hR=call fastcc i8*%hL(i8*inreg%hQ,i8*inreg%hP)
%hS=getelementptr inbounds i8,i8*%hR,i64 16
%hT=bitcast i8*%hS to i8*(i8*,i8*)**
%hU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hT,align 8
%hV=bitcast i8*%hR to i8**
%hW=load i8*,i8**%hV,align 8
%hX=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%hY=call fastcc i8*%hU(i8*inreg%hW,i8*inreg%hX)
store i8*%hY,i8**%c,align 8
%hZ=call i8*@sml_alloc(i32 inreg 36)#0
%h0=getelementptr inbounds i8,i8*%hZ,i64 -4
%h1=bitcast i8*%h0 to i32*
store i32 1342177312,i32*%h1,align 4
store i8*%hZ,i8**%f,align 8
%h2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%h3=bitcast i8*%hZ to i8**
store i8*%h2,i8**%h3,align 8
%h4=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%h5=getelementptr inbounds i8,i8*%hZ,i64 8
%h6=bitcast i8*%h5 to i8**
store i8*%h4,i8**%h6,align 8
%h7=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%h8=getelementptr inbounds i8,i8*%hZ,i64 16
%h9=bitcast i8*%h8 to i8**
store i8*%h7,i8**%h9,align 8
%ia=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ib=getelementptr inbounds i8,i8*%hZ,i64 24
%ic=bitcast i8*%ib to i8**
store i8*%ia,i8**%ic,align 8
%id=getelementptr inbounds i8,i8*%hZ,i64 32
%ie=bitcast i8*%id to i32*
store i32 15,i32*%ie,align 4
%if=call i8*@sml_alloc(i32 inreg 20)#0
%ig=bitcast i8*%if to i32*
%ih=getelementptr inbounds i8,i8*%if,i64 -4
%ii=bitcast i8*%ih to i32*
store i32 1342177296,i32*%ii,align 4
%ij=getelementptr inbounds i8,i8*%if,i64 4
%ik=bitcast i8*%ij to i32*
store i32 0,i32*%ik,align 1
store i32 2,i32*%ig,align 4
%il=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%im=getelementptr inbounds i8,i8*%if,i64 8
%in=bitcast i8*%im to i8**
store i8*%il,i8**%in,align 8
%io=getelementptr inbounds i8,i8*%if,i64 16
%ip=bitcast i8*%io to i32*
store i32 2,i32*%ip,align 4
store i8*%if,i8**%c,align 8
br label%l5
iq:
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cz,i64 0,i32 2)to i8*),i8**%c,align 8
br label%l5
ir:
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cy,i64 0,i32 2)to i8*),i8**%c,align 8
br label%l5
is:
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cx,i64 0,i32 2)to i8*),i8**%c,align 8
br label%l5
it:
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cw,i64 0,i32 2)to i8*),i8**%c,align 8
br label%l5
iu:
%iv=getelementptr inbounds i8,i8*%gs,i64 8
%iw=bitcast i8*%iv to i8**
%ix=load i8*,i8**%iw,align 8
%iy=bitcast i8*%ix to i8**
%iz=load i8*,i8**%iy,align 8
store i8*%iz,i8**%d,align 8
%iA=getelementptr inbounds i8,i8*%ix,i64 8
%iB=bitcast i8*%iA to i8**
%iC=load i8*,i8**%iB,align 8
store i8*%iC,i8**%e,align 8
%iD=getelementptr inbounds i8,i8*%ix,i64 16
%iE=bitcast i8*%iD to i32*
%iF=load i32,i32*%iE,align 4
%iG=getelementptr inbounds i8,i8*%ix,i64 24
%iH=bitcast i8*%iG to i8**
%iI=load i8*,i8**%iH,align 8
store i8*%iI,i8**%f,align 8
%iJ=getelementptr inbounds i8,i8*%ix,i64 32
%iK=bitcast i8*%iJ to i8**
%iL=load i8*,i8**%iK,align 8
store i8*%iL,i8**%g,align 8
%iM=call i8*@sml_alloc(i32 inreg 20)#0
%iN=getelementptr inbounds i8,i8*%iM,i64 -4
%iO=bitcast i8*%iN to i32*
store i32 1342177296,i32*%iO,align 4
%iP=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%iQ=bitcast i8*%iM to i8**
store i8*%iP,i8**%iQ,align 8
%iR=getelementptr inbounds i8,i8*%iM,i64 8
%iS=bitcast i8*%iR to i8**
store i8*null,i8**%iS,align 8
%iT=getelementptr inbounds i8,i8*%iM,i64 16
%iU=bitcast i8*%iT to i32*
store i32 3,i32*%iU,align 4
%iV=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%iW=call fastcc i8*@_SMLLLN17PolyTyElimination13compileBtvEnvE_1341(i8*inreg%iV,i8*inreg%iM)
%iX=bitcast i8*%iW to i8**
%iY=load i8*,i8**%iX,align 8
store i8*%iY,i8**%c,align 8
%iZ=getelementptr inbounds i8,i8*%iW,i64 8
%i0=bitcast i8*%iZ to i8**
%i1=load i8*,i8**%i0,align 8
%i2=icmp eq i8*%i1,null
br i1%i2,label%i3,label%i5
i3:
%i4=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
br label%i9
i5:
%i6=bitcast i8*%i1 to i8***
%i7=load i8**,i8***%i6,align 8
%i8=load i8*,i8**%i7,align 8
br label%i9
i9:
%ja=phi i8*[%i8,%i5],[%i4,%i3]
store i8*%ja,i8**%g,align 8
%jb=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jc=getelementptr inbounds i8,i8*%jb,i64 16
%jd=bitcast i8*%jc to i8*(i8*,i8*)**
%je=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jd,align 8
%jf=bitcast i8*%jb to i8**
%jg=load i8*,i8**%jf,align 8
store i8*%jg,i8**%h,align 8
%jh=load i8*,i8**%c,align 8
%ji=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%jh)
%jj=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%jk=call fastcc i8*%je(i8*inreg%jj,i8*inreg%ji)
%jl=getelementptr inbounds i8,i8*%jk,i64 16
%jm=bitcast i8*%jl to i8*(i8*,i8*)**
%jn=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jm,align 8
%jo=bitcast i8*%jk to i8**
%jp=load i8*,i8**%jo,align 8
%jq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%jr=call fastcc i8*%jn(i8*inreg%jp,i8*inreg%jq)
store i8*%jr,i8**%d,align 8
%js=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jt=getelementptr inbounds i8,i8*%js,i64 16
%ju=bitcast i8*%jt to i8*(i8*,i8*)**
%jv=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ju,align 8
%jw=bitcast i8*%js to i8**
%jx=load i8*,i8**%jw,align 8
store i8*%jx,i8**%h,align 8
%jy=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%jz=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%jy)
%jA=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%jB=call fastcc i8*%jv(i8*inreg%jA,i8*inreg%jz)
%jC=getelementptr inbounds i8,i8*%jB,i64 16
%jD=bitcast i8*%jC to i8*(i8*,i8*)**
%jE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jD,align 8
%jF=bitcast i8*%jB to i8**
%jG=load i8*,i8**%jF,align 8
%jH=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%jI=call fastcc i8*%jE(i8*inreg%jG,i8*inreg%jH)
store i8*%jI,i8**%c,align 8
%jJ=call i8*@sml_alloc(i32 inreg 44)#0
%jK=getelementptr inbounds i8,i8*%jJ,i64 -4
%jL=bitcast i8*%jK to i32*
store i32 1342177320,i32*%jL,align 4
store i8*%jJ,i8**%f,align 8
%jM=getelementptr inbounds i8,i8*%jJ,i64 20
%jN=bitcast i8*%jM to i32*
store i32 0,i32*%jN,align 1
%jO=load i8*,i8**%d,align 8
%jP=bitcast i8*%jJ to i8**
store i8*null,i8**%d,align 8
store i8*%jO,i8**%jP,align 8
%jQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%jR=getelementptr inbounds i8,i8*%jJ,i64 8
%jS=bitcast i8*%jR to i8**
store i8*%jQ,i8**%jS,align 8
%jT=getelementptr inbounds i8,i8*%jJ,i64 16
%jU=bitcast i8*%jT to i32*
store i32%iF,i32*%jU,align 4
%jV=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%jW=getelementptr inbounds i8,i8*%jJ,i64 24
%jX=bitcast i8*%jW to i8**
store i8*%jV,i8**%jX,align 8
%jY=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%jZ=getelementptr inbounds i8,i8*%jJ,i64 32
%j0=bitcast i8*%jZ to i8**
store i8*%jY,i8**%j0,align 8
%j1=getelementptr inbounds i8,i8*%jJ,i64 40
%j2=bitcast i8*%j1 to i32*
store i32 27,i32*%j2,align 4
%j3=call i8*@sml_alloc(i32 inreg 20)#0
%j4=getelementptr inbounds i8,i8*%j3,i64 -4
%j5=bitcast i8*%j4 to i32*
store i32 1342177296,i32*%j5,align 4
%j6=bitcast i8*%j3 to i64*
store i64 0,i64*%j6,align 4
%j7=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%j8=getelementptr inbounds i8,i8*%j3,i64 8
%j9=bitcast i8*%j8 to i8**
store i8*%j7,i8**%j9,align 8
%ka=getelementptr inbounds i8,i8*%j3,i64 16
%kb=bitcast i8*%ka to i32*
store i32 2,i32*%kb,align 4
store i8*%j3,i8**%c,align 8
br label%l5
kc:
%kd=getelementptr inbounds i8,i8*%gs,i64 8
%ke=bitcast i8*%kd to i8**
%kf=load i8*,i8**%ke,align 8
%kg=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%kh=call fastcc i8*@_SMLLLN17PolyTyElimination18compileCodeEntryTyE_1343(i8*inreg%kg,i8*inreg%kf)
store i8*%kh,i8**%c,align 8
%ki=call i8*@sml_alloc(i32 inreg 20)#0
%kj=bitcast i8*%ki to i32*
%kk=getelementptr inbounds i8,i8*%ki,i64 -4
%kl=bitcast i8*%kk to i32*
store i32 1342177296,i32*%kl,align 4
%km=getelementptr inbounds i8,i8*%ki,i64 4
%kn=bitcast i8*%km to i32*
store i32 0,i32*%kn,align 1
store i32 3,i32*%kj,align 4
%ko=load i8*,i8**%c,align 8
%kp=getelementptr inbounds i8,i8*%ki,i64 8
%kq=bitcast i8*%kp to i8**
store i8*%ko,i8**%kq,align 8
%kr=getelementptr inbounds i8,i8*%ki,i64 16
%ks=bitcast i8*%kr to i32*
store i32 2,i32*%ks,align 4
store i8*%ki,i8**%c,align 8
br label%l5
kt:
%ku=getelementptr inbounds i8,i8*%gs,i64 8
%kv=bitcast i8*%ku to i8**
%kw=load i8*,i8**%kv,align 8
%kx=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ky=call fastcc i8*@_SMLLLN17PolyTyElimination18compileCodeEntryTyE_1343(i8*inreg%kx,i8*inreg%kw)
store i8*%ky,i8**%c,align 8
%kz=call i8*@sml_alloc(i32 inreg 20)#0
%kA=bitcast i8*%kz to i32*
%kB=getelementptr inbounds i8,i8*%kz,i64 -4
%kC=bitcast i8*%kB to i32*
store i32 1342177296,i32*%kC,align 4
%kD=getelementptr inbounds i8,i8*%kz,i64 4
%kE=bitcast i8*%kD to i32*
store i32 0,i32*%kE,align 1
store i32 1,i32*%kA,align 4
%kF=load i8*,i8**%c,align 8
%kG=getelementptr inbounds i8,i8*%kz,i64 8
%kH=bitcast i8*%kG to i8**
store i8*%kF,i8**%kH,align 8
%kI=getelementptr inbounds i8,i8*%kz,i64 16
%kJ=bitcast i8*%kI to i32*
store i32 2,i32*%kJ,align 4
store i8*%kz,i8**%c,align 8
br label%l5
kK:
%kL=getelementptr inbounds i8,i8*%gs,i64 8
%kM=bitcast i8*%kL to i8**
%kN=load i8*,i8**%kM,align 8
%kO=bitcast i8*%kN to i32*
%kP=load i32,i32*%kO,align 4
%kQ=getelementptr inbounds i8,i8*%kN,i64 8
%kR=bitcast i8*%kQ to i8**
%kS=load i8*,i8**%kR,align 8
%kT=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%kU=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%kT,i8*inreg%kS)
store i8*%kU,i8**%c,align 8
%kV=call i8*@sml_alloc(i32 inreg 20)#0
%kW=getelementptr inbounds i8,i8*%kV,i64 -4
%kX=bitcast i8*%kW to i32*
store i32 1342177296,i32*%kX,align 4
store i8*%kV,i8**%d,align 8
%kY=getelementptr inbounds i8,i8*%kV,i64 4
%kZ=bitcast i8*%kY to i32*
store i32 0,i32*%kZ,align 1
%k0=bitcast i8*%kV to i32*
store i32%kP,i32*%k0,align 4
%k1=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k2=getelementptr inbounds i8,i8*%kV,i64 8
%k3=bitcast i8*%k2 to i8**
store i8*%k1,i8**%k3,align 8
%k4=getelementptr inbounds i8,i8*%kV,i64 16
%k5=bitcast i8*%k4 to i32*
store i32 2,i32*%k5,align 4
%k6=call i8*@sml_alloc(i32 inreg 20)#0
%k7=bitcast i8*%k6 to i32*
%k8=getelementptr inbounds i8,i8*%k6,i64 -4
%k9=bitcast i8*%k8 to i32*
store i32 1342177296,i32*%k9,align 4
%la=getelementptr inbounds i8,i8*%k6,i64 4
%lb=bitcast i8*%la to i32*
store i32 0,i32*%lb,align 1
store i32 4,i32*%k7,align 4
%lc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ld=getelementptr inbounds i8,i8*%k6,i64 8
%le=bitcast i8*%ld to i8**
store i8*%lc,i8**%le,align 8
%lf=getelementptr inbounds i8,i8*%k6,i64 16
%lg=bitcast i8*%lf to i32*
store i32 2,i32*%lg,align 4
store i8*%k6,i8**%c,align 8
br label%l5
lh:
%li=getelementptr inbounds i8,i8*%gs,i64 8
%lj=bitcast i8*%li to i8**
%lk=load i8*,i8**%lj,align 8
%ll=bitcast i8*%lk to i32*
%lm=load i32,i32*%ll,align 4
%ln=getelementptr inbounds i8,i8*%lk,i64 8
%lo=bitcast i8*%ln to i8**
%lp=load i8*,i8**%lo,align 8
%lq=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%lr=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%lq,i8*inreg%lp)
store i8*%lr,i8**%c,align 8
%ls=call i8*@sml_alloc(i32 inreg 20)#0
%lt=getelementptr inbounds i8,i8*%ls,i64 -4
%lu=bitcast i8*%lt to i32*
store i32 1342177296,i32*%lu,align 4
store i8*%ls,i8**%d,align 8
%lv=getelementptr inbounds i8,i8*%ls,i64 4
%lw=bitcast i8*%lv to i32*
store i32 0,i32*%lw,align 1
%lx=bitcast i8*%ls to i32*
store i32%lm,i32*%lx,align 4
%ly=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%lz=getelementptr inbounds i8,i8*%ls,i64 8
%lA=bitcast i8*%lz to i8**
store i8*%ly,i8**%lA,align 8
%lB=getelementptr inbounds i8,i8*%ls,i64 16
%lC=bitcast i8*%lB to i32*
store i32 2,i32*%lC,align 4
%lD=call i8*@sml_alloc(i32 inreg 20)#0
%lE=bitcast i8*%lD to i32*
%lF=getelementptr inbounds i8,i8*%lD,i64 -4
%lG=bitcast i8*%lF to i32*
store i32 1342177296,i32*%lG,align 4
%lH=getelementptr inbounds i8,i8*%lD,i64 4
%lI=bitcast i8*%lH to i32*
store i32 0,i32*%lI,align 1
store i32 5,i32*%lE,align 4
%lJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%lK=getelementptr inbounds i8,i8*%lD,i64 8
%lL=bitcast i8*%lK to i8**
store i8*%lJ,i8**%lL,align 8
%lM=getelementptr inbounds i8,i8*%lD,i64 16
%lN=bitcast i8*%lM to i32*
store i32 2,i32*%lN,align 4
store i8*%lD,i8**%c,align 8
br label%l5
lO:
%lP=getelementptr inbounds i8,i8*%gs,i64 8
%lQ=bitcast i8*%lP to i8**
%lR=load i8*,i8**%lQ,align 8
%lS=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%lT=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%lS,i8*inreg%lR)
store i8*%lT,i8**%c,align 8
%lU=call i8*@sml_alloc(i32 inreg 20)#0
%lV=bitcast i8*%lU to i32*
%lW=getelementptr inbounds i8,i8*%lU,i64 -4
%lX=bitcast i8*%lW to i32*
store i32 1342177296,i32*%lX,align 4
%lY=getelementptr inbounds i8,i8*%lU,i64 4
%lZ=bitcast i8*%lY to i32*
store i32 0,i32*%lZ,align 1
store i32 6,i32*%lV,align 4
%l0=load i8*,i8**%c,align 8
%l1=getelementptr inbounds i8,i8*%lU,i64 8
%l2=bitcast i8*%l1 to i8**
store i8*%l0,i8**%l2,align 8
%l3=getelementptr inbounds i8,i8*%lU,i64 16
%l4=bitcast i8*%l3 to i32*
store i32 2,i32*%l4,align 4
store i8*%lU,i8**%c,align 8
br label%l5
l5:
%l6=call i8*@sml_alloc(i32 inreg 20)#0
%l7=getelementptr inbounds i8,i8*%l6,i64 -4
%l8=bitcast i8*%l7 to i32*
store i32 1342177296,i32*%l8,align 4
%l9=bitcast i8*%l6 to i64*
store i64 0,i64*%l9,align 4
%ma=load i8*,i8**%c,align 8
%mb=getelementptr inbounds i8,i8*%l6,i64 8
%mc=bitcast i8*%mb to i8**
store i8*%ma,i8**%mc,align 8
%md=getelementptr inbounds i8,i8*%l6,i64 16
%me=bitcast i8*%md to i32*
store i32 2,i32*%me,align 4
ret i8*%l6
mf:
store i8*null,i8**%d,align 8
%mg=getelementptr inbounds i8,i8*%o,i64 8
%mh=bitcast i8*%mg to i8**
%mi=load i8*,i8**%mh,align 8
%mj=bitcast i8*%mi to i32*
%mk=load i32,i32*%mj,align 4
switch i32%mk,label%ml[
i32 1,label%nW
i32 0,label%ns
i32 4,label%nb
i32 3,label%mU
i32 2,label%mD
]
ml:
call void@sml_matchcomp_bug()
%mm=load i8*,i8**@_SMLZ5Match,align 8
store i8*%mm,i8**%c,align 8
%mn=call i8*@sml_alloc(i32 inreg 20)#0
%mo=getelementptr inbounds i8,i8*%mn,i64 -4
%mp=bitcast i8*%mo to i32*
store i32 1342177296,i32*%mp,align 4
store i8*%mn,i8**%d,align 8
%mq=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%mr=bitcast i8*%mn to i8**
store i8*%mq,i8**%mr,align 8
%ms=getelementptr inbounds i8,i8*%mn,i64 8
%mt=bitcast i8*%ms to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cv,i64 0,i32 2,i64 0),i8**%mt,align 8
%mu=getelementptr inbounds i8,i8*%mn,i64 16
%mv=bitcast i8*%mu to i32*
store i32 3,i32*%mv,align 4
%mw=call i8*@sml_alloc(i32 inreg 60)#0
%mx=getelementptr inbounds i8,i8*%mw,i64 -4
%my=bitcast i8*%mx to i32*
store i32 1342177336,i32*%my,align 4
%mz=getelementptr inbounds i8,i8*%mw,i64 56
%mA=bitcast i8*%mz to i32*
store i32 1,i32*%mA,align 4
%mB=load i8*,i8**%d,align 8
%mC=bitcast i8*%mw to i8**
store i8*%mB,i8**%mC,align 8
call void@sml_raise(i8*inreg%mw)#1
unreachable
mD:
%mE=getelementptr inbounds i8,i8*%mi,i64 8
%mF=bitcast i8*%mE to i8**
%mG=load i8*,i8**%mF,align 8
%mH=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%mI=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%mH,i8*inreg%mG)
store i8*%mI,i8**%c,align 8
%mJ=call i8*@sml_alloc(i32 inreg 20)#0
%mK=bitcast i8*%mJ to i32*
%mL=getelementptr inbounds i8,i8*%mJ,i64 -4
%mM=bitcast i8*%mL to i32*
store i32 1342177296,i32*%mM,align 4
%mN=getelementptr inbounds i8,i8*%mJ,i64 4
%mO=bitcast i8*%mN to i32*
store i32 0,i32*%mO,align 1
store i32 2,i32*%mK,align 4
%mP=load i8*,i8**%c,align 8
%mQ=getelementptr inbounds i8,i8*%mJ,i64 8
%mR=bitcast i8*%mQ to i8**
store i8*%mP,i8**%mR,align 8
%mS=getelementptr inbounds i8,i8*%mJ,i64 16
%mT=bitcast i8*%mS to i32*
store i32 2,i32*%mT,align 4
store i8*%mJ,i8**%c,align 8
br label%od
mU:
%mV=getelementptr inbounds i8,i8*%mi,i64 8
%mW=bitcast i8*%mV to i8**
%mX=load i8*,i8**%mW,align 8
%mY=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%mZ=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%mY,i8*inreg%mX)
store i8*%mZ,i8**%c,align 8
%m0=call i8*@sml_alloc(i32 inreg 20)#0
%m1=bitcast i8*%m0 to i32*
%m2=getelementptr inbounds i8,i8*%m0,i64 -4
%m3=bitcast i8*%m2 to i32*
store i32 1342177296,i32*%m3,align 4
%m4=getelementptr inbounds i8,i8*%m0,i64 4
%m5=bitcast i8*%m4 to i32*
store i32 0,i32*%m5,align 1
store i32 3,i32*%m1,align 4
%m6=load i8*,i8**%c,align 8
%m7=getelementptr inbounds i8,i8*%m0,i64 8
%m8=bitcast i8*%m7 to i8**
store i8*%m6,i8**%m8,align 8
%m9=getelementptr inbounds i8,i8*%m0,i64 16
%na=bitcast i8*%m9 to i32*
store i32 2,i32*%na,align 4
store i8*%m0,i8**%c,align 8
br label%od
nb:
%nc=getelementptr inbounds i8,i8*%mi,i64 8
%nd=bitcast i8*%nc to i8**
%ne=load i8*,i8**%nd,align 8
%nf=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ng=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%nf,i8*inreg%ne)
store i8*%ng,i8**%c,align 8
%nh=call i8*@sml_alloc(i32 inreg 20)#0
%ni=bitcast i8*%nh to i32*
%nj=getelementptr inbounds i8,i8*%nh,i64 -4
%nk=bitcast i8*%nj to i32*
store i32 1342177296,i32*%nk,align 4
%nl=getelementptr inbounds i8,i8*%nh,i64 4
%nm=bitcast i8*%nl to i32*
store i32 0,i32*%nm,align 1
store i32 4,i32*%ni,align 4
%nn=load i8*,i8**%c,align 8
%no=getelementptr inbounds i8,i8*%nh,i64 8
%np=bitcast i8*%no to i8**
store i8*%nn,i8**%np,align 8
%nq=getelementptr inbounds i8,i8*%nh,i64 16
%nr=bitcast i8*%nq to i32*
store i32 2,i32*%nr,align 4
store i8*%nh,i8**%c,align 8
br label%od
ns:
%nt=getelementptr inbounds i8,i8*%mi,i64 8
%nu=bitcast i8*%nt to i8**
%nv=load i8*,i8**%nu,align 8
%nw=bitcast i8*%nv to i8**
%nx=load i8*,i8**%nw,align 8
store i8*%nx,i8**%d,align 8
%ny=getelementptr inbounds i8,i8*%nv,i64 8
%nz=bitcast i8*%ny to i8**
%nA=load i8*,i8**%nz,align 8
%nB=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%nC=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%nB,i8*inreg%nA)
store i8*%nC,i8**%c,align 8
%nD=call i8*@sml_alloc(i32 inreg 20)#0
%nE=getelementptr inbounds i8,i8*%nD,i64 -4
%nF=bitcast i8*%nE to i32*
store i32 1342177296,i32*%nF,align 4
store i8*%nD,i8**%e,align 8
%nG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%nH=bitcast i8*%nD to i8**
store i8*%nG,i8**%nH,align 8
%nI=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%nJ=getelementptr inbounds i8,i8*%nD,i64 8
%nK=bitcast i8*%nJ to i8**
store i8*%nI,i8**%nK,align 8
%nL=getelementptr inbounds i8,i8*%nD,i64 16
%nM=bitcast i8*%nL to i32*
store i32 3,i32*%nM,align 4
%nN=call i8*@sml_alloc(i32 inreg 20)#0
%nO=getelementptr inbounds i8,i8*%nN,i64 -4
%nP=bitcast i8*%nO to i32*
store i32 1342177296,i32*%nP,align 4
%nQ=bitcast i8*%nN to i64*
store i64 0,i64*%nQ,align 4
%nR=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%nS=getelementptr inbounds i8,i8*%nN,i64 8
%nT=bitcast i8*%nS to i8**
store i8*%nR,i8**%nT,align 8
%nU=getelementptr inbounds i8,i8*%nN,i64 16
%nV=bitcast i8*%nU to i32*
store i32 2,i32*%nV,align 4
store i8*%nN,i8**%c,align 8
br label%od
nW:
%nX=getelementptr inbounds i8,i8*%mi,i64 8
%nY=bitcast i8*%nX to i8**
%nZ=load i8*,i8**%nY,align 8
%n0=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n1=call fastcc i8*@_SMLLLN17PolyTyElimination20compileOprimSelectorE_1339(i8*inreg%n0,i8*inreg%nZ)
store i8*%n1,i8**%c,align 8
%n2=call i8*@sml_alloc(i32 inreg 20)#0
%n3=bitcast i8*%n2 to i32*
%n4=getelementptr inbounds i8,i8*%n2,i64 -4
%n5=bitcast i8*%n4 to i32*
store i32 1342177296,i32*%n5,align 4
%n6=getelementptr inbounds i8,i8*%n2,i64 4
%n7=bitcast i8*%n6 to i32*
store i32 0,i32*%n7,align 1
store i32 1,i32*%n3,align 4
%n8=load i8*,i8**%c,align 8
%n9=getelementptr inbounds i8,i8*%n2,i64 8
%oa=bitcast i8*%n9 to i8**
store i8*%n8,i8**%oa,align 8
%ob=getelementptr inbounds i8,i8*%n2,i64 16
%oc=bitcast i8*%ob to i32*
store i32 2,i32*%oc,align 4
store i8*%n2,i8**%c,align 8
br label%od
od:
%oe=call i8*@sml_alloc(i32 inreg 20)#0
%of=bitcast i8*%oe to i32*
%og=getelementptr inbounds i8,i8*%oe,i64 -4
%oh=bitcast i8*%og to i32*
store i32 1342177296,i32*%oh,align 4
%oi=getelementptr inbounds i8,i8*%oe,i64 4
%oj=bitcast i8*%oi to i32*
store i32 0,i32*%oj,align 1
store i32 9,i32*%of,align 4
%ok=load i8*,i8**%c,align 8
%ol=getelementptr inbounds i8,i8*%oe,i64 8
%om=bitcast i8*%ol to i8**
store i8*%ok,i8**%om,align 8
%on=getelementptr inbounds i8,i8*%oe,i64 16
%oo=bitcast i8*%on to i32*
store i32 2,i32*%oo,align 4
ret i8*%oe
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination9compileTyE_1414 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination9compileTyE_1414 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination20compileOverloadMatchE_1338(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
store i8*null,i8**%d,align 8
%o=bitcast i8*%m to i32*
%p=load i32,i32*%o,align 4
switch i32%p,label%q[
i32 1,label%bM
i32 2,label%aT
i32 0,label%I
]
q:
call void@sml_matchcomp_bug()
%r=load i8*,i8**@_SMLZ5Match,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cI,i64 0,i32 2,i64 0),i8**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 60)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177336,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%B,i64 56
%F=bitcast i8*%E to i32*
store i32 1,i32*%F,align 4
%G=load i8*,i8**%d,align 8
%H=bitcast i8*%B to i8**
store i8*%G,i8**%H,align 8
call void@sml_raise(i8*inreg%B)#1
unreachable
I:
%J=getelementptr inbounds i8,i8*%m,i64 8
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
%O=getelementptr inbounds i8,i8*%L,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%d,align 8
%R=load i8*,i8**%c,align 8
%S=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%R,i8*inreg%N)
store i8*%S,i8**%e,align 8
%T=call fastcc i8*@_SMLFN5TypID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%U=getelementptr inbounds i8,i8*%T,i64 16
%V=bitcast i8*%U to i8*(i8*,i8*)**
%W=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%V,align 8
%X=bitcast i8*%T to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%f,align 8
%Z=call i8*@sml_alloc(i32 inreg 12)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177288,i32*%ab,align 4
store i8*%Z,i8**%g,align 8
%ac=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%Z,i64 8
%af=bitcast i8*%ae to i32*
store i32 1,i32*%af,align 4
%ag=call i8*@sml_alloc(i32 inreg 28)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177304,i32*%ai,align 4
%aj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 8
%am=bitcast i8*%al to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination20compileOverloadMatchE_1415 to void(...)*),void(...)**%am,align 8
%an=getelementptr inbounds i8,i8*%ag,i64 16
%ao=bitcast i8*%an to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination20compileOverloadMatchE_1415 to void(...)*),void(...)**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ag,i64 24
%aq=bitcast i8*%ap to i32*
store i32 -2147483647,i32*%aq,align 4
%ar=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%as=call fastcc i8*%W(i8*inreg%ar,i8*inreg%ag)
%at=getelementptr inbounds i8,i8*%as,i64 16
%au=bitcast i8*%at to i8*(i8*,i8*)**
%av=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%au,align 8
%aw=bitcast i8*%as to i8**
%ax=load i8*,i8**%aw,align 8
%ay=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%az=call fastcc i8*%av(i8*inreg%ax,i8*inreg%ay)
store i8*%az,i8**%c,align 8
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
%aN=bitcast i8*%aK to i64*
store i64 0,i64*%aN,align 4
%aO=load i8*,i8**%d,align 8
%aP=getelementptr inbounds i8,i8*%aK,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 16
%aS=bitcast i8*%aR to i32*
store i32 2,i32*%aS,align 4
ret i8*%aK
aT:
%aU=getelementptr inbounds i8,i8*%m,i64 8
%aV=bitcast i8*%aU to i8**
%aW=load i8*,i8**%aV,align 8
%aX=bitcast i8*%aW to i8**
%aY=load i8*,i8**%aX,align 8
store i8*%aY,i8**%d,align 8
%aZ=getelementptr inbounds i8,i8*%aW,i64 8
%a0=bitcast i8*%aZ to i8**
%a1=load i8*,i8**%a0,align 8
store i8*%a1,i8**%e,align 8
%a2=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%a3=getelementptr inbounds i8,i8*%a2,i64 16
%a4=bitcast i8*%a3 to i8*(i8*,i8*)**
%a5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a4,align 8
%a6=bitcast i8*%a2 to i8**
%a7=load i8*,i8**%a6,align 8
store i8*%a7,i8**%g,align 8
%a8=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%a9=getelementptr inbounds i8,i8*%a8,i64 16
%ba=bitcast i8*%a9 to i8*(i8*,i8*)**
%bb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ba,align 8
%bc=bitcast i8*%a8 to i8**
%bd=load i8*,i8**%bc,align 8
store i8*%bd,i8**%f,align 8
%be=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bf=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%be)
%bg=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bh=call fastcc i8*%bb(i8*inreg%bg,i8*inreg%bf)
%bi=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bj=call fastcc i8*%a5(i8*inreg%bi,i8*inreg%bh)
%bk=getelementptr inbounds i8,i8*%bj,i64 16
%bl=bitcast i8*%bk to i8*(i8*,i8*)**
%bm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bl,align 8
%bn=bitcast i8*%bj to i8**
%bo=load i8*,i8**%bn,align 8
%bp=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bq=call fastcc i8*%bm(i8*inreg%bo,i8*inreg%bp)
store i8*%bq,i8**%c,align 8
%br=call i8*@sml_alloc(i32 inreg 20)#0
%bs=getelementptr inbounds i8,i8*%br,i64 -4
%bt=bitcast i8*%bs to i32*
store i32 1342177296,i32*%bt,align 4
store i8*%br,i8**%d,align 8
%bu=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bv=bitcast i8*%br to i8**
store i8*%bu,i8**%bv,align 8
%bw=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bx=getelementptr inbounds i8,i8*%br,i64 8
%by=bitcast i8*%bx to i8**
store i8*%bw,i8**%by,align 8
%bz=getelementptr inbounds i8,i8*%br,i64 16
%bA=bitcast i8*%bz to i32*
store i32 3,i32*%bA,align 4
%bB=call i8*@sml_alloc(i32 inreg 20)#0
%bC=bitcast i8*%bB to i32*
%bD=getelementptr inbounds i8,i8*%bB,i64 -4
%bE=bitcast i8*%bD to i32*
store i32 1342177296,i32*%bE,align 4
%bF=getelementptr inbounds i8,i8*%bB,i64 4
%bG=bitcast i8*%bF to i32*
store i32 0,i32*%bG,align 1
store i32 2,i32*%bC,align 4
%bH=load i8*,i8**%d,align 8
%bI=getelementptr inbounds i8,i8*%bB,i64 8
%bJ=bitcast i8*%bI to i8**
store i8*%bH,i8**%bJ,align 8
%bK=getelementptr inbounds i8,i8*%bB,i64 16
%bL=bitcast i8*%bK to i32*
store i32 2,i32*%bL,align 4
ret i8*%bB
bM:
%bN=getelementptr inbounds i8,i8*%m,i64 8
%bO=bitcast i8*%bN to i8**
%bP=load i8*,i8**%bO,align 8
%bQ=bitcast i8*%bP to i8**
%bR=load i8*,i8**%bQ,align 8
store i8*%bR,i8**%d,align 8
%bS=getelementptr inbounds i8,i8*%bP,i64 8
%bT=bitcast i8*%bS to i8**
%bU=load i8*,i8**%bT,align 8
store i8*%bU,i8**%e,align 8
%bV=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bW=getelementptr inbounds i8,i8*%bV,i64 16
%bX=bitcast i8*%bW to i8*(i8*,i8*)**
%bY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bX,align 8
%bZ=bitcast i8*%bV to i8**
%b0=load i8*,i8**%bZ,align 8
store i8*%b0,i8**%g,align 8
%b1=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%b2=getelementptr inbounds i8,i8*%b1,i64 16
%b3=bitcast i8*%b2 to i8*(i8*,i8*)**
%b4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b3,align 8
%b5=bitcast i8*%b1 to i8**
%b6=load i8*,i8**%b5,align 8
store i8*%b6,i8**%f,align 8
%b7=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b8=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%b7)
%b9=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ca=call fastcc i8*%b4(i8*inreg%b9,i8*inreg%b8)
%cb=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cc=call fastcc i8*%bY(i8*inreg%cb,i8*inreg%ca)
%cd=getelementptr inbounds i8,i8*%cc,i64 16
%ce=bitcast i8*%cd to i8*(i8*,i8*)**
%cf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ce,align 8
%cg=bitcast i8*%cc to i8**
%ch=load i8*,i8**%cg,align 8
%ci=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cj=call fastcc i8*%cf(i8*inreg%ch,i8*inreg%ci)
store i8*%cj,i8**%c,align 8
%ck=call i8*@sml_alloc(i32 inreg 20)#0
%cl=getelementptr inbounds i8,i8*%ck,i64 -4
%cm=bitcast i8*%cl to i32*
store i32 1342177296,i32*%cm,align 4
store i8*%ck,i8**%e,align 8
%cn=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%co=bitcast i8*%ck to i8**
store i8*%cn,i8**%co,align 8
%cp=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cq=getelementptr inbounds i8,i8*%ck,i64 8
%cr=bitcast i8*%cq to i8**
store i8*%cp,i8**%cr,align 8
%cs=getelementptr inbounds i8,i8*%ck,i64 16
%ct=bitcast i8*%cs to i32*
store i32 3,i32*%ct,align 4
%cu=call i8*@sml_alloc(i32 inreg 20)#0
%cv=bitcast i8*%cu to i32*
%cw=getelementptr inbounds i8,i8*%cu,i64 -4
%cx=bitcast i8*%cw to i32*
store i32 1342177296,i32*%cx,align 4
%cy=getelementptr inbounds i8,i8*%cu,i64 4
%cz=bitcast i8*%cy to i32*
store i32 0,i32*%cz,align 1
store i32 1,i32*%cv,align 4
%cA=load i8*,i8**%e,align 8
%cB=getelementptr inbounds i8,i8*%cu,i64 8
%cC=bitcast i8*%cB to i8**
store i8*%cA,i8**%cC,align 8
%cD=getelementptr inbounds i8,i8*%cu,i64 16
%cE=bitcast i8*%cD to i32*
store i32 2,i32*%cE,align 4
ret i8*%cu
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination20compileOprimSelectorE_1339(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
store i8*null,i8**%d,align 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=getelementptr inbounds i8,i8*%m,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%m,i64 16
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=call fastcc i8*@_SMLLLN17PolyTyElimination20compileOverloadMatchE_1338(i8*inreg%k,i8*inreg%r)
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 28)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177304,i32*%y,align 4
%z=getelementptr inbounds i8,i8*%w,i64 20
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 1
%B=load i8*,i8**%c,align 8
%C=bitcast i8*%w to i8**
store i8*%B,i8**%C,align 8
%D=load i8*,i8**%d,align 8
%E=getelementptr inbounds i8,i8*%w,i64 8
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%w,i64 16
%H=bitcast i8*%G to i32*
store i32%u,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%w,i64 24
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15compileTvarKindE_1340(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
store i8*null,i8**%d,align 8
%o=icmp eq i8*%m,null
br i1%o,label%aq,label%p
p:
%q=bitcast i8*%m to i32*
%r=load i32,i32*%q,align 4
switch i32%r,label%s[
i32 0,label%bJ
i32 1,label%ar
i32 3,label%aq
i32 2,label%K
]
s:
call void@sml_matchcomp_bug()
%t=load i8*,i8**@_SMLZ5Match,align 8
store i8*%t,i8**%c,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%d,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cJ,i64 0,i32 2,i64 0),i8**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 60)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177336,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%D,i64 56
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=load i8*,i8**%d,align 8
%J=bitcast i8*%D to i8**
store i8*%I,i8**%J,align 8
call void@sml_raise(i8*inreg%D)#1
unreachable
K:
%L=getelementptr inbounds i8,i8*%m,i64 8
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%d,align 8
%O=call fastcc i8*@_SMLFN11RecordLabel3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8*(i8*,i8*)**
%R=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%e,align 8
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%U)
%W=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%X=call fastcc i8*%R(i8*inreg%W,i8*inreg%V)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ae=call fastcc i8*%aa(i8*inreg%ac,i8*inreg%ad)
store i8*%ae,i8**%c,align 8
%af=call i8*@sml_alloc(i32 inreg 20)#0
%ag=bitcast i8*%af to i32*
%ah=getelementptr inbounds i8,i8*%af,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
%aj=getelementptr inbounds i8,i8*%af,i64 4
%ak=bitcast i8*%aj to i32*
store i32 0,i32*%ak,align 1
store i32 2,i32*%ag,align 4
%al=load i8*,i8**%c,align 8
%am=getelementptr inbounds i8,i8*%af,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 16
%ap=bitcast i8*%ao to i32*
store i32 2,i32*%ap,align 4
ret i8*%af
aq:
ret i8*null
ar:
%as=getelementptr inbounds i8,i8*%m,i64 8
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
%av=bitcast i8*%au to i8**
%aw=load i8*,i8**%av,align 8
store i8*%aw,i8**%d,align 8
%ax=getelementptr inbounds i8,i8*%au,i64 8
%ay=bitcast i8*%ax to i8**
%az=load i8*,i8**%ay,align 8
store i8*%az,i8**%e,align 8
%aA=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aB=getelementptr inbounds i8,i8*%aA,i64 16
%aC=bitcast i8*%aB to i8*(i8*,i8*)**
%aD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aC,align 8
%aE=bitcast i8*%aA to i8**
%aF=load i8*,i8**%aE,align 8
store i8*%aF,i8**%f,align 8
%aG=load i8*,i8**%c,align 8
%aH=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%aG)
%aI=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aJ=call fastcc i8*%aD(i8*inreg%aI,i8*inreg%aH)
%aK=getelementptr inbounds i8,i8*%aJ,i64 16
%aL=bitcast i8*%aK to i8*(i8*,i8*)**
%aM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aL,align 8
%aN=bitcast i8*%aJ to i8**
%aO=load i8*,i8**%aN,align 8
%aP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aQ=call fastcc i8*%aM(i8*inreg%aO,i8*inreg%aP)
store i8*%aQ,i8**%d,align 8
%aR=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aS=getelementptr inbounds i8,i8*%aR,i64 16
%aT=bitcast i8*%aS to i8*(i8*,i8*)**
%aU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aT,align 8
%aV=bitcast i8*%aR to i8**
%aW=load i8*,i8**%aV,align 8
store i8*%aW,i8**%f,align 8
%aX=call i8*@sml_alloc(i32 inreg 12)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177288,i32*%aZ,align 4
store i8*%aX,i8**%g,align 8
%a0=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a1=bitcast i8*%aX to i8**
store i8*%a0,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aX,i64 8
%a3=bitcast i8*%a2 to i32*
store i32 1,i32*%a3,align 4
%a4=call i8*@sml_alloc(i32 inreg 28)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177304,i32*%a6,align 4
%a7=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a8=bitcast i8*%a4 to i8**
store i8*%a7,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a4,i64 8
%ba=bitcast i8*%a9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15compileTvarKindE_1417 to void(...)*),void(...)**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a4,i64 16
%bc=bitcast i8*%bb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15compileTvarKindE_1417 to void(...)*),void(...)**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a4,i64 24
%be=bitcast i8*%bd to i32*
store i32 -2147483647,i32*%be,align 4
%bf=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bg=call fastcc i8*%aU(i8*inreg%bf,i8*inreg%a4)
%bh=getelementptr inbounds i8,i8*%bg,i64 16
%bi=bitcast i8*%bh to i8*(i8*,i8*)**
%bj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bi,align 8
%bk=bitcast i8*%bg to i8**
%bl=load i8*,i8**%bk,align 8
%bm=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bn=call fastcc i8*%bj(i8*inreg%bl,i8*inreg%bm)
store i8*%bn,i8**%c,align 8
%bo=call i8*@sml_alloc(i32 inreg 20)#0
%bp=getelementptr inbounds i8,i8*%bo,i64 -4
%bq=bitcast i8*%bp to i32*
store i32 1342177296,i32*%bq,align 4
store i8*%bo,i8**%e,align 8
%br=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bs=bitcast i8*%bo to i8**
store i8*%br,i8**%bs,align 8
%bt=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bu=getelementptr inbounds i8,i8*%bo,i64 8
%bv=bitcast i8*%bu to i8**
store i8*%bt,i8**%bv,align 8
%bw=getelementptr inbounds i8,i8*%bo,i64 16
%bx=bitcast i8*%bw to i32*
store i32 3,i32*%bx,align 4
%by=call i8*@sml_alloc(i32 inreg 20)#0
%bz=bitcast i8*%by to i32*
%bA=getelementptr inbounds i8,i8*%by,i64 -4
%bB=bitcast i8*%bA to i32*
store i32 1342177296,i32*%bB,align 4
%bC=getelementptr inbounds i8,i8*%by,i64 4
%bD=bitcast i8*%bC to i32*
store i32 0,i32*%bD,align 1
store i32 1,i32*%bz,align 4
%bE=load i8*,i8**%e,align 8
%bF=getelementptr inbounds i8,i8*%by,i64 8
%bG=bitcast i8*%bF to i8**
store i8*%bE,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%by,i64 16
%bI=bitcast i8*%bH to i32*
store i32 2,i32*%bI,align 4
ret i8*%by
bJ:
%bK=getelementptr inbounds i8,i8*%m,i64 8
%bL=bitcast i8*%bK to i8**
%bM=load i8*,i8**%bL,align 8
store i8*%bM,i8**%d,align 8
%bN=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bO=getelementptr inbounds i8,i8*%bN,i64 16
%bP=bitcast i8*%bO to i8*(i8*,i8*)**
%bQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bP,align 8
%bR=bitcast i8*%bN to i8**
%bS=load i8*,i8**%bR,align 8
store i8*%bS,i8**%e,align 8
%bT=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bU=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%bT)
%bV=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bW=call fastcc i8*%bQ(i8*inreg%bV,i8*inreg%bU)
%bX=getelementptr inbounds i8,i8*%bW,i64 16
%bY=bitcast i8*%bX to i8*(i8*,i8*)**
%bZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bY,align 8
%b0=bitcast i8*%bW to i8**
%b1=load i8*,i8**%b0,align 8
%b2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b3=call fastcc i8*%bZ(i8*inreg%b1,i8*inreg%b2)
store i8*%b3,i8**%c,align 8
%b4=call i8*@sml_alloc(i32 inreg 20)#0
%b5=getelementptr inbounds i8,i8*%b4,i64 -4
%b6=bitcast i8*%b5 to i32*
store i32 1342177296,i32*%b6,align 4
%b7=bitcast i8*%b4 to i64*
store i64 0,i64*%b7,align 4
%b8=load i8*,i8**%c,align 8
%b9=getelementptr inbounds i8,i8*%b4,i64 8
%ca=bitcast i8*%b9 to i8**
store i8*%b8,i8**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b4,i64 16
%cc=bitcast i8*%cb to i32*
store i32 2,i32*%cc,align 4
ret i8*%b4
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination13compileBtvEnvE_1341(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%d,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%b,%q]
%r=bitcast i8*%p to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%p,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4mapiE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%f,align 8
%C=call i8*@sml_alloc(i32 inreg 12)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177288,i32*%E,align 4
store i8*%C,i8**%g,align 8
%F=load i8*,i8**%c,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to i32*
store i32 1,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 28)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177304,i32*%L,align 4
%M=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7instMap_1423 to void(...)*),void(...)**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7instMap_1423 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%J,i64 24
%T=bitcast i8*%S to i32*
store i32 -2147483647,i32*%T,align 4
%U=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%V=call fastcc i8*%z(i8*inreg%U,i8*inreg%J)
%W=getelementptr inbounds i8,i8*%V,i64 16
%X=bitcast i8*%W to i8*(i8*,i8*)**
%Y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%X,align 8
%Z=bitcast i8*%V to i8**
%aa=load i8*,i8**%Z,align 8
%ab=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ac=call fastcc i8*%Y(i8*inreg%aa,i8*inreg%ab)
store i8*%ac,i8**%d,align 8
%ad=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4mapiE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=call fastcc i8*%ag(i8*inreg%ai,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cM,i64 0,i32 2)to i8*))
%ak=getelementptr inbounds i8,i8*%aj,i64 16
%al=bitcast i8*%ak to i8*(i8*,i8*)**
%am=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%al,align 8
%an=bitcast i8*%aj to i8**
%ao=load i8*,i8**%an,align 8
%ap=load i8*,i8**%d,align 8
%aq=call fastcc i8*%am(i8*inreg%ao,i8*inreg%ap)
store i8*%aq,i8**%f,align 8
%ar=load i8*,i8**%c,align 8
%as=bitcast i8*%ar to i32*
%at=load i32,i32*%as,align 4
%au=getelementptr inbounds i8,i8*%ar,i64 8
%av=bitcast i8*%au to i8**
%aw=load i8*,i8**%av,align 8
store i8*%aw,i8**%h,align 8
%ax=getelementptr inbounds i8,i8*%ar,i64 16
%ay=bitcast i8*%ax to i8**
%az=load i8*,i8**%ay,align 8
store i8*%az,i8**%i,align 8
%aA=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 1,i32 inreg 8)
%aB=getelementptr inbounds i8,i8*%aA,i64 16
%aC=bitcast i8*%aB to i8*(i8*,i8*)**
%aD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aC,align 8
%aE=bitcast i8*%aA to i8**
%aF=load i8*,i8**%aE,align 8
%aG=call fastcc i8*%aD(i8*inreg%aF,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cN,i64 0,i32 2)to i8*))
%aH=getelementptr inbounds i8,i8*%aG,i64 16
%aI=bitcast i8*%aH to i8*(i8*,i8*)**
%aJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aI,align 8
%aK=bitcast i8*%aG to i8**
%aL=load i8*,i8**%aK,align 8
store i8*%aL,i8**%j,align 8
%aM=load i8*,i8**%c,align 8
%aN=getelementptr inbounds i8,i8*%aM,i64 24
%aO=bitcast i8*%aN to i8**
%aP=load i8*,i8**%aO,align 8
store i8*%aP,i8**%g,align 8
%aQ=call i8*@sml_alloc(i32 inreg 20)#0
%aR=getelementptr inbounds i8,i8*%aQ,i64 -4
%aS=bitcast i8*%aR to i32*
store i32 1342177296,i32*%aS,align 4
%aT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aU=bitcast i8*%aQ to i8**
store i8*%aT,i8**%aU,align 8
%aV=load i8*,i8**%f,align 8
%aW=getelementptr inbounds i8,i8*%aQ,i64 8
%aX=bitcast i8*%aW to i8**
store i8*%aV,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aQ,i64 16
%aZ=bitcast i8*%aY to i32*
store i32 3,i32*%aZ,align 4
%a0=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%a1=call fastcc i8*%aJ(i8*inreg%a0,i8*inreg%aQ)
store i8*%a1,i8**%j,align 8
%a2=call i8*@sml_alloc(i32 inreg 36)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177312,i32*%a4,align 4
store i8*%a2,i8**%g,align 8
%a5=getelementptr inbounds i8,i8*%a2,i64 4
%a6=bitcast i8*%a5 to i32*
store i32 0,i32*%a6,align 1
%a7=bitcast i8*%a2 to i32*
store i32%at,i32*%a7,align 4
%a8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a9=getelementptr inbounds i8,i8*%a2,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bc=getelementptr inbounds i8,i8*%a2,i64 16
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bf=getelementptr inbounds i8,i8*%a2,i64 24
%bg=bitcast i8*%bf to i8**
store i8*%be,i8**%bg,align 8
%bh=getelementptr inbounds i8,i8*%a2,i64 32
%bi=bitcast i8*%bh to i32*
store i32 14,i32*%bi,align 4
%bj=call fastcc i8*@_SMLFN14BoundTypeVarID3Map10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bk=getelementptr inbounds i8,i8*%bj,i64 16
%bl=bitcast i8*%bk to i8*(i8*,i8*)**
%bm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bl,align 8
%bn=bitcast i8*%bj to i8**
%bo=load i8*,i8**%bn,align 8
store i8*%bo,i8**%h,align 8
%bp=call i8*@sml_alloc(i32 inreg 12)#0
%bq=getelementptr inbounds i8,i8*%bp,i64 -4
%br=bitcast i8*%bq to i32*
store i32 1342177288,i32*%br,align 4
store i8*%bp,i8**%i,align 8
%bs=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bt=bitcast i8*%bp to i8**
store i8*%bs,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bp,i64 8
%bv=bitcast i8*%bu to i32*
store i32 1,i32*%bv,align 4
%bw=call i8*@sml_alloc(i32 inreg 28)#0
%bx=getelementptr inbounds i8,i8*%bw,i64 -4
%by=bitcast i8*%bx to i32*
store i32 1342177304,i32*%by,align 4
%bz=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bA=bitcast i8*%bw to i8**
store i8*%bz,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bw,i64 8
%bC=bitcast i8*%bB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6btvEnv_1429 to void(...)*),void(...)**%bC,align 8
%bD=getelementptr inbounds i8,i8*%bw,i64 16
%bE=bitcast i8*%bD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6btvEnv_1429 to void(...)*),void(...)**%bE,align 8
%bF=getelementptr inbounds i8,i8*%bw,i64 24
%bG=bitcast i8*%bF to i32*
store i32 -2147483647,i32*%bG,align 4
%bH=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bI=call fastcc i8*%bm(i8*inreg%bH,i8*inreg%bw)
%bJ=getelementptr inbounds i8,i8*%bI,i64 16
%bK=bitcast i8*%bJ to i8*(i8*,i8*)**
%bL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bK,align 8
%bM=bitcast i8*%bI to i8**
%bN=load i8*,i8**%bM,align 8
%bO=load i8*,i8**%d,align 8
%bP=call fastcc i8*%bL(i8*inreg%bN,i8*inreg%bO)
store i8*%bP,i8**%g,align 8
%bQ=call fastcc i8*@_SMLFN12TypedCalcCon6btvEnvE(i8*inreg%bP)
store i8*%bQ,i8**%h,align 8
%bR=load i8*,i8**%c,align 8
%bS=getelementptr inbounds i8,i8*%bR,i64 8
%bT=bitcast i8*%bS to i8**
%bU=load i8*,i8**%bT,align 8
store i8*%bU,i8**%i,align 8
%bV=call i8*@sml_alloc(i32 inreg 20)#0
%bW=getelementptr inbounds i8,i8*%bV,i64 -4
%bX=bitcast i8*%bW to i32*
store i32 1342177296,i32*%bX,align 4
%bY=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bZ=bitcast i8*%bV to i8**
store i8*%bY,i8**%bZ,align 8
%b0=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%b1=getelementptr inbounds i8,i8*%bV,i64 8
%b2=bitcast i8*%b1 to i8**
store i8*%b0,i8**%b2,align 8
%b3=getelementptr inbounds i8,i8*%bV,i64 16
%b4=bitcast i8*%b3 to i32*
store i32 3,i32*%b4,align 4
%b5=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%bV)
store i8*%b5,i8**%h,align 8
%b6=load i8*,i8**%c,align 8
%b7=bitcast i8*%b6 to i32*
%b8=load i32,i32*%b7,align 4
%b9=getelementptr inbounds i8,i8*%b6,i64 16
%ca=bitcast i8*%b9 to i8**
%cb=load i8*,i8**%ca,align 8
store i8*%cb,i8**%i,align 8
%cc=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 1,i32 inreg 8)
%cd=getelementptr inbounds i8,i8*%cc,i64 16
%ce=bitcast i8*%cd to i8*(i8*,i8*)**
%cf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ce,align 8
%cg=bitcast i8*%cc to i8**
%ch=load i8*,i8**%cg,align 8
%ci=call fastcc i8*%cf(i8*inreg%ch,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cP,i64 0,i32 2)to i8*))
%cj=getelementptr inbounds i8,i8*%ci,i64 16
%ck=bitcast i8*%cj to i8*(i8*,i8*)**
%cl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ck,align 8
%cm=bitcast i8*%ci to i8**
%cn=load i8*,i8**%cm,align 8
store i8*%cn,i8**%j,align 8
%co=load i8*,i8**%c,align 8
%cp=getelementptr inbounds i8,i8*%co,i64 24
%cq=bitcast i8*%cp to i8**
%cr=load i8*,i8**%cq,align 8
store i8*%cr,i8**%c,align 8
%cs=call i8*@sml_alloc(i32 inreg 20)#0
%ct=getelementptr inbounds i8,i8*%cs,i64 -4
%cu=bitcast i8*%ct to i32*
store i32 1342177296,i32*%cu,align 4
%cv=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cw=bitcast i8*%cs to i8**
store i8*%cv,i8**%cw,align 8
%cx=load i8*,i8**%f,align 8
%cy=getelementptr inbounds i8,i8*%cs,i64 8
%cz=bitcast i8*%cy to i8**
store i8*%cx,i8**%cz,align 8
%cA=getelementptr inbounds i8,i8*%cs,i64 16
%cB=bitcast i8*%cA to i32*
store i32 3,i32*%cB,align 4
%cC=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cD=call fastcc i8*%cl(i8*inreg%cC,i8*inreg%cs)
store i8*%cD,i8**%j,align 8
%cE=call i8*@sml_alloc(i32 inreg 36)#0
%cF=getelementptr inbounds i8,i8*%cE,i64 -4
%cG=bitcast i8*%cF to i32*
store i32 1342177312,i32*%cG,align 4
store i8*%cE,i8**%c,align 8
%cH=getelementptr inbounds i8,i8*%cE,i64 4
%cI=bitcast i8*%cH to i32*
store i32 0,i32*%cI,align 1
%cJ=bitcast i8*%cE to i32*
store i32%b8,i32*%cJ,align 4
%cK=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cL=getelementptr inbounds i8,i8*%cE,i64 8
%cM=bitcast i8*%cL to i8**
store i8*%cK,i8**%cM,align 8
%cN=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cO=getelementptr inbounds i8,i8*%cE,i64 16
%cP=bitcast i8*%cO to i8**
store i8*%cN,i8**%cP,align 8
%cQ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cR=getelementptr inbounds i8,i8*%cE,i64 24
%cS=bitcast i8*%cR to i8**
store i8*%cQ,i8**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cE,i64 32
%cU=bitcast i8*%cT to i32*
store i32 14,i32*%cU,align 4
%cV=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%cW=getelementptr inbounds i8,i8*%cV,i64 16
%cX=bitcast i8*%cW to i8*(i8*,i8*)**
%cY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cX,align 8
%cZ=bitcast i8*%cV to i8**
%c0=load i8*,i8**%cZ,align 8
%c1=call fastcc i8*%cY(i8*inreg%c0,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cQ,i64 0,i32 2)to i8*))
%c2=getelementptr inbounds i8,i8*%c1,i64 16
%c3=bitcast i8*%c2 to i8*(i8*,i8*)**
%c4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c3,align 8
%c5=bitcast i8*%c1 to i8**
%c6=load i8*,i8**%c5,align 8
store i8*%c6,i8**%h,align 8
%c7=call i8*@sml_alloc(i32 inreg 4)#0
%c8=bitcast i8*%c7 to i32*
%c9=getelementptr inbounds i8,i8*%c7,i64 -4
%da=bitcast i8*%c9 to i32*
store i32 4,i32*%da,align 4
store i32 1,i32*%c8,align 4
%db=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dc=call fastcc i8*%c4(i8*inreg%db,i8*inreg%c7)
%dd=getelementptr inbounds i8,i8*%dc,i64 16
%de=bitcast i8*%dd to i8*(i8*,i8*)**
%df=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%de,align 8
%dg=bitcast i8*%dc to i8**
%dh=load i8*,i8**%dg,align 8
%di=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dj=call fastcc i8*%df(i8*inreg%dh,i8*inreg%di)
%dk=bitcast i8*%dj to i32*
%dl=load i32,i32*%dk,align 4
%dm=icmp eq i32%dl,0
br i1%dm,label%ef,label%dn
dn:
%do=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%dp=getelementptr inbounds i8,i8*%do,i64 16
%dq=bitcast i8*%dp to i8*(i8*,i8*)**
%dr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dq,align 8
%ds=bitcast i8*%do to i8**
%dt=load i8*,i8**%ds,align 8
store i8*%dt,i8**%d,align 8
%du=call i8*@sml_alloc(i32 inreg 12)#0
%dv=getelementptr inbounds i8,i8*%du,i64 -4
%dw=bitcast i8*%dv to i32*
store i32 1342177288,i32*%dw,align 4
store i8*%du,i8**%h,align 8
%dx=load i8*,i8**%c,align 8
%dy=bitcast i8*%du to i8**
store i8*%dx,i8**%dy,align 8
%dz=getelementptr inbounds i8,i8*%du,i64 8
%dA=bitcast i8*%dz to i32*
store i32 1,i32*%dA,align 4
%dB=call i8*@sml_alloc(i32 inreg 28)#0
%dC=getelementptr inbounds i8,i8*%dB,i64 -4
%dD=bitcast i8*%dC to i32*
store i32 1342177304,i32*%dD,align 4
%dE=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dF=bitcast i8*%dB to i8**
store i8*%dE,i8**%dF,align 8
%dG=getelementptr inbounds i8,i8*%dB,i64 8
%dH=bitcast i8*%dG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination13compileBtvEnvE_1434 to void(...)*),void(...)**%dH,align 8
%dI=getelementptr inbounds i8,i8*%dB,i64 16
%dJ=bitcast i8*%dI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination13compileBtvEnvE_1434 to void(...)*),void(...)**%dJ,align 8
%dK=getelementptr inbounds i8,i8*%dB,i64 24
%dL=bitcast i8*%dK to i32*
store i32 -2147483647,i32*%dL,align 4
%dM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dN=call fastcc i8*%dr(i8*inreg%dM,i8*inreg%dB)
%dO=getelementptr inbounds i8,i8*%dN,i64 16
%dP=bitcast i8*%dO to i8*(i8*,i8*)**
%dQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dP,align 8
%dR=bitcast i8*%dN to i8**
%dS=load i8*,i8**%dR,align 8
%dT=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dU=call fastcc i8*%dQ(i8*inreg%dS,i8*inreg%dT)
store i8*%dU,i8**%d,align 8
%dV=call i8*@sml_alloc(i32 inreg 28)#0
%dW=getelementptr inbounds i8,i8*%dV,i64 -4
%dX=bitcast i8*%dW to i32*
store i32 1342177304,i32*%dX,align 4
store i8*%dV,i8**%e,align 8
%dY=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dZ=bitcast i8*%dV to i8**
store i8*%dY,i8**%dZ,align 8
%d0=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%d1=getelementptr inbounds i8,i8*%dV,i64 8
%d2=bitcast i8*%d1 to i8**
store i8*%d0,i8**%d2,align 8
%d3=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%d4=getelementptr inbounds i8,i8*%dV,i64 16
%d5=bitcast i8*%d4 to i8**
store i8*%d3,i8**%d5,align 8
%d6=getelementptr inbounds i8,i8*%dV,i64 24
%d7=bitcast i8*%d6 to i32*
store i32 7,i32*%d7,align 4
%d8=call i8*@sml_alloc(i32 inreg 12)#0
%d9=getelementptr inbounds i8,i8*%d8,i64 -4
%ea=bitcast i8*%d9 to i32*
store i32 1342177288,i32*%ea,align 4
%eb=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ec=bitcast i8*%d8 to i8**
store i8*%eb,i8**%ec,align 8
%ed=getelementptr inbounds i8,i8*%d8,i64 8
%ee=bitcast i8*%ed to i32*
store i32 1,i32*%ee,align 4
br label%eg
ef:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
br label%eg
eg:
%eh=phi i8*[null,%ef],[%d8,%dn]
store i8*%eh,i8**%d,align 8
%ei=call i8*@sml_alloc(i32 inreg 20)#0
%ej=getelementptr inbounds i8,i8*%ei,i64 -4
%ek=bitcast i8*%ej to i32*
store i32 1342177296,i32*%ek,align 4
%el=load i8*,i8**%c,align 8
%em=bitcast i8*%ei to i8**
store i8*%el,i8**%em,align 8
%en=load i8*,i8**%d,align 8
%eo=getelementptr inbounds i8,i8*%ei,i64 8
%ep=bitcast i8*%eo to i8**
store i8*%en,i8**%ep,align 8
%eq=getelementptr inbounds i8,i8*%ei,i64 16
%er=bitcast i8*%eq to i32*
store i32 3,i32*%er,align 4
ret i8*%ei
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination11compileKindE_1342(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%a,%m]
%n=phi i8*[%i,%h],[%b,%m]
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%n,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%n,i64 16
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*@_SMLLLN17PolyTyElimination15compileTvarKindE_1340(i8*inreg%l,i8*inreg%v)
store i8*%w,i8**%e,align 8
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=load i8*,i8**%e,align 8
%G=getelementptr inbounds i8,i8*%x,i64 16
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%x,i64 24
%J=bitcast i8*%I to i32*
store i32 7,i32*%J,align 4
ret i8*%x
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18compileCodeEntryTyE_1343(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%d,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%b,%q]
%r=bitcast i8*%p to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%p,i64 8
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%e,align 8
%z=getelementptr inbounds i8,i8*%p,i64 24
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%f,align 8
%C=getelementptr inbounds i8,i8*%p,i64 32
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%g,align 8
%F=call i8*@sml_alloc(i32 inreg 20)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
%I=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to i8**
store i8*null,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%F,i64 16
%N=bitcast i8*%M to i32*
store i32 3,i32*%N,align 4
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=call fastcc i8*@_SMLLLN17PolyTyElimination13compileBtvEnvE_1341(i8*inreg%O,i8*inreg%F)
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%c,align 8
%S=getelementptr inbounds i8,i8*%P,i64 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
%V=icmp eq i8*%U,null
br i1%V,label%W,label%ad
W:
store i8*null,i8**%f,align 8
%X=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
store i8*%X,i8**%f,align 8
%Y=call i8*@sml_alloc(i32 inreg 20)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177296,i32*%aa,align 4
%ab=load i8*,i8**%f,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
br label%aY
ad:
%ae=bitcast i8*%U to i8**
%af=load i8*,i8**%ae,align 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
store i8*%ah,i8**%g,align 8
%ai=getelementptr inbounds i8,i8*%af,i64 16
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%h,align 8
%al=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%am=getelementptr inbounds i8,i8*%al,i64 16
%an=bitcast i8*%am to i8*(i8*,i8*)**
%ao=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%an,align 8
%ap=bitcast i8*%al to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%i,align 8
%ar=call i8*@sml_alloc(i32 inreg 12)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177288,i32*%at,align 4
store i8*%ar,i8**%j,align 8
%au=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i32*
store i32 1,i32*%ax,align 4
%ay=call i8*@sml_alloc(i32 inreg 28)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177304,i32*%aA,align 4
%aB=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%ay,i64 8
%aE=bitcast i8*%aD to void(...)**
store void(...)*bitcast(i8*(i8*,i32)*@_SMLLLN17PolyTyElimination18compileCodeEntryTyE_1435 to void(...)*),void(...)**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ay,i64 16
%aG=bitcast i8*%aF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination18compileCodeEntryTyE_1749 to void(...)*),void(...)**%aG,align 8
%aH=getelementptr inbounds i8,i8*%ay,i64 24
%aI=bitcast i8*%aH to i32*
store i32 -2147483647,i32*%aI,align 4
%aJ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aK=call fastcc i8*%ao(i8*inreg%aJ,i8*inreg%ay)
%aL=getelementptr inbounds i8,i8*%aK,i64 16
%aM=bitcast i8*%aL to i8*(i8*,i8*)**
%aN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aM,align 8
%aO=bitcast i8*%aK to i8**
%aP=load i8*,i8**%aO,align 8
%aQ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aR=call fastcc i8*%aN(i8*inreg%aP,i8*inreg%aQ)
store i8*%aR,i8**%f,align 8
%aS=call i8*@sml_alloc(i32 inreg 20)#0
%aT=getelementptr inbounds i8,i8*%aS,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177296,i32*%aU,align 4
%aV=load i8*,i8**%g,align 8
%aW=bitcast i8*%aS to i8**
store i8*%aV,i8**%aW,align 8
%aX=load i8*,i8**%f,align 8
br label%aY
aY:
%aZ=phi i8*[%aS,%ad],[%Y,%W]
%a0=phi i8*[%aX,%ad],[null,%W]
%a1=phi i8*[%aV,%ad],[%ab,%W]
%a2=getelementptr inbounds i8,i8*%aZ,i64 8
%a3=bitcast i8*%a2 to i8**
store i8*%a0,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aZ,i64 16
%a5=bitcast i8*%a4 to i32*
store i32 3,i32*%a5,align 4
store i8*%a1,i8**%f,align 8
store i8*%a0,i8**%g,align 8
%a6=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%a7=getelementptr inbounds i8,i8*%a6,i64 16
%a8=bitcast i8*%a7 to i8*(i8*,i8*)**
%a9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a8,align 8
%ba=bitcast i8*%a6 to i8**
%bb=load i8*,i8**%ba,align 8
store i8*%bb,i8**%h,align 8
%bc=load i8*,i8**%c,align 8
%bd=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%bc)
%be=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bf=call fastcc i8*%a9(i8*inreg%be,i8*inreg%bd)
%bg=getelementptr inbounds i8,i8*%bf,i64 16
%bh=bitcast i8*%bg to i8*(i8*,i8*)**
%bi=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bh,align 8
%bj=bitcast i8*%bf to i8**
%bk=load i8*,i8**%bj,align 8
%bl=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bm=call fastcc i8*%bi(i8*inreg%bk,i8*inreg%bl)
store i8*%bm,i8**%d,align 8
%bn=load i8*,i8**%e,align 8
%bo=load i8*,i8**%c,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%c,align 8
%bp=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%bo,i8*inreg%bn)
store i8*%bp,i8**%c,align 8
%bq=call i8*@sml_alloc(i32 inreg 44)#0
%br=getelementptr inbounds i8,i8*%bq,i64 -4
%bs=bitcast i8*%br to i32*
store i32 1342177320,i32*%bs,align 4
%bt=getelementptr inbounds i8,i8*%bq,i64 12
%bu=bitcast i8*%bt to i32*
store i32 0,i32*%bu,align 1
%bv=load i8*,i8**%d,align 8
%bw=bitcast i8*%bq to i8**
store i8*%bv,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bq,i64 8
%by=bitcast i8*%bx to i32*
store i32%v,i32*%by,align 4
%bz=load i8*,i8**%c,align 8
%bA=getelementptr inbounds i8,i8*%bq,i64 16
%bB=bitcast i8*%bA to i8**
store i8*%bz,i8**%bB,align 8
%bC=load i8*,i8**%g,align 8
%bD=getelementptr inbounds i8,i8*%bq,i64 24
%bE=bitcast i8*%bD to i8**
store i8*%bC,i8**%bE,align 8
%bF=load i8*,i8**%f,align 8
%bG=getelementptr inbounds i8,i8*%bq,i64 32
%bH=bitcast i8*%bG to i8**
store i8*%bF,i8**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bq,i64 40
%bJ=bitcast i8*%bI to i32*
store i32 29,i32*%bJ,align 4
ret i8*%bq
}
define internal fastcc i8*@_SMLLL13dynamicKindOf_1438(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
store i8*null,i8**%b,align 8
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%n,label%N
n:
%o=call fastcc i8*@_SMLFN16DynamicKindUtils16kindOfStaticKindE(i8*inreg%i)
%p=icmp eq i8*%o,null
br i1%p,label%q,label%K
q:
%r=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%r,i8**%b,align 8
%s=call i8*@sml_alloc(i32 inreg 28)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177304,i32*%u,align 4
store i8*%s,i8**%c,align 8
%v=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@cR,i64 0,i32 2,i64 0),i8**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@cS,i64 0,i32 2,i64 0),i8**%A,align 8
%B=getelementptr inbounds i8,i8*%s,i64 24
%C=bitcast i8*%B to i32*
store i32 7,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 60)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177336,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%D,i64 56
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=load i8*,i8**%c,align 8
%J=bitcast i8*%D to i8**
store i8*%I,i8**%J,align 8
call void@sml_raise(i8*inreg%D)#1
unreachable
K:
%L=bitcast i8*%o to i8**
%M=load i8*,i8**%L,align 8
ret i8*%M
N:
%O=bitcast i8*%l to i8**
%P=load i8*,i8**%O,align 8
ret i8*%P
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination9benchmarkE_1440(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%e,label%p
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%p,label%j
j:
%k=load i32,i32*@d4,align 8
%l=add nsw i32%k,1
store i32%l,i32*@d4,align 8
%m=tail call i8*@sml_alloc(i32 inreg 12)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177288,i32*%o,align 4
call void@llvm.memset.p0i8.i64(i8*%m,i8 0,i64 12,i1 false)
ret i8*%m
p:
ret i8*null
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination9benchmarkE_1442(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=icmp eq i8*%m,null
br i1%n,label%o,label%p
o:
ret i8*null
p:
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%b,align 8
%s=getelementptr inbounds i8,i8*%j,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=icmp eq i8*%u,null
br i1%v,label%w,label%z
w:
%x=load i32,i32*@dW,align 8
%y=add nsw i32%x,1
store i32%y,i32*@dW,align 8
ret i8*null
z:
%A=bitcast i8*%u to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%c,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=load i8*,i8**%b,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=call fastcc i32@_SMLFN16DynamicKindUtils6eqKindE(i8*inreg%C)
%N=icmp eq i32%M,0
br i1%N,label%R,label%O
O:
%P=load i32,i32*@d6,align 8
%Q=add nsw i32%P,1
store i32%Q,i32*@d6,align 8
ret i8*null
R:
%S=load i32,i32*@dX,align 8
%T=add nsw i32%S,1
store i32%T,i32*@dX,align 8
%U=load i8*,i8**%b,align 8
%V=getelementptr inbounds i8,i8*%U,i64 8
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
%Y=load i8*,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%Y,i64 8
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
%ac=icmp ne i8*%X,null
%ad=icmp eq i8*%ab,null
%ae=or i1%ac,%ad
br i1%ae,label%at,label%af
af:
%ag=call fastcc i32@_SMLFN12RuntimeTypes7getSizeE(i8*inreg%ab)
switch i32%ag,label%at[
i32 1,label%aq
i32 2,label%an
i32 4,label%ak
i32 8,label%ah
]
ah:
%ai=load i32,i32*@d3,align 8
%aj=add nsw i32%ai,1
store i32%aj,i32*@d3,align 8
br label%at
ak:
%al=load i32,i32*@d2,align 8
%am=add nsw i32%al,1
store i32%am,i32*@d2,align 8
br label%at
an:
%ao=load i32,i32*@d1,align 8
%ap=add nsw i32%ao,1
store i32%ap,i32*@d1,align 8
br label%at
aq:
%ar=load i32,i32*@d0,align 8
%as=add nsw i32%ar,1
store i32%as,i32*@d0,align 8
br label%at
at:
%au=load i8*,i8**%b,align 8
%av=getelementptr inbounds i8,i8*%au,i64 16
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
%ay=load i8*,i8**%c,align 8
%az=getelementptr inbounds i8,i8*%ay,i64 16
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
%aC=icmp ne i8*%ax,null
%aD=icmp eq i8*%aB,null
%aE=or i1%aC,%aD
br i1%aE,label%aM,label%aF
aF:
%aG=bitcast i8*%aB to i32*
%aH=load i32,i32*%aG,align 4
%aI=icmp eq i32%aH,0
%aJ=select i1%aI,i32*@dY,i32*@dZ
%aK=load i32,i32*%aJ,align 8
%aL=add nsw i32%aK,1
store i32%aL,i32*%aJ,align 8
br label%aM
aM:
%aN=call fastcc i8*@_SMLFN11RecordLabel3Map9mergeWithE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%aO=getelementptr inbounds i8,i8*%aN,i64 16
%aP=bitcast i8*%aO to i8*(i8*,i8*)**
%aQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aP,align 8
%aR=bitcast i8*%aN to i8**
%aS=load i8*,i8**%aR,align 8
%aT=call fastcc i8*%aQ(i8*inreg%aS,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cU,i64 0,i32 2)to i8*))
%aU=getelementptr inbounds i8,i8*%aT,i64 16
%aV=bitcast i8*%aU to i8*(i8*,i8*)**
%aW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aV,align 8
%aX=bitcast i8*%aT to i8**
%aY=load i8*,i8**%aX,align 8
store i8*%aY,i8**%d,align 8
%aZ=bitcast i8**%b to i8***
%a0=load i8**,i8***%aZ,align 8
%a1=load i8*,i8**%a0,align 8
store i8*%a1,i8**%b,align 8
%a2=bitcast i8**%c to i8***
%a3=load i8**,i8***%a2,align 8
%a4=load i8*,i8**%a3,align 8
store i8*%a4,i8**%c,align 8
%a5=call i8*@sml_alloc(i32 inreg 20)#0
%a6=getelementptr inbounds i8,i8*%a5,i64 -4
%a7=bitcast i8*%a6 to i32*
store i32 1342177296,i32*%a7,align 4
%a8=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%a9=bitcast i8*%a5 to i8**
store i8*%a8,i8**%a9,align 8
%ba=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bb=getelementptr inbounds i8,i8*%a5,i64 8
%bc=bitcast i8*%bb to i8**
store i8*%ba,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a5,i64 16
%be=bitcast i8*%bd to i32*
store i32 3,i32*%be,align 4
%bf=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bg=call fastcc i8*%aW(i8*inreg%bf,i8*inreg%a5)
ret i8*null
}
define internal fastcc void@_SMLLLN17PolyTyElimination9benchmarkE_1444(i8*inreg%a)#4 gc"smlsharp"{
%b=load i32,i32*@d5,align 8
%c=add nsw i32%b,1
store i32%c,i32*@d5,align 8
ret void
}
define internal fastcc void@_SMLLLN17PolyTyElimination9benchmarkE_1446(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%r,label%G
r:
%s=call fastcc i8*@_SMLFN14BoundTypeVarID3Map3appE(i32 inreg 1,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cW,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
ret void
G:
%H=bitcast i8*%p to i8***
%I=load i8**,i8***%H,align 8
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%c,align 8
%K=call fastcc i8*@_SMLFN14BoundTypeVarID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
%Q=call fastcc i8*%N(i8*inreg%P,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cT,i64 0,i32 2)to i8*))
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%X=call fastcc i8*%T(i8*inreg%V,i8*inreg%W)
store i8*%X,i8**%b,align 8
%Y=call fastcc i8*@_SMLFN14BoundTypeVarID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
%ae=call fastcc i8*%ab(i8*inreg%ad,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cT,i64 0,i32 2)to i8*))
%af=getelementptr inbounds i8,i8*%ae,i64 16
%ag=bitcast i8*%af to i8*(i8*,i8*)**
%ah=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ag,align 8
%ai=bitcast i8*%ae to i8**
%aj=load i8*,i8**%ai,align 8
%ak=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%al=call fastcc i8*%ah(i8*inreg%aj,i8*inreg%ak)
store i8*%al,i8**%c,align 8
%am=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9mergeWithE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%an=getelementptr inbounds i8,i8*%am,i64 16
%ao=bitcast i8*%an to i8*(i8*,i8*)**
%ap=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ao,align 8
%aq=bitcast i8*%am to i8**
%ar=load i8*,i8**%aq,align 8
%as=call fastcc i8*%ap(i8*inreg%ar,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cV,i64 0,i32 2)to i8*))
%at=getelementptr inbounds i8,i8*%as,i64 16
%au=bitcast i8*%at to i8*(i8*,i8*)**
%av=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%au,align 8
%aw=bitcast i8*%as to i8**
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%d,align 8
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
%aB=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aE=getelementptr inbounds i8,i8*%ay,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ay,i64 16
%aH=bitcast i8*%aG to i32*
store i32 3,i32*%aH,align 4
%aI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aJ=call fastcc i8*%av(i8*inreg%aI,i8*inreg%ay)
ret void
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination12compileFFItyE_1455(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
store i8*null,i8**%c,align 8
%r=load i8*,i8**%n,align 8
%s=getelementptr inbounds i8,i8*%o,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLLN17PolyTyElimination12compileFFItyE_1448(i8*inreg%r,i8*inreg%u)
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%d,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination12compileFFItyE_1457(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLLN17PolyTyElimination12compileFFItyE_1448(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination12compileFFItyE_1448(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%d,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%b,%q]
store i8*null,i8**%d,align 8
%r=bitcast i8*%p to i32*
%s=load i32,i32*%r,align 4
switch i32%s,label%t[
i32 0,label%cF
i32 1,label%aW
i32 2,label%L
]
t:
call void@sml_matchcomp_bug()
%u=load i8*,i8**@_SMLZ5Match,align 8
store i8*%u,i8**%c,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%d,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@cX,i64 0,i32 2,i64 0),i8**%B,align 8
%C=getelementptr inbounds i8,i8*%v,i64 16
%D=bitcast i8*%C to i32*
store i32 3,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 60)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177336,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%E,i64 56
%I=bitcast i8*%H to i32*
store i32 1,i32*%I,align 4
%J=load i8*,i8**%d,align 8
%K=bitcast i8*%E to i8**
store i8*%J,i8**%K,align 8
call void@sml_raise(i8*inreg%E)#1
unreachable
L:
%M=getelementptr inbounds i8,i8*%p,i64 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%d,align 8
%R=getelementptr inbounds i8,i8*%O,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%e,align 8
%U=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%f,align 8
%aa=call i8*@sml_alloc(i32 inreg 12)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177288,i32*%ac,align 4
store i8*%aa,i8**%g,align 8
%ad=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%aa,i64 8
%ag=bitcast i8*%af to i32*
store i32 1,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 28)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177304,i32*%aj,align 4
%ak=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ah,i64 8
%an=bitcast i8*%am to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination12compileFFItyE_1455 to void(...)*),void(...)**%an,align 8
%ao=getelementptr inbounds i8,i8*%ah,i64 16
%ap=bitcast i8*%ao to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination12compileFFItyE_1455 to void(...)*),void(...)**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ah,i64 24
%ar=bitcast i8*%aq to i32*
store i32 -2147483647,i32*%ar,align 4
%as=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%at=call fastcc i8*%X(i8*inreg%as,i8*inreg%ah)
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
%az=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aA=call fastcc i8*%aw(i8*inreg%ay,i8*inreg%az)
store i8*%aA,i8**%c,align 8
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
store i8*%aB,i8**%d,align 8
%aE=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aB,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 3,i32*%aK,align 4
%aL=call i8*@sml_alloc(i32 inreg 20)#0
%aM=bitcast i8*%aL to i32*
%aN=getelementptr inbounds i8,i8*%aL,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177296,i32*%aO,align 4
%aP=getelementptr inbounds i8,i8*%aL,i64 4
%aQ=bitcast i8*%aP to i32*
store i32 0,i32*%aQ,align 1
store i32 2,i32*%aM,align 4
%aR=load i8*,i8**%d,align 8
%aS=getelementptr inbounds i8,i8*%aL,i64 8
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aL,i64 16
%aV=bitcast i8*%aU to i32*
store i32 2,i32*%aV,align 4
ret i8*%aL
aW:
%aX=getelementptr inbounds i8,i8*%p,i64 8
%aY=bitcast i8*%aX to i8**
%aZ=load i8*,i8**%aY,align 8
%a0=bitcast i8*%aZ to i8**
%a1=load i8*,i8**%a0,align 8
store i8*%a1,i8**%d,align 8
%a2=getelementptr inbounds i8,i8*%aZ,i64 8
%a3=bitcast i8*%a2 to i8**
%a4=load i8*,i8**%a3,align 8
store i8*%a4,i8**%e,align 8
%a5=getelementptr inbounds i8,i8*%aZ,i64 16
%a6=bitcast i8*%a5 to i8**
%a7=load i8*,i8**%a6,align 8
store i8*%a7,i8**%f,align 8
%a8=getelementptr inbounds i8,i8*%aZ,i64 24
%a9=bitcast i8*%a8 to i8**
%ba=load i8*,i8**%a9,align 8
store i8*%ba,i8**%g,align 8
%bb=getelementptr inbounds i8,i8*%aZ,i64 32
%bc=bitcast i8*%bb to i8**
%bd=load i8*,i8**%bc,align 8
store i8*%bd,i8**%h,align 8
%be=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bf=getelementptr inbounds i8,i8*%be,i64 16
%bg=bitcast i8*%bf to i8*(i8*,i8*)**
%bh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bg,align 8
%bi=bitcast i8*%be to i8**
%bj=load i8*,i8**%bi,align 8
store i8*%bj,i8**%i,align 8
%bk=load i8*,i8**%c,align 8
%bl=call fastcc i8*@_SMLLLN17PolyTyElimination12compileFFItyE_1449(i8*inreg%bk)
%bm=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bn=call fastcc i8*%bh(i8*inreg%bm,i8*inreg%bl)
%bo=getelementptr inbounds i8,i8*%bn,i64 16
%bp=bitcast i8*%bo to i8*(i8*,i8*)**
%bq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bp,align 8
%br=bitcast i8*%bn to i8**
%bs=load i8*,i8**%br,align 8
%bt=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bu=call fastcc i8*%bq(i8*inreg%bs,i8*inreg%bt)
store i8*%bu,i8**%e,align 8
%bv=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bw=getelementptr inbounds i8,i8*%bv,i64 16
%bx=bitcast i8*%bw to i8*(i8*,i8*)**
%by=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bx,align 8
%bz=bitcast i8*%bv to i8**
%bA=load i8*,i8**%bz,align 8
store i8*%bA,i8**%j,align 8
%bB=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bC=getelementptr inbounds i8,i8*%bB,i64 16
%bD=bitcast i8*%bC to i8*(i8*,i8*)**
%bE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bD,align 8
%bF=bitcast i8*%bB to i8**
%bG=load i8*,i8**%bF,align 8
store i8*%bG,i8**%i,align 8
%bH=load i8*,i8**%c,align 8
%bI=call fastcc i8*@_SMLLLN17PolyTyElimination12compileFFItyE_1449(i8*inreg%bH)
%bJ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bK=call fastcc i8*%bE(i8*inreg%bJ,i8*inreg%bI)
%bL=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bM=call fastcc i8*%by(i8*inreg%bL,i8*inreg%bK)
%bN=getelementptr inbounds i8,i8*%bM,i64 16
%bO=bitcast i8*%bN to i8*(i8*,i8*)**
%bP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bO,align 8
%bQ=bitcast i8*%bM to i8**
%bR=load i8*,i8**%bQ,align 8
%bS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bT=call fastcc i8*%bP(i8*inreg%bR,i8*inreg%bS)
store i8*%bT,i8**%f,align 8
%bU=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bV=getelementptr inbounds i8,i8*%bU,i64 16
%bW=bitcast i8*%bV to i8*(i8*,i8*)**
%bX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bW,align 8
%bY=bitcast i8*%bU to i8**
%bZ=load i8*,i8**%bY,align 8
store i8*%bZ,i8**%i,align 8
%b0=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b1=call fastcc i8*@_SMLLLN17PolyTyElimination12compileFFItyE_1449(i8*inreg%b0)
%b2=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%b3=call fastcc i8*%bX(i8*inreg%b2,i8*inreg%b1)
%b4=getelementptr inbounds i8,i8*%b3,i64 16
%b5=bitcast i8*%b4 to i8*(i8*,i8*)**
%b6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b5,align 8
%b7=bitcast i8*%b3 to i8**
%b8=load i8*,i8**%b7,align 8
%b9=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ca=call fastcc i8*%b6(i8*inreg%b8,i8*inreg%b9)
store i8*%ca,i8**%c,align 8
%cb=call i8*@sml_alloc(i32 inreg 44)#0
%cc=getelementptr inbounds i8,i8*%cb,i64 -4
%cd=bitcast i8*%cc to i32*
store i32 1342177320,i32*%cd,align 4
store i8*%cb,i8**%g,align 8
%ce=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cf=bitcast i8*%cb to i8**
store i8*%ce,i8**%cf,align 8
%cg=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ch=getelementptr inbounds i8,i8*%cb,i64 8
%ci=bitcast i8*%ch to i8**
store i8*%cg,i8**%ci,align 8
%cj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ck=getelementptr inbounds i8,i8*%cb,i64 16
%cl=bitcast i8*%ck to i8**
store i8*%cj,i8**%cl,align 8
%cm=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cn=getelementptr inbounds i8,i8*%cb,i64 24
%co=bitcast i8*%cn to i8**
store i8*%cm,i8**%co,align 8
%cp=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cq=getelementptr inbounds i8,i8*%cb,i64 32
%cr=bitcast i8*%cq to i8**
store i8*%cp,i8**%cr,align 8
%cs=getelementptr inbounds i8,i8*%cb,i64 40
%ct=bitcast i8*%cs to i32*
store i32 31,i32*%ct,align 4
%cu=call i8*@sml_alloc(i32 inreg 20)#0
%cv=bitcast i8*%cu to i32*
%cw=getelementptr inbounds i8,i8*%cu,i64 -4
%cx=bitcast i8*%cw to i32*
store i32 1342177296,i32*%cx,align 4
%cy=getelementptr inbounds i8,i8*%cu,i64 4
%cz=bitcast i8*%cy to i32*
store i32 0,i32*%cz,align 1
store i32 1,i32*%cv,align 4
%cA=load i8*,i8**%g,align 8
%cB=getelementptr inbounds i8,i8*%cu,i64 8
%cC=bitcast i8*%cB to i8**
store i8*%cA,i8**%cC,align 8
%cD=getelementptr inbounds i8,i8*%cu,i64 16
%cE=bitcast i8*%cD to i32*
store i32 2,i32*%cE,align 4
ret i8*%cu
cF:
%cG=getelementptr inbounds i8,i8*%p,i64 8
%cH=bitcast i8*%cG to i8**
%cI=load i8*,i8**%cH,align 8
%cJ=bitcast i8*%cI to i8**
%cK=load i8*,i8**%cJ,align 8
%cL=getelementptr inbounds i8,i8*%cI,i64 8
%cM=bitcast i8*%cL to i8**
%cN=load i8*,i8**%cM,align 8
store i8*%cN,i8**%d,align 8
%cO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cP=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%cO,i8*inreg%cK)
store i8*%cP,i8**%c,align 8
%cQ=call i8*@sml_alloc(i32 inreg 20)#0
%cR=getelementptr inbounds i8,i8*%cQ,i64 -4
%cS=bitcast i8*%cR to i32*
store i32 1342177296,i32*%cS,align 4
store i8*%cQ,i8**%e,align 8
%cT=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cU=bitcast i8*%cQ to i8**
store i8*%cT,i8**%cU,align 8
%cV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cW=getelementptr inbounds i8,i8*%cQ,i64 8
%cX=bitcast i8*%cW to i8**
store i8*%cV,i8**%cX,align 8
%cY=getelementptr inbounds i8,i8*%cQ,i64 16
%cZ=bitcast i8*%cY to i32*
store i32 3,i32*%cZ,align 4
%c0=call i8*@sml_alloc(i32 inreg 20)#0
%c1=getelementptr inbounds i8,i8*%c0,i64 -4
%c2=bitcast i8*%c1 to i32*
store i32 1342177296,i32*%c2,align 4
%c3=bitcast i8*%c0 to i64*
store i64 0,i64*%c3,align 4
%c4=load i8*,i8**%e,align 8
%c5=getelementptr inbounds i8,i8*%c0,i64 8
%c6=bitcast i8*%c5 to i8**
store i8*%c4,i8**%c6,align 8
%c7=getelementptr inbounds i8,i8*%c0,i64 16
%c8=bitcast i8*%c7 to i32*
store i32 2,i32*%c8,align 4
ret i8*%c0
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination12compileFFItyE_1449(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination12compileFFItyE_1457 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination12compileFFItyE_1457 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination14compileVarInfoE_1458(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
store i8*null,i8**%d,align 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%m,i64 4
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=getelementptr inbounds i8,i8*%m,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%k,i8*inreg%x)
store i8*%y,i8**%d,align 8
%z=call i8*@sml_alloc(i32 inreg 28)#0
%A=bitcast i8*%z to i32*
%B=getelementptr inbounds i8,i8*%z,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
store i32%o,i32*%A,align 4
%D=getelementptr inbounds i8,i8*%z,i64 4
%E=bitcast i8*%D to i32*
store i32%r,i32*%E,align 4
%F=load i8*,i8**%c,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%z,i64 16
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%z,i64 24
%M=bitcast i8*%L to i32*
store i32 6,i32*%M,align 4
ret i8*%z
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination14compileVarInfoE_1460(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLLN17PolyTyElimination14compileVarInfoE_1458(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination14compileVarInfoE_1461(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination14compileVarInfoE_1460 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination14compileVarInfoE_1460 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination14compileExnInfoE_1463(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
store i8*null,i8**%d,align 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%m,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=getelementptr inbounds i8,i8*%m,i64 16
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%k,i8*inreg%u)
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 28)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32 0,i32*%B,align 1
store i32%o,i32*%x,align 4
%C=load i8*,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%w,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=load i8*,i8**%d,align 8
%G=getelementptr inbounds i8,i8*%w,i64 16
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%w,i64 24
%J=bitcast i8*%I to i32*
store i32 6,i32*%J,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination13compileExnConE_1474(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%d,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
store i8*null,i8**%d,align 8
%n=bitcast i8*%l to i32*
%o=load i32,i32*%n,align 4
switch i32%o,label%p[
i32 0,label%bm
i32 1,label%H
]
p:
call void@sml_matchcomp_bug()
%q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%d,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@c2,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=load i8*,i8**%d,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
H:
%I=getelementptr inbounds i8,i8*%l,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%d,align 8
%L=call fastcc i8*@_SMLFN5ExnID3Map4findE(i32 inreg 1,i32 inreg 8)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%e,align 8
%R=load i8*,i8**%c,align 8
%S=getelementptr inbounds i8,i8*%R,i64 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
%V=getelementptr inbounds i8,i8*%U,i64 24
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%c,align 8
%Y=bitcast i8**%d to i32**
%Z=load i32*,i32**%Y,align 8
%aa=load i32,i32*%Z,align 4
%ab=call i8*@sml_alloc(i32 inreg 20)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177296,i32*%ad,align 4
%ae=getelementptr inbounds i8,i8*%ab,i64 12
%af=bitcast i8*%ae to i32*
store i32 0,i32*%af,align 1
%ag=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ah=bitcast i8*%ab to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ab,i64 8
%aj=bitcast i8*%ai to i32*
store i32%aa,i32*%aj,align 4
%ak=getelementptr inbounds i8,i8*%ab,i64 16
%al=bitcast i8*%ak to i32*
store i32 1,i32*%al,align 4
%am=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%an=call fastcc i8*%O(i8*inreg%am,i8*inreg%ab)
%ao=icmp eq i8*%an,null
br i1%ao,label%ap,label%aL
ap:
store i8*null,i8**%d,align 8
%aq=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%aq,i8**%c,align 8
%ar=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c1,i64 0,i32 2)to i8*))
store i8*%ar,i8**%d,align 8
%as=call i8*@sml_alloc(i32 inreg 28)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177304,i32*%au,align 4
store i8*%as,i8**%e,align 8
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%as,i64 8
%ay=bitcast i8*%ax to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%ay,align 8
%az=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%as,i64 16
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%as,i64 24
%aD=bitcast i8*%aC to i32*
store i32 7,i32*%aD,align 4
%aE=call i8*@sml_alloc(i32 inreg 60)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177336,i32*%aG,align 4
%aH=getelementptr inbounds i8,i8*%aE,i64 56
%aI=bitcast i8*%aH to i32*
store i32 1,i32*%aI,align 4
%aJ=load i8*,i8**%e,align 8
%aK=bitcast i8*%aE to i8**
store i8*%aJ,i8**%aK,align 8
call void@sml_raise(i8*inreg%aE)#1
unreachable
aL:
%aM=bitcast i8*%an to i8**
%aN=load i8*,i8**%aM,align 8
%aO=getelementptr inbounds i8,i8*%aN,i64 16
%aP=bitcast i8*%aO to i8**
%aQ=load i8*,i8**%aP,align 8
store i8*%aQ,i8**%c,align 8
%aR=load i8*,i8**%d,align 8
%aS=bitcast i8*%aR to i32*
%aT=load i32,i32*%aS,align 4
%aU=getelementptr inbounds i8,i8*%aR,i64 8
%aV=bitcast i8*%aU to i8**
%aW=load i8*,i8**%aV,align 8
store i8*%aW,i8**%d,align 8
%aX=call i8*@sml_alloc(i32 inreg 28)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177304,i32*%aZ,align 4
store i8*%aX,i8**%e,align 8
%a0=getelementptr inbounds i8,i8*%aX,i64 4
%a1=bitcast i8*%a0 to i32*
store i32 0,i32*%a1,align 1
%a2=bitcast i8*%aX to i32*
store i32%aT,i32*%a2,align 4
%a3=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a4=getelementptr inbounds i8,i8*%aX,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a7=getelementptr inbounds i8,i8*%aX,i64 16
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%aX,i64 24
%ba=bitcast i8*%a9 to i32*
store i32 6,i32*%ba,align 4
%bb=call i8*@sml_alloc(i32 inreg 20)#0
%bc=bitcast i8*%bb to i32*
%bd=getelementptr inbounds i8,i8*%bb,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177296,i32*%be,align 4
%bf=getelementptr inbounds i8,i8*%bb,i64 4
%bg=bitcast i8*%bf to i32*
store i32 0,i32*%bg,align 1
store i32 1,i32*%bc,align 4
%bh=load i8*,i8**%e,align 8
%bi=getelementptr inbounds i8,i8*%bb,i64 8
%bj=bitcast i8*%bi to i8**
store i8*%bh,i8**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bb,i64 16
%bl=bitcast i8*%bk to i32*
store i32 2,i32*%bl,align 4
ret i8*%bb
bm:
%bn=getelementptr inbounds i8,i8*%l,i64 8
%bo=bitcast i8*%bn to i8**
%bp=load i8*,i8**%bo,align 8
store i8*%bp,i8**%d,align 8
%bq=call fastcc i8*@_SMLFN13LongsymbolEnv4findE(i32 inreg 1,i32 inreg 8)
%br=getelementptr inbounds i8,i8*%bq,i64 16
%bs=bitcast i8*%br to i8*(i8*,i8*)**
%bt=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bs,align 8
%bu=bitcast i8*%bq to i8**
%bv=load i8*,i8**%bu,align 8
store i8*%bv,i8**%f,align 8
%bw=load i8*,i8**%c,align 8
%bx=getelementptr inbounds i8,i8*%bw,i64 8
%by=bitcast i8*%bx to i8**
%bz=load i8*,i8**%by,align 8
%bA=getelementptr inbounds i8,i8*%bz,i64 8
%bB=bitcast i8*%bA to i8**
%bC=load i8*,i8**%bB,align 8
store i8*%bC,i8**%c,align 8
%bD=bitcast i8**%d to i8***
%bE=load i8**,i8***%bD,align 8
%bF=load i8*,i8**%bE,align 8
store i8*%bF,i8**%e,align 8
%bG=call i8*@sml_alloc(i32 inreg 20)#0
%bH=getelementptr inbounds i8,i8*%bG,i64 -4
%bI=bitcast i8*%bH to i32*
store i32 1342177296,i32*%bI,align 4
%bJ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bK=bitcast i8*%bG to i8**
store i8*%bJ,i8**%bK,align 8
%bL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bM=getelementptr inbounds i8,i8*%bG,i64 8
%bN=bitcast i8*%bM to i8**
store i8*%bL,i8**%bN,align 8
%bO=getelementptr inbounds i8,i8*%bG,i64 16
%bP=bitcast i8*%bO to i32*
store i32 3,i32*%bP,align 4
%bQ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bR=call fastcc i8*%bt(i8*inreg%bQ,i8*inreg%bG)
%bS=icmp eq i8*%bR,null
br i1%bS,label%bT,label%cf
bT:
store i8*null,i8**%d,align 8
%bU=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%bU,i8**%c,align 8
%bV=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cZ,i64 0,i32 2)to i8*))
store i8*%bV,i8**%d,align 8
%bW=call i8*@sml_alloc(i32 inreg 28)#0
%bX=getelementptr inbounds i8,i8*%bW,i64 -4
%bY=bitcast i8*%bX to i32*
store i32 1342177304,i32*%bY,align 4
store i8*%bW,i8**%e,align 8
%bZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b0=bitcast i8*%bW to i8**
store i8*%bZ,i8**%b0,align 8
%b1=getelementptr inbounds i8,i8*%bW,i64 8
%b2=bitcast i8*%b1 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%b2,align 8
%b3=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b4=getelementptr inbounds i8,i8*%bW,i64 16
%b5=bitcast i8*%b4 to i8**
store i8*%b3,i8**%b5,align 8
%b6=getelementptr inbounds i8,i8*%bW,i64 24
%b7=bitcast i8*%b6 to i32*
store i32 7,i32*%b7,align 4
%b8=call i8*@sml_alloc(i32 inreg 60)#0
%b9=getelementptr inbounds i8,i8*%b8,i64 -4
%ca=bitcast i8*%b9 to i32*
store i32 1342177336,i32*%ca,align 4
%cb=getelementptr inbounds i8,i8*%b8,i64 56
%cc=bitcast i8*%cb to i32*
store i32 1,i32*%cc,align 4
%cd=load i8*,i8**%e,align 8
%ce=bitcast i8*%b8 to i8**
store i8*%cd,i8**%ce,align 8
call void@sml_raise(i8*inreg%b8)#1
unreachable
cf:
%cg=bitcast i8*%bR to i8**
%ch=load i8*,i8**%cg,align 8
%ci=getelementptr inbounds i8,i8*%ch,i64 8
%cj=bitcast i8*%ci to i8**
%ck=load i8*,i8**%cj,align 8
store i8*%ck,i8**%c,align 8
%cl=load i8**,i8***%bD,align 8
%cm=load i8*,i8**%cl,align 8
store i8*%cm,i8**%d,align 8
%cn=call i8*@sml_alloc(i32 inreg 20)#0
%co=getelementptr inbounds i8,i8*%cn,i64 -4
%cp=bitcast i8*%co to i32*
store i32 1342177296,i32*%cp,align 4
store i8*%cn,i8**%e,align 8
%cq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cr=bitcast i8*%cn to i8**
store i8*%cq,i8**%cr,align 8
%cs=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ct=getelementptr inbounds i8,i8*%cn,i64 8
%cu=bitcast i8*%ct to i8**
store i8*%cs,i8**%cu,align 8
%cv=getelementptr inbounds i8,i8*%cn,i64 16
%cw=bitcast i8*%cv to i32*
store i32 3,i32*%cw,align 4
%cx=call i8*@sml_alloc(i32 inreg 20)#0
%cy=getelementptr inbounds i8,i8*%cx,i64 -4
%cz=bitcast i8*%cy to i32*
store i32 1342177296,i32*%cz,align 4
%cA=bitcast i8*%cx to i64*
store i64 0,i64*%cA,align 4
%cB=load i8*,i8**%e,align 8
%cC=getelementptr inbounds i8,i8*%cx,i64 8
%cD=bitcast i8*%cC to i8**
store i8*%cB,i8**%cD,align 8
%cE=getelementptr inbounds i8,i8*%cx,i64 16
%cF=bitcast i8*%cE to i32*
store i32 2,i32*%cF,align 4
ret i8*%cx
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10compilePatE_1483(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLLN17PolyTyElimination10compilePatE_1476(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10compilePatE_1476(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%d,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%b,%p]
store i8*null,i8**%d,align 8
%q=bitcast i8*%o to i32*
%r=load i32,i32*%q,align 4
switch i32%r,label%s[
i32 0,label%dZ
i32 1,label%cN
i32 2,label%cL
i32 3,label%b2
i32 4,label%bx
i32 5,label%an
i32 6,label%ag
i32 7,label%K
]
s:
call void@sml_matchcomp_bug()
%t=load i8*,i8**@_SMLZ5Match,align 8
store i8*%t,i8**%c,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%d,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@c3,i64 0,i32 2,i64 0),i8**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 60)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177336,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%D,i64 56
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=load i8*,i8**%d,align 8
%J=bitcast i8*%D to i8**
store i8*%I,i8**%J,align 8
call void@sml_raise(i8*inreg%D)#1
unreachable
K:
%L=getelementptr inbounds i8,i8*%o,i64 8
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
%Q=getelementptr inbounds i8,i8*%N,i64 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%d,align 8
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%T,i8*inreg%P)
store i8*%U,i8**%c,align 8
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
%Y=load i8*,i8**%c,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=load i8*,i8**%d,align 8
%ab=getelementptr inbounds i8,i8*%V,i64 8
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%V,i64 16
%ae=bitcast i8*%ad to i32*
store i32 3,i32*%ae,align 4
%af=tail call fastcc i8*@_SMLFN12TypedCalcCon9TPPATWILDE(i8*inreg%V)
ret i8*%af
ag:
%ah=load i8*,i8**%c,align 8
%ai=getelementptr inbounds i8,i8*%o,i64 8
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
store i8*null,i8**%c,align 8
%al=call fastcc i8*@_SMLLLN17PolyTyElimination14compileVarInfoE_1458(i8*inreg%ah,i8*inreg%ak)
%am=tail call fastcc i8*@_SMLFN12TypedCalcCon8TPPATVARE(i8*inreg%al)
ret i8*%am
an:
%ao=getelementptr inbounds i8,i8*%o,i64 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%d,align 8
%at=getelementptr inbounds i8,i8*%aq,i64 8
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
store i8*%av,i8**%e,align 8
%aw=getelementptr inbounds i8,i8*%aq,i64 16
%ax=bitcast i8*%aw to i8**
%ay=load i8*,i8**%ax,align 8
store i8*%ay,i8**%f,align 8
%az=load i8*,i8**%c,align 8
%aA=getelementptr inbounds i8,i8*%az,i64 8
%aB=bitcast i8*%aA to i8***
%aC=load i8**,i8***%aB,align 8
%aD=load i8*,i8**%aC,align 8
store i8*%aD,i8**%g,align 8
%aE=call i8*@sml_alloc(i32 inreg 12)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177288,i32*%aG,align 4
%aH=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aI=bitcast i8*%aE to i8**
store i8*%aH,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aE,i64 8
%aK=bitcast i8*%aJ to i32*
store i32 1,i32*%aK,align 4
%aL=call fastcc i8*@_SMLFN12TypedCalcCon11TPPATRECORDE(i8*inreg%aE)
%aM=getelementptr inbounds i8,i8*%aL,i64 16
%aN=bitcast i8*%aM to i8*(i8*,i8*)**
%aO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aN,align 8
%aP=bitcast i8*%aL to i8**
%aQ=load i8*,i8**%aP,align 8
store i8*%aQ,i8**%h,align 8
%aR=call fastcc i8*@_SMLFN11RecordLabel3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aS=getelementptr inbounds i8,i8*%aR,i64 16
%aT=bitcast i8*%aS to i8*(i8*,i8*)**
%aU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aT,align 8
%aV=bitcast i8*%aR to i8**
%aW=load i8*,i8**%aV,align 8
store i8*%aW,i8**%g,align 8
%aX=load i8*,i8**%c,align 8
%aY=call fastcc i8*@_SMLLLN17PolyTyElimination10compilePatE_1477(i8*inreg%aX)
%aZ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a0=call fastcc i8*%aU(i8*inreg%aZ,i8*inreg%aY)
%a1=getelementptr inbounds i8,i8*%a0,i64 16
%a2=bitcast i8*%a1 to i8*(i8*,i8*)**
%a3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a2,align 8
%a4=bitcast i8*%a0 to i8**
%a5=load i8*,i8**%a4,align 8
%a6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a7=call fastcc i8*%a3(i8*inreg%a5,i8*inreg%a6)
store i8*%a7,i8**%d,align 8
%a8=load i8*,i8**%c,align 8
%a9=load i8*,i8**%f,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%f,align 8
%ba=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%a8,i8*inreg%a9)
store i8*%ba,i8**%c,align 8
%bb=call i8*@sml_alloc(i32 inreg 12)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177288,i32*%bd,align 4
store i8*%bb,i8**%f,align 8
%be=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bf=bitcast i8*%bb to i8**
store i8*%be,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%bb,i64 8
%bh=bitcast i8*%bg to i32*
store i32 1,i32*%bh,align 4
%bi=call i8*@sml_alloc(i32 inreg 28)#0
%bj=getelementptr inbounds i8,i8*%bi,i64 -4
%bk=bitcast i8*%bj to i32*
store i32 1342177304,i32*%bk,align 4
%bl=load i8*,i8**%d,align 8
%bm=bitcast i8*%bi to i8**
store i8*%bl,i8**%bm,align 8
%bn=load i8*,i8**%e,align 8
%bo=getelementptr inbounds i8,i8*%bi,i64 8
%bp=bitcast i8*%bo to i8**
store i8*%bn,i8**%bp,align 8
%bq=load i8*,i8**%f,align 8
%br=getelementptr inbounds i8,i8*%bi,i64 16
%bs=bitcast i8*%br to i8**
store i8*%bq,i8**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bi,i64 24
%bu=bitcast i8*%bt to i32*
store i32 7,i32*%bu,align 4
%bv=load i8*,i8**%h,align 8
%bw=tail call fastcc i8*%aO(i8*inreg%bv,i8*inreg%bi)
ret i8*%bw
bx:
%by=getelementptr inbounds i8,i8*%o,i64 8
%bz=bitcast i8*%by to i8**
%bA=load i8*,i8**%bz,align 8
%bB=bitcast i8*%bA to i8**
%bC=load i8*,i8**%bB,align 8
%bD=getelementptr inbounds i8,i8*%bA,i64 8
%bE=bitcast i8*%bD to i8**
%bF=load i8*,i8**%bE,align 8
store i8*%bF,i8**%d,align 8
%bG=getelementptr inbounds i8,i8*%bA,i64 16
%bH=bitcast i8*%bG to i8**
%bI=load i8*,i8**%bH,align 8
store i8*%bI,i8**%e,align 8
%bJ=load i8*,i8**%c,align 8
%bK=call fastcc i8*@_SMLLLN17PolyTyElimination10compilePatE_1476(i8*inreg%bJ,i8*inreg%bC)
store i8*%bK,i8**%f,align 8
%bL=load i8*,i8**%c,align 8
%bM=load i8*,i8**%e,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%e,align 8
%bN=call fastcc i8*@_SMLLLN17PolyTyElimination10compilePatE_1476(i8*inreg%bL,i8*inreg%bM)
store i8*%bN,i8**%c,align 8
%bO=call i8*@sml_alloc(i32 inreg 28)#0
%bP=getelementptr inbounds i8,i8*%bO,i64 -4
%bQ=bitcast i8*%bP to i32*
store i32 1342177304,i32*%bQ,align 4
%bR=load i8*,i8**%f,align 8
%bS=bitcast i8*%bO to i8**
store i8*%bR,i8**%bS,align 8
%bT=load i8*,i8**%d,align 8
%bU=getelementptr inbounds i8,i8*%bO,i64 8
%bV=bitcast i8*%bU to i8**
store i8*%bT,i8**%bV,align 8
%bW=load i8*,i8**%c,align 8
%bX=getelementptr inbounds i8,i8*%bO,i64 16
%bY=bitcast i8*%bX to i8**
store i8*%bW,i8**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bO,i64 24
%b0=bitcast i8*%bZ to i32*
store i32 7,i32*%b0,align 4
%b1=tail call fastcc i8*@_SMLFN12TypedCalcCon12TPPATLAYEREDE(i8*inreg%bO)
ret i8*%b1
b2:
%b3=getelementptr inbounds i8,i8*%o,i64 8
%b4=bitcast i8*%b3 to i8**
%b5=load i8*,i8**%b4,align 8
%b6=bitcast i8*%b5 to i8**
%b7=load i8*,i8**%b6,align 8
store i8*%b7,i8**%d,align 8
%b8=getelementptr inbounds i8,i8*%b5,i64 8
%b9=bitcast i8*%b8 to i8**
%ca=load i8*,i8**%b9,align 8
%cb=getelementptr inbounds i8,i8*%b5,i64 16
%cc=bitcast i8*%cb to i8**
%cd=load i8*,i8**%cc,align 8
store i8*%cd,i8**%e,align 8
%ce=load i8*,i8**%c,align 8
%cf=call fastcc i8*@_SMLLLN17PolyTyElimination13compileExnConE_1474(i8*inreg%ce,i8*inreg%ca)
store i8*%cf,i8**%f,align 8
%cg=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ch=getelementptr inbounds i8,i8*%cg,i64 16
%ci=bitcast i8*%ch to i8*(i8*,i8*)**
%cj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ci,align 8
%ck=bitcast i8*%cg to i8**
%cl=load i8*,i8**%ck,align 8
store i8*%cl,i8**%g,align 8
%cm=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cn=call fastcc i8*@_SMLLLN17PolyTyElimination10compilePatE_1477(i8*inreg%cm)
%co=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cp=call fastcc i8*%cj(i8*inreg%co,i8*inreg%cn)
%cq=getelementptr inbounds i8,i8*%cp,i64 16
%cr=bitcast i8*%cq to i8*(i8*,i8*)**
%cs=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cr,align 8
%ct=bitcast i8*%cp to i8**
%cu=load i8*,i8**%ct,align 8
%cv=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cw=call fastcc i8*%cs(i8*inreg%cu,i8*inreg%cv)
store i8*%cw,i8**%c,align 8
%cx=call i8*@sml_alloc(i32 inreg 28)#0
%cy=getelementptr inbounds i8,i8*%cx,i64 -4
%cz=bitcast i8*%cy to i32*
store i32 1342177304,i32*%cz,align 4
%cA=load i8*,i8**%c,align 8
%cB=bitcast i8*%cx to i8**
store i8*%cA,i8**%cB,align 8
%cC=load i8*,i8**%f,align 8
%cD=getelementptr inbounds i8,i8*%cx,i64 8
%cE=bitcast i8*%cD to i8**
store i8*%cC,i8**%cE,align 8
%cF=load i8*,i8**%e,align 8
%cG=getelementptr inbounds i8,i8*%cx,i64 16
%cH=bitcast i8*%cG to i8**
store i8*%cF,i8**%cH,align 8
%cI=getelementptr inbounds i8,i8*%cx,i64 24
%cJ=bitcast i8*%cI to i32*
store i32 7,i32*%cJ,align 4
%cK=tail call fastcc i8*@_SMLFN12TypedCalcCon17TPPATEXNCONSTRUCTE(i8*inreg%cx)
ret i8*%cK
cL:
%cM=load i8*,i8**@_SMLZN12TypedCalcCon10TPPATERRORE,align 8
ret i8*%cM
cN:
%cO=getelementptr inbounds i8,i8*%o,i64 8
%cP=bitcast i8*%cO to i8**
%cQ=load i8*,i8**%cP,align 8
%cR=bitcast i8*%cQ to i8**
%cS=load i8*,i8**%cR,align 8
store i8*%cS,i8**%d,align 8
%cT=getelementptr inbounds i8,i8*%cQ,i64 8
%cU=bitcast i8*%cT to i8**
%cV=load i8*,i8**%cU,align 8
store i8*%cV,i8**%e,align 8
%cW=getelementptr inbounds i8,i8*%cQ,i64 16
%cX=bitcast i8*%cW to i8**
%cY=load i8*,i8**%cX,align 8
store i8*%cY,i8**%f,align 8
%cZ=getelementptr inbounds i8,i8*%cQ,i64 24
%c0=bitcast i8*%cZ to i8**
%c1=load i8*,i8**%c0,align 8
store i8*%c1,i8**%g,align 8
%c2=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%c3=getelementptr inbounds i8,i8*%c2,i64 16
%c4=bitcast i8*%c3 to i8*(i8*,i8*)**
%c5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c4,align 8
%c6=bitcast i8*%c2 to i8**
%c7=load i8*,i8**%c6,align 8
store i8*%c7,i8**%i,align 8
%c8=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%c9=getelementptr inbounds i8,i8*%c8,i64 16
%da=bitcast i8*%c9 to i8*(i8*,i8*)**
%db=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%da,align 8
%dc=bitcast i8*%c8 to i8**
%dd=load i8*,i8**%dc,align 8
store i8*%dd,i8**%h,align 8
%de=load i8*,i8**%c,align 8
%df=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%de)
%dg=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dh=call fastcc i8*%db(i8*inreg%dg,i8*inreg%df)
%di=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%dj=call fastcc i8*%c5(i8*inreg%di,i8*inreg%dh)
%dk=getelementptr inbounds i8,i8*%dj,i64 16
%dl=bitcast i8*%dk to i8*(i8*,i8*)**
%dm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dl,align 8
%dn=bitcast i8*%dj to i8**
%do=load i8*,i8**%dn,align 8
%dp=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dq=call fastcc i8*%dm(i8*inreg%do,i8*inreg%dp)
store i8*%dq,i8**%f,align 8
%dr=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ds=getelementptr inbounds i8,i8*%dr,i64 16
%dt=bitcast i8*%ds to i8*(i8*,i8*)**
%du=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dt,align 8
%dv=bitcast i8*%dr to i8**
%dw=load i8*,i8**%dv,align 8
store i8*%dw,i8**%h,align 8
%dx=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dy=call fastcc i8*@_SMLLLN17PolyTyElimination10compilePatE_1477(i8*inreg%dx)
%dz=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dA=call fastcc i8*%du(i8*inreg%dz,i8*inreg%dy)
%dB=getelementptr inbounds i8,i8*%dA,i64 16
%dC=bitcast i8*%dB to i8*(i8*,i8*)**
%dD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dC,align 8
%dE=bitcast i8*%dA to i8**
%dF=load i8*,i8**%dE,align 8
%dG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dH=call fastcc i8*%dD(i8*inreg%dF,i8*inreg%dG)
store i8*%dH,i8**%c,align 8
%dI=call i8*@sml_alloc(i32 inreg 36)#0
%dJ=getelementptr inbounds i8,i8*%dI,i64 -4
%dK=bitcast i8*%dJ to i32*
store i32 1342177312,i32*%dK,align 4
%dL=load i8*,i8**%c,align 8
%dM=bitcast i8*%dI to i8**
store i8*%dL,i8**%dM,align 8
%dN=load i8*,i8**%e,align 8
%dO=getelementptr inbounds i8,i8*%dI,i64 8
%dP=bitcast i8*%dO to i8**
store i8*%dN,i8**%dP,align 8
%dQ=load i8*,i8**%f,align 8
%dR=getelementptr inbounds i8,i8*%dI,i64 16
%dS=bitcast i8*%dR to i8**
store i8*%dQ,i8**%dS,align 8
%dT=load i8*,i8**%g,align 8
%dU=getelementptr inbounds i8,i8*%dI,i64 24
%dV=bitcast i8*%dU to i8**
store i8*%dT,i8**%dV,align 8
%dW=getelementptr inbounds i8,i8*%dI,i64 32
%dX=bitcast i8*%dW to i32*
store i32 15,i32*%dX,align 4
%dY=tail call fastcc i8*@_SMLFN12TypedCalcCon18TPPATDATACONSTRUCTE(i8*inreg%dI)
ret i8*%dY
dZ:
%d0=getelementptr inbounds i8,i8*%o,i64 8
%d1=bitcast i8*%d0 to i8**
%d2=load i8*,i8**%d1,align 8
%d3=bitcast i8*%d2 to i8**
%d4=load i8*,i8**%d3,align 8
store i8*%d4,i8**%d,align 8
%d5=getelementptr inbounds i8,i8*%d2,i64 8
%d6=bitcast i8*%d5 to i8**
%d7=load i8*,i8**%d6,align 8
%d8=getelementptr inbounds i8,i8*%d2,i64 16
%d9=bitcast i8*%d8 to i8**
%ea=load i8*,i8**%d9,align 8
store i8*%ea,i8**%e,align 8
%eb=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ec=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%eb,i8*inreg%d7)
store i8*%ec,i8**%c,align 8
%ed=call i8*@sml_alloc(i32 inreg 28)#0
%ee=getelementptr inbounds i8,i8*%ed,i64 -4
%ef=bitcast i8*%ee to i32*
store i32 1342177304,i32*%ef,align 4
%eg=load i8*,i8**%d,align 8
%eh=bitcast i8*%ed to i8**
store i8*%eg,i8**%eh,align 8
%ei=load i8*,i8**%c,align 8
%ej=getelementptr inbounds i8,i8*%ed,i64 8
%ek=bitcast i8*%ej to i8**
store i8*%ei,i8**%ek,align 8
%el=load i8*,i8**%e,align 8
%em=getelementptr inbounds i8,i8*%ed,i64 16
%en=bitcast i8*%em to i8**
store i8*%el,i8**%en,align 8
%eo=getelementptr inbounds i8,i8*%ed,i64 24
%ep=bitcast i8*%eo to i32*
store i32 7,i32*%ep,align 4
%eq=tail call fastcc i8*@_SMLFN12TypedCalcCon13TPPATCONSTANTE(i8*inreg%ed)
ret i8*%eq
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10compilePatE_1477(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10compilePatE_1483 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10compilePatE_1483 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10compileVarE_1487(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%b to i32*
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i32**
%l=load i32*,i32**%k,align 8
br label%m
m:
%n=phi i32*[%l,%j],[%i,%h]
%o=load i32,i32*%n,align 4
%p=call fastcc i8*@_SMLFN5VarID3Map4findE(i32 inreg 1,i32 inreg 8)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=load i8*,i8**%c,align 8
%w=getelementptr inbounds i8,i8*%v,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=getelementptr inbounds i8,i8*%y,i64 32
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%c,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 12
%G=bitcast i8*%F to i32*
store i32 0,i32*%G,align 1
%H=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%I=bitcast i8*%C to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i32*
store i32%o,i32*%K,align 4
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 1,i32*%M,align 4
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=call fastcc i8*%s(i8*inreg%N,i8*inreg%C)
%P=icmp eq i8*%O,null
br i1%P,label%Q,label%aG
Q:
store i8*null,i8**%d,align 8
%R=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%R,i8**%c,align 8
%S=call fastcc i8*@_SMLFN5VarID8toStringE(i32 inreg%o)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
%W=bitcast i8*%T to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@c4,i64 0,i32 2,i64 0),i8**%W,align 8
%X=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 16
%ab=bitcast i8*%aa to i32*
store i32 3,i32*%ab,align 4
%ac=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%T)
store i8*%ac,i8**%d,align 8
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
%ag=bitcast i8*%ad to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@dj,i64 0,i32 2,i64 0),i8**%ag,align 8
%ah=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%ad)
store i8*%am,i8**%d,align 8
%an=call i8*@sml_alloc(i32 inreg 28)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177304,i32*%ap,align 4
store i8*%an,i8**%e,align 8
%aq=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%an,i64 8
%at=bitcast i8*%as to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%at,align 8
%au=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i8**
store i8*%au,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%an,i64 24
%ay=bitcast i8*%ax to i32*
store i32 7,i32*%ay,align 4
%az=call i8*@sml_alloc(i32 inreg 60)#0
%aA=getelementptr inbounds i8,i8*%az,i64 -4
%aB=bitcast i8*%aA to i32*
store i32 1342177336,i32*%aB,align 4
%aC=getelementptr inbounds i8,i8*%az,i64 56
%aD=bitcast i8*%aC to i32*
store i32 1,i32*%aD,align 4
%aE=load i8*,i8**%e,align 8
%aF=bitcast i8*%az to i8**
store i8*%aE,i8**%aF,align 8
call void@sml_raise(i8*inreg%az)#1
unreachable
aG:
%aH=bitcast i8*%O to i8**
%aI=load i8*,i8**%aH,align 8
%aJ=getelementptr inbounds i8,i8*%aI,i64 16
%aK=bitcast i8*%aJ to i8**
%aL=load i8*,i8**%aK,align 8
store i8*%aL,i8**%c,align 8
%aM=load i8*,i8**%d,align 8
%aN=bitcast i8*%aM to i32*
%aO=load i32,i32*%aN,align 4
%aP=getelementptr inbounds i8,i8*%aM,i64 4
%aQ=bitcast i8*%aP to i32*
%aR=load i32,i32*%aQ,align 4
%aS=getelementptr inbounds i8,i8*%aM,i64 8
%aT=bitcast i8*%aS to i8**
%aU=load i8*,i8**%aT,align 8
store i8*%aU,i8**%d,align 8
%aV=call i8*@sml_alloc(i32 inreg 28)#0
%aW=bitcast i8*%aV to i32*
%aX=getelementptr inbounds i8,i8*%aV,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177304,i32*%aY,align 4
store i32%aO,i32*%aW,align 4
%aZ=getelementptr inbounds i8,i8*%aV,i64 4
%a0=bitcast i8*%aZ to i32*
store i32%aR,i32*%a0,align 4
%a1=load i8*,i8**%d,align 8
%a2=getelementptr inbounds i8,i8*%aV,i64 8
%a3=bitcast i8*%a2 to i8**
store i8*%a1,i8**%a3,align 8
%a4=load i8*,i8**%c,align 8
%a5=getelementptr inbounds i8,i8*%aV,i64 16
%a6=bitcast i8*%a5 to i8**
store i8*%a4,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%aV,i64 24
%a8=bitcast i8*%a7 to i32*
store i32 6,i32*%a8,align 4
ret i8*%aV
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1555(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%l
i:
%j=bitcast i8*%a to i8**
%k=bitcast i8**%f to i8***
br label%p
l:
call void@sml_check(i32 inreg%g)
%m=load i8*,i8**%c,align 8
%n=bitcast i8**%f to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8***[%k,%i],[%n,%l]
%r=phi i8**[%j,%i],[%o,%l]
%s=phi i8*[%b,%i],[%m,%l]
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%s,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%d,align 8
%y=load i8*,i8**%r,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%y,i8*inreg%B)
store i8*%C,i8**%e,align 8
%D=load i8**,i8***%q,align 8
store i8*null,i8**%f,align 8
%E=load i8*,i8**%D,align 8
%F=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%G=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%E,i8*inreg%F)
store i8*%G,i8**%c,align 8
%H=call i8*@sml_alloc(i32 inreg 28)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177304,i32*%J,align 4
%K=load i8*,i8**%c,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=load i8*,i8**%e,align 8
%Q=getelementptr inbounds i8,i8*%H,i64 16
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%H,i64 24
%T=bitcast i8*%S to i32*
store i32 7,i32*%T,align 4
ret i8*%H
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1556(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
r:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%a,i8**%i,align 8
store i8*%b,i8**%c,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%p,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%c,align 8
br label%p
p:
%q=phi i8*[%o,%n],[%b,%r]
%s=bitcast i8*%q to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=getelementptr inbounds i8,i8*%q,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%e,align 8
%A=getelementptr inbounds i8,i8*%q,i64 24
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%f,align 8
%D=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%g,align 8
%J=bitcast i8**%i to i8***
%K=load i8**,i8***%J,align 8
%L=load i8*,i8**%K,align 8
%M=call fastcc i8*@_SMLLLN17PolyTyElimination14compileVarInfoE_1461(i8*inreg%L)
%N=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%O=call fastcc i8*%G(i8*inreg%N,i8*inreg%M)
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8*(i8*,i8*)**
%R=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=call fastcc i8*%R(i8*inreg%T,i8*inreg%U)
store i8*%V,i8**%c,align 8
%W=icmp eq i8*%V,null
br i1%W,label%aj,label%X
X:
%Y=bitcast i8*%V to i8**
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%g,align 8
%aa=call i8*@sml_alloc(i32 inreg 20)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177296,i32*%ac,align 4
%ad=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%aa,i64 8
%ag=bitcast i8*%af to i8**
store i8*null,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%aa,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
br label%aj
aj:
%ak=phi i8*[%aa,%X],[null,%p]
%al=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%ak)
store i8*%al,i8**%g,align 8
%am=load i8**,i8***%J,align 8
%an=load i8*,i8**%am,align 8
%ao=getelementptr inbounds i8,i8*%an,i64 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%h,align 8
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
%au=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ax=getelementptr inbounds i8,i8*%ar,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%ar,i64 16
%aA=bitcast i8*%az to i32*
store i32 3,i32*%aA,align 4
%aB=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%ar)
store i8*%aB,i8**%g,align 8
%aC=load i8**,i8***%J,align 8
%aD=load i8*,i8**%aC,align 8
%aE=bitcast i8*%aD to i32*
%aF=load i32,i32*%aE,align 4
%aG=getelementptr inbounds i8,i8*%aD,i64 16
%aH=bitcast i8*%aG to i8**
%aI=load i8*,i8**%aH,align 8
store i8*%aI,i8**%j,align 8
%aJ=load i8*,i8**%aC,align 8
%aK=getelementptr inbounds i8,i8*%aJ,i64 24
%aL=bitcast i8*%aK to i8**
%aM=load i8*,i8**%aL,align 8
store i8*%aM,i8**%k,align 8
%aN=call i8*@sml_alloc(i32 inreg 36)#0
%aO=getelementptr inbounds i8,i8*%aN,i64 -4
%aP=bitcast i8*%aO to i32*
store i32 1342177312,i32*%aP,align 4
store i8*%aN,i8**%h,align 8
%aQ=getelementptr inbounds i8,i8*%aN,i64 4
%aR=bitcast i8*%aQ to i32*
store i32 0,i32*%aR,align 1
%aS=bitcast i8*%aN to i32*
store i32%aF,i32*%aS,align 4
%aT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aU=getelementptr inbounds i8,i8*%aN,i64 8
%aV=bitcast i8*%aU to i8**
store i8*%aT,i8**%aV,align 8
%aW=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aX=getelementptr inbounds i8,i8*%aN,i64 16
%aY=bitcast i8*%aX to i8**
store i8*%aW,i8**%aY,align 8
%aZ=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%a0=getelementptr inbounds i8,i8*%aN,i64 24
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aN,i64 32
%a3=bitcast i8*%a2 to i32*
store i32 14,i32*%a3,align 4
%a4=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%a5=getelementptr inbounds i8,i8*%a4,i64 16
%a6=bitcast i8*%a5 to i8*(i8*,i8*)**
%a7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a6,align 8
%a8=bitcast i8*%a4 to i8**
%a9=load i8*,i8**%a8,align 8
store i8*%a9,i8**%j,align 8
%ba=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bb=getelementptr inbounds i8,i8*%ba,i64 16
%bc=bitcast i8*%bb to i8*(i8*,i8*)**
%bd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bc,align 8
%be=bitcast i8*%ba to i8**
%bf=load i8*,i8**%be,align 8
store i8*%bf,i8**%g,align 8
%bg=load i8**,i8***%J,align 8
store i8*null,i8**%i,align 8
%bh=load i8*,i8**%bg,align 8
%bi=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%bh)
%bj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bk=call fastcc i8*%bd(i8*inreg%bj,i8*inreg%bi)
%bl=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bm=call fastcc i8*%a7(i8*inreg%bl,i8*inreg%bk)
%bn=getelementptr inbounds i8,i8*%bm,i64 16
%bo=bitcast i8*%bn to i8*(i8*,i8*)**
%bp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bo,align 8
%bq=bitcast i8*%bm to i8**
%br=load i8*,i8**%bq,align 8
%bs=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bt=call fastcc i8*%bp(i8*inreg%br,i8*inreg%bs)
store i8*%bt,i8**%f,align 8
%bu=load i8*,i8**%d,align 8
%bv=load i8*,i8**%h,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%h,align 8
%bw=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%bv,i8*inreg%bu)
store i8*%bw,i8**%d,align 8
%bx=call i8*@sml_alloc(i32 inreg 36)#0
%by=getelementptr inbounds i8,i8*%bx,i64 -4
%bz=bitcast i8*%by to i32*
store i32 1342177312,i32*%bz,align 4
%bA=load i8*,i8**%c,align 8
%bB=bitcast i8*%bx to i8**
store i8*%bA,i8**%bB,align 8
%bC=load i8*,i8**%d,align 8
%bD=getelementptr inbounds i8,i8*%bx,i64 8
%bE=bitcast i8*%bD to i8**
store i8*%bC,i8**%bE,align 8
%bF=load i8*,i8**%e,align 8
%bG=getelementptr inbounds i8,i8*%bx,i64 16
%bH=bitcast i8*%bG to i8**
store i8*%bF,i8**%bH,align 8
%bI=load i8*,i8**%f,align 8
%bJ=getelementptr inbounds i8,i8*%bx,i64 24
%bK=bitcast i8*%bJ to i8**
store i8*%bI,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bx,i64 32
%bM=bitcast i8*%bL to i32*
store i32 15,i32*%bM,align 4
ret i8*%bx
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1557(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%c,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%c,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%b,%q]
%r=bitcast i8*%p to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%p,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%e,align 8
%z=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%f,align 8
%F=bitcast i8**%h to i8***
%G=load i8**,i8***%F,align 8
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*@_SMLLLN17PolyTyElimination14compileVarInfoE_1461(i8*inreg%H)
%J=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%K=call fastcc i8*%C(i8*inreg%J,i8*inreg%I)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=call fastcc i8*%N(i8*inreg%P,i8*inreg%Q)
store i8*%R,i8**%c,align 8
%S=icmp eq i8*%R,null
br i1%S,label%af,label%T
T:
%U=bitcast i8*%R to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%f,align 8
%W=call i8*@sml_alloc(i32 inreg 20)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177296,i32*%Y,align 4
%Z=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%W,i64 8
%ac=bitcast i8*%ab to i8**
store i8*null,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%W,i64 16
%ae=bitcast i8*%ad to i32*
store i32 3,i32*%ae,align 4
br label%af
af:
%ag=phi i8*[%W,%T],[null,%o]
%ah=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%ag)
store i8*%ah,i8**%f,align 8
%ai=load i8**,i8***%F,align 8
%aj=load i8*,i8**%ai,align 8
%ak=getelementptr inbounds i8,i8*%aj,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%g,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
%aq=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%an)
store i8*%ax,i8**%f,align 8
%ay=load i8**,i8***%F,align 8
%az=load i8*,i8**%ay,align 8
%aA=bitcast i8*%az to i32*
%aB=load i32,i32*%aA,align 4
%aC=getelementptr inbounds i8,i8*%az,i64 16
%aD=bitcast i8*%aC to i8**
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%i,align 8
%aF=load i8*,i8**%ay,align 8
%aG=getelementptr inbounds i8,i8*%aF,i64 24
%aH=bitcast i8*%aG to i8**
%aI=load i8*,i8**%aH,align 8
store i8*%aI,i8**%j,align 8
%aJ=call i8*@sml_alloc(i32 inreg 36)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177312,i32*%aL,align 4
store i8*%aJ,i8**%g,align 8
%aM=getelementptr inbounds i8,i8*%aJ,i64 4
%aN=bitcast i8*%aM to i32*
store i32 0,i32*%aN,align 1
%aO=bitcast i8*%aJ to i32*
store i32%aB,i32*%aO,align 4
%aP=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aQ=getelementptr inbounds i8,i8*%aJ,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aT=getelementptr inbounds i8,i8*%aJ,i64 16
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aW=getelementptr inbounds i8,i8*%aJ,i64 24
%aX=bitcast i8*%aW to i8**
store i8*%aV,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aJ,i64 32
%aZ=bitcast i8*%aY to i32*
store i32 14,i32*%aZ,align 4
%a0=load i8**,i8***%F,align 8
store i8*null,i8**%h,align 8
%a1=load i8*,i8**%a0,align 8
%a2=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a3=call fastcc i8*@_SMLLLN17PolyTyElimination13compileExnConE_1474(i8*inreg%a1,i8*inreg%a2)
store i8*%a3,i8**%e,align 8
%a4=load i8*,i8**%d,align 8
%a5=load i8*,i8**%g,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%g,align 8
%a6=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%a5,i8*inreg%a4)
store i8*%a6,i8**%d,align 8
%a7=call i8*@sml_alloc(i32 inreg 28)#0
%a8=getelementptr inbounds i8,i8*%a7,i64 -4
%a9=bitcast i8*%a8 to i32*
store i32 1342177304,i32*%a9,align 4
%ba=load i8*,i8**%c,align 8
%bb=bitcast i8*%a7 to i8**
store i8*%ba,i8**%bb,align 8
%bc=load i8*,i8**%d,align 8
%bd=getelementptr inbounds i8,i8*%a7,i64 8
%be=bitcast i8*%bd to i8**
store i8*%bc,i8**%be,align 8
%bf=load i8*,i8**%e,align 8
%bg=getelementptr inbounds i8,i8*%a7,i64 16
%bh=bitcast i8*%bg to i8**
store i8*%bf,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%a7,i64 24
%bj=bitcast i8*%bi to i32*
store i32 7,i32*%bj,align 4
ret i8*%a7
}
define internal fastcc i8*@_SMLLL10oldInstMap_1578(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i32*
%m=load i32,i32*%l,align 4
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%j,i64 16
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=call fastcc i8*@_SMLFN14BoundTypeVarID3Map6insertE(i32 inreg 1,i32 inreg 8)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%d,align 8
%z=call i8*@sml_alloc(i32 inreg 28)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177304,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 12
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i32*
store i32%m,i32*%H,align 4
%I=load i8*,i8**%b,align 8
%J=getelementptr inbounds i8,i8*%z,i64 16
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%z,i64 24
%M=bitcast i8*%L to i32*
store i32 5,i32*%M,align 4
%N=load i8*,i8**%d,align 8
%O=tail call fastcc i8*%w(i8*inreg%N,i8*inreg%z)
ret i8*%O
}
define internal fastcc i8*@_SMLLL10newInstMap_1584(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%b to i32*
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i32**
%k=load i32*,i32**%j,align 8
br label%l
l:
%m=phi i32*[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i32,i32*%m,align 4
%o=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4findE(i32 inreg 1,i32 inreg 8)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=bitcast i8**%c to i8***
%v=load i8**,i8***%u,align 8
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%x,i64 12
%B=bitcast i8*%A to i32*
store i32 0,i32*%B,align 1
%C=load i8*,i8**%c,align 8
%D=bitcast i8*%x to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 8
%F=bitcast i8*%E to i32*
store i32%n,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%x,i64 16
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=load i8*,i8**%d,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%x)
ret i8*%J
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination12compileMatchE_1586(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%m,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%e,align 8
%z=bitcast i8**%f to i8***
%A=load i8**,i8***%z,align 8
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLLN17PolyTyElimination10compilePatE_1477(i8*inreg%B)
%D=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%E=call fastcc i8*%w(i8*inreg%D,i8*inreg%C)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%L=call fastcc i8*%H(i8*inreg%J,i8*inreg%K)
store i8*%L,i8**%c,align 8
%M=call fastcc i8*@_SMLFN12TypedCalcCon7patVarsE(i8*inreg%L)
%N=call fastcc i8*@_SMLFN12TypedCalcCon6varEnvE(i8*inreg%M)
store i8*%N,i8**%e,align 8
%O=load i8**,i8***%z,align 8
%P=load i8*,i8**%O,align 8
%Q=getelementptr inbounds i8,i8*%P,i64 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%g,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
%W=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%T)
store i8*%ad,i8**%e,align 8
%ae=load i8**,i8***%z,align 8
%af=load i8*,i8**%ae,align 8
%ag=bitcast i8*%af to i32*
%ah=load i32,i32*%ag,align 4
%ai=getelementptr inbounds i8,i8*%af,i64 16
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%g,align 8
%al=load i8*,i8**%ae,align 8
%am=getelementptr inbounds i8,i8*%al,i64 24
%an=bitcast i8*%am to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%f,align 8
%ap=call i8*@sml_alloc(i32 inreg 36)#0
%aq=bitcast i8*%ap to i32*
%ar=getelementptr inbounds i8,i8*%ap,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177312,i32*%as,align 4
%at=getelementptr inbounds i8,i8*%ap,i64 4
%au=bitcast i8*%at to i32*
store i32 0,i32*%au,align 1
store i32%ah,i32*%aq,align 4
%av=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aw=getelementptr inbounds i8,i8*%ap,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%az=getelementptr inbounds i8,i8*%ap,i64 16
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aC=getelementptr inbounds i8,i8*%ap,i64 24
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%ap,i64 32
%aF=bitcast i8*%aE to i32*
store i32 14,i32*%aF,align 4
%aG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aH=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%ap,i8*inreg%aG)
store i8*%aH,i8**%d,align 8
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
%aL=load i8*,i8**%c,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=load i8*,i8**%d,align 8
%aO=getelementptr inbounds i8,i8*%aI,i64 8
%aP=bitcast i8*%aO to i8**
store i8*%aN,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aI,i64 16
%aR=bitcast i8*%aQ to i32*
store i32 3,i32*%aR,align 4
ret i8*%aI
}
define internal fastcc i8*@_SMLLL8recbinds_1587(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%c,align 8
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%o,i64 24
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
store i8*null,i8**%d,align 8
%v=load i8*,i8**%n,align 8
%w=call fastcc i8*@_SMLLLN17PolyTyElimination14compileVarInfoE_1458(i8*inreg%v,i8*inreg%r)
store i8*%w,i8**%d,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%d,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
ret i8*%x
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18compileFunRecbindsE_1588(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18compileFunRecbindsE_1590(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=bitcast i8*%l to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%f,align 8
%y=bitcast i8**%e to i8***
%z=load i8**,i8***%y,align 8
store i8*null,i8**%e,align 8
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*@_SMLLLN17PolyTyElimination12compileMatchE_1490(i8*inreg%A)
%C=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%D=call fastcc i8*%v(i8*inreg%C,i8*inreg%B)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%K=call fastcc i8*%G(i8*inreg%I,i8*inreg%J)
store i8*%K,i8**%d,align 8
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
%O=load i8*,i8**%c,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%d,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%L,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLL8recbinds_1591(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
store i8*null,i8**%c,align 8
%r=load i8*,i8**%n,align 8
%s=getelementptr inbounds i8,i8*%o,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLLN17PolyTyElimination14compileVarInfoE_1458(i8*inreg%r,i8*inreg%u)
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%d,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15compileRecbindsE_1592(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15compileRecbindsE_1594(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%c,align 8
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
store i8*null,i8**%d,align 8
%u=load i8*,i8**%n,align 8
%v=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%u,i8*inreg%q)
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%d,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15compileDeclListE_1595(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15compileDeclListE_1597(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%l,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15compileDeclListE_1603(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%d,align 8
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
%u=getelementptr inbounds i8,i8*%r,i64 4
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=getelementptr inbounds i8,i8*%r,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%d,align 8
%A=getelementptr inbounds i8,i8*%m,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*@_SMLLLN17PolyTyElimination7dummyTyE_1331(i8*inreg%C)
store i8*%D,i8**%e,align 8
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
store i8*%E,i8**%f,align 8
store i32%t,i32*%F,align 4
%I=getelementptr inbounds i8,i8*%E,i64 4
%J=bitcast i8*%I to i32*
store i32%w,i32*%J,align 4
%K=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%L=getelementptr inbounds i8,i8*%E,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=getelementptr inbounds i8,i8*%E,i64 16
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%E,i64 24
%R=bitcast i8*%Q to i32*
store i32 6,i32*%R,align 4
%S=load i8*,i8**%c,align 8
%T=getelementptr inbounds i8,i8*%S,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
%Y=call fastcc i8*@_SMLLLN17PolyTyElimination8dummyExpE_1334(i8*inreg%V,i8*inreg%X)
store i8*%Y,i8**%d,align 8
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
store i8*%Z,i8**%e,align 8
%ac=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=bitcast i8**%c to i8***
%ak=load i8**,i8***%aj,align 8
%al=load i8*,i8**%ak,align 8
store i8*%al,i8**%c,align 8
%am=call i8*@sml_alloc(i32 inreg 20)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177296,i32*%ao,align 4
%ap=load i8*,i8**%e,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=load i8*,i8**%c,align 8
%as=getelementptr inbounds i8,i8*%am,i64 8
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%am,i64 16
%av=bitcast i8*%au to i32*
store i32 3,i32*%av,align 4
%aw=tail call fastcc i8*@_SMLFN12TypedCalcCon5TPVALE(i8*inreg%am)
ret i8*%aw
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15compileDeclListE_1604(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%d,align 8
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=getelementptr inbounds i8,i8*%o,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
%u=getelementptr inbounds i8,i8*%r,i64 4
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=getelementptr inbounds i8,i8*%r,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%d,align 8
%A=getelementptr inbounds i8,i8*%m,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*@_SMLLLN17PolyTyElimination7dummyTyE_1331(i8*inreg%C)
store i8*%D,i8**%e,align 8
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
store i8*%E,i8**%f,align 8
store i32%t,i32*%F,align 4
%I=getelementptr inbounds i8,i8*%E,i64 4
%J=bitcast i8*%I to i32*
store i32%w,i32*%J,align 4
%K=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%L=getelementptr inbounds i8,i8*%E,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=getelementptr inbounds i8,i8*%E,i64 16
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%E,i64 24
%R=bitcast i8*%Q to i32*
store i32 6,i32*%R,align 4
%S=load i8*,i8**%c,align 8
%T=getelementptr inbounds i8,i8*%S,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
%Y=call fastcc i8*@_SMLLLN17PolyTyElimination8dummyExpE_1334(i8*inreg%V,i8*inreg%X)
store i8*%Y,i8**%d,align 8
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
store i8*%Z,i8**%e,align 8
%ac=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=bitcast i8**%c to i8***
%ak=load i8**,i8***%aj,align 8
%al=load i8*,i8**%ak,align 8
store i8*%al,i8**%c,align 8
%am=call i8*@sml_alloc(i32 inreg 20)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177296,i32*%ao,align 4
%ap=load i8*,i8**%e,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=load i8*,i8**%c,align 8
%as=getelementptr inbounds i8,i8*%am,i64 8
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%am,i64 16
%av=bitcast i8*%au to i32*
store i32 3,i32*%av,align 4
%aw=tail call fastcc i8*@_SMLFN12TypedCalcCon5TPVALE(i8*inreg%am)
ret i8*%aw
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1606(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"personality i32(...)*@sml_personality{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
br label%k
k:
%l=phi i8*[%a,%m],[%m3,%m1]
%n=phi i8*[%b,%m],[%m2,%m1]
store i8*%l,i8**%c,align 8
store i8*%n,i8**%d,align 8
%o=load atomic i32,i32*@sml_check_flag unordered,align 4
%p=icmp eq i32%o,0
br i1%p,label%s,label%q
q:
call void@sml_check(i32 inreg%o)
%r=load i8*,i8**%d,align 8
br label%s
s:
%t=phi i8*[%r,%q],[%n,%k]
%u=icmp eq i8*%t,null
br i1%u,label%E8,label%v
v:
%w=bitcast i8*%t to i32*
%x=load i32,i32*%w,align 4
switch i32%x,label%y[
i32 0,label%N3
i32 2,label%MY
i32 37,label%Jy
i32 3,label%IL
i32 5,label%Ij
i32 6,label%G7
i32 8,label%F2
i32 9,label%Fa
i32 14,label%E8
i32 16,label%Ep
i32 17,label%CP
i32 15,label%Bo
i32 18,label%zU
i32 19,label%yD
i32 22,label%yb
i32 21,label%xs
i32 1,label%vF
i32 20,label%ug
i32 23,label%sO
i32 4,label%q9
i32 39,label%qj
i32 25,label%pK
i32 26,label%oO
i32 27,label%of
i32 28,label%np
i32 29,label%lQ
i32 30,label%kS
i32 31,label%kn
i32 32,label%j0
i32 33,label%jp
i32 35,label%iD
i32 36,label%ih
i32 38,label%ej
i32 40,label%ec
i32 24,label%di
i32 7,label%cE
i32 10,label%b0
i32 11,label%bv
i32 12,label%a0
i32 13,label%am
i32 34,label%Q
]
y:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%z=load i8*,i8**@_SMLZ5Match,align 8
store i8*%z,i8**%c,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
store i8*%A,i8**%d,align 8
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 60)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177336,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%J,i64 56
%N=bitcast i8*%M to i32*
store i32 1,i32*%N,align 4
%O=load i8*,i8**%d,align 8
%P=bitcast i8*%J to i8**
store i8*%O,i8**%P,align 8
call void@sml_raise(i8*inreg%J)#1
unreachable
Q:
%R=getelementptr inbounds i8,i8*%t,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
%W=getelementptr inbounds i8,i8*%T,i64 8
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%d,align 8
%Z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aa=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%Z,i8*inreg%V)
store i8*%aa,i8**%c,align 8
%ab=call i8*@sml_alloc(i32 inreg 20)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177296,i32*%ad,align 4
%ae=load i8*,i8**%c,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=load i8*,i8**%d,align 8
%ah=getelementptr inbounds i8,i8*%ab,i64 8
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ab,i64 16
%ak=bitcast i8*%aj to i32*
store i32 3,i32*%ak,align 4
%al=tail call fastcc i8*@_SMLFN12TypedCalcCon9TPREIFYTYE(i8*inreg%ab)
ret i8*%al
am:
%an=getelementptr inbounds i8,i8*%t,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%d,align 8
%as=getelementptr inbounds i8,i8*%ap,i64 8
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%e,align 8
%av=getelementptr inbounds i8,i8*%ap,i64 16
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
%ay=getelementptr inbounds i8,i8*%ap,i64 24
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%f,align 8
%aB=load i8*,i8**%c,align 8
%aC=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%aB,i8*inreg%ax)
store i8*%aC,i8**%g,align 8
%aD=load i8*,i8**%c,align 8
%aE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aF=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%aD,i8*inreg%aE)
store i8*%aF,i8**%e,align 8
%aG=load i8*,i8**%c,align 8
%aH=load i8*,i8**%d,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%aI=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%aG,i8*inreg%aH)
store i8*%aI,i8**%c,align 8
%aJ=call i8*@sml_alloc(i32 inreg 36)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177312,i32*%aL,align 4
%aM=load i8*,i8**%c,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=load i8*,i8**%e,align 8
%aP=getelementptr inbounds i8,i8*%aJ,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=load i8*,i8**%g,align 8
%aS=getelementptr inbounds i8,i8*%aJ,i64 16
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=load i8*,i8**%f,align 8
%aV=getelementptr inbounds i8,i8*%aJ,i64 24
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aJ,i64 32
%aY=bitcast i8*%aX to i32*
store i32 15,i32*%aY,align 4
%aZ=tail call fastcc i8*@_SMLFN12TypedCalcCon13TPDYNAMICVIEWE(i8*inreg%aJ)
ret i8*%aZ
a0:
%a1=getelementptr inbounds i8,i8*%t,i64 8
%a2=bitcast i8*%a1 to i8**
%a3=load i8*,i8**%a2,align 8
%a4=bitcast i8*%a3 to i8**
%a5=load i8*,i8**%a4,align 8
store i8*%a5,i8**%d,align 8
%a6=getelementptr inbounds i8,i8*%a3,i64 8
%a7=bitcast i8*%a6 to i8**
%a8=load i8*,i8**%a7,align 8
store i8*%a8,i8**%e,align 8
%a9=getelementptr inbounds i8,i8*%a3,i64 16
%ba=bitcast i8*%a9 to i8**
%bb=load i8*,i8**%ba,align 8
%bc=load i8*,i8**%c,align 8
%bd=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%bc,i8*inreg%bb)
store i8*%bd,i8**%f,align 8
%be=load i8*,i8**%c,align 8
%bf=load i8*,i8**%d,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%bg=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%be,i8*inreg%bf)
store i8*%bg,i8**%c,align 8
%bh=call i8*@sml_alloc(i32 inreg 28)#0
%bi=getelementptr inbounds i8,i8*%bh,i64 -4
%bj=bitcast i8*%bi to i32*
store i32 1342177304,i32*%bj,align 4
%bk=load i8*,i8**%c,align 8
%bl=bitcast i8*%bh to i8**
store i8*%bk,i8**%bl,align 8
%bm=load i8*,i8**%e,align 8
%bn=getelementptr inbounds i8,i8*%bh,i64 8
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=load i8*,i8**%f,align 8
%bq=getelementptr inbounds i8,i8*%bh,i64 16
%br=bitcast i8*%bq to i8**
store i8*%bp,i8**%br,align 8
%bs=getelementptr inbounds i8,i8*%bh,i64 24
%bt=bitcast i8*%bs to i32*
store i32 7,i32*%bt,align 4
%bu=tail call fastcc i8*@_SMLFN12TypedCalcCon12TPDYNAMICTOPE(i8*inreg%bh)
ret i8*%bu
bv:
%bw=getelementptr inbounds i8,i8*%t,i64 8
%bx=bitcast i8*%bw to i8**
%by=load i8*,i8**%bx,align 8
%bz=bitcast i8*%by to i8**
%bA=load i8*,i8**%bz,align 8
store i8*%bA,i8**%d,align 8
%bB=getelementptr inbounds i8,i8*%by,i64 8
%bC=bitcast i8*%bB to i8**
%bD=load i8*,i8**%bC,align 8
store i8*%bD,i8**%e,align 8
%bE=getelementptr inbounds i8,i8*%by,i64 16
%bF=bitcast i8*%bE to i8**
%bG=load i8*,i8**%bF,align 8
%bH=load i8*,i8**%c,align 8
%bI=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%bH,i8*inreg%bG)
store i8*%bI,i8**%f,align 8
%bJ=load i8*,i8**%c,align 8
%bK=load i8*,i8**%d,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%bL=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%bJ,i8*inreg%bK)
store i8*%bL,i8**%c,align 8
%bM=call i8*@sml_alloc(i32 inreg 28)#0
%bN=getelementptr inbounds i8,i8*%bM,i64 -4
%bO=bitcast i8*%bN to i32*
store i32 1342177304,i32*%bO,align 4
%bP=load i8*,i8**%c,align 8
%bQ=bitcast i8*%bM to i8**
store i8*%bP,i8**%bQ,align 8
%bR=load i8*,i8**%e,align 8
%bS=getelementptr inbounds i8,i8*%bM,i64 8
%bT=bitcast i8*%bS to i8**
store i8*%bR,i8**%bT,align 8
%bU=load i8*,i8**%f,align 8
%bV=getelementptr inbounds i8,i8*%bM,i64 16
%bW=bitcast i8*%bV to i8**
store i8*%bU,i8**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bM,i64 24
%bY=bitcast i8*%bX to i32*
store i32 7,i32*%bY,align 4
%bZ=tail call fastcc i8*@_SMLFN12TypedCalcCon13TPDYNAMICNULLE(i8*inreg%bM)
ret i8*%bZ
b0:
%b1=getelementptr inbounds i8,i8*%t,i64 8
%b2=bitcast i8*%b1 to i8**
%b3=load i8*,i8**%b2,align 8
%b4=bitcast i8*%b3 to i8**
%b5=load i8*,i8**%b4,align 8
store i8*%b5,i8**%d,align 8
%b6=getelementptr inbounds i8,i8*%b3,i64 8
%b7=bitcast i8*%b6 to i8**
%b8=load i8*,i8**%b7,align 8
store i8*%b8,i8**%e,align 8
%b9=getelementptr inbounds i8,i8*%b3,i64 16
%ca=bitcast i8*%b9 to i8**
%cb=load i8*,i8**%ca,align 8
%cc=getelementptr inbounds i8,i8*%b3,i64 24
%cd=bitcast i8*%cc to i8**
%ce=load i8*,i8**%cd,align 8
store i8*%ce,i8**%f,align 8
%cf=load i8*,i8**%c,align 8
%cg=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%cf,i8*inreg%cb)
store i8*%cg,i8**%g,align 8
%ch=load i8*,i8**%c,align 8
%ci=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cj=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%ch,i8*inreg%ci)
store i8*%cj,i8**%e,align 8
%ck=load i8*,i8**%c,align 8
%cl=load i8*,i8**%d,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%cm=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%ck,i8*inreg%cl)
store i8*%cm,i8**%c,align 8
%cn=call i8*@sml_alloc(i32 inreg 36)#0
%co=getelementptr inbounds i8,i8*%cn,i64 -4
%cp=bitcast i8*%co to i32*
store i32 1342177312,i32*%cp,align 4
%cq=load i8*,i8**%c,align 8
%cr=bitcast i8*%cn to i8**
store i8*%cq,i8**%cr,align 8
%cs=load i8*,i8**%e,align 8
%ct=getelementptr inbounds i8,i8*%cn,i64 8
%cu=bitcast i8*%ct to i8**
store i8*%cs,i8**%cu,align 8
%cv=load i8*,i8**%g,align 8
%cw=getelementptr inbounds i8,i8*%cn,i64 16
%cx=bitcast i8*%cw to i8**
store i8*%cv,i8**%cx,align 8
%cy=load i8*,i8**%f,align 8
%cz=getelementptr inbounds i8,i8*%cn,i64 24
%cA=bitcast i8*%cz to i8**
store i8*%cy,i8**%cA,align 8
%cB=getelementptr inbounds i8,i8*%cn,i64 32
%cC=bitcast i8*%cB to i32*
store i32 15,i32*%cC,align 4
%cD=tail call fastcc i8*@_SMLFN12TypedCalcCon11TPDYNAMICISE(i8*inreg%cn)
ret i8*%cD
cE:
%cF=getelementptr inbounds i8,i8*%t,i64 8
%cG=bitcast i8*%cF to i8**
%cH=load i8*,i8**%cG,align 8
%cI=bitcast i8*%cH to i8**
%cJ=load i8*,i8**%cI,align 8
store i8*%cJ,i8**%d,align 8
%cK=getelementptr inbounds i8,i8*%cH,i64 8
%cL=bitcast i8*%cK to i8**
%cM=load i8*,i8**%cL,align 8
store i8*%cM,i8**%e,align 8
%cN=getelementptr inbounds i8,i8*%cH,i64 16
%cO=bitcast i8*%cN to i8**
%cP=load i8*,i8**%cO,align 8
%cQ=getelementptr inbounds i8,i8*%cH,i64 24
%cR=bitcast i8*%cQ to i8**
%cS=load i8*,i8**%cR,align 8
store i8*%cS,i8**%f,align 8
%cT=load i8*,i8**%c,align 8
%cU=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%cT,i8*inreg%cP)
store i8*%cU,i8**%g,align 8
%cV=load i8*,i8**%c,align 8
%cW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cX=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%cV,i8*inreg%cW)
store i8*%cX,i8**%e,align 8
%cY=load i8*,i8**%c,align 8
%cZ=load i8*,i8**%d,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%c0=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%cY,i8*inreg%cZ)
store i8*%c0,i8**%c,align 8
%c1=call i8*@sml_alloc(i32 inreg 36)#0
%c2=getelementptr inbounds i8,i8*%c1,i64 -4
%c3=bitcast i8*%c2 to i32*
store i32 1342177312,i32*%c3,align 4
%c4=load i8*,i8**%c,align 8
%c5=bitcast i8*%c1 to i8**
store i8*%c4,i8**%c5,align 8
%c6=load i8*,i8**%e,align 8
%c7=getelementptr inbounds i8,i8*%c1,i64 8
%c8=bitcast i8*%c7 to i8**
store i8*%c6,i8**%c8,align 8
%c9=load i8*,i8**%g,align 8
%da=getelementptr inbounds i8,i8*%c1,i64 16
%db=bitcast i8*%da to i8**
store i8*%c9,i8**%db,align 8
%dc=load i8*,i8**%f,align 8
%dd=getelementptr inbounds i8,i8*%c1,i64 24
%de=bitcast i8*%dd to i8**
store i8*%dc,i8**%de,align 8
%df=getelementptr inbounds i8,i8*%c1,i64 32
%dg=bitcast i8*%df to i32*
store i32 15,i32*%dg,align 4
%dh=tail call fastcc i8*@_SMLFN12TypedCalcCon9TPDYNAMICE(i8*inreg%c1)
ret i8*%dh
di:
%dj=getelementptr inbounds i8,i8*%t,i64 8
%dk=bitcast i8*%dj to i8**
%dl=load i8*,i8**%dk,align 8
%dm=bitcast i8*%dl to i8**
%dn=load i8*,i8**%dm,align 8
%do=bitcast i8*%dn to i8**
%dp=load i8*,i8**%do,align 8
%dq=getelementptr inbounds i8,i8*%dn,i64 8
%dr=bitcast i8*%dq to i8**
%ds=load i8*,i8**%dr,align 8
store i8*%ds,i8**%d,align 8
%dt=getelementptr inbounds i8,i8*%dl,i64 16
%du=bitcast i8*%dt to i32*
%dv=load i32,i32*%du,align 4
%dw=getelementptr inbounds i8,i8*%dl,i64 24
%dx=bitcast i8*%dw to i8**
%dy=load i8*,i8**%dx,align 8
store i8*%dy,i8**%e,align 8
%dz=getelementptr inbounds i8,i8*%dl,i64 32
%dA=bitcast i8*%dz to i8**
%dB=load i8*,i8**%dA,align 8
store i8*%dB,i8**%f,align 8
%dC=load i8*,i8**%c,align 8
%dD=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%dC,i8*inreg%dp)
store i8*%dD,i8**%g,align 8
%dE=load i8*,i8**%c,align 8
%dF=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dG=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%dE,i8*inreg%dF)
store i8*%dG,i8**%d,align 8
%dH=call i8*@sml_alloc(i32 inreg 20)#0
%dI=getelementptr inbounds i8,i8*%dH,i64 -4
%dJ=bitcast i8*%dI to i32*
store i32 1342177296,i32*%dJ,align 4
store i8*%dH,i8**%h,align 8
%dK=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dL=bitcast i8*%dH to i8**
store i8*%dK,i8**%dL,align 8
%dM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dN=getelementptr inbounds i8,i8*%dH,i64 8
%dO=bitcast i8*%dN to i8**
store i8*%dM,i8**%dO,align 8
%dP=getelementptr inbounds i8,i8*%dH,i64 16
%dQ=bitcast i8*%dP to i32*
store i32 3,i32*%dQ,align 4
%dR=load i8*,i8**%c,align 8
%dS=load i8*,i8**%f,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%f,align 8
%dT=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%dR,i8*inreg%dS)
store i8*%dT,i8**%c,align 8
%dU=call i8*@sml_alloc(i32 inreg 36)#0
%dV=getelementptr inbounds i8,i8*%dU,i64 -4
%dW=bitcast i8*%dV to i32*
store i32 1342177312,i32*%dW,align 4
%dX=getelementptr inbounds i8,i8*%dU,i64 12
%dY=bitcast i8*%dX to i32*
store i32 0,i32*%dY,align 1
%dZ=load i8*,i8**%h,align 8
%d0=bitcast i8*%dU to i8**
store i8*%dZ,i8**%d0,align 8
%d1=getelementptr inbounds i8,i8*%dU,i64 8
%d2=bitcast i8*%d1 to i32*
store i32%dv,i32*%d2,align 4
%d3=load i8*,i8**%e,align 8
%d4=getelementptr inbounds i8,i8*%dU,i64 16
%d5=bitcast i8*%d4 to i8**
store i8*%d3,i8**%d5,align 8
%d6=load i8*,i8**%c,align 8
%d7=getelementptr inbounds i8,i8*%dU,i64 24
%d8=bitcast i8*%d7 to i8**
store i8*%d6,i8**%d8,align 8
%d9=getelementptr inbounds i8,i8*%dU,i64 32
%ea=bitcast i8*%d9 to i32*
store i32 13,i32*%ea,align 4
%eb=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPJOINE(i8*inreg%dU)
ret i8*%eb
ec:
store i8*null,i8**%d,align 8
%ed=getelementptr inbounds i8,i8*%t,i64 8
%ee=bitcast i8*%ed to i8**
%ef=load i8*,i8**%ee,align 8
%eg=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%eh=call fastcc i8*@_SMLLLN17PolyTyElimination10compileVarE_1487(i8*inreg%eg,i8*inreg%ef)
%ei=tail call fastcc i8*@_SMLFN12TypedCalcCon5TPVARE(i8*inreg%eh)
ret i8*%ei
ej:
%ek=getelementptr inbounds i8,i8*%t,i64 8
%el=bitcast i8*%ek to i8**
%em=load i8*,i8**%el,align 8
%en=bitcast i8*%em to i8**
%eo=load i8*,i8**%en,align 8
store i8*%eo,i8**%d,align 8
%ep=getelementptr inbounds i8,i8*%em,i64 8
%eq=bitcast i8*%ep to i8**
%er=load i8*,i8**%eq,align 8
%es=getelementptr inbounds i8,i8*%em,i64 16
%et=bitcast i8*%es to i8**
%eu=load i8*,i8**%et,align 8
store i8*%eu,i8**%e,align 8
%ev=getelementptr inbounds i8,i8*%em,i64 24
%ew=bitcast i8*%ev to i8**
%ex=load i8*,i8**%ew,align 8
store i8*%ex,i8**%f,align 8
%ey=call fastcc i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg%er)
%ez=icmp eq i8*%ey,null
br i1%ez,label%eE,label%eA
eA:
%eB=bitcast i8*%ey to i32*
%eC=load i32,i32*%eB,align 4
%eD=icmp eq i32%eC,7
br i1%eD,label%e0,label%eE
eE:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%eF=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%eF,i8**%c,align 8
%eG=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dc,i64 0,i32 2)to i8*))
store i8*%eG,i8**%d,align 8
%eH=call i8*@sml_alloc(i32 inreg 28)#0
%eI=getelementptr inbounds i8,i8*%eH,i64 -4
%eJ=bitcast i8*%eI to i32*
store i32 1342177304,i32*%eJ,align 4
store i8*%eH,i8**%e,align 8
%eK=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%eL=bitcast i8*%eH to i8**
store i8*%eK,i8**%eL,align 8
%eM=getelementptr inbounds i8,i8*%eH,i64 8
%eN=bitcast i8*%eM to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%eN,align 8
%eO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eP=getelementptr inbounds i8,i8*%eH,i64 16
%eQ=bitcast i8*%eP to i8**
store i8*%eO,i8**%eQ,align 8
%eR=getelementptr inbounds i8,i8*%eH,i64 24
%eS=bitcast i8*%eR to i32*
store i32 7,i32*%eS,align 4
%eT=call i8*@sml_alloc(i32 inreg 60)#0
%eU=getelementptr inbounds i8,i8*%eT,i64 -4
%eV=bitcast i8*%eU to i32*
store i32 1342177336,i32*%eV,align 4
%eW=getelementptr inbounds i8,i8*%eT,i64 56
%eX=bitcast i8*%eW to i32*
store i32 1,i32*%eX,align 4
%eY=load i8*,i8**%e,align 8
%eZ=bitcast i8*%eT to i8**
store i8*%eY,i8**%eZ,align 8
call void@sml_raise(i8*inreg%eT)#1
unreachable
e0:
%e1=getelementptr inbounds i8,i8*%ey,i64 8
%e2=bitcast i8*%e1 to i8**
%e3=load i8*,i8**%e2,align 8
%e4=getelementptr inbounds i8,i8*%e3,i64 8
%e5=bitcast i8*%e4 to i8**
%e6=load i8*,i8**%e5,align 8
store i8*%e6,i8**%g,align 8
%e7=load i8*,i8**%c,align 8
%e8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%e9=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%e7,i8*inreg%e8)
store i8*%e9,i8**%d,align 8
%fa=getelementptr inbounds i8,i8*%e9,i64 8
%fb=bitcast i8*%fa to i8**
%fc=load i8*,i8**%fb,align 8
store i8*%fc,i8**%h,align 8
%fd=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%fe=getelementptr inbounds i8,i8*%fd,i64 16
%ff=bitcast i8*%fe to i8*(i8*,i8*)**
%fg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ff,align 8
%fh=bitcast i8*%fd to i8**
%fi=load i8*,i8**%fh,align 8
store i8*%fi,i8**%i,align 8
%fj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%fk=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%fj)
%fl=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%fm=call fastcc i8*%fg(i8*inreg%fl,i8*inreg%fk)
%fn=getelementptr inbounds i8,i8*%fm,i64 16
%fo=bitcast i8*%fn to i8*(i8*,i8*)**
%fp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fo,align 8
%fq=bitcast i8*%fm to i8**
%fr=load i8*,i8**%fq,align 8
%fs=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ft=call fastcc i8*%fp(i8*inreg%fr,i8*inreg%fs)
store i8*%ft,i8**%c,align 8
%fu=invoke fastcc i8*@_SMLFN8ListPair7foldlEqE(i32 inreg 0,i32 inreg 4,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
to label%fv unwind label%gi
fv:
%fw=getelementptr inbounds i8,i8*%fu,i64 16
%fx=bitcast i8*%fw to i8*(i8*,i8*)**
%fy=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fx,align 8
%fz=bitcast i8*%fu to i8**
%fA=load i8*,i8**%fz,align 8
%fB=invoke fastcc i8*%fy(i8*inreg%fA,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@da,i64 0,i32 2)to i8*))
to label%fC unwind label%gi
fC:
%fD=getelementptr inbounds i8,i8*%fB,i64 16
%fE=bitcast i8*%fD to i8*(i8*,i8*)**
%fF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fE,align 8
%fG=bitcast i8*%fB to i8**
%fH=load i8*,i8**%fG,align 8
store i8*%fH,i8**%e,align 8
%fI=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
to label%fJ unwind label%gi
fJ:
%fK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fL=invoke fastcc i8*%fF(i8*inreg%fK,i8*inreg%fI)
to label%fM unwind label%gi
fM:
%fN=getelementptr inbounds i8,i8*%fL,i64 16
%fO=bitcast i8*%fN to i8*(i8*,i8*)**
%fP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fO,align 8
%fQ=bitcast i8*%fL to i8**
%fR=load i8*,i8**%fQ,align 8
store i8*%fR,i8**%i,align 8
%fS=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map8listKeysE(i32 inreg 1,i32 inreg 8)
to label%fT unwind label%gi
fT:
%fU=getelementptr inbounds i8,i8*%fS,i64 16
%fV=bitcast i8*%fU to i8*(i8*,i8*)**
%fW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fV,align 8
%fX=bitcast i8*%fS to i8**
%fY=load i8*,i8**%fX,align 8
%fZ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%f0=invoke fastcc i8*%fW(i8*inreg%fY,i8*inreg%fZ)
to label%f1 unwind label%gi
f1:
store i8*%f0,i8**%e,align 8
%f2=call i8*@sml_alloc(i32 inreg 20)#0
%f3=getelementptr inbounds i8,i8*%f2,i64 -4
%f4=bitcast i8*%f3 to i32*
store i32 1342177296,i32*%f4,align 4
%f5=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%f6=bitcast i8*%f2 to i8**
store i8*%f5,i8**%f6,align 8
%f7=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%f8=getelementptr inbounds i8,i8*%f2,i64 8
%f9=bitcast i8*%f8 to i8**
store i8*%f7,i8**%f9,align 8
%ga=getelementptr inbounds i8,i8*%f2,i64 16
%gb=bitcast i8*%ga to i32*
store i32 3,i32*%gb,align 4
%gc=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%gd=invoke fastcc i8*%fP(i8*inreg%gc,i8*inreg%f2)
to label%ge unwind label%gi
ge:
store i8*%gd,i8**%g,align 8
%gf=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gg=call fastcc i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg%gf)
%gh=icmp eq i8*%gg,null
br i1%gh,label%gZ,label%gV
gi:
%gj=landingpad{i8*,i8*}
catch i8*null
%gk=extractvalue{i8*,i8*}%gj,1
%gl=bitcast i8*%gk to i8**
%gm=load i8*,i8**%gl,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%i,align 8
store i8*%gm,i8**%c,align 8
%gn=bitcast i8*%gm to i8**
%go=load i8*,i8**%gn,align 8
%gp=load i8*,i8**@_SMLZN8ListPair14UnequalLengthsE,align 8
%gq=icmp eq i8*%go,%gp
br i1%gq,label%gr,label%gN
gr:
%gs=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%gs,i8**%c,align 8
%gt=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dc,i64 0,i32 2)to i8*))
store i8*%gt,i8**%d,align 8
%gu=call i8*@sml_alloc(i32 inreg 28)#0
%gv=getelementptr inbounds i8,i8*%gu,i64 -4
%gw=bitcast i8*%gv to i32*
store i32 1342177304,i32*%gw,align 4
store i8*%gu,i8**%e,align 8
%gx=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%gy=bitcast i8*%gu to i8**
store i8*%gx,i8**%gy,align 8
%gz=getelementptr inbounds i8,i8*%gu,i64 8
%gA=bitcast i8*%gz to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%gA,align 8
%gB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gC=getelementptr inbounds i8,i8*%gu,i64 16
%gD=bitcast i8*%gC to i8**
store i8*%gB,i8**%gD,align 8
%gE=getelementptr inbounds i8,i8*%gu,i64 24
%gF=bitcast i8*%gE to i32*
store i32 7,i32*%gF,align 4
%gG=call i8*@sml_alloc(i32 inreg 60)#0
%gH=getelementptr inbounds i8,i8*%gG,i64 -4
%gI=bitcast i8*%gH to i32*
store i32 1342177336,i32*%gI,align 4
%gJ=getelementptr inbounds i8,i8*%gG,i64 56
%gK=bitcast i8*%gJ to i32*
store i32 1,i32*%gK,align 4
%gL=load i8*,i8**%e,align 8
%gM=bitcast i8*%gG to i8**
store i8*%gL,i8**%gM,align 8
call void@sml_raise(i8*inreg%gG)#1
unreachable
gN:
%gO=call i8*@sml_alloc(i32 inreg 60)#0
%gP=getelementptr inbounds i8,i8*%gO,i64 -4
%gQ=bitcast i8*%gP to i32*
store i32 1342177336,i32*%gQ,align 4
%gR=getelementptr inbounds i8,i8*%gO,i64 56
%gS=bitcast i8*%gR to i32*
store i32 1,i32*%gS,align 4
%gT=load i8*,i8**%c,align 8
%gU=bitcast i8*%gO to i8**
store i8*%gT,i8**%gU,align 8
call void@sml_raise(i8*inreg%gO)#1
unreachable
gV:
%gW=bitcast i8*%gg to i32*
%gX=load i32,i32*%gW,align 4
%gY=icmp eq i32%gX,7
br i1%gY,label%g1,label%gZ
gZ:
%g0=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
br label%g8
g1:
%g2=getelementptr inbounds i8,i8*%gg,i64 8
%g3=bitcast i8*%g2 to i8**
%g4=load i8*,i8**%g3,align 8
%g5=getelementptr inbounds i8,i8*%g4,i64 8
%g6=bitcast i8*%g5 to i8**
%g7=load i8*,i8**%g6,align 8
br label%g8
g8:
%g9=phi i8*[%g7,%g1],[%g0,%gZ]
store i8*%g9,i8**%c,align 8
%ha=call fastcc i8*@_SMLFN14BoundTypeVarID3Map11mapPartialiE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%hb=getelementptr inbounds i8,i8*%ha,i64 16
%hc=bitcast i8*%hb to i8*(i8*,i8*)**
%hd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hc,align 8
%he=bitcast i8*%ha to i8**
%hf=load i8*,i8**%he,align 8
store i8*%hf,i8**%e,align 8
%hg=call i8*@sml_alloc(i32 inreg 12)#0
%hh=getelementptr inbounds i8,i8*%hg,i64 -4
%hi=bitcast i8*%hh to i32*
store i32 1342177288,i32*%hi,align 4
store i8*%hg,i8**%h,align 8
%hj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%hk=bitcast i8*%hg to i8**
store i8*%hj,i8**%hk,align 8
%hl=getelementptr inbounds i8,i8*%hg,i64 8
%hm=bitcast i8*%hl to i32*
store i32 1,i32*%hm,align 4
%hn=call i8*@sml_alloc(i32 inreg 28)#0
%ho=getelementptr inbounds i8,i8*%hn,i64 -4
%hp=bitcast i8*%ho to i32*
store i32 1342177304,i32*%hp,align 4
%hq=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hr=bitcast i8*%hn to i8**
store i8*%hq,i8**%hr,align 8
%hs=getelementptr inbounds i8,i8*%hn,i64 8
%ht=bitcast i8*%hs to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL10newInstMap_1584 to void(...)*),void(...)**%ht,align 8
%hu=getelementptr inbounds i8,i8*%hn,i64 16
%hv=bitcast i8*%hu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL10newInstMap_1584 to void(...)*),void(...)**%hv,align 8
%hw=getelementptr inbounds i8,i8*%hn,i64 24
%hx=bitcast i8*%hw to i32*
store i32 -2147483647,i32*%hx,align 4
%hy=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hz=call fastcc i8*%hd(i8*inreg%hy,i8*inreg%hn)
%hA=getelementptr inbounds i8,i8*%hz,i64 16
%hB=bitcast i8*%hA to i8*(i8*,i8*)**
%hC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hB,align 8
%hD=bitcast i8*%hz to i8**
%hE=load i8*,i8**%hD,align 8
%hF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%hG=call fastcc i8*%hC(i8*inreg%hE,i8*inreg%hF)
store i8*%hG,i8**%c,align 8
%hH=call fastcc i8*@_SMLFN14BoundTypeVarID3Map7isEmptyE(i32 inreg 1,i32 inreg 8)
%hI=getelementptr inbounds i8,i8*%hH,i64 16
%hJ=bitcast i8*%hI to i8*(i8*,i8*)**
%hK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hJ,align 8
%hL=bitcast i8*%hH to i8**
%hM=load i8*,i8**%hL,align 8
%hN=load i8*,i8**%c,align 8
%hO=call fastcc i8*%hK(i8*inreg%hM,i8*inreg%hN)
%hP=bitcast i8*%hO to i32*
%hQ=load i32,i32*%hP,align 4
%hR=icmp eq i32%hQ,0
br i1%hR,label%hU,label%hS
hS:
%hT=load i8*,i8**%d,align 8
ret i8*%hT
hU:
%hV=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%hW=getelementptr inbounds i8,i8*%hV,i64 16
%hX=bitcast i8*%hW to i8*(i8*,i8*)**
%hY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hX,align 8
%hZ=bitcast i8*%hV to i8**
%h0=load i8*,i8**%hZ,align 8
%h1=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%h2=call fastcc i8*%hY(i8*inreg%h0,i8*inreg%h1)
store i8*%h2,i8**%c,align 8
%h3=call i8*@sml_alloc(i32 inreg 28)#0
%h4=getelementptr inbounds i8,i8*%h3,i64 -4
%h5=bitcast i8*%h4 to i32*
store i32 1342177304,i32*%h5,align 4
%h6=load i8*,i8**%d,align 8
%h7=bitcast i8*%h3 to i8**
store i8*%h6,i8**%h7,align 8
%h8=load i8*,i8**%c,align 8
%h9=getelementptr inbounds i8,i8*%h3,i64 8
%ia=bitcast i8*%h9 to i8**
store i8*%h8,i8**%ia,align 8
%ib=load i8*,i8**%f,align 8
%ic=getelementptr inbounds i8,i8*%h3,i64 16
%id=bitcast i8*%ic to i8**
store i8*%ib,i8**%id,align 8
%ie=getelementptr inbounds i8,i8*%h3,i64 24
%if=bitcast i8*%ie to i32*
store i32 7,i32*%if,align 4
%ig=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPTAPPE(i8*inreg%h3)
ret i8*%ig
ih:
%ii=getelementptr inbounds i8,i8*%t,i64 8
%ij=bitcast i8*%ii to i8**
%ik=load i8*,i8**%ij,align 8
%il=bitcast i8*%ik to i8**
%im=load i8*,i8**%il,align 8
%in=getelementptr inbounds i8,i8*%ik,i64 8
%io=bitcast i8*%in to i8**
%ip=load i8*,i8**%io,align 8
store i8*%ip,i8**%d,align 8
%iq=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ir=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%iq,i8*inreg%im)
store i8*%ir,i8**%c,align 8
%is=call i8*@sml_alloc(i32 inreg 20)#0
%it=getelementptr inbounds i8,i8*%is,i64 -4
%iu=bitcast i8*%it to i32*
store i32 1342177296,i32*%iu,align 4
%iv=load i8*,i8**%c,align 8
%iw=bitcast i8*%is to i8**
store i8*%iv,i8**%iw,align 8
%ix=load i8*,i8**%d,align 8
%iy=getelementptr inbounds i8,i8*%is,i64 8
%iz=bitcast i8*%iy to i8**
store i8*%ix,i8**%iz,align 8
%iA=getelementptr inbounds i8,i8*%is,i64 16
%iB=bitcast i8*%iA to i32*
store i32 3,i32*%iB,align 4
%iC=tail call fastcc i8*@_SMLFN12TypedCalcCon8TPSIZEOFE(i8*inreg%is)
ret i8*%iC
iD:
%iE=getelementptr inbounds i8,i8*%t,i64 8
%iF=bitcast i8*%iE to i8**
%iG=load i8*,i8**%iF,align 8
%iH=bitcast i8*%iG to i8**
%iI=load i8*,i8**%iH,align 8
store i8*%iI,i8**%d,align 8
%iJ=getelementptr inbounds i8,i8*%iG,i64 16
%iK=bitcast i8*%iJ to i8**
%iL=load i8*,i8**%iK,align 8
store i8*%iL,i8**%e,align 8
%iM=getelementptr inbounds i8,i8*%iG,i64 24
%iN=bitcast i8*%iM to i8**
%iO=load i8*,i8**%iN,align 8
store i8*%iO,i8**%f,align 8
%iP=load i8*,i8**%c,align 8
%iQ=getelementptr inbounds i8,i8*%iP,i64 8
%iR=bitcast i8*%iQ to i8***
%iS=load i8**,i8***%iR,align 8
%iT=load i8*,i8**%iS,align 8
store i8*%iT,i8**%g,align 8
%iU=call i8*@sml_alloc(i32 inreg 12)#0
%iV=getelementptr inbounds i8,i8*%iU,i64 -4
%iW=bitcast i8*%iV to i32*
store i32 1342177288,i32*%iW,align 4
%iX=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%iY=bitcast i8*%iU to i8**
store i8*%iX,i8**%iY,align 8
%iZ=getelementptr inbounds i8,i8*%iU,i64 8
%i0=bitcast i8*%iZ to i32*
store i32 1,i32*%i0,align 4
%i1=call fastcc i8*@_SMLFN12TypedCalcCon8TPSELECTE(i8*inreg%iU)
%i2=getelementptr inbounds i8,i8*%i1,i64 16
%i3=bitcast i8*%i2 to i8*(i8*,i8*)**
%i4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i3,align 8
%i5=bitcast i8*%i1 to i8**
%i6=load i8*,i8**%i5,align 8
store i8*%i6,i8**%g,align 8
%i7=load i8*,i8**%c,align 8
%i8=load i8*,i8**%d,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%i9=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%i7,i8*inreg%i8)
store i8*%i9,i8**%c,align 8
%ja=call i8*@sml_alloc(i32 inreg 28)#0
%jb=getelementptr inbounds i8,i8*%ja,i64 -4
%jc=bitcast i8*%jb to i32*
store i32 1342177304,i32*%jc,align 4
%jd=load i8*,i8**%c,align 8
%je=bitcast i8*%ja to i8**
store i8*%jd,i8**%je,align 8
%jf=load i8*,i8**%e,align 8
%jg=getelementptr inbounds i8,i8*%ja,i64 8
%jh=bitcast i8*%jg to i8**
store i8*%jf,i8**%jh,align 8
%ji=load i8*,i8**%f,align 8
%jj=getelementptr inbounds i8,i8*%ja,i64 16
%jk=bitcast i8*%jj to i8**
store i8*%ji,i8**%jk,align 8
%jl=getelementptr inbounds i8,i8*%ja,i64 24
%jm=bitcast i8*%jl to i32*
store i32 7,i32*%jm,align 4
%jn=load i8*,i8**%g,align 8
%jo=tail call fastcc i8*%i4(i8*inreg%jn,i8*inreg%ja)
ret i8*%jo
jp:
%jq=getelementptr inbounds i8,i8*%t,i64 8
%jr=bitcast i8*%jq to i8**
%js=load i8*,i8**%jr,align 8
%jt=bitcast i8*%js to i8**
%ju=load i8*,i8**%jt,align 8
store i8*%ju,i8**%d,align 8
%jv=getelementptr inbounds i8,i8*%js,i64 8
%jw=bitcast i8*%jv to i8**
%jx=load i8*,i8**%jw,align 8
store i8*%jx,i8**%e,align 8
%jy=call fastcc i8*@_SMLFN11RecordLabel3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jz=getelementptr inbounds i8,i8*%jy,i64 16
%jA=bitcast i8*%jz to i8*(i8*,i8*)**
%jB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jA,align 8
%jC=bitcast i8*%jy to i8**
%jD=load i8*,i8**%jC,align 8
store i8*%jD,i8**%f,align 8
%jE=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%jF=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1495(i8*inreg%jE)
%jG=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%jH=call fastcc i8*%jB(i8*inreg%jG,i8*inreg%jF)
%jI=getelementptr inbounds i8,i8*%jH,i64 16
%jJ=bitcast i8*%jI to i8*(i8*,i8*)**
%jK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jJ,align 8
%jL=bitcast i8*%jH to i8**
%jM=load i8*,i8**%jL,align 8
%jN=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%jO=call fastcc i8*%jK(i8*inreg%jM,i8*inreg%jN)
store i8*%jO,i8**%c,align 8
%jP=call i8*@sml_alloc(i32 inreg 20)#0
%jQ=getelementptr inbounds i8,i8*%jP,i64 -4
%jR=bitcast i8*%jQ to i32*
store i32 1342177296,i32*%jR,align 4
%jS=load i8*,i8**%c,align 8
%jT=bitcast i8*%jP to i8**
store i8*%jS,i8**%jT,align 8
%jU=load i8*,i8**%e,align 8
%jV=getelementptr inbounds i8,i8*%jP,i64 8
%jW=bitcast i8*%jV to i8**
store i8*%jU,i8**%jW,align 8
%jX=getelementptr inbounds i8,i8*%jP,i64 16
%jY=bitcast i8*%jX to i32*
store i32 3,i32*%jY,align 4
%jZ=tail call fastcc i8*@_SMLFN12TypedCalcCon8TPRECORDE(i8*inreg%jP)
ret i8*%jZ
j0:
store i8*null,i8**%d,align 8
%j1=getelementptr inbounds i8,i8*%t,i64 8
%j2=bitcast i8*%j1 to i8**
%j3=load i8*,i8**%j2,align 8
%j4=bitcast i8*%j3 to i32*
%j5=load i32,i32*%j4,align 4
%j6=getelementptr inbounds i8,i8*%j3,i64 8
%j7=bitcast i8*%j6 to i8**
%j8=load i8*,i8**%j7,align 8
%j9=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ka=call fastcc i8*@_SMLLLN17PolyTyElimination10compileVarE_1487(i8*inreg%j9,i8*inreg%j8)
store i8*%ka,i8**%c,align 8
%kb=call i8*@sml_alloc(i32 inreg 20)#0
%kc=bitcast i8*%kb to i32*
%kd=getelementptr inbounds i8,i8*%kb,i64 -4
%ke=bitcast i8*%kd to i32*
store i32 1342177296,i32*%ke,align 4
%kf=getelementptr inbounds i8,i8*%kb,i64 4
%kg=bitcast i8*%kf to i32*
store i32 0,i32*%kg,align 1
store i32%j5,i32*%kc,align 4
%kh=load i8*,i8**%c,align 8
%ki=getelementptr inbounds i8,i8*%kb,i64 8
%kj=bitcast i8*%ki to i8**
store i8*%kh,i8**%kj,align 8
%kk=getelementptr inbounds i8,i8*%kb,i64 16
%kl=bitcast i8*%kk to i32*
store i32 2,i32*%kl,align 4
%km=tail call fastcc i8*@_SMLFN12TypedCalcCon11TPRECFUNVARE(i8*inreg%kb)
ret i8*%km
kn:
%ko=getelementptr inbounds i8,i8*%t,i64 8
%kp=bitcast i8*%ko to i8**
%kq=load i8*,i8**%kp,align 8
%kr=bitcast i8*%kq to i8**
%ks=load i8*,i8**%kr,align 8
%kt=getelementptr inbounds i8,i8*%kq,i64 8
%ku=bitcast i8*%kt to i8**
%kv=load i8*,i8**%ku,align 8
store i8*%kv,i8**%d,align 8
%kw=getelementptr inbounds i8,i8*%kq,i64 16
%kx=bitcast i8*%kw to i8**
%ky=load i8*,i8**%kx,align 8
store i8*%ky,i8**%e,align 8
%kz=load i8*,i8**%c,align 8
%kA=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%kz,i8*inreg%ks)
store i8*%kA,i8**%f,align 8
%kB=load i8*,i8**%c,align 8
%kC=load i8*,i8**%e,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%e,align 8
%kD=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%kB,i8*inreg%kC)
store i8*%kD,i8**%c,align 8
%kE=call i8*@sml_alloc(i32 inreg 28)#0
%kF=getelementptr inbounds i8,i8*%kE,i64 -4
%kG=bitcast i8*%kF to i32*
store i32 1342177304,i32*%kG,align 4
%kH=load i8*,i8**%f,align 8
%kI=bitcast i8*%kE to i8**
store i8*%kH,i8**%kI,align 8
%kJ=load i8*,i8**%d,align 8
%kK=getelementptr inbounds i8,i8*%kE,i64 8
%kL=bitcast i8*%kK to i8**
store i8*%kJ,i8**%kL,align 8
%kM=load i8*,i8**%c,align 8
%kN=getelementptr inbounds i8,i8*%kE,i64 16
%kO=bitcast i8*%kN to i8**
store i8*%kM,i8**%kO,align 8
%kP=getelementptr inbounds i8,i8*%kE,i64 24
%kQ=bitcast i8*%kP to i32*
store i32 7,i32*%kQ,align 4
%kR=tail call fastcc i8*@_SMLFN12TypedCalcCon7TPRAISEE(i8*inreg%kE)
ret i8*%kR
kS:
%kT=getelementptr inbounds i8,i8*%t,i64 8
%kU=bitcast i8*%kT to i8**
%kV=load i8*,i8**%kU,align 8
%kW=bitcast i8*%kV to i8**
%kX=load i8*,i8**%kW,align 8
store i8*%kX,i8**%d,align 8
%kY=getelementptr inbounds i8,i8*%kV,i64 8
%kZ=bitcast i8*%kY to i8**
%k0=load i8*,i8**%kZ,align 8
store i8*%k0,i8**%e,align 8
%k1=getelementptr inbounds i8,i8*%kV,i64 16
%k2=bitcast i8*%k1 to i8**
%k3=load i8*,i8**%k2,align 8
store i8*%k3,i8**%f,align 8
%k4=getelementptr inbounds i8,i8*%kV,i64 24
%k5=bitcast i8*%k4 to i8**
%k6=load i8*,i8**%k5,align 8
store i8*%k6,i8**%g,align 8
%k7=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%k8=getelementptr inbounds i8,i8*%k7,i64 16
%k9=bitcast i8*%k8 to i8*(i8*,i8*)**
%la=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k9,align 8
%lb=bitcast i8*%k7 to i8**
%lc=load i8*,i8**%lb,align 8
store i8*%lc,i8**%i,align 8
%ld=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%le=getelementptr inbounds i8,i8*%ld,i64 16
%lf=bitcast i8*%le to i8*(i8*,i8*)**
%lg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%lf,align 8
%lh=bitcast i8*%ld to i8**
%li=load i8*,i8**%lh,align 8
store i8*%li,i8**%h,align 8
%lj=load i8*,i8**%c,align 8
%lk=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%lj)
%ll=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%lm=call fastcc i8*%lg(i8*inreg%ll,i8*inreg%lk)
%ln=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%lo=call fastcc i8*%la(i8*inreg%ln,i8*inreg%lm)
%lp=getelementptr inbounds i8,i8*%lo,i64 16
%lq=bitcast i8*%lp to i8*(i8*,i8*)**
%lr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%lq,align 8
%ls=bitcast i8*%lo to i8**
%lt=load i8*,i8**%ls,align 8
%lu=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%lv=call fastcc i8*%lr(i8*inreg%lt,i8*inreg%lu)
store i8*%lv,i8**%e,align 8
%lw=load i8*,i8**%c,align 8
%lx=load i8*,i8**%d,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%ly=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%lw,i8*inreg%lx)
store i8*%ly,i8**%c,align 8
%lz=call i8*@sml_alloc(i32 inreg 36)#0
%lA=getelementptr inbounds i8,i8*%lz,i64 -4
%lB=bitcast i8*%lA to i32*
store i32 1342177312,i32*%lB,align 4
%lC=load i8*,i8**%c,align 8
%lD=bitcast i8*%lz to i8**
store i8*%lC,i8**%lD,align 8
%lE=load i8*,i8**%e,align 8
%lF=getelementptr inbounds i8,i8*%lz,i64 8
%lG=bitcast i8*%lF to i8**
store i8*%lE,i8**%lG,align 8
%lH=load i8*,i8**%f,align 8
%lI=getelementptr inbounds i8,i8*%lz,i64 16
%lJ=bitcast i8*%lI to i8**
store i8*%lH,i8**%lJ,align 8
%lK=load i8*,i8**%g,align 8
%lL=getelementptr inbounds i8,i8*%lz,i64 24
%lM=bitcast i8*%lL to i8**
store i8*%lK,i8**%lM,align 8
%lN=getelementptr inbounds i8,i8*%lz,i64 32
%lO=bitcast i8*%lN to i32*
store i32 15,i32*%lO,align 4
%lP=tail call fastcc i8*@_SMLFN12TypedCalcCon11TPPRIMAPPLYE(i8*inreg%lz)
ret i8*%lP
lQ:
%lR=getelementptr inbounds i8,i8*%t,i64 8
%lS=bitcast i8*%lR to i8**
%lT=load i8*,i8**%lS,align 8
%lU=bitcast i8*%lT to i8**
%lV=load i8*,i8**%lU,align 8
store i8*%lV,i8**%d,align 8
%lW=getelementptr inbounds i8,i8*%lT,i64 8
%lX=bitcast i8*%lW to i8**
%lY=load i8*,i8**%lX,align 8
store i8*%lY,i8**%e,align 8
%lZ=getelementptr inbounds i8,i8*%lT,i64 16
%l0=bitcast i8*%lZ to i8**
%l1=load i8*,i8**%l0,align 8
store i8*%l1,i8**%f,align 8
%l2=getelementptr inbounds i8,i8*%lT,i64 32
%l3=bitcast i8*%l2 to i8**
%l4=load i8*,i8**%l3,align 8
store i8*%l4,i8**%g,align 8
%l5=call i8*@sml_alloc(i32 inreg 20)#0
%l6=getelementptr inbounds i8,i8*%l5,i64 -4
%l7=bitcast i8*%l6 to i32*
store i32 1342177296,i32*%l7,align 4
%l8=load i8*,i8**%d,align 8
%l9=bitcast i8*%l5 to i8**
store i8*%l8,i8**%l9,align 8
%ma=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%mb=getelementptr inbounds i8,i8*%l5,i64 8
%mc=bitcast i8*%mb to i8**
store i8*%ma,i8**%mc,align 8
%md=getelementptr inbounds i8,i8*%l5,i64 16
%me=bitcast i8*%md to i32*
store i32 3,i32*%me,align 4
%mf=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%mg=call fastcc i8*@_SMLLLN17PolyTyElimination13compileBtvEnvE_1341(i8*inreg%mf,i8*inreg%l5)
%mh=bitcast i8*%mg to i8**
%mi=load i8*,i8**%mh,align 8
store i8*%mi,i8**%c,align 8
%mj=getelementptr inbounds i8,i8*%mg,i64 8
%mk=bitcast i8*%mj to i8**
%ml=load i8*,i8**%mk,align 8
store i8*%ml,i8**%e,align 8
%mm=load i32*,i32**bitcast(i8**@_SMLZN7Control17verbosePolyTyElimE to i32**),align 8
%mn=load i32,i32*%mm,align 4
%mo=icmp slt i32%mn,1
br i1%mo,label%mB,label%mp
mp:
%mq=call i8*@sml_alloc(i32 inreg 20)#0
%mr=getelementptr inbounds i8,i8*%mq,i64 -4
%ms=bitcast i8*%mr to i32*
store i32 1342177296,i32*%ms,align 4
%mt=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%mu=bitcast i8*%mq to i8**
store i8*%mt,i8**%mu,align 8
%mv=load i8*,i8**%e,align 8
%mw=getelementptr inbounds i8,i8*%mq,i64 8
%mx=bitcast i8*%mw to i8**
store i8*%mv,i8**%mx,align 8
%my=getelementptr inbounds i8,i8*%mq,i64 16
%mz=bitcast i8*%my to i32*
store i32 3,i32*%mz,align 4
call fastcc void@_SMLLLN17PolyTyElimination9benchmarkE_1446(i8*inreg%mq)
%mA=load i8*,i8**%e,align 8
br label%mB
mB:
%mC=phi i8*[%ml,%lQ],[%mA,%mp]
%mD=icmp eq i8*%mC,null
br i1%mD,label%mE,label%mI
mE:
%mF=load i8*,i8**%g,align 8
%mG=load i8*,i8**%c,align 8
%mH=tail call fastcc i8*@_SMLLLN17PolyTyElimination8dummyExpE_1334(i8*inreg%mG,i8*inreg%mF)
ret i8*%mH
mI:
%mJ=bitcast i8*%mC to i8**
%mK=load i8*,i8**%mJ,align 8
%mL=bitcast i8*%mK to i8**
%mM=load i8*,i8**%mL,align 8
store i8*%mM,i8**%d,align 8
%mN=getelementptr inbounds i8,i8*%mK,i64 8
%mO=bitcast i8*%mN to i8**
%mP=load i8*,i8**%mO,align 8
store i8*%mP,i8**%e,align 8
%mQ=call fastcc i8*@_SMLFN14BoundTypeVarID3Map7isEmptyE(i32 inreg 1,i32 inreg 8)
%mR=getelementptr inbounds i8,i8*%mQ,i64 16
%mS=bitcast i8*%mR to i8*(i8*,i8*)**
%mT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mS,align 8
%mU=bitcast i8*%mQ to i8**
%mV=load i8*,i8**%mU,align 8
%mW=load i8*,i8**%d,align 8
%mX=call fastcc i8*%mT(i8*inreg%mV,i8*inreg%mW)
%mY=bitcast i8*%mX to i32*
%mZ=load i32,i32*%mY,align 4
%m0=icmp eq i32%mZ,0
br i1%m0,label%m4,label%m1
m1:
store i8*null,i8**%g,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%m2=load i8*,i8**%f,align 8
%m3=load i8*,i8**%c,align 8
store i8*null,i8**%f,align 8
br label%k
m4:
%m5=load i8*,i8**%f,align 8
%m6=load i8*,i8**%c,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%c,align 8
%m7=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%m6,i8*inreg%m5)
store i8*%m7,i8**%c,align 8
%m8=call i8*@sml_alloc(i32 inreg 36)#0
%m9=getelementptr inbounds i8,i8*%m8,i64 -4
%na=bitcast i8*%m9 to i32*
store i32 1342177312,i32*%na,align 4
%nb=load i8*,i8**%d,align 8
%nc=bitcast i8*%m8 to i8**
store i8*%nb,i8**%nc,align 8
%nd=load i8*,i8**%e,align 8
%ne=getelementptr inbounds i8,i8*%m8,i64 8
%nf=bitcast i8*%ne to i8**
store i8*%nd,i8**%nf,align 8
%ng=load i8*,i8**%c,align 8
%nh=getelementptr inbounds i8,i8*%m8,i64 16
%ni=bitcast i8*%nh to i8**
store i8*%ng,i8**%ni,align 8
%nj=load i8*,i8**%g,align 8
%nk=getelementptr inbounds i8,i8*%m8,i64 24
%nl=bitcast i8*%nk to i8**
store i8*%nj,i8**%nl,align 8
%nm=getelementptr inbounds i8,i8*%m8,i64 32
%nn=bitcast i8*%nm to i32*
store i32 15,i32*%nn,align 4
%no=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPPOLYE(i8*inreg%m8)
ret i8*%no
np:
%nq=getelementptr inbounds i8,i8*%t,i64 8
%nr=bitcast i8*%nq to i8**
%ns=load i8*,i8**%nr,align 8
%nt=bitcast i8*%ns to i8**
%nu=load i8*,i8**%nt,align 8
store i8*%nu,i8**%d,align 8
%nv=getelementptr inbounds i8,i8*%ns,i64 8
%nw=bitcast i8*%nv to i8**
%nx=load i8*,i8**%nw,align 8
store i8*%nx,i8**%e,align 8
%ny=getelementptr inbounds i8,i8*%ns,i64 16
%nz=bitcast i8*%ny to i8**
%nA=load i8*,i8**%nz,align 8
store i8*%nA,i8**%f,align 8
%nB=getelementptr inbounds i8,i8*%ns,i64 24
%nC=bitcast i8*%nB to i8**
%nD=load i8*,i8**%nC,align 8
store i8*%nD,i8**%g,align 8
%nE=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%nF=getelementptr inbounds i8,i8*%nE,i64 16
%nG=bitcast i8*%nF to i8*(i8*,i8*)**
%nH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nG,align 8
%nI=bitcast i8*%nE to i8**
%nJ=load i8*,i8**%nI,align 8
store i8*%nJ,i8**%h,align 8
%nK=load i8*,i8**%c,align 8
%nL=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%nK)
%nM=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%nN=call fastcc i8*%nH(i8*inreg%nM,i8*inreg%nL)
%nO=getelementptr inbounds i8,i8*%nN,i64 16
%nP=bitcast i8*%nO to i8*(i8*,i8*)**
%nQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nP,align 8
%nR=bitcast i8*%nN to i8**
%nS=load i8*,i8**%nR,align 8
%nT=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%nU=call fastcc i8*%nQ(i8*inreg%nS,i8*inreg%nT)
store i8*%nU,i8**%e,align 8
%nV=load i8*,i8**%c,align 8
%nW=load i8*,i8**%d,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%nX=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%nV,i8*inreg%nW)
store i8*%nX,i8**%c,align 8
%nY=call i8*@sml_alloc(i32 inreg 36)#0
%nZ=getelementptr inbounds i8,i8*%nY,i64 -4
%n0=bitcast i8*%nZ to i32*
store i32 1342177312,i32*%n0,align 4
%n1=load i8*,i8**%c,align 8
%n2=bitcast i8*%nY to i8**
store i8*%n1,i8**%n2,align 8
%n3=load i8*,i8**%e,align 8
%n4=getelementptr inbounds i8,i8*%nY,i64 8
%n5=bitcast i8*%n4 to i8**
store i8*%n3,i8**%n5,align 8
%n6=load i8*,i8**%f,align 8
%n7=getelementptr inbounds i8,i8*%nY,i64 16
%n8=bitcast i8*%n7 to i8**
store i8*%n6,i8**%n8,align 8
%n9=load i8*,i8**%g,align 8
%oa=getelementptr inbounds i8,i8*%nY,i64 24
%ob=bitcast i8*%oa to i8**
store i8*%n9,i8**%ob,align 8
%oc=getelementptr inbounds i8,i8*%nY,i64 32
%od=bitcast i8*%oc to i32*
store i32 15,i32*%od,align 4
%oe=tail call fastcc i8*@_SMLFN12TypedCalcCon12TPOPRIMAPPLYE(i8*inreg%nY)
ret i8*%oe
of:
%og=getelementptr inbounds i8,i8*%t,i64 8
%oh=bitcast i8*%og to i8**
%oi=load i8*,i8**%oh,align 8
%oj=bitcast i8*%oi to i8**
%ok=load i8*,i8**%oj,align 8
%ol=getelementptr inbounds i8,i8*%oi,i64 8
%om=bitcast i8*%ol to i8**
%on=load i8*,i8**%om,align 8
store i8*%on,i8**%d,align 8
%oo=getelementptr inbounds i8,i8*%oi,i64 16
%op=bitcast i8*%oo to i8**
%oq=load i8*,i8**%op,align 8
store i8*%oq,i8**%e,align 8
%or=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%os=call fastcc i8*@_SMLLLN17PolyTyElimination14compileMonoLetE_1492(i8*inreg%or,i8*inreg%ok)
%ot=bitcast i8*%os to i8**
%ou=load i8*,i8**%ot,align 8
store i8*%ou,i8**%c,align 8
%ov=getelementptr inbounds i8,i8*%os,i64 8
%ow=bitcast i8*%ov to i8**
%ox=load i8*,i8**%ow,align 8
%oy=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%oz=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%ox,i8*inreg%oy)
store i8*%oz,i8**%d,align 8
%oA=call i8*@sml_alloc(i32 inreg 28)#0
%oB=getelementptr inbounds i8,i8*%oA,i64 -4
%oC=bitcast i8*%oB to i32*
store i32 1342177304,i32*%oC,align 4
%oD=load i8*,i8**%c,align 8
%oE=bitcast i8*%oA to i8**
store i8*%oD,i8**%oE,align 8
%oF=load i8*,i8**%d,align 8
%oG=getelementptr inbounds i8,i8*%oA,i64 8
%oH=bitcast i8*%oG to i8**
store i8*%oF,i8**%oH,align 8
%oI=load i8*,i8**%e,align 8
%oJ=getelementptr inbounds i8,i8*%oA,i64 16
%oK=bitcast i8*%oJ to i8**
store i8*%oI,i8**%oK,align 8
%oL=getelementptr inbounds i8,i8*%oA,i64 24
%oM=bitcast i8*%oL to i32*
store i32 7,i32*%oM,align 4
%oN=tail call fastcc i8*@_SMLFN12TypedCalcCon9TPMONOLETE(i8*inreg%oA)
ret i8*%oN
oO:
%oP=getelementptr inbounds i8,i8*%t,i64 8
%oQ=bitcast i8*%oP to i8**
%oR=load i8*,i8**%oQ,align 8
%oS=bitcast i8*%oR to i8**
%oT=load i8*,i8**%oS,align 8
store i8*%oT,i8**%d,align 8
%oU=getelementptr inbounds i8,i8*%oR,i64 16
%oV=bitcast i8*%oU to i8**
%oW=load i8*,i8**%oV,align 8
store i8*%oW,i8**%e,align 8
%oX=getelementptr inbounds i8,i8*%oR,i64 24
%oY=bitcast i8*%oX to i8**
%oZ=load i8*,i8**%oY,align 8
store i8*%oZ,i8**%f,align 8
%o0=getelementptr inbounds i8,i8*%oR,i64 32
%o1=bitcast i8*%o0 to i8**
%o2=load i8*,i8**%o1,align 8
store i8*%o2,i8**%g,align 8
%o3=load i8*,i8**%c,align 8
%o4=getelementptr inbounds i8,i8*%o3,i64 8
%o5=bitcast i8*%o4 to i8***
%o6=load i8**,i8***%o5,align 8
%o7=load i8*,i8**%o6,align 8
store i8*%o7,i8**%h,align 8
%o8=call i8*@sml_alloc(i32 inreg 12)#0
%o9=getelementptr inbounds i8,i8*%o8,i64 -4
%pa=bitcast i8*%o9 to i32*
store i32 1342177288,i32*%pa,align 4
%pb=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%pc=bitcast i8*%o8 to i8**
store i8*%pb,i8**%pc,align 8
%pd=getelementptr inbounds i8,i8*%o8,i64 8
%pe=bitcast i8*%pd to i32*
store i32 1,i32*%pe,align 4
%pf=call fastcc i8*@_SMLFN12TypedCalcCon8TPMODIFYE(i8*inreg%o8)
store i8*%pf,i8**%h,align 8
%pg=load i8*,i8**%c,align 8
%ph=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%pi=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%pg,i8*inreg%ph)
store i8*%pi,i8**%g,align 8
%pj=load i8*,i8**%h,align 8
%pk=getelementptr inbounds i8,i8*%pj,i64 16
%pl=bitcast i8*%pk to i8*(i8*,i8*)**
%pm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%pl,align 8
%pn=bitcast i8*%pj to i8**
%po=load i8*,i8**%pn,align 8
store i8*%po,i8**%h,align 8
%pp=load i8*,i8**%c,align 8
%pq=load i8*,i8**%d,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%pr=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%pp,i8*inreg%pq)
store i8*%pr,i8**%c,align 8
%ps=call i8*@sml_alloc(i32 inreg 36)#0
%pt=getelementptr inbounds i8,i8*%ps,i64 -4
%pu=bitcast i8*%pt to i32*
store i32 1342177312,i32*%pu,align 4
%pv=load i8*,i8**%c,align 8
%pw=bitcast i8*%ps to i8**
store i8*%pv,i8**%pw,align 8
%px=load i8*,i8**%e,align 8
%py=getelementptr inbounds i8,i8*%ps,i64 8
%pz=bitcast i8*%py to i8**
store i8*%px,i8**%pz,align 8
%pA=load i8*,i8**%f,align 8
%pB=getelementptr inbounds i8,i8*%ps,i64 16
%pC=bitcast i8*%pB to i8**
store i8*%pA,i8**%pC,align 8
%pD=load i8*,i8**%g,align 8
%pE=getelementptr inbounds i8,i8*%ps,i64 24
%pF=bitcast i8*%pE to i8**
store i8*%pD,i8**%pF,align 8
%pG=getelementptr inbounds i8,i8*%ps,i64 32
%pH=bitcast i8*%pG to i32*
store i32 15,i32*%pH,align 4
%pI=load i8*,i8**%h,align 8
%pJ=tail call fastcc i8*%pm(i8*inreg%pI,i8*inreg%ps)
ret i8*%pJ
pK:
%pL=getelementptr inbounds i8,i8*%t,i64 8
%pM=bitcast i8*%pL to i8**
%pN=load i8*,i8**%pM,align 8
%pO=bitcast i8*%pN to i8**
%pP=load i8*,i8**%pO,align 8
store i8*%pP,i8**%d,align 8
%pQ=getelementptr inbounds i8,i8*%pN,i64 8
%pR=bitcast i8*%pQ to i8**
%pS=load i8*,i8**%pR,align 8
%pT=getelementptr inbounds i8,i8*%pN,i64 16
%pU=bitcast i8*%pT to i8**
%pV=load i8*,i8**%pU,align 8
store i8*%pV,i8**%e,align 8
%pW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%pX=call fastcc i8*@_SMLLLN17PolyTyElimination15compileDeclListE_1494(i8*inreg%pW,i8*inreg%pS)
%pY=bitcast i8*%pX to i8**
%pZ=load i8*,i8**%pY,align 8
store i8*%pZ,i8**%c,align 8
%p0=getelementptr inbounds i8,i8*%pX,i64 8
%p1=bitcast i8*%p0 to i8**
%p2=load i8*,i8**%p1,align 8
%p3=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%p4=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%p2,i8*inreg%p3)
store i8*%p4,i8**%d,align 8
%p5=call i8*@sml_alloc(i32 inreg 28)#0
%p6=getelementptr inbounds i8,i8*%p5,i64 -4
%p7=bitcast i8*%p6 to i32*
store i32 1342177304,i32*%p7,align 4
%p8=load i8*,i8**%d,align 8
%p9=bitcast i8*%p5 to i8**
store i8*%p8,i8**%p9,align 8
%qa=load i8*,i8**%c,align 8
%qb=getelementptr inbounds i8,i8*%p5,i64 8
%qc=bitcast i8*%qb to i8**
store i8*%qa,i8**%qc,align 8
%qd=load i8*,i8**%e,align 8
%qe=getelementptr inbounds i8,i8*%p5,i64 16
%qf=bitcast i8*%qe to i8**
store i8*%qd,i8**%qf,align 8
%qg=getelementptr inbounds i8,i8*%p5,i64 24
%qh=bitcast i8*%qg to i32*
store i32 7,i32*%qh,align 4
%qi=tail call fastcc i8*@_SMLFN12TypedCalcCon5TPLETE(i8*inreg%p5)
ret i8*%qi
qj:
%qk=getelementptr inbounds i8,i8*%t,i64 8
%ql=bitcast i8*%qk to i8**
%qm=load i8*,i8**%ql,align 8
%qn=bitcast i8*%qm to i8**
%qo=load i8*,i8**%qn,align 8
store i8*%qo,i8**%d,align 8
%qp=getelementptr inbounds i8,i8*%qm,i64 8
%qq=bitcast i8*%qp to i8**
%qr=load i8*,i8**%qq,align 8
store i8*%qr,i8**%e,align 8
%qs=getelementptr inbounds i8,i8*%qm,i64 16
%qt=bitcast i8*%qs to i8**
%qu=load i8*,i8**%qt,align 8
store i8*%qu,i8**%f,align 8
%qv=getelementptr inbounds i8,i8*%qm,i64 24
%qw=bitcast i8*%qv to i8**
%qx=load i8*,i8**%qw,align 8
store i8*%qx,i8**%g,align 8
%qy=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%qz=getelementptr inbounds i8,i8*%qy,i64 16
%qA=bitcast i8*%qz to i8*(i8*,i8*)**
%qB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qA,align 8
%qC=bitcast i8*%qy to i8**
%qD=load i8*,i8**%qC,align 8
store i8*%qD,i8**%h,align 8
%qE=load i8*,i8**%c,align 8
%qF=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1495(i8*inreg%qE)
%qG=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%qH=call fastcc i8*%qB(i8*inreg%qG,i8*inreg%qF)
%qI=getelementptr inbounds i8,i8*%qH,i64 16
%qJ=bitcast i8*%qI to i8*(i8*,i8*)**
%qK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qJ,align 8
%qL=bitcast i8*%qH to i8**
%qM=load i8*,i8**%qL,align 8
%qN=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%qO=call fastcc i8*%qK(i8*inreg%qM,i8*inreg%qN)
store i8*%qO,i8**%d,align 8
%qP=load i8*,i8**%c,align 8
%qQ=load i8*,i8**%g,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%g,align 8
%qR=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%qP,i8*inreg%qQ)
store i8*%qR,i8**%c,align 8
%qS=call i8*@sml_alloc(i32 inreg 36)#0
%qT=getelementptr inbounds i8,i8*%qS,i64 -4
%qU=bitcast i8*%qT to i32*
store i32 1342177312,i32*%qU,align 4
%qV=load i8*,i8**%d,align 8
%qW=bitcast i8*%qS to i8**
store i8*%qV,i8**%qW,align 8
%qX=load i8*,i8**%e,align 8
%qY=getelementptr inbounds i8,i8*%qS,i64 8
%qZ=bitcast i8*%qY to i8**
store i8*%qX,i8**%qZ,align 8
%q0=load i8*,i8**%f,align 8
%q1=getelementptr inbounds i8,i8*%qS,i64 16
%q2=bitcast i8*%q1 to i8**
store i8*%q0,i8**%q2,align 8
%q3=load i8*,i8**%c,align 8
%q4=getelementptr inbounds i8,i8*%qS,i64 24
%q5=bitcast i8*%q4 to i8**
store i8*%q3,i8**%q5,align 8
%q6=getelementptr inbounds i8,i8*%qS,i64 32
%q7=bitcast i8*%q6 to i32*
store i32 15,i32*%q7,align 4
%q8=tail call fastcc i8*@_SMLFN12TypedCalcCon7TPTHROWE(i8*inreg%qS)
ret i8*%q8
q9:
%ra=getelementptr inbounds i8,i8*%t,i64 8
%rb=bitcast i8*%ra to i8**
%rc=load i8*,i8**%rb,align 8
%rd=bitcast i8*%rc to i8**
%re=load i8*,i8**%rd,align 8
store i8*%re,i8**%d,align 8
%rf=getelementptr inbounds i8,i8*%rc,i64 8
%rg=bitcast i8*%rf to i8**
%rh=load i8*,i8**%rg,align 8
store i8*%rh,i8**%e,align 8
%ri=getelementptr inbounds i8,i8*%rc,i64 16
%rj=bitcast i8*%ri to i8**
%rk=load i8*,i8**%rj,align 8
store i8*%rk,i8**%f,align 8
%rl=getelementptr inbounds i8,i8*%rc,i64 24
%rm=bitcast i8*%rl to i8**
%rn=load i8*,i8**%rm,align 8
store i8*%rn,i8**%g,align 8
%ro=getelementptr inbounds i8,i8*%rc,i64 40
%rp=bitcast i8*%ro to i8**
%rq=load i8*,i8**%rp,align 8
store i8*%rq,i8**%h,align 8
%rr=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%rs=getelementptr inbounds i8,i8*%rr,i64 16
%rt=bitcast i8*%rs to i8*(i8*,i8*)**
%ru=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rt,align 8
%rv=bitcast i8*%rr to i8**
%rw=load i8*,i8**%rv,align 8
store i8*%rw,i8**%i,align 8
%rx=load i8*,i8**%c,align 8
%ry=call fastcc i8*@_SMLLLN17PolyTyElimination14compileVarInfoE_1461(i8*inreg%rx)
%rz=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%rA=call fastcc i8*%ru(i8*inreg%rz,i8*inreg%ry)
%rB=getelementptr inbounds i8,i8*%rA,i64 16
%rC=bitcast i8*%rB to i8*(i8*,i8*)**
%rD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rC,align 8
%rE=bitcast i8*%rA to i8**
%rF=load i8*,i8**%rE,align 8
%rG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%rH=call fastcc i8*%rD(i8*inreg%rF,i8*inreg%rG)
store i8*%rH,i8**%d,align 8
%rI=load i8*,i8**%c,align 8
%rJ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%rK=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%rI,i8*inreg%rJ)
store i8*%rK,i8**%h,align 8
%rL=load i8*,i8**%d,align 8
%rM=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%rL)
store i8*%rM,i8**%i,align 8
%rN=load i8*,i8**%c,align 8
%rO=getelementptr inbounds i8,i8*%rN,i64 8
%rP=bitcast i8*%rO to i8**
%rQ=load i8*,i8**%rP,align 8
store i8*%rQ,i8**%j,align 8
%rR=call i8*@sml_alloc(i32 inreg 20)#0
%rS=getelementptr inbounds i8,i8*%rR,i64 -4
%rT=bitcast i8*%rS to i32*
store i32 1342177296,i32*%rT,align 4
%rU=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%rV=bitcast i8*%rR to i8**
store i8*%rU,i8**%rV,align 8
%rW=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%rX=getelementptr inbounds i8,i8*%rR,i64 8
%rY=bitcast i8*%rX to i8**
store i8*%rW,i8**%rY,align 8
%rZ=getelementptr inbounds i8,i8*%rR,i64 16
%r0=bitcast i8*%rZ to i32*
store i32 3,i32*%r0,align 4
%r1=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%rR)
store i8*%r1,i8**%i,align 8
%r2=load i8*,i8**%c,align 8
%r3=bitcast i8*%r2 to i32*
%r4=load i32,i32*%r3,align 4
%r5=getelementptr inbounds i8,i8*%r2,i64 16
%r6=bitcast i8*%r5 to i8**
%r7=load i8*,i8**%r6,align 8
store i8*%r7,i8**%j,align 8
%r8=getelementptr inbounds i8,i8*%r2,i64 24
%r9=bitcast i8*%r8 to i8**
%sa=load i8*,i8**%r9,align 8
store i8*%sa,i8**%c,align 8
%sb=call i8*@sml_alloc(i32 inreg 36)#0
%sc=bitcast i8*%sb to i32*
%sd=getelementptr inbounds i8,i8*%sb,i64 -4
%se=bitcast i8*%sd to i32*
store i32 1342177312,i32*%se,align 4
%sf=getelementptr inbounds i8,i8*%sb,i64 4
%sg=bitcast i8*%sf to i32*
store i32 0,i32*%sg,align 1
store i32%r4,i32*%sc,align 4
%sh=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%si=getelementptr inbounds i8,i8*%sb,i64 8
%sj=bitcast i8*%si to i8**
store i8*%sh,i8**%sj,align 8
%sk=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%sl=getelementptr inbounds i8,i8*%sb,i64 16
%sm=bitcast i8*%sl to i8**
store i8*%sk,i8**%sm,align 8
%sn=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%so=getelementptr inbounds i8,i8*%sb,i64 24
%sp=bitcast i8*%so to i8**
store i8*%sn,i8**%sp,align 8
%sq=getelementptr inbounds i8,i8*%sb,i64 32
%sr=bitcast i8*%sq to i32*
store i32 14,i32*%sr,align 4
%ss=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%st=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%sb,i8*inreg%ss)
store i8*%st,i8**%c,align 8
%su=call i8*@sml_alloc(i32 inreg 44)#0
%sv=getelementptr inbounds i8,i8*%su,i64 -4
%sw=bitcast i8*%sv to i32*
store i32 1342177320,i32*%sw,align 4
%sx=load i8*,i8**%d,align 8
%sy=bitcast i8*%su to i8**
store i8*%sx,i8**%sy,align 8
%sz=load i8*,i8**%c,align 8
%sA=getelementptr inbounds i8,i8*%su,i64 8
%sB=bitcast i8*%sA to i8**
store i8*%sz,i8**%sB,align 8
%sC=load i8*,i8**%f,align 8
%sD=getelementptr inbounds i8,i8*%su,i64 16
%sE=bitcast i8*%sD to i8**
store i8*%sC,i8**%sE,align 8
%sF=load i8*,i8**%g,align 8
%sG=getelementptr inbounds i8,i8*%su,i64 24
%sH=bitcast i8*%sG to i8**
store i8*%sF,i8**%sH,align 8
%sI=load i8*,i8**%h,align 8
%sJ=getelementptr inbounds i8,i8*%su,i64 32
%sK=bitcast i8*%sJ to i8**
store i8*%sI,i8**%sK,align 8
%sL=getelementptr inbounds i8,i8*%su,i64 40
%sM=bitcast i8*%sL to i32*
store i32 31,i32*%sM,align 4
%sN=tail call fastcc i8*@_SMLFN12TypedCalcCon7TPCATCHE(i8*inreg%su)
ret i8*%sN
sO:
%sP=getelementptr inbounds i8,i8*%t,i64 8
%sQ=bitcast i8*%sP to i8**
%sR=load i8*,i8**%sQ,align 8
%sS=bitcast i8*%sR to i8**
%sT=load i8*,i8**%sS,align 8
%sU=getelementptr inbounds i8,i8*%sR,i64 8
%sV=bitcast i8*%sU to i8**
%sW=load i8*,i8**%sV,align 8
store i8*%sW,i8**%d,align 8
%sX=getelementptr inbounds i8,i8*%sR,i64 16
%sY=bitcast i8*%sX to i8**
%sZ=load i8*,i8**%sY,align 8
store i8*%sZ,i8**%e,align 8
%s0=getelementptr inbounds i8,i8*%sR,i64 24
%s1=bitcast i8*%s0 to i8**
%s2=load i8*,i8**%s1,align 8
store i8*%s2,i8**%f,align 8
%s3=load i8*,i8**%c,align 8
%s4=call fastcc i8*@_SMLLLN17PolyTyElimination14compileVarInfoE_1458(i8*inreg%s3,i8*inreg%sT)
store i8*%s4,i8**%g,align 8
%s5=load i8*,i8**%c,align 8
%s6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%s7=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%s5,i8*inreg%s6)
store i8*%s7,i8**%d,align 8
%s8=call i8*@sml_alloc(i32 inreg 20)#0
%s9=getelementptr inbounds i8,i8*%s8,i64 -4
%ta=bitcast i8*%s9 to i32*
store i32 1342177296,i32*%ta,align 4
%tb=load i8*,i8**%g,align 8
%tc=bitcast i8*%s8 to i8**
store i8*%tb,i8**%tc,align 8
%td=getelementptr inbounds i8,i8*%s8,i64 8
%te=bitcast i8*%td to i8**
store i8*null,i8**%te,align 8
%tf=getelementptr inbounds i8,i8*%s8,i64 16
%tg=bitcast i8*%tf to i32*
store i32 3,i32*%tg,align 4
%th=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%s8)
store i8*%th,i8**%h,align 8
%ti=load i8*,i8**%c,align 8
%tj=getelementptr inbounds i8,i8*%ti,i64 8
%tk=bitcast i8*%tj to i8**
%tl=load i8*,i8**%tk,align 8
store i8*%tl,i8**%i,align 8
%tm=call i8*@sml_alloc(i32 inreg 20)#0
%tn=getelementptr inbounds i8,i8*%tm,i64 -4
%to=bitcast i8*%tn to i32*
store i32 1342177296,i32*%to,align 4
%tp=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%tq=bitcast i8*%tm to i8**
store i8*%tp,i8**%tq,align 8
%tr=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ts=getelementptr inbounds i8,i8*%tm,i64 8
%tt=bitcast i8*%ts to i8**
store i8*%tr,i8**%tt,align 8
%tu=getelementptr inbounds i8,i8*%tm,i64 16
%tv=bitcast i8*%tu to i32*
store i32 3,i32*%tv,align 4
%tw=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%tm)
store i8*%tw,i8**%h,align 8
%tx=load i8*,i8**%c,align 8
%ty=bitcast i8*%tx to i32*
%tz=load i32,i32*%ty,align 4
%tA=getelementptr inbounds i8,i8*%tx,i64 16
%tB=bitcast i8*%tA to i8**
%tC=load i8*,i8**%tB,align 8
store i8*%tC,i8**%i,align 8
%tD=getelementptr inbounds i8,i8*%tx,i64 24
%tE=bitcast i8*%tD to i8**
%tF=load i8*,i8**%tE,align 8
store i8*%tF,i8**%c,align 8
%tG=call i8*@sml_alloc(i32 inreg 36)#0
%tH=bitcast i8*%tG to i32*
%tI=getelementptr inbounds i8,i8*%tG,i64 -4
%tJ=bitcast i8*%tI to i32*
store i32 1342177312,i32*%tJ,align 4
%tK=getelementptr inbounds i8,i8*%tG,i64 4
%tL=bitcast i8*%tK to i32*
store i32 0,i32*%tL,align 1
store i32%tz,i32*%tH,align 4
%tM=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%tN=getelementptr inbounds i8,i8*%tG,i64 8
%tO=bitcast i8*%tN to i8**
store i8*%tM,i8**%tO,align 8
%tP=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%tQ=getelementptr inbounds i8,i8*%tG,i64 16
%tR=bitcast i8*%tQ to i8**
store i8*%tP,i8**%tR,align 8
%tS=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%tT=getelementptr inbounds i8,i8*%tG,i64 24
%tU=bitcast i8*%tT to i8**
store i8*%tS,i8**%tU,align 8
%tV=getelementptr inbounds i8,i8*%tG,i64 32
%tW=bitcast i8*%tV to i32*
store i32 14,i32*%tW,align 4
%tX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%tY=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%tG,i8*inreg%tX)
store i8*%tY,i8**%c,align 8
%tZ=call i8*@sml_alloc(i32 inreg 36)#0
%t0=getelementptr inbounds i8,i8*%tZ,i64 -4
%t1=bitcast i8*%t0 to i32*
store i32 1342177312,i32*%t1,align 4
%t2=load i8*,i8**%g,align 8
%t3=bitcast i8*%tZ to i8**
store i8*%t2,i8**%t3,align 8
%t4=load i8*,i8**%d,align 8
%t5=getelementptr inbounds i8,i8*%tZ,i64 8
%t6=bitcast i8*%t5 to i8**
store i8*%t4,i8**%t6,align 8
%t7=load i8*,i8**%c,align 8
%t8=getelementptr inbounds i8,i8*%tZ,i64 16
%t9=bitcast i8*%t8 to i8**
store i8*%t7,i8**%t9,align 8
%ua=load i8*,i8**%f,align 8
%ub=getelementptr inbounds i8,i8*%tZ,i64 24
%uc=bitcast i8*%ub to i8**
store i8*%ua,i8**%uc,align 8
%ud=getelementptr inbounds i8,i8*%tZ,i64 32
%ue=bitcast i8*%ud to i32*
store i32 15,i32*%ue,align 4
%uf=tail call fastcc i8*@_SMLFN12TypedCalcCon8TPHANDLEE(i8*inreg%tZ)
ret i8*%uf
ug:
%uh=getelementptr inbounds i8,i8*%t,i64 8
%ui=bitcast i8*%uh to i8**
%uj=load i8*,i8**%ui,align 8
%uk=bitcast i8*%uj to i8**
%ul=load i8*,i8**%uk,align 8
store i8*%ul,i8**%d,align 8
%um=getelementptr inbounds i8,i8*%uj,i64 8
%un=bitcast i8*%um to i8**
%uo=load i8*,i8**%un,align 8
store i8*%uo,i8**%e,align 8
%up=getelementptr inbounds i8,i8*%uj,i64 24
%uq=bitcast i8*%up to i8**
%ur=load i8*,i8**%uq,align 8
store i8*%ur,i8**%f,align 8
%us=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ut=getelementptr inbounds i8,i8*%us,i64 16
%uu=bitcast i8*%ut to i8*(i8*,i8*)**
%uv=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%uu,align 8
%uw=bitcast i8*%us to i8**
%ux=load i8*,i8**%uw,align 8
store i8*%ux,i8**%g,align 8
%uy=load i8*,i8**%c,align 8
%uz=call fastcc i8*@_SMLLLN17PolyTyElimination14compileVarInfoE_1461(i8*inreg%uy)
%uA=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%uB=call fastcc i8*%uv(i8*inreg%uA,i8*inreg%uz)
%uC=getelementptr inbounds i8,i8*%uB,i64 16
%uD=bitcast i8*%uC to i8*(i8*,i8*)**
%uE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%uD,align 8
%uF=bitcast i8*%uB to i8**
%uG=load i8*,i8**%uF,align 8
%uH=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%uI=call fastcc i8*%uE(i8*inreg%uG,i8*inreg%uH)
store i8*%uI,i8**%d,align 8
%uJ=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%uI)
store i8*%uJ,i8**%g,align 8
%uK=load i8*,i8**%c,align 8
%uL=getelementptr inbounds i8,i8*%uK,i64 8
%uM=bitcast i8*%uL to i8**
%uN=load i8*,i8**%uM,align 8
store i8*%uN,i8**%h,align 8
%uO=call i8*@sml_alloc(i32 inreg 20)#0
%uP=getelementptr inbounds i8,i8*%uO,i64 -4
%uQ=bitcast i8*%uP to i32*
store i32 1342177296,i32*%uQ,align 4
%uR=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%uS=bitcast i8*%uO to i8**
store i8*%uR,i8**%uS,align 8
%uT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%uU=getelementptr inbounds i8,i8*%uO,i64 8
%uV=bitcast i8*%uU to i8**
store i8*%uT,i8**%uV,align 8
%uW=getelementptr inbounds i8,i8*%uO,i64 16
%uX=bitcast i8*%uW to i32*
store i32 3,i32*%uX,align 4
%uY=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%uO)
store i8*%uY,i8**%g,align 8
%uZ=load i8*,i8**%c,align 8
%u0=bitcast i8*%uZ to i32*
%u1=load i32,i32*%u0,align 4
%u2=getelementptr inbounds i8,i8*%uZ,i64 16
%u3=bitcast i8*%u2 to i8**
%u4=load i8*,i8**%u3,align 8
store i8*%u4,i8**%h,align 8
%u5=getelementptr inbounds i8,i8*%uZ,i64 24
%u6=bitcast i8*%u5 to i8**
%u7=load i8*,i8**%u6,align 8
store i8*%u7,i8**%c,align 8
%u8=call i8*@sml_alloc(i32 inreg 36)#0
%u9=bitcast i8*%u8 to i32*
%va=getelementptr inbounds i8,i8*%u8,i64 -4
%vb=bitcast i8*%va to i32*
store i32 1342177312,i32*%vb,align 4
%vc=getelementptr inbounds i8,i8*%u8,i64 4
%vd=bitcast i8*%vc to i32*
store i32 0,i32*%vd,align 1
store i32%u1,i32*%u9,align 4
%ve=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%vf=getelementptr inbounds i8,i8*%u8,i64 8
%vg=bitcast i8*%vf to i8**
store i8*%ve,i8**%vg,align 8
%vh=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%vi=getelementptr inbounds i8,i8*%u8,i64 16
%vj=bitcast i8*%vi to i8**
store i8*%vh,i8**%vj,align 8
%vk=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%vl=getelementptr inbounds i8,i8*%u8,i64 24
%vm=bitcast i8*%vl to i8**
store i8*%vk,i8**%vm,align 8
%vn=getelementptr inbounds i8,i8*%u8,i64 32
%vo=bitcast i8*%vn to i32*
store i32 14,i32*%vo,align 4
%vp=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%vq=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%u8,i8*inreg%vp)
store i8*%vq,i8**%c,align 8
%vr=call i8*@sml_alloc(i32 inreg 28)#0
%vs=getelementptr inbounds i8,i8*%vr,i64 -4
%vt=bitcast i8*%vs to i32*
store i32 1342177304,i32*%vt,align 4
%vu=load i8*,i8**%d,align 8
%vv=bitcast i8*%vr to i8**
store i8*%vu,i8**%vv,align 8
%vw=load i8*,i8**%c,align 8
%vx=getelementptr inbounds i8,i8*%vr,i64 8
%vy=bitcast i8*%vx to i8**
store i8*%vw,i8**%vy,align 8
%vz=load i8*,i8**%f,align 8
%vA=getelementptr inbounds i8,i8*%vr,i64 16
%vB=bitcast i8*%vA to i8**
store i8*%vz,i8**%vB,align 8
%vC=getelementptr inbounds i8,i8*%vr,i64 24
%vD=bitcast i8*%vC to i32*
store i32 7,i32*%vD,align 4
%vE=tail call fastcc i8*@_SMLFN12TypedCalcCon5TPFNME(i8*inreg%vr)
ret i8*%vE
vF:
%vG=getelementptr inbounds i8,i8*%t,i64 8
%vH=bitcast i8*%vG to i8**
%vI=load i8*,i8**%vH,align 8
%vJ=bitcast i8*%vI to i8**
%vK=load i8*,i8**%vJ,align 8
store i8*%vK,i8**%d,align 8
%vL=getelementptr inbounds i8,i8*%vI,i64 8
%vM=bitcast i8*%vL to i8**
%vN=load i8*,i8**%vM,align 8
store i8*%vN,i8**%e,align 8
%vO=getelementptr inbounds i8,i8*%vI,i64 16
%vP=bitcast i8*%vO to i8**
%vQ=load i8*,i8**%vP,align 8
store i8*%vQ,i8**%f,align 8
%vR=getelementptr inbounds i8,i8*%vI,i64 24
%vS=bitcast i8*%vR to i8**
%vT=load i8*,i8**%vS,align 8
store i8*%vT,i8**%g,align 8
%vU=getelementptr inbounds i8,i8*%vI,i64 32
%vV=bitcast i8*%vU to i8**
%vW=load i8*,i8**%vV,align 8
store i8*%vW,i8**%h,align 8
%vX=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%vY=getelementptr inbounds i8,i8*%vX,i64 16
%vZ=bitcast i8*%vY to i8*(i8*,i8*)**
%v0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%vZ,align 8
%v1=bitcast i8*%vX to i8**
%v2=load i8*,i8**%v1,align 8
store i8*%v2,i8**%i,align 8
%v3=load i8*,i8**%c,align 8
%v4=call fastcc i8*@_SMLLLN17PolyTyElimination14compileVarInfoE_1461(i8*inreg%v3)
%v5=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%v6=call fastcc i8*%v0(i8*inreg%v5,i8*inreg%v4)
%v7=getelementptr inbounds i8,i8*%v6,i64 16
%v8=bitcast i8*%v7 to i8*(i8*,i8*)**
%v9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v8,align 8
%wa=bitcast i8*%v6 to i8**
%wb=load i8*,i8**%wa,align 8
%wc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%wd=call fastcc i8*%v9(i8*inreg%wb,i8*inreg%wc)
store i8*%wd,i8**%d,align 8
%we=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%wd)
store i8*%we,i8**%i,align 8
%wf=load i8*,i8**%c,align 8
%wg=getelementptr inbounds i8,i8*%wf,i64 8
%wh=bitcast i8*%wg to i8**
%wi=load i8*,i8**%wh,align 8
store i8*%wi,i8**%j,align 8
%wj=call i8*@sml_alloc(i32 inreg 20)#0
%wk=getelementptr inbounds i8,i8*%wj,i64 -4
%wl=bitcast i8*%wk to i32*
store i32 1342177296,i32*%wl,align 4
%wm=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%wn=bitcast i8*%wj to i8**
store i8*%wm,i8**%wn,align 8
%wo=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%wp=getelementptr inbounds i8,i8*%wj,i64 8
%wq=bitcast i8*%wp to i8**
store i8*%wo,i8**%wq,align 8
%wr=getelementptr inbounds i8,i8*%wj,i64 16
%ws=bitcast i8*%wr to i32*
store i32 3,i32*%ws,align 4
%wt=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%wj)
store i8*%wt,i8**%i,align 8
%wu=load i8*,i8**%c,align 8
%wv=bitcast i8*%wu to i32*
%ww=load i32,i32*%wv,align 4
%wx=getelementptr inbounds i8,i8*%wu,i64 16
%wy=bitcast i8*%wx to i8**
%wz=load i8*,i8**%wy,align 8
store i8*%wz,i8**%j,align 8
%wA=getelementptr inbounds i8,i8*%wu,i64 24
%wB=bitcast i8*%wA to i8**
%wC=load i8*,i8**%wB,align 8
store i8*%wC,i8**%c,align 8
%wD=call i8*@sml_alloc(i32 inreg 36)#0
%wE=bitcast i8*%wD to i32*
%wF=getelementptr inbounds i8,i8*%wD,i64 -4
%wG=bitcast i8*%wF to i32*
store i32 1342177312,i32*%wG,align 4
%wH=getelementptr inbounds i8,i8*%wD,i64 4
%wI=bitcast i8*%wH to i32*
store i32 0,i32*%wI,align 1
store i32%ww,i32*%wE,align 4
%wJ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%wK=getelementptr inbounds i8,i8*%wD,i64 8
%wL=bitcast i8*%wK to i8**
store i8*%wJ,i8**%wL,align 8
%wM=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%wN=getelementptr inbounds i8,i8*%wD,i64 16
%wO=bitcast i8*%wN to i8**
store i8*%wM,i8**%wO,align 8
%wP=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%wQ=getelementptr inbounds i8,i8*%wD,i64 24
%wR=bitcast i8*%wQ to i8**
store i8*%wP,i8**%wR,align 8
%wS=getelementptr inbounds i8,i8*%wD,i64 32
%wT=bitcast i8*%wS to i32*
store i32 14,i32*%wT,align 4
%wU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%wV=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%wD,i8*inreg%wU)
store i8*%wV,i8**%c,align 8
%wW=call fastcc i8*@_SMLFN6Option6isSomeE(i32 inreg 1,i32 inreg 8)
%wX=getelementptr inbounds i8,i8*%wW,i64 16
%wY=bitcast i8*%wX to i8*(i8*,i8*)**
%wZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%wY,align 8
%w0=bitcast i8*%wW to i8**
%w1=load i8*,i8**%w0,align 8
%w2=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%w3=call fastcc i8*%wZ(i8*inreg%w1,i8*inreg%w2)
%w4=bitcast i8*%w3 to i32*
%w5=load i32,i32*%w4,align 4
%w6=call fastcc i32@_SMLFN4Bool3notE(i32 inreg%w5)
%w7=call i8*@sml_alloc(i32 inreg 44)#0
%w8=getelementptr inbounds i8,i8*%w7,i64 -4
%w9=bitcast i8*%w8 to i32*
store i32 1342177320,i32*%w9,align 4
%xa=getelementptr inbounds i8,i8*%w7,i64 28
%xb=bitcast i8*%xa to i32*
store i32 0,i32*%xb,align 1
%xc=load i8*,i8**%d,align 8
%xd=bitcast i8*%w7 to i8**
store i8*%xc,i8**%xd,align 8
%xe=load i8*,i8**%e,align 8
%xf=getelementptr inbounds i8,i8*%w7,i64 8
%xg=bitcast i8*%xf to i8**
store i8*%xe,i8**%xg,align 8
%xh=load i8*,i8**%c,align 8
%xi=getelementptr inbounds i8,i8*%w7,i64 16
%xj=bitcast i8*%xi to i8**
store i8*%xh,i8**%xj,align 8
%xk=getelementptr inbounds i8,i8*%w7,i64 24
%xl=bitcast i8*%xk to i32*
store i32%w6,i32*%xl,align 4
%xm=load i8*,i8**%g,align 8
%xn=getelementptr inbounds i8,i8*%w7,i64 32
%xo=bitcast i8*%xn to i8**
store i8*%xm,i8**%xo,align 8
%xp=getelementptr inbounds i8,i8*%w7,i64 40
%xq=bitcast i8*%xp to i32*
store i32 23,i32*%xq,align 4
%xr=tail call fastcc i8*@_SMLFN12TypedCalcCon12TPCALLBACKFNE(i8*inreg%w7)
ret i8*%xr
xs:
%xt=getelementptr inbounds i8,i8*%t,i64 8
%xu=bitcast i8*%xt to i8**
%xv=load i8*,i8**%xu,align 8
%xw=bitcast i8*%xv to i8**
%xx=load i8*,i8**%xw,align 8
store i8*%xx,i8**%d,align 8
%xy=getelementptr inbounds i8,i8*%xv,i64 16
%xz=bitcast i8*%xy to i8**
%xA=load i8*,i8**%xz,align 8
%xB=getelementptr inbounds i8,i8*%xv,i64 24
%xC=bitcast i8*%xB to i8**
%xD=load i8*,i8**%xC,align 8
store i8*%xD,i8**%e,align 8
%xE=load i8*,i8**%c,align 8
%xF=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%xE,i8*inreg%xA)
store i8*%xF,i8**%f,align 8
%xG=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%xH=getelementptr inbounds i8,i8*%xG,i64 16
%xI=bitcast i8*%xH to i8*(i8*,i8*)**
%xJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%xI,align 8
%xK=bitcast i8*%xG to i8**
%xL=load i8*,i8**%xK,align 8
store i8*%xL,i8**%g,align 8
%xM=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%xN=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1495(i8*inreg%xM)
%xO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%xP=call fastcc i8*%xJ(i8*inreg%xO,i8*inreg%xN)
%xQ=getelementptr inbounds i8,i8*%xP,i64 16
%xR=bitcast i8*%xQ to i8*(i8*,i8*)**
%xS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%xR,align 8
%xT=bitcast i8*%xP to i8**
%xU=load i8*,i8**%xT,align 8
%xV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%xW=call fastcc i8*%xS(i8*inreg%xU,i8*inreg%xV)
store i8*%xW,i8**%c,align 8
%xX=call i8*@sml_alloc(i32 inreg 28)#0
%xY=getelementptr inbounds i8,i8*%xX,i64 -4
%xZ=bitcast i8*%xY to i32*
store i32 1342177304,i32*%xZ,align 4
%x0=load i8*,i8**%c,align 8
%x1=bitcast i8*%xX to i8**
store i8*%x0,i8**%x1,align 8
%x2=load i8*,i8**%f,align 8
%x3=getelementptr inbounds i8,i8*%xX,i64 8
%x4=bitcast i8*%x3 to i8**
store i8*%x2,i8**%x4,align 8
%x5=load i8*,i8**%e,align 8
%x6=getelementptr inbounds i8,i8*%xX,i64 16
%x7=bitcast i8*%x6 to i8**
store i8*%x5,i8**%x7,align 8
%x8=getelementptr inbounds i8,i8*%xX,i64 24
%x9=bitcast i8*%x8 to i32*
store i32 7,i32*%x9,align 4
%ya=tail call fastcc i8*@_SMLFN12TypedCalcCon14TPFOREIGNAPPLYE(i8*inreg%xX)
ret i8*%ya
yb:
%yc=getelementptr inbounds i8,i8*%t,i64 8
%yd=bitcast i8*%yc to i8**
%ye=load i8*,i8**%yd,align 8
%yf=bitcast i8*%ye to i8**
%yg=load i8*,i8**%yf,align 8
store i8*%yg,i8**%d,align 8
%yh=getelementptr inbounds i8,i8*%ye,i64 8
%yi=bitcast i8*%yh to i8**
%yj=load i8*,i8**%yi,align 8
store i8*%yj,i8**%e,align 8
%yk=getelementptr inbounds i8,i8*%ye,i64 16
%yl=bitcast i8*%yk to i8**
%ym=load i8*,i8**%yl,align 8
%yn=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%yo=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%yn,i8*inreg%ym)
store i8*%yo,i8**%c,align 8
%yp=call i8*@sml_alloc(i32 inreg 28)#0
%yq=getelementptr inbounds i8,i8*%yp,i64 -4
%yr=bitcast i8*%yq to i32*
store i32 1342177304,i32*%yr,align 4
%ys=load i8*,i8**%d,align 8
%yt=bitcast i8*%yp to i8**
store i8*%ys,i8**%yt,align 8
%yu=load i8*,i8**%e,align 8
%yv=getelementptr inbounds i8,i8*%yp,i64 8
%yw=bitcast i8*%yv to i8**
store i8*%yu,i8**%yw,align 8
%yx=load i8*,i8**%c,align 8
%yy=getelementptr inbounds i8,i8*%yp,i64 16
%yz=bitcast i8*%yy to i8**
store i8*%yx,i8**%yz,align 8
%yA=getelementptr inbounds i8,i8*%yp,i64 24
%yB=bitcast i8*%yA to i32*
store i32 7,i32*%yB,align 4
%yC=tail call fastcc i8*@_SMLFN12TypedCalcCon15TPFOREIGNSYMBOLE(i8*inreg%yp)
ret i8*%yC
yD:
%yE=getelementptr inbounds i8,i8*%t,i64 8
%yF=bitcast i8*%yE to i8**
%yG=load i8*,i8**%yF,align 8
%yH=bitcast i8*%yG to i8**
%yI=load i8*,i8**%yH,align 8
store i8*%yI,i8**%d,align 8
%yJ=getelementptr inbounds i8,i8*%yG,i64 8
%yK=bitcast i8*%yJ to i8**
%yL=load i8*,i8**%yK,align 8
%yM=bitcast i8*%yL to i32*
%yN=load i32,i32*%yM,align 4
switch i32%yN,label%yO[
i32 1,label%zt
i32 0,label%y6
]
yO:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%yP=load i8*,i8**@_SMLZ5Match,align 8
store i8*%yP,i8**%c,align 8
%yQ=call i8*@sml_alloc(i32 inreg 20)#0
%yR=getelementptr inbounds i8,i8*%yQ,i64 -4
%yS=bitcast i8*%yR to i32*
store i32 1342177296,i32*%yS,align 4
store i8*%yQ,i8**%d,align 8
%yT=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%yU=bitcast i8*%yQ to i8**
store i8*%yT,i8**%yU,align 8
%yV=getelementptr inbounds i8,i8*%yQ,i64 8
%yW=bitcast i8*%yV to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%yW,align 8
%yX=getelementptr inbounds i8,i8*%yQ,i64 16
%yY=bitcast i8*%yX to i32*
store i32 3,i32*%yY,align 4
%yZ=call i8*@sml_alloc(i32 inreg 60)#0
%y0=getelementptr inbounds i8,i8*%yZ,i64 -4
%y1=bitcast i8*%y0 to i32*
store i32 1342177336,i32*%y1,align 4
%y2=getelementptr inbounds i8,i8*%yZ,i64 56
%y3=bitcast i8*%y2 to i32*
store i32 1,i32*%y3,align 4
%y4=load i8*,i8**%d,align 8
%y5=bitcast i8*%yZ to i8**
store i8*%y4,i8**%y5,align 8
call void@sml_raise(i8*inreg%yZ)#1
unreachable
y6:
%y7=getelementptr inbounds i8,i8*%yL,i64 8
%y8=bitcast i8*%y7 to i8**
%y9=load i8*,i8**%y8,align 8
store i8*%y9,i8**%e,align 8
%za=getelementptr inbounds i8,i8*%yG,i64 16
%zb=bitcast i8*%za to i8**
%zc=load i8*,i8**%zb,align 8
store i8*%zc,i8**%f,align 8
%zd=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%ze=call fastcc i8*@_SMLLLN17PolyTyElimination12compileFFItyE_1448(i8*inreg%zd,i8*inreg%yI)
store i8*%ze,i8**%c,align 8
%zf=call i8*@sml_alloc(i32 inreg 28)#0
%zg=getelementptr inbounds i8,i8*%zf,i64 -4
%zh=bitcast i8*%zg to i32*
store i32 1342177304,i32*%zh,align 4
%zi=load i8*,i8**%c,align 8
%zj=bitcast i8*%zf to i8**
store i8*%zi,i8**%zj,align 8
%zk=load i8*,i8**%e,align 8
%zl=getelementptr inbounds i8,i8*%zf,i64 8
%zm=bitcast i8*%zl to i8**
store i8*%zk,i8**%zm,align 8
%zn=load i8*,i8**%f,align 8
%zo=getelementptr inbounds i8,i8*%zf,i64 16
%zp=bitcast i8*%zo to i8**
store i8*%zn,i8**%zp,align 8
%zq=getelementptr inbounds i8,i8*%zf,i64 24
%zr=bitcast i8*%zq to i32*
store i32 7,i32*%zr,align 4
%zs=tail call fastcc i8*@_SMLFN12TypedCalcCon15TPFFIIMPORT__EXTE(i8*inreg%zf)
ret i8*%zs
zt:
%zu=getelementptr inbounds i8,i8*%yL,i64 8
%zv=bitcast i8*%zu to i8***
%zw=load i8**,i8***%zv,align 8
%zx=load i8*,i8**%zw,align 8
%zy=getelementptr inbounds i8,i8*%yG,i64 16
%zz=bitcast i8*%zy to i8**
%zA=load i8*,i8**%zz,align 8
store i8*%zA,i8**%e,align 8
%zB=load i8*,i8**%c,align 8
%zC=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%zB,i8*inreg%zx)
store i8*%zC,i8**%f,align 8
%zD=load i8*,i8**%c,align 8
%zE=load i8*,i8**%d,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%zF=call fastcc i8*@_SMLLLN17PolyTyElimination12compileFFItyE_1448(i8*inreg%zD,i8*inreg%zE)
store i8*%zF,i8**%c,align 8
%zG=call i8*@sml_alloc(i32 inreg 28)#0
%zH=getelementptr inbounds i8,i8*%zG,i64 -4
%zI=bitcast i8*%zH to i32*
store i32 1342177304,i32*%zI,align 4
%zJ=load i8*,i8**%c,align 8
%zK=bitcast i8*%zG to i8**
store i8*%zJ,i8**%zK,align 8
%zL=load i8*,i8**%f,align 8
%zM=getelementptr inbounds i8,i8*%zG,i64 8
%zN=bitcast i8*%zM to i8**
store i8*%zL,i8**%zN,align 8
%zO=load i8*,i8**%e,align 8
%zP=getelementptr inbounds i8,i8*%zG,i64 16
%zQ=bitcast i8*%zP to i8**
store i8*%zO,i8**%zQ,align 8
%zR=getelementptr inbounds i8,i8*%zG,i64 24
%zS=bitcast i8*%zR to i32*
store i32 7,i32*%zS,align 4
%zT=tail call fastcc i8*@_SMLFN12TypedCalcCon15TPFFIIMPORT__FUNE(i8*inreg%zG)
ret i8*%zT
zU:
%zV=getelementptr inbounds i8,i8*%t,i64 8
%zW=bitcast i8*%zV to i8**
%zX=load i8*,i8**%zW,align 8
%zY=bitcast i8*%zX to i8**
%zZ=load i8*,i8**%zY,align 8
store i8*%zZ,i8**%d,align 8
%z0=getelementptr inbounds i8,i8*%zX,i64 8
%z1=bitcast i8*%z0 to i8**
%z2=load i8*,i8**%z1,align 8
store i8*%z2,i8**%e,align 8
%z3=call fastcc i8*@_SMLFN13LongsymbolEnv4findE(i32 inreg 1,i32 inreg 8)
%z4=getelementptr inbounds i8,i8*%z3,i64 16
%z5=bitcast i8*%z4 to i8*(i8*,i8*)**
%z6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z5,align 8
%z7=bitcast i8*%z3 to i8**
%z8=load i8*,i8**%z7,align 8
store i8*%z8,i8**%g,align 8
%z9=load i8*,i8**%c,align 8
%Aa=getelementptr inbounds i8,i8*%z9,i64 8
%Ab=bitcast i8*%Aa to i8**
%Ac=load i8*,i8**%Ab,align 8
%Ad=getelementptr inbounds i8,i8*%Ac,i64 16
%Ae=bitcast i8*%Ad to i8**
%Af=load i8*,i8**%Ae,align 8
store i8*%Af,i8**%c,align 8
%Ag=bitcast i8**%d to i8***
%Ah=load i8**,i8***%Ag,align 8
%Ai=load i8*,i8**%Ah,align 8
store i8*%Ai,i8**%f,align 8
%Aj=call i8*@sml_alloc(i32 inreg 20)#0
%Ak=getelementptr inbounds i8,i8*%Aj,i64 -4
%Al=bitcast i8*%Ak to i32*
store i32 1342177296,i32*%Al,align 4
%Am=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%An=bitcast i8*%Aj to i8**
store i8*%Am,i8**%An,align 8
%Ao=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Ap=getelementptr inbounds i8,i8*%Aj,i64 8
%Aq=bitcast i8*%Ap to i8**
store i8*%Ao,i8**%Aq,align 8
%Ar=getelementptr inbounds i8,i8*%Aj,i64 16
%As=bitcast i8*%Ar to i32*
store i32 3,i32*%As,align 4
%At=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Au=call fastcc i8*%z6(i8*inreg%At,i8*inreg%Aj)
%Av=icmp eq i8*%Au,null
br i1%Av,label%Aw,label%AV
Aw:
store i8*null,i8**%e,align 8
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@c7,i64 0,i32 2,i64 0))
%Ax=load i8**,i8***%Ag,align 8
store i8*null,i8**%d,align 8
%Ay=load i8*,i8**%Ax,align 8
%Az=call fastcc i8*@_SMLFN6Symbol18longsymbolToStringE(i8*inreg%Ay)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%Az)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@do,i64 0,i32 2,i64 0))
%AA=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%AA,i8**%c,align 8
%AB=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c9,i64 0,i32 2)to i8*))
store i8*%AB,i8**%d,align 8
%AC=call i8*@sml_alloc(i32 inreg 28)#0
%AD=getelementptr inbounds i8,i8*%AC,i64 -4
%AE=bitcast i8*%AD to i32*
store i32 1342177304,i32*%AE,align 4
store i8*%AC,i8**%e,align 8
%AF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%AG=bitcast i8*%AC to i8**
store i8*%AF,i8**%AG,align 8
%AH=getelementptr inbounds i8,i8*%AC,i64 8
%AI=bitcast i8*%AH to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%AI,align 8
%AJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%AK=getelementptr inbounds i8,i8*%AC,i64 16
%AL=bitcast i8*%AK to i8**
store i8*%AJ,i8**%AL,align 8
%AM=getelementptr inbounds i8,i8*%AC,i64 24
%AN=bitcast i8*%AM to i32*
store i32 7,i32*%AN,align 4
%AO=call i8*@sml_alloc(i32 inreg 60)#0
%AP=getelementptr inbounds i8,i8*%AO,i64 -4
%AQ=bitcast i8*%AP to i32*
store i32 1342177336,i32*%AQ,align 4
%AR=getelementptr inbounds i8,i8*%AO,i64 56
%AS=bitcast i8*%AR to i32*
store i32 1,i32*%AS,align 4
%AT=load i8*,i8**%e,align 8
%AU=bitcast i8*%AO to i8**
store i8*%AT,i8**%AU,align 8
call void@sml_raise(i8*inreg%AO)#1
unreachable
AV:
%AW=bitcast i8*%Au to i8**
%AX=load i8*,i8**%AW,align 8
%AY=getelementptr inbounds i8,i8*%AX,i64 8
%AZ=bitcast i8*%AY to i8**
%A0=load i8*,i8**%AZ,align 8
store i8*%A0,i8**%c,align 8
%A1=load i8**,i8***%Ag,align 8
%A2=load i8*,i8**%A1,align 8
store i8*%A2,i8**%d,align 8
%A3=call i8*@sml_alloc(i32 inreg 20)#0
%A4=getelementptr inbounds i8,i8*%A3,i64 -4
%A5=bitcast i8*%A4 to i32*
store i32 1342177296,i32*%A5,align 4
store i8*%A3,i8**%f,align 8
%A6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%A7=bitcast i8*%A3 to i8**
store i8*%A6,i8**%A7,align 8
%A8=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A9=getelementptr inbounds i8,i8*%A3,i64 8
%Ba=bitcast i8*%A9 to i8**
store i8*%A8,i8**%Ba,align 8
%Bb=getelementptr inbounds i8,i8*%A3,i64 16
%Bc=bitcast i8*%Bb to i32*
store i32 3,i32*%Bc,align 4
%Bd=call i8*@sml_alloc(i32 inreg 20)#0
%Be=getelementptr inbounds i8,i8*%Bd,i64 -4
%Bf=bitcast i8*%Be to i32*
store i32 1342177296,i32*%Bf,align 4
%Bg=load i8*,i8**%f,align 8
%Bh=bitcast i8*%Bd to i8**
store i8*%Bg,i8**%Bh,align 8
%Bi=load i8*,i8**%e,align 8
%Bj=getelementptr inbounds i8,i8*%Bd,i64 8
%Bk=bitcast i8*%Bj to i8**
store i8*%Bi,i8**%Bk,align 8
%Bl=getelementptr inbounds i8,i8*%Bd,i64 16
%Bm=bitcast i8*%Bl to i32*
store i32 3,i32*%Bm,align 4
%Bn=tail call fastcc i8*@_SMLFN12TypedCalcCon7TPEXVARE(i8*inreg%Bd)
ret i8*%Bn
Bo:
%Bp=getelementptr inbounds i8,i8*%t,i64 8
%Bq=bitcast i8*%Bp to i8**
%Br=load i8*,i8**%Bq,align 8
%Bs=bitcast i8*%Br to i8**
%Bt=load i8*,i8**%Bs,align 8
store i8*%Bt,i8**%d,align 8
%Bu=getelementptr inbounds i8,i8*%Br,i64 8
%Bv=bitcast i8*%Bu to i8**
%Bw=load i8*,i8**%Bv,align 8
store i8*%Bw,i8**%e,align 8
%Bx=call fastcc i8*@_SMLFN13LongsymbolEnv4findE(i32 inreg 1,i32 inreg 8)
%By=getelementptr inbounds i8,i8*%Bx,i64 16
%Bz=bitcast i8*%By to i8*(i8*,i8*)**
%BA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Bz,align 8
%BB=bitcast i8*%Bx to i8**
%BC=load i8*,i8**%BB,align 8
store i8*%BC,i8**%g,align 8
%BD=load i8*,i8**%c,align 8
%BE=getelementptr inbounds i8,i8*%BD,i64 8
%BF=bitcast i8*%BE to i8**
%BG=load i8*,i8**%BF,align 8
%BH=getelementptr inbounds i8,i8*%BG,i64 8
%BI=bitcast i8*%BH to i8**
%BJ=load i8*,i8**%BI,align 8
store i8*%BJ,i8**%c,align 8
%BK=bitcast i8**%d to i8***
%BL=load i8**,i8***%BK,align 8
%BM=load i8*,i8**%BL,align 8
store i8*%BM,i8**%f,align 8
%BN=call i8*@sml_alloc(i32 inreg 20)#0
%BO=getelementptr inbounds i8,i8*%BN,i64 -4
%BP=bitcast i8*%BO to i32*
store i32 1342177296,i32*%BP,align 4
%BQ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%BR=bitcast i8*%BN to i8**
store i8*%BQ,i8**%BR,align 8
%BS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%BT=getelementptr inbounds i8,i8*%BN,i64 8
%BU=bitcast i8*%BT to i8**
store i8*%BS,i8**%BU,align 8
%BV=getelementptr inbounds i8,i8*%BN,i64 16
%BW=bitcast i8*%BV to i32*
store i32 3,i32*%BW,align 4
%BX=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%BY=call fastcc i8*%BA(i8*inreg%BX,i8*inreg%BN)
%BZ=icmp eq i8*%BY,null
br i1%BZ,label%B0,label%Cm
B0:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%B1=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%B1,i8**%c,align 8
%B2=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c6,i64 0,i32 2)to i8*))
store i8*%B2,i8**%d,align 8
%B3=call i8*@sml_alloc(i32 inreg 28)#0
%B4=getelementptr inbounds i8,i8*%B3,i64 -4
%B5=bitcast i8*%B4 to i32*
store i32 1342177304,i32*%B5,align 4
store i8*%B3,i8**%e,align 8
%B6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B7=bitcast i8*%B3 to i8**
store i8*%B6,i8**%B7,align 8
%B8=getelementptr inbounds i8,i8*%B3,i64 8
%B9=bitcast i8*%B8 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%B9,align 8
%Ca=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Cb=getelementptr inbounds i8,i8*%B3,i64 16
%Cc=bitcast i8*%Cb to i8**
store i8*%Ca,i8**%Cc,align 8
%Cd=getelementptr inbounds i8,i8*%B3,i64 24
%Ce=bitcast i8*%Cd to i32*
store i32 7,i32*%Ce,align 4
%Cf=call i8*@sml_alloc(i32 inreg 60)#0
%Cg=getelementptr inbounds i8,i8*%Cf,i64 -4
%Ch=bitcast i8*%Cg to i32*
store i32 1342177336,i32*%Ch,align 4
%Ci=getelementptr inbounds i8,i8*%Cf,i64 56
%Cj=bitcast i8*%Ci to i32*
store i32 1,i32*%Cj,align 4
%Ck=load i8*,i8**%e,align 8
%Cl=bitcast i8*%Cf to i8**
store i8*%Ck,i8**%Cl,align 8
call void@sml_raise(i8*inreg%Cf)#1
unreachable
Cm:
%Cn=bitcast i8*%BY to i8**
%Co=load i8*,i8**%Cn,align 8
%Cp=getelementptr inbounds i8,i8*%Co,i64 8
%Cq=bitcast i8*%Cp to i8**
%Cr=load i8*,i8**%Cq,align 8
store i8*%Cr,i8**%c,align 8
%Cs=load i8**,i8***%BK,align 8
%Ct=load i8*,i8**%Cs,align 8
store i8*%Ct,i8**%d,align 8
%Cu=call i8*@sml_alloc(i32 inreg 20)#0
%Cv=getelementptr inbounds i8,i8*%Cu,i64 -4
%Cw=bitcast i8*%Cv to i32*
store i32 1342177296,i32*%Cw,align 4
store i8*%Cu,i8**%f,align 8
%Cx=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Cy=bitcast i8*%Cu to i8**
store i8*%Cx,i8**%Cy,align 8
%Cz=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%CA=getelementptr inbounds i8,i8*%Cu,i64 8
%CB=bitcast i8*%CA to i8**
store i8*%Cz,i8**%CB,align 8
%CC=getelementptr inbounds i8,i8*%Cu,i64 16
%CD=bitcast i8*%CC to i32*
store i32 3,i32*%CD,align 4
%CE=call i8*@sml_alloc(i32 inreg 20)#0
%CF=getelementptr inbounds i8,i8*%CE,i64 -4
%CG=bitcast i8*%CF to i32*
store i32 1342177296,i32*%CG,align 4
%CH=load i8*,i8**%f,align 8
%CI=bitcast i8*%CE to i8**
store i8*%CH,i8**%CI,align 8
%CJ=load i8*,i8**%e,align 8
%CK=getelementptr inbounds i8,i8*%CE,i64 8
%CL=bitcast i8*%CK to i8**
store i8*%CJ,i8**%CL,align 8
%CM=getelementptr inbounds i8,i8*%CE,i64 16
%CN=bitcast i8*%CM to i32*
store i32 3,i32*%CN,align 4
%CO=tail call fastcc i8*@_SMLFN12TypedCalcCon10TPEXEXNTAGE(i8*inreg%CE)
ret i8*%CO
CP:
%CQ=getelementptr inbounds i8,i8*%t,i64 8
%CR=bitcast i8*%CQ to i8**
%CS=load i8*,i8**%CR,align 8
%CT=bitcast i8*%CS to i8**
%CU=load i8*,i8**%CT,align 8
store i8*%CU,i8**%d,align 8
%CV=getelementptr inbounds i8,i8*%CS,i64 8
%CW=bitcast i8*%CV to i8**
%CX=load i8*,i8**%CW,align 8
store i8*%CX,i8**%e,align 8
%CY=call fastcc i8*@_SMLFN5ExnID3Map4findE(i32 inreg 1,i32 inreg 8)
%CZ=getelementptr inbounds i8,i8*%CY,i64 16
%C0=bitcast i8*%CZ to i8*(i8*,i8*)**
%C1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C0,align 8
%C2=bitcast i8*%CY to i8**
%C3=load i8*,i8**%C2,align 8
store i8*%C3,i8**%f,align 8
%C4=load i8*,i8**%c,align 8
%C5=getelementptr inbounds i8,i8*%C4,i64 8
%C6=bitcast i8*%C5 to i8**
%C7=load i8*,i8**%C6,align 8
%C8=getelementptr inbounds i8,i8*%C7,i64 24
%C9=bitcast i8*%C8 to i8**
%Da=load i8*,i8**%C9,align 8
store i8*%Da,i8**%c,align 8
%Db=bitcast i8**%d to i32**
%Dc=load i32*,i32**%Db,align 8
%Dd=load i32,i32*%Dc,align 4
%De=call i8*@sml_alloc(i32 inreg 20)#0
%Df=getelementptr inbounds i8,i8*%De,i64 -4
%Dg=bitcast i8*%Df to i32*
store i32 1342177296,i32*%Dg,align 4
%Dh=getelementptr inbounds i8,i8*%De,i64 12
%Di=bitcast i8*%Dh to i32*
store i32 0,i32*%Di,align 1
%Dj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Dk=bitcast i8*%De to i8**
store i8*%Dj,i8**%Dk,align 8
%Dl=getelementptr inbounds i8,i8*%De,i64 8
%Dm=bitcast i8*%Dl to i32*
store i32%Dd,i32*%Dm,align 4
%Dn=getelementptr inbounds i8,i8*%De,i64 16
%Do=bitcast i8*%Dn to i32*
store i32 1,i32*%Do,align 4
%Dp=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Dq=call fastcc i8*%C1(i8*inreg%Dp,i8*inreg%De)
%Dr=icmp eq i8*%Dq,null
br i1%Dr,label%Ds,label%DO
Ds:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%Dt=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%Dt,i8**%c,align 8
%Du=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c6,i64 0,i32 2)to i8*))
store i8*%Du,i8**%d,align 8
%Dv=call i8*@sml_alloc(i32 inreg 28)#0
%Dw=getelementptr inbounds i8,i8*%Dv,i64 -4
%Dx=bitcast i8*%Dw to i32*
store i32 1342177304,i32*%Dx,align 4
store i8*%Dv,i8**%e,align 8
%Dy=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Dz=bitcast i8*%Dv to i8**
store i8*%Dy,i8**%Dz,align 8
%DA=getelementptr inbounds i8,i8*%Dv,i64 8
%DB=bitcast i8*%DA to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%DB,align 8
%DC=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%DD=getelementptr inbounds i8,i8*%Dv,i64 16
%DE=bitcast i8*%DD to i8**
store i8*%DC,i8**%DE,align 8
%DF=getelementptr inbounds i8,i8*%Dv,i64 24
%DG=bitcast i8*%DF to i32*
store i32 7,i32*%DG,align 4
%DH=call i8*@sml_alloc(i32 inreg 60)#0
%DI=getelementptr inbounds i8,i8*%DH,i64 -4
%DJ=bitcast i8*%DI to i32*
store i32 1342177336,i32*%DJ,align 4
%DK=getelementptr inbounds i8,i8*%DH,i64 56
%DL=bitcast i8*%DK to i32*
store i32 1,i32*%DL,align 4
%DM=load i8*,i8**%e,align 8
%DN=bitcast i8*%DH to i8**
store i8*%DM,i8**%DN,align 8
call void@sml_raise(i8*inreg%DH)#1
unreachable
DO:
%DP=bitcast i8*%Dq to i8**
%DQ=load i8*,i8**%DP,align 8
%DR=getelementptr inbounds i8,i8*%DQ,i64 16
%DS=bitcast i8*%DR to i8**
%DT=load i8*,i8**%DS,align 8
store i8*%DT,i8**%c,align 8
%DU=load i8*,i8**%d,align 8
%DV=bitcast i8*%DU to i32*
%DW=load i32,i32*%DV,align 4
%DX=getelementptr inbounds i8,i8*%DU,i64 8
%DY=bitcast i8*%DX to i8**
%DZ=load i8*,i8**%DY,align 8
store i8*%DZ,i8**%d,align 8
%D0=call i8*@sml_alloc(i32 inreg 28)#0
%D1=getelementptr inbounds i8,i8*%D0,i64 -4
%D2=bitcast i8*%D1 to i32*
store i32 1342177304,i32*%D2,align 4
store i8*%D0,i8**%f,align 8
%D3=getelementptr inbounds i8,i8*%D0,i64 4
%D4=bitcast i8*%D3 to i32*
store i32 0,i32*%D4,align 1
%D5=bitcast i8*%D0 to i32*
store i32%DW,i32*%D5,align 4
%D6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D7=getelementptr inbounds i8,i8*%D0,i64 8
%D8=bitcast i8*%D7 to i8**
store i8*%D6,i8**%D8,align 8
%D9=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Ea=getelementptr inbounds i8,i8*%D0,i64 16
%Eb=bitcast i8*%Ea to i8**
store i8*%D9,i8**%Eb,align 8
%Ec=getelementptr inbounds i8,i8*%D0,i64 24
%Ed=bitcast i8*%Ec to i32*
store i32 6,i32*%Ed,align 4
%Ee=call i8*@sml_alloc(i32 inreg 20)#0
%Ef=getelementptr inbounds i8,i8*%Ee,i64 -4
%Eg=bitcast i8*%Ef to i32*
store i32 1342177296,i32*%Eg,align 4
%Eh=load i8*,i8**%f,align 8
%Ei=bitcast i8*%Ee to i8**
store i8*%Eh,i8**%Ei,align 8
%Ej=load i8*,i8**%e,align 8
%Ek=getelementptr inbounds i8,i8*%Ee,i64 8
%El=bitcast i8*%Ek to i8**
store i8*%Ej,i8**%El,align 8
%Em=getelementptr inbounds i8,i8*%Ee,i64 16
%En=bitcast i8*%Em to i32*
store i32 3,i32*%En,align 4
%Eo=tail call fastcc i8*@_SMLFN12TypedCalcCon8TPEXNTAGE(i8*inreg%Ee)
ret i8*%Eo
Ep:
%Eq=getelementptr inbounds i8,i8*%t,i64 8
%Er=bitcast i8*%Eq to i8**
%Es=load i8*,i8**%Er,align 8
%Et=bitcast i8*%Es to i8**
%Eu=load i8*,i8**%Et,align 8
store i8*%Eu,i8**%d,align 8
%Ev=getelementptr inbounds i8,i8*%Es,i64 8
%Ew=bitcast i8*%Ev to i8**
%Ex=load i8*,i8**%Ew,align 8
%Ey=getelementptr inbounds i8,i8*%Es,i64 16
%Ez=bitcast i8*%Ey to i8**
%EA=load i8*,i8**%Ez,align 8
store i8*%EA,i8**%e,align 8
%EB=load i8*,i8**%c,align 8
%EC=call fastcc i8*@_SMLLLN17PolyTyElimination13compileExnConE_1474(i8*inreg%EB,i8*inreg%Ex)
store i8*%EC,i8**%f,align 8
%ED=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%EE=getelementptr inbounds i8,i8*%ED,i64 16
%EF=bitcast i8*%EE to i8*(i8*,i8*)**
%EG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%EF,align 8
%EH=bitcast i8*%ED to i8**
%EI=load i8*,i8**%EH,align 8
store i8*%EI,i8**%g,align 8
%EJ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%EK=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1495(i8*inreg%EJ)
%EL=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%EM=call fastcc i8*%EG(i8*inreg%EL,i8*inreg%EK)
%EN=getelementptr inbounds i8,i8*%EM,i64 16
%EO=bitcast i8*%EN to i8*(i8*,i8*)**
%EP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%EO,align 8
%EQ=bitcast i8*%EM to i8**
%ER=load i8*,i8**%EQ,align 8
%ES=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ET=call fastcc i8*%EP(i8*inreg%ER,i8*inreg%ES)
store i8*%ET,i8**%c,align 8
%EU=call i8*@sml_alloc(i32 inreg 28)#0
%EV=getelementptr inbounds i8,i8*%EU,i64 -4
%EW=bitcast i8*%EV to i32*
store i32 1342177304,i32*%EW,align 4
%EX=load i8*,i8**%c,align 8
%EY=bitcast i8*%EU to i8**
store i8*%EX,i8**%EY,align 8
%EZ=load i8*,i8**%f,align 8
%E0=getelementptr inbounds i8,i8*%EU,i64 8
%E1=bitcast i8*%E0 to i8**
store i8*%EZ,i8**%E1,align 8
%E2=load i8*,i8**%e,align 8
%E3=getelementptr inbounds i8,i8*%EU,i64 16
%E4=bitcast i8*%E3 to i8**
store i8*%E2,i8**%E4,align 8
%E5=getelementptr inbounds i8,i8*%EU,i64 24
%E6=bitcast i8*%E5 to i32*
store i32 7,i32*%E6,align 4
%E7=tail call fastcc i8*@_SMLFN12TypedCalcCon14TPEXNCONSTRUCTE(i8*inreg%EU)
ret i8*%E7
E8:
%E9=load i8*,i8**@_SMLZN12TypedCalcCon7TPERRORE,align 8
ret i8*%E9
Fa:
%Fb=getelementptr inbounds i8,i8*%t,i64 8
%Fc=bitcast i8*%Fb to i8**
%Fd=load i8*,i8**%Fc,align 8
%Fe=bitcast i8*%Fd to i8**
%Ff=load i8*,i8**%Fe,align 8
%Fg=getelementptr inbounds i8,i8*%Fd,i64 8
%Fh=bitcast i8*%Fg to i8**
%Fi=load i8*,i8**%Fh,align 8
store i8*%Fi,i8**%d,align 8
%Fj=getelementptr inbounds i8,i8*%Fd,i64 24
%Fk=bitcast i8*%Fj to i8**
%Fl=load i8*,i8**%Fk,align 8
store i8*%Fl,i8**%e,align 8
%Fm=getelementptr inbounds i8,i8*%Fd,i64 32
%Fn=bitcast i8*%Fm to i8**
%Fo=load i8*,i8**%Fn,align 8
store i8*%Fo,i8**%f,align 8
%Fp=load i8*,i8**%c,align 8
%Fq=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%Fp,i8*inreg%Ff)
store i8*%Fq,i8**%g,align 8
%Fr=load i8*,i8**%c,align 8
%Fs=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Ft=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%Fr,i8*inreg%Fs)
store i8*%Ft,i8**%d,align 8
%Fu=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Fv=getelementptr inbounds i8,i8*%Fu,i64 16
%Fw=bitcast i8*%Fv to i8*(i8*,i8*)**
%Fx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Fw,align 8
%Fy=bitcast i8*%Fu to i8**
%Fz=load i8*,i8**%Fy,align 8
store i8*%Fz,i8**%h,align 8
%FA=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%FB=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%FA)
%FC=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%FD=call fastcc i8*%Fx(i8*inreg%FC,i8*inreg%FB)
%FE=getelementptr inbounds i8,i8*%FD,i64 16
%FF=bitcast i8*%FE to i8*(i8*,i8*)**
%FG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%FF,align 8
%FH=bitcast i8*%FD to i8**
%FI=load i8*,i8**%FH,align 8
%FJ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%FK=call fastcc i8*%FG(i8*inreg%FI,i8*inreg%FJ)
store i8*%FK,i8**%c,align 8
%FL=call i8*@sml_alloc(i32 inreg 36)#0
%FM=getelementptr inbounds i8,i8*%FL,i64 -4
%FN=bitcast i8*%FM to i32*
store i32 1342177312,i32*%FN,align 4
%FO=load i8*,i8**%g,align 8
%FP=bitcast i8*%FL to i8**
store i8*%FO,i8**%FP,align 8
%FQ=load i8*,i8**%d,align 8
%FR=getelementptr inbounds i8,i8*%FL,i64 8
%FS=bitcast i8*%FR to i8**
store i8*%FQ,i8**%FS,align 8
%FT=load i8*,i8**%c,align 8
%FU=getelementptr inbounds i8,i8*%FL,i64 16
%FV=bitcast i8*%FU to i8**
store i8*%FT,i8**%FV,align 8
%FW=load i8*,i8**%f,align 8
%FX=getelementptr inbounds i8,i8*%FL,i64 24
%FY=bitcast i8*%FX to i8**
store i8*%FW,i8**%FY,align 8
%FZ=getelementptr inbounds i8,i8*%FL,i64 32
%F0=bitcast i8*%FZ to i32*
store i32 15,i32*%F0,align 4
%F1=tail call fastcc i8*@_SMLFN12TypedCalcCon18TPDYNAMICEXISTTAPPE(i8*inreg%FL)
ret i8*%F1
F2:
%F3=getelementptr inbounds i8,i8*%t,i64 8
%F4=bitcast i8*%F3 to i8**
%F5=load i8*,i8**%F4,align 8
%F6=bitcast i8*%F5 to i8**
%F7=load i8*,i8**%F6,align 8
store i8*%F7,i8**%d,align 8
%F8=getelementptr inbounds i8,i8*%F5,i64 8
%F9=bitcast i8*%F8 to i8**
%Ga=load i8*,i8**%F9,align 8
store i8*%Ga,i8**%e,align 8
%Gb=getelementptr inbounds i8,i8*%F5,i64 16
%Gc=bitcast i8*%Gb to i8**
%Gd=load i8*,i8**%Gc,align 8
store i8*%Gd,i8**%f,align 8
%Ge=getelementptr inbounds i8,i8*%F5,i64 24
%Gf=bitcast i8*%Ge to i8**
%Gg=load i8*,i8**%Gf,align 8
%Gh=getelementptr inbounds i8,i8*%F5,i64 32
%Gi=bitcast i8*%Gh to i8**
%Gj=load i8*,i8**%Gi,align 8
store i8*%Gj,i8**%g,align 8
%Gk=getelementptr inbounds i8,i8*%F5,i64 40
%Gl=bitcast i8*%Gk to i8**
%Gm=load i8*,i8**%Gl,align 8
store i8*%Gm,i8**%h,align 8
%Gn=getelementptr inbounds i8,i8*%F5,i64 48
%Go=bitcast i8*%Gn to i8**
%Gp=load i8*,i8**%Go,align 8
store i8*%Gp,i8**%i,align 8
%Gq=load i8*,i8**%c,align 8
%Gr=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%Gq,i8*inreg%Gg)
store i8*%Gr,i8**%j,align 8
%Gs=load i8*,i8**%c,align 8
%Gt=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Gu=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%Gs,i8*inreg%Gt)
store i8*%Gu,i8**%g,align 8
%Gv=load i8*,i8**%c,align 8
%Gw=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Gx=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%Gv,i8*inreg%Gw)
store i8*%Gx,i8**%d,align 8
%Gy=load i8*,i8**%c,align 8
%Gz=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%GA=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%Gy,i8*inreg%Gz)
store i8*%GA,i8**%e,align 8
%GB=load i8*,i8**%c,align 8
%GC=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%GD=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%GB,i8*inreg%GC)
store i8*%GD,i8**%f,align 8
%GE=load i8*,i8**%c,align 8
%GF=load i8*,i8**%i,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%i,align 8
%GG=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%GE,i8*inreg%GF)
store i8*%GG,i8**%c,align 8
%GH=call i8*@sml_alloc(i32 inreg 60)#0
%GI=getelementptr inbounds i8,i8*%GH,i64 -4
%GJ=bitcast i8*%GI to i32*
store i32 1342177336,i32*%GJ,align 4
%GK=load i8*,i8**%d,align 8
%GL=bitcast i8*%GH to i8**
store i8*%GK,i8**%GL,align 8
%GM=load i8*,i8**%e,align 8
%GN=getelementptr inbounds i8,i8*%GH,i64 8
%GO=bitcast i8*%GN to i8**
store i8*%GM,i8**%GO,align 8
%GP=load i8*,i8**%f,align 8
%GQ=getelementptr inbounds i8,i8*%GH,i64 16
%GR=bitcast i8*%GQ to i8**
store i8*%GP,i8**%GR,align 8
%GS=load i8*,i8**%j,align 8
%GT=getelementptr inbounds i8,i8*%GH,i64 24
%GU=bitcast i8*%GT to i8**
store i8*%GS,i8**%GU,align 8
%GV=load i8*,i8**%g,align 8
%GW=getelementptr inbounds i8,i8*%GH,i64 32
%GX=bitcast i8*%GW to i8**
store i8*%GV,i8**%GX,align 8
%GY=load i8*,i8**%h,align 8
%GZ=getelementptr inbounds i8,i8*%GH,i64 40
%G0=bitcast i8*%GZ to i8**
store i8*%GY,i8**%G0,align 8
%G1=load i8*,i8**%c,align 8
%G2=getelementptr inbounds i8,i8*%GH,i64 48
%G3=bitcast i8*%G2 to i8**
store i8*%G1,i8**%G3,align 8
%G4=getelementptr inbounds i8,i8*%GH,i64 56
%G5=bitcast i8*%G4 to i32*
store i32 127,i32*%G5,align 4
%G6=tail call fastcc i8*@_SMLFN12TypedCalcCon13TPDYNAMICCASEE(i8*inreg%GH)
ret i8*%G6
G7:
%G8=getelementptr inbounds i8,i8*%t,i64 8
%G9=bitcast i8*%G8 to i8**
%Ha=load i8*,i8**%G9,align 8
%Hb=bitcast i8*%Ha to i8**
%Hc=load i8*,i8**%Hb,align 8
store i8*%Hc,i8**%d,align 8
%Hd=getelementptr inbounds i8,i8*%Ha,i64 8
%He=bitcast i8*%Hd to i8**
%Hf=load i8*,i8**%He,align 8
store i8*%Hf,i8**%e,align 8
%Hg=getelementptr inbounds i8,i8*%Ha,i64 16
%Hh=bitcast i8*%Hg to i8**
%Hi=load i8*,i8**%Hh,align 8
store i8*%Hi,i8**%f,align 8
%Hj=getelementptr inbounds i8,i8*%Ha,i64 24
%Hk=bitcast i8*%Hj to i8**
%Hl=load i8*,i8**%Hk,align 8
store i8*%Hl,i8**%g,align 8
%Hm=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Hn=getelementptr inbounds i8,i8*%Hm,i64 16
%Ho=bitcast i8*%Hn to i8*(i8*,i8*)**
%Hp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Ho,align 8
%Hq=bitcast i8*%Hm to i8**
%Hr=load i8*,i8**%Hq,align 8
store i8*%Hr,i8**%i,align 8
%Hs=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Ht=getelementptr inbounds i8,i8*%Hs,i64 16
%Hu=bitcast i8*%Ht to i8*(i8*,i8*)**
%Hv=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Hu,align 8
%Hw=bitcast i8*%Hs to i8**
%Hx=load i8*,i8**%Hw,align 8
store i8*%Hx,i8**%h,align 8
%Hy=load i8*,i8**%c,align 8
%Hz=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1337(i8*inreg%Hy)
%HA=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%HB=call fastcc i8*%Hv(i8*inreg%HA,i8*inreg%Hz)
%HC=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%HD=call fastcc i8*%Hp(i8*inreg%HC,i8*inreg%HB)
%HE=getelementptr inbounds i8,i8*%HD,i64 16
%HF=bitcast i8*%HE to i8*(i8*,i8*)**
%HG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%HF,align 8
%HH=bitcast i8*%HD to i8**
%HI=load i8*,i8**%HH,align 8
%HJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%HK=call fastcc i8*%HG(i8*inreg%HI,i8*inreg%HJ)
store i8*%HK,i8**%f,align 8
%HL=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%HM=getelementptr inbounds i8,i8*%HL,i64 16
%HN=bitcast i8*%HM to i8*(i8*,i8*)**
%HO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%HN,align 8
%HP=bitcast i8*%HL to i8**
%HQ=load i8*,i8**%HP,align 8
store i8*%HQ,i8**%h,align 8
%HR=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%HS=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1495(i8*inreg%HR)
%HT=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%HU=call fastcc i8*%HO(i8*inreg%HT,i8*inreg%HS)
%HV=getelementptr inbounds i8,i8*%HU,i64 16
%HW=bitcast i8*%HV to i8*(i8*,i8*)**
%HX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%HW,align 8
%HY=bitcast i8*%HU to i8**
%HZ=load i8*,i8**%HY,align 8
%H0=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%H1=call fastcc i8*%HX(i8*inreg%HZ,i8*inreg%H0)
store i8*%H1,i8**%c,align 8
%H2=call i8*@sml_alloc(i32 inreg 36)#0
%H3=getelementptr inbounds i8,i8*%H2,i64 -4
%H4=bitcast i8*%H3 to i32*
store i32 1342177312,i32*%H4,align 4
%H5=load i8*,i8**%c,align 8
%H6=bitcast i8*%H2 to i8**
store i8*%H5,i8**%H6,align 8
%H7=load i8*,i8**%e,align 8
%H8=getelementptr inbounds i8,i8*%H2,i64 8
%H9=bitcast i8*%H8 to i8**
store i8*%H7,i8**%H9,align 8
%Ia=load i8*,i8**%f,align 8
%Ib=getelementptr inbounds i8,i8*%H2,i64 16
%Ic=bitcast i8*%Ib to i8**
store i8*%Ia,i8**%Ic,align 8
%Id=load i8*,i8**%g,align 8
%Ie=getelementptr inbounds i8,i8*%H2,i64 24
%If=bitcast i8*%Ie to i8**
store i8*%Id,i8**%If,align 8
%Ig=getelementptr inbounds i8,i8*%H2,i64 32
%Ih=bitcast i8*%Ig to i32*
store i32 15,i32*%Ih,align 4
%Ii=tail call fastcc i8*@_SMLFN12TypedCalcCon15TPDATACONSTRUCTE(i8*inreg%H2)
ret i8*%Ii
Ij:
%Ik=getelementptr inbounds i8,i8*%t,i64 8
%Il=bitcast i8*%Ik to i8**
%Im=load i8*,i8**%Il,align 8
%In=bitcast i8*%Im to i8**
%Io=load i8*,i8**%In,align 8
store i8*%Io,i8**%d,align 8
%Ip=getelementptr inbounds i8,i8*%Im,i64 8
%Iq=bitcast i8*%Ip to i8**
%Ir=load i8*,i8**%Iq,align 8
store i8*%Ir,i8**%e,align 8
%Is=getelementptr inbounds i8,i8*%Im,i64 16
%It=bitcast i8*%Is to i8**
%Iu=load i8*,i8**%It,align 8
%Iv=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Iw=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%Iv,i8*inreg%Iu)
store i8*%Iw,i8**%c,align 8
%Ix=call i8*@sml_alloc(i32 inreg 28)#0
%Iy=getelementptr inbounds i8,i8*%Ix,i64 -4
%Iz=bitcast i8*%Iy to i32*
store i32 1342177304,i32*%Iz,align 4
%IA=load i8*,i8**%d,align 8
%IB=bitcast i8*%Ix to i8**
store i8*%IA,i8**%IB,align 8
%IC=load i8*,i8**%e,align 8
%ID=getelementptr inbounds i8,i8*%Ix,i64 8
%IE=bitcast i8*%ID to i8**
store i8*%IC,i8**%IE,align 8
%IF=load i8*,i8**%c,align 8
%IG=getelementptr inbounds i8,i8*%Ix,i64 16
%IH=bitcast i8*%IG to i8**
store i8*%IF,i8**%IH,align 8
%II=getelementptr inbounds i8,i8*%Ix,i64 24
%IJ=bitcast i8*%II to i32*
store i32 7,i32*%IJ,align 4
%IK=tail call fastcc i8*@_SMLFN12TypedCalcCon10TPCONSTANTE(i8*inreg%Ix)
ret i8*%IK
IL:
%IM=getelementptr inbounds i8,i8*%t,i64 8
%IN=bitcast i8*%IM to i8**
%IO=load i8*,i8**%IN,align 8
%IP=bitcast i8*%IO to i8**
%IQ=load i8*,i8**%IP,align 8
%IR=bitcast i8*%IQ to i8**
%IS=load i8*,i8**%IR,align 8
%IT=getelementptr inbounds i8,i8*%IQ,i64 8
%IU=bitcast i8*%IT to i8**
%IV=load i8*,i8**%IU,align 8
store i8*%IV,i8**%d,align 8
%IW=getelementptr inbounds i8,i8*%IO,i64 8
%IX=bitcast i8*%IW to i8**
%IY=load i8*,i8**%IX,align 8
store i8*%IY,i8**%e,align 8
%IZ=getelementptr inbounds i8,i8*%IO,i64 16
%I0=bitcast i8*%IZ to i8**
%I1=load i8*,i8**%I0,align 8
store i8*%I1,i8**%f,align 8
%I2=load i8*,i8**%c,align 8
%I3=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%I2,i8*inreg%IS)
store i8*%I3,i8**%g,align 8
%I4=load i8*,i8**%c,align 8
%I5=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I6=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%I4,i8*inreg%I5)
store i8*%I6,i8**%d,align 8
%I7=call i8*@sml_alloc(i32 inreg 20)#0
%I8=getelementptr inbounds i8,i8*%I7,i64 -4
%I9=bitcast i8*%I8 to i32*
store i32 1342177296,i32*%I9,align 4
store i8*%I7,i8**%h,align 8
%Ja=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Jb=bitcast i8*%I7 to i8**
store i8*%Ja,i8**%Jb,align 8
%Jc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Jd=getelementptr inbounds i8,i8*%I7,i64 8
%Je=bitcast i8*%Jd to i8**
store i8*%Jc,i8**%Je,align 8
%Jf=getelementptr inbounds i8,i8*%I7,i64 16
%Jg=bitcast i8*%Jf to i32*
store i32 3,i32*%Jg,align 4
%Jh=load i8*,i8**%c,align 8
%Ji=load i8*,i8**%e,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%e,align 8
%Jj=call fastcc i8*@_SMLLLN17PolyTyElimination9compileTyE_1336(i8*inreg%Jh,i8*inreg%Ji)
store i8*%Jj,i8**%c,align 8
%Jk=call i8*@sml_alloc(i32 inreg 28)#0
%Jl=getelementptr inbounds i8,i8*%Jk,i64 -4
%Jm=bitcast i8*%Jl to i32*
store i32 1342177304,i32*%Jm,align 4
%Jn=load i8*,i8**%h,align 8
%Jo=bitcast i8*%Jk to i8**
store i8*%Jn,i8**%Jo,align 8
%Jp=load i8*,i8**%c,align 8
%Jq=getelementptr inbounds i8,i8*%Jk,i64 8
%Jr=bitcast i8*%Jq to i8**
store i8*%Jp,i8**%Jr,align 8
%Js=load i8*,i8**%f,align 8
%Jt=getelementptr inbounds i8,i8*%Jk,i64 16
%Ju=bitcast i8*%Jt to i8**
store i8*%Js,i8**%Ju,align 8
%Jv=getelementptr inbounds i8,i8*%Jk,i64 24
%Jw=bitcast i8*%Jv to i32*
store i32 7,i32*%Jw,align 4
%Jx=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPCASTE(i8*inreg%Jk)
ret i8*%Jx
Jy:
%Jz=getelementptr inbounds i8,i8*%t,i64 8
%JA=bitcast i8*%Jz to i8**
%JB=load i8*,i8**%JA,align 8
%JC=bitcast i8*%JB to i8**
%JD=load i8*,i8**%JC,align 8
store i8*%JD,i8**%d,align 8
%JE=getelementptr inbounds i8,i8*%JB,i64 8
%JF=bitcast i8*%JE to i8**
%JG=load i8*,i8**%JF,align 8
%JH=getelementptr inbounds i8,i8*%JB,i64 24
%JI=bitcast i8*%JH to i8**
%JJ=load i8*,i8**%JI,align 8
store i8*%JJ,i8**%e,align 8
%JK=getelementptr inbounds i8,i8*%JB,i64 40
%JL=bitcast i8*%JK to i8**
%JM=load i8*,i8**%JL,align 8
%JN=bitcast i8*%JM to i32*
%JO=load i32,i32*%JN,align 4
switch i32%JO,label%JP[
i32 1,label%L1
i32 0,label%K4
i32 2,label%J7
]
JP:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%JQ=load i8*,i8**@_SMLZ5Match,align 8
store i8*%JQ,i8**%c,align 8
%JR=call i8*@sml_alloc(i32 inreg 20)#0
%JS=getelementptr inbounds i8,i8*%JR,i64 -4
%JT=bitcast i8*%JS to i32*
store i32 1342177296,i32*%JT,align 4
store i8*%JR,i8**%d,align 8
%JU=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%JV=bitcast i8*%JR to i8**
store i8*%JU,i8**%JV,align 8
%JW=getelementptr inbounds i8,i8*%JR,i64 8
%JX=bitcast i8*%JW to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@dd,i64 0,i32 2,i64 0),i8**%JX,align 8
%JY=getelementptr inbounds i8,i8*%JR,i64 16
%JZ=bitcast i8*%JY to i32*
store i32 3,i32*%JZ,align 4
%J0=call i8*@sml_alloc(i32 inreg 60)#0
%J1=getelementptr inbounds i8,i8*%J0,i64 -4
%J2=bitcast i8*%J1 to i32*
store i32 1342177336,i32*%J2,align 4
%J3=getelementptr inbounds i8,i8*%J0,i64 56
%J4=bitcast i8*%J3 to i32*
store i32 1,i32*%J4,align 4
%J5=load i8*,i8**%d,align 8
%J6=bitcast i8*%J0 to i8**
store i8*%J5,i8**%J6,align 8
call void@sml_raise(i8*inreg%J0)#1
unreachable
J7:
%J8=getelementptr inbounds i8,i8*%JM,i64 8
%J9=bitcast i8*%J8 to i8**
%Ka=load i8*,i8**%J9,align 8
store i8*%Ka,i8**%f,align 8
%Kb=load i8*,i8**%c,align 8
%Kc=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%Kb,i8*inreg%JG)
store i8*%Kc,i8**%g,align 8
%Kd=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Ke=getelementptr inbounds i8,i8*%Kd,i64 16
%Kf=bitcast i8*%Ke to i8*(i8*,i8*)**
%Kg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Kf,align 8
%Kh=bitcast i8*%Kd to i8**
%Ki=load i8*,i8**%Kh,align 8
store i8*%Ki,i8**%h,align 8
%Kj=call i8*@sml_alloc(i32 inreg 12)#0
%Kk=getelementptr inbounds i8,i8*%Kj,i64 -4
%Kl=bitcast i8*%Kk to i32*
store i32 1342177288,i32*%Kl,align 4
store i8*%Kj,i8**%i,align 8
%Km=load i8*,i8**%c,align 8
%Kn=bitcast i8*%Kj to i8**
store i8*%Km,i8**%Kn,align 8
%Ko=getelementptr inbounds i8,i8*%Kj,i64 8
%Kp=bitcast i8*%Ko to i32*
store i32 1,i32*%Kp,align 4
%Kq=call i8*@sml_alloc(i32 inreg 28)#0
%Kr=getelementptr inbounds i8,i8*%Kq,i64 -4
%Ks=bitcast i8*%Kr to i32*
store i32 1342177304,i32*%Ks,align 4
%Kt=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Ku=bitcast i8*%Kq to i8**
store i8*%Kt,i8**%Ku,align 8
%Kv=getelementptr inbounds i8,i8*%Kq,i64 8
%Kw=bitcast i8*%Kv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10compileExpE_1557 to void(...)*),void(...)**%Kw,align 8
%Kx=getelementptr inbounds i8,i8*%Kq,i64 16
%Ky=bitcast i8*%Kx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10compileExpE_1557 to void(...)*),void(...)**%Ky,align 8
%Kz=getelementptr inbounds i8,i8*%Kq,i64 24
%KA=bitcast i8*%Kz to i32*
store i32 -2147483647,i32*%KA,align 4
%KB=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%KC=call fastcc i8*%Kg(i8*inreg%KB,i8*inreg%Kq)
%KD=getelementptr inbounds i8,i8*%KC,i64 16
%KE=bitcast i8*%KD to i8*(i8*,i8*)**
%KF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%KE,align 8
%KG=bitcast i8*%KC to i8**
%KH=load i8*,i8**%KG,align 8
%KI=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%KJ=call fastcc i8*%KF(i8*inreg%KH,i8*inreg%KI)
store i8*%KJ,i8**%f,align 8
%KK=load i8*,i8**%c,align 8
%KL=load i8*,i8**%d,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%KM=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%KK,i8*inreg%KL)
store i8*%KM,i8**%c,align 8
%KN=call i8*@sml_alloc(i32 inreg 36)#0
%KO=getelementptr inbounds i8,i8*%KN,i64 -4
%KP=bitcast i8*%KO to i32*
store i32 1342177312,i32*%KP,align 4
%KQ=load i8*,i8**%c,align 8
%KR=bitcast i8*%KN to i8**
store i8*%KQ,i8**%KR,align 8
%KS=load i8*,i8**%g,align 8
%KT=getelementptr inbounds i8,i8*%KN,i64 8
%KU=bitcast i8*%KT to i8**
store i8*%KS,i8**%KU,align 8
%KV=load i8*,i8**%e,align 8
%KW=getelementptr inbounds i8,i8*%KN,i64 16
%KX=bitcast i8*%KW to i8**
store i8*%KV,i8**%KX,align 8
%KY=load i8*,i8**%f,align 8
%KZ=getelementptr inbounds i8,i8*%KN,i64 24
%K0=bitcast i8*%KZ to i8**
store i8*%KY,i8**%K0,align 8
%K1=getelementptr inbounds i8,i8*%KN,i64 32
%K2=bitcast i8*%K1 to i32*
store i32 15,i32*%K2,align 4
%K3=tail call fastcc i8*@_SMLFN12TypedCalcCon16TPSWITCH__EXNCASEE(i8*inreg%KN)
ret i8*%K3
K4:
%K5=getelementptr inbounds i8,i8*%JM,i64 8
%K6=bitcast i8*%K5 to i8**
%K7=load i8*,i8**%K6,align 8
store i8*%K7,i8**%f,align 8
%K8=load i8*,i8**%c,align 8
%K9=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%K8,i8*inreg%JG)
store i8*%K9,i8**%g,align 8
%La=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Lb=getelementptr inbounds i8,i8*%La,i64 16
%Lc=bitcast i8*%Lb to i8*(i8*,i8*)**
%Ld=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Lc,align 8
%Le=bitcast i8*%La to i8**
%Lf=load i8*,i8**%Le,align 8
store i8*%Lf,i8**%h,align 8
%Lg=call i8*@sml_alloc(i32 inreg 12)#0
%Lh=getelementptr inbounds i8,i8*%Lg,i64 -4
%Li=bitcast i8*%Lh to i32*
store i32 1342177288,i32*%Li,align 4
store i8*%Lg,i8**%i,align 8
%Lj=load i8*,i8**%c,align 8
%Lk=bitcast i8*%Lg to i8**
store i8*%Lj,i8**%Lk,align 8
%Ll=getelementptr inbounds i8,i8*%Lg,i64 8
%Lm=bitcast i8*%Ll to i32*
store i32 1,i32*%Lm,align 4
%Ln=call i8*@sml_alloc(i32 inreg 28)#0
%Lo=getelementptr inbounds i8,i8*%Ln,i64 -4
%Lp=bitcast i8*%Lo to i32*
store i32 1342177304,i32*%Lp,align 4
%Lq=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Lr=bitcast i8*%Ln to i8**
store i8*%Lq,i8**%Lr,align 8
%Ls=getelementptr inbounds i8,i8*%Ln,i64 8
%Lt=bitcast i8*%Ls to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10compileExpE_1556 to void(...)*),void(...)**%Lt,align 8
%Lu=getelementptr inbounds i8,i8*%Ln,i64 16
%Lv=bitcast i8*%Lu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10compileExpE_1556 to void(...)*),void(...)**%Lv,align 8
%Lw=getelementptr inbounds i8,i8*%Ln,i64 24
%Lx=bitcast i8*%Lw to i32*
store i32 -2147483647,i32*%Lx,align 4
%Ly=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Lz=call fastcc i8*%Ld(i8*inreg%Ly,i8*inreg%Ln)
%LA=getelementptr inbounds i8,i8*%Lz,i64 16
%LB=bitcast i8*%LA to i8*(i8*,i8*)**
%LC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%LB,align 8
%LD=bitcast i8*%Lz to i8**
%LE=load i8*,i8**%LD,align 8
%LF=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%LG=call fastcc i8*%LC(i8*inreg%LE,i8*inreg%LF)
store i8*%LG,i8**%f,align 8
%LH=load i8*,i8**%c,align 8
%LI=load i8*,i8**%d,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%LJ=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%LH,i8*inreg%LI)
store i8*%LJ,i8**%c,align 8
%LK=call i8*@sml_alloc(i32 inreg 36)#0
%LL=getelementptr inbounds i8,i8*%LK,i64 -4
%LM=bitcast i8*%LL to i32*
store i32 1342177312,i32*%LM,align 4
%LN=load i8*,i8**%c,align 8
%LO=bitcast i8*%LK to i8**
store i8*%LN,i8**%LO,align 8
%LP=load i8*,i8**%g,align 8
%LQ=getelementptr inbounds i8,i8*%LK,i64 8
%LR=bitcast i8*%LQ to i8**
store i8*%LP,i8**%LR,align 8
%LS=load i8*,i8**%e,align 8
%LT=getelementptr inbounds i8,i8*%LK,i64 16
%LU=bitcast i8*%LT to i8**
store i8*%LS,i8**%LU,align 8
%LV=load i8*,i8**%f,align 8
%LW=getelementptr inbounds i8,i8*%LK,i64 24
%LX=bitcast i8*%LW to i8**
store i8*%LV,i8**%LX,align 8
%LY=getelementptr inbounds i8,i8*%LK,i64 32
%LZ=bitcast i8*%LY to i32*
store i32 15,i32*%LZ,align 4
%L0=tail call fastcc i8*@_SMLFN12TypedCalcCon16TPSWITCH__CONCASEE(i8*inreg%LK)
ret i8*%L0
L1:
%L2=getelementptr inbounds i8,i8*%JM,i64 8
%L3=bitcast i8*%L2 to i8**
%L4=load i8*,i8**%L3,align 8
store i8*%L4,i8**%f,align 8
%L5=load i8*,i8**%c,align 8
%L6=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%L5,i8*inreg%JG)
store i8*%L6,i8**%g,align 8
%L7=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%L8=getelementptr inbounds i8,i8*%L7,i64 16
%L9=bitcast i8*%L8 to i8*(i8*,i8*)**
%Ma=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L9,align 8
%Mb=bitcast i8*%L7 to i8**
%Mc=load i8*,i8**%Mb,align 8
store i8*%Mc,i8**%h,align 8
%Md=call i8*@sml_alloc(i32 inreg 12)#0
%Me=getelementptr inbounds i8,i8*%Md,i64 -4
%Mf=bitcast i8*%Me to i32*
store i32 1342177288,i32*%Mf,align 4
store i8*%Md,i8**%i,align 8
%Mg=load i8*,i8**%c,align 8
%Mh=bitcast i8*%Md to i8**
store i8*%Mg,i8**%Mh,align 8
%Mi=getelementptr inbounds i8,i8*%Md,i64 8
%Mj=bitcast i8*%Mi to i32*
store i32 1,i32*%Mj,align 4
%Mk=call i8*@sml_alloc(i32 inreg 28)#0
%Ml=getelementptr inbounds i8,i8*%Mk,i64 -4
%Mm=bitcast i8*%Ml to i32*
store i32 1342177304,i32*%Mm,align 4
%Mn=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Mo=bitcast i8*%Mk to i8**
store i8*%Mn,i8**%Mo,align 8
%Mp=getelementptr inbounds i8,i8*%Mk,i64 8
%Mq=bitcast i8*%Mp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10compileExpE_1555 to void(...)*),void(...)**%Mq,align 8
%Mr=getelementptr inbounds i8,i8*%Mk,i64 16
%Ms=bitcast i8*%Mr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10compileExpE_1555 to void(...)*),void(...)**%Ms,align 8
%Mt=getelementptr inbounds i8,i8*%Mk,i64 24
%Mu=bitcast i8*%Mt to i32*
store i32 -2147483647,i32*%Mu,align 4
%Mv=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Mw=call fastcc i8*%Ma(i8*inreg%Mv,i8*inreg%Mk)
%Mx=getelementptr inbounds i8,i8*%Mw,i64 16
%My=bitcast i8*%Mx to i8*(i8*,i8*)**
%Mz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%My,align 8
%MA=bitcast i8*%Mw to i8**
%MB=load i8*,i8**%MA,align 8
%MC=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%MD=call fastcc i8*%Mz(i8*inreg%MB,i8*inreg%MC)
store i8*%MD,i8**%f,align 8
%ME=load i8*,i8**%c,align 8
%MF=load i8*,i8**%d,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%MG=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%ME,i8*inreg%MF)
store i8*%MG,i8**%c,align 8
%MH=call i8*@sml_alloc(i32 inreg 36)#0
%MI=getelementptr inbounds i8,i8*%MH,i64 -4
%MJ=bitcast i8*%MI to i32*
store i32 1342177312,i32*%MJ,align 4
%MK=load i8*,i8**%c,align 8
%ML=bitcast i8*%MH to i8**
store i8*%MK,i8**%ML,align 8
%MM=load i8*,i8**%g,align 8
%MN=getelementptr inbounds i8,i8*%MH,i64 8
%MO=bitcast i8*%MN to i8**
store i8*%MM,i8**%MO,align 8
%MP=load i8*,i8**%e,align 8
%MQ=getelementptr inbounds i8,i8*%MH,i64 16
%MR=bitcast i8*%MQ to i8**
store i8*%MP,i8**%MR,align 8
%MS=load i8*,i8**%f,align 8
%MT=getelementptr inbounds i8,i8*%MH,i64 24
%MU=bitcast i8*%MT to i8**
store i8*%MS,i8**%MU,align 8
%MV=getelementptr inbounds i8,i8*%MH,i64 32
%MW=bitcast i8*%MV to i32*
store i32 15,i32*%MW,align 4
%MX=tail call fastcc i8*@_SMLFN12TypedCalcCon18TPSWITCH__CONSTCASEE(i8*inreg%MH)
ret i8*%MX
MY:
%MZ=getelementptr inbounds i8,i8*%t,i64 8
%M0=bitcast i8*%MZ to i8**
%M1=load i8*,i8**%M0,align 8
%M2=bitcast i8*%M1 to i32*
%M3=load i32,i32*%M2,align 4
%M4=getelementptr inbounds i8,i8*%M1,i64 8
%M5=bitcast i8*%M4 to i8**
%M6=load i8*,i8**%M5,align 8
store i8*%M6,i8**%d,align 8
%M7=getelementptr inbounds i8,i8*%M1,i64 24
%M8=bitcast i8*%M7 to i8**
%M9=load i8*,i8**%M8,align 8
store i8*%M9,i8**%e,align 8
%Na=getelementptr inbounds i8,i8*%M1,i64 40
%Nb=bitcast i8*%Na to i8**
%Nc=load i8*,i8**%Nb,align 8
store i8*%Nc,i8**%f,align 8
%Nd=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Ne=getelementptr inbounds i8,i8*%Nd,i64 16
%Nf=bitcast i8*%Ne to i8*(i8*,i8*)**
%Ng=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Nf,align 8
%Nh=bitcast i8*%Nd to i8**
%Ni=load i8*,i8**%Nh,align 8
store i8*%Ni,i8**%g,align 8
%Nj=load i8*,i8**%c,align 8
%Nk=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1495(i8*inreg%Nj)
%Nl=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Nm=call fastcc i8*%Ng(i8*inreg%Nl,i8*inreg%Nk)
%Nn=getelementptr inbounds i8,i8*%Nm,i64 16
%No=bitcast i8*%Nn to i8*(i8*,i8*)**
%Np=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%No,align 8
%Nq=bitcast i8*%Nm to i8**
%Nr=load i8*,i8**%Nq,align 8
%Ns=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Nt=call fastcc i8*%Np(i8*inreg%Nr,i8*inreg%Ns)
store i8*%Nt,i8**%d,align 8
%Nu=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Nv=getelementptr inbounds i8,i8*%Nu,i64 16
%Nw=bitcast i8*%Nv to i8*(i8*,i8*)**
%Nx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Nw,align 8
%Ny=bitcast i8*%Nu to i8**
%Nz=load i8*,i8**%Ny,align 8
store i8*%Nz,i8**%g,align 8
%NA=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%NB=call fastcc i8*@_SMLLLN17PolyTyElimination12compileMatchE_1490(i8*inreg%NA)
%NC=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ND=call fastcc i8*%Nx(i8*inreg%NC,i8*inreg%NB)
%NE=getelementptr inbounds i8,i8*%ND,i64 16
%NF=bitcast i8*%NE to i8*(i8*,i8*)**
%NG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%NF,align 8
%NH=bitcast i8*%ND to i8**
%NI=load i8*,i8**%NH,align 8
%NJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%NK=call fastcc i8*%NG(i8*inreg%NI,i8*inreg%NJ)
store i8*%NK,i8**%c,align 8
%NL=call i8*@sml_alloc(i32 inreg 36)#0
%NM=bitcast i8*%NL to i32*
%NN=getelementptr inbounds i8,i8*%NL,i64 -4
%NO=bitcast i8*%NN to i32*
store i32 1342177312,i32*%NO,align 4
%NP=getelementptr inbounds i8,i8*%NL,i64 4
%NQ=bitcast i8*%NP to i32*
store i32 0,i32*%NQ,align 1
store i32%M3,i32*%NM,align 4
%NR=load i8*,i8**%d,align 8
%NS=getelementptr inbounds i8,i8*%NL,i64 8
%NT=bitcast i8*%NS to i8**
store i8*%NR,i8**%NT,align 8
%NU=load i8*,i8**%e,align 8
%NV=getelementptr inbounds i8,i8*%NL,i64 16
%NW=bitcast i8*%NV to i8**
store i8*%NU,i8**%NW,align 8
%NX=load i8*,i8**%c,align 8
%NY=getelementptr inbounds i8,i8*%NL,i64 24
%NZ=bitcast i8*%NY to i8**
store i8*%NX,i8**%NZ,align 8
%N0=getelementptr inbounds i8,i8*%NL,i64 32
%N1=bitcast i8*%N0 to i32*
store i32 14,i32*%N1,align 4
%N2=tail call fastcc i8*@_SMLFN12TypedCalcCon7TPCASEME(i8*inreg%NL)
ret i8*%N2
N3:
%N4=getelementptr inbounds i8,i8*%t,i64 8
%N5=bitcast i8*%N4 to i8**
%N6=load i8*,i8**%N5,align 8
%N7=bitcast i8*%N6 to i8**
%N8=load i8*,i8**%N7,align 8
store i8*%N8,i8**%d,align 8
%N9=getelementptr inbounds i8,i8*%N6,i64 8
%Oa=bitcast i8*%N9 to i8**
%Ob=load i8*,i8**%Oa,align 8
%Oc=getelementptr inbounds i8,i8*%N6,i64 24
%Od=bitcast i8*%Oc to i8**
%Oe=load i8*,i8**%Od,align 8
store i8*%Oe,i8**%e,align 8
%Of=load i8*,i8**%c,align 8
%Og=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%Of,i8*inreg%Ob)
store i8*%Og,i8**%f,align 8
%Oh=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Oi=getelementptr inbounds i8,i8*%Oh,i64 16
%Oj=bitcast i8*%Oi to i8*(i8*,i8*)**
%Ok=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Oj,align 8
%Ol=bitcast i8*%Oh to i8**
%Om=load i8*,i8**%Ol,align 8
store i8*%Om,i8**%g,align 8
%On=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Oo=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1495(i8*inreg%On)
%Op=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Oq=call fastcc i8*%Ok(i8*inreg%Op,i8*inreg%Oo)
%Or=getelementptr inbounds i8,i8*%Oq,i64 16
%Os=bitcast i8*%Or to i8*(i8*,i8*)**
%Ot=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Os,align 8
%Ou=bitcast i8*%Oq to i8**
%Ov=load i8*,i8**%Ou,align 8
%Ow=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Ox=call fastcc i8*%Ot(i8*inreg%Ov,i8*inreg%Ow)
store i8*%Ox,i8**%c,align 8
%Oy=call i8*@sml_alloc(i32 inreg 28)#0
%Oz=getelementptr inbounds i8,i8*%Oy,i64 -4
%OA=bitcast i8*%Oz to i32*
store i32 1342177304,i32*%OA,align 4
%OB=load i8*,i8**%c,align 8
%OC=bitcast i8*%Oy to i8**
store i8*%OB,i8**%OC,align 8
%OD=load i8*,i8**%f,align 8
%OE=getelementptr inbounds i8,i8*%Oy,i64 8
%OF=bitcast i8*%OE to i8**
store i8*%OD,i8**%OF,align 8
%OG=load i8*,i8**%e,align 8
%OH=getelementptr inbounds i8,i8*%Oy,i64 16
%OI=bitcast i8*%OH to i8**
store i8*%OG,i8**%OI,align 8
%OJ=getelementptr inbounds i8,i8*%Oy,i64 24
%OK=bitcast i8*%OJ to i32*
store i32 7,i32*%OK,align 4
%OL=tail call fastcc i8*@_SMLFN12TypedCalcCon6TPAPPME(i8*inreg%Oy)
ret i8*%OL
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination12compileMatchE_1490(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination12compileMatchE_1586 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination12compileMatchE_1586 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18compileFunRecbindsE_1491(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=call i8*@sml_alloc(i32 inreg 12)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177288,i32*%t,align 4
store i8*%r,i8**%f,align 8
%u=load i8*,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL8recbinds_1587 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL8recbinds_1587 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
%J=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%K=call fastcc i8*%o(i8*inreg%J,i8*inreg%y)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
%Q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%R=call fastcc i8*%N(i8*inreg%P,i8*inreg%Q)
store i8*%R,i8**%d,align 8
%S=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
%Y=call fastcc i8*%V(i8*inreg%X,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@de,i64 0,i32 2)to i8*))
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
%ae=load i8*,i8**%d,align 8
%af=call fastcc i8*%ab(i8*inreg%ad,i8*inreg%ae)
%ag=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%af)
store i8*%ag,i8**%e,align 8
%ah=load i8*,i8**%c,align 8
%ai=getelementptr inbounds i8,i8*%ah,i64 8
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%f,align 8
%al=call i8*@sml_alloc(i32 inreg 20)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177296,i32*%an,align 4
%ao=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ar=getelementptr inbounds i8,i8*%al,i64 8
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%al,i64 16
%au=bitcast i8*%at to i32*
store i32 3,i32*%au,align 4
%av=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%al)
store i8*%av,i8**%e,align 8
%aw=load i8*,i8**%c,align 8
%ax=bitcast i8*%aw to i32*
%ay=load i32,i32*%ax,align 4
%az=getelementptr inbounds i8,i8*%aw,i64 16
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
store i8*%aB,i8**%f,align 8
store i8*null,i8**%c,align 8
%aC=getelementptr inbounds i8,i8*%aw,i64 24
%aD=bitcast i8*%aC to i8**
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%g,align 8
%aF=call i8*@sml_alloc(i32 inreg 36)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177312,i32*%aH,align 4
store i8*%aF,i8**%c,align 8
%aI=getelementptr inbounds i8,i8*%aF,i64 4
%aJ=bitcast i8*%aI to i32*
store i32 0,i32*%aJ,align 1
%aK=bitcast i8*%aF to i32*
store i32%ay,i32*%aK,align 4
%aL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aM=getelementptr inbounds i8,i8*%aF,i64 8
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aP=getelementptr inbounds i8,i8*%aF,i64 16
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aS=getelementptr inbounds i8,i8*%aF,i64 24
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aF,i64 32
%aV=bitcast i8*%aU to i32*
store i32 14,i32*%aV,align 4
%aW=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aX=getelementptr inbounds i8,i8*%aW,i64 16
%aY=bitcast i8*%aX to i8*(i8*,i8*)**
%aZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aY,align 8
%a0=bitcast i8*%aW to i8**
%a1=load i8*,i8**%a0,align 8
store i8*%a1,i8**%e,align 8
%a2=call i8*@sml_alloc(i32 inreg 12)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177288,i32*%a4,align 4
store i8*%a2,i8**%f,align 8
%a5=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a6=bitcast i8*%a2 to i8**
store i8*%a5,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%a2,i64 8
%a8=bitcast i8*%a7 to i32*
store i32 1,i32*%a8,align 4
%a9=call i8*@sml_alloc(i32 inreg 28)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177304,i32*%bb,align 4
%bc=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bd=bitcast i8*%a9 to i8**
store i8*%bc,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a9,i64 8
%bf=bitcast i8*%be to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination18compileFunRecbindsE_1590 to void(...)*),void(...)**%bf,align 8
%bg=getelementptr inbounds i8,i8*%a9,i64 16
%bh=bitcast i8*%bg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination18compileFunRecbindsE_1590 to void(...)*),void(...)**%bh,align 8
%bi=getelementptr inbounds i8,i8*%a9,i64 24
%bj=bitcast i8*%bi to i32*
store i32 -2147483647,i32*%bj,align 4
%bk=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bl=call fastcc i8*%aZ(i8*inreg%bk,i8*inreg%a9)
%bm=getelementptr inbounds i8,i8*%bl,i64 16
%bn=bitcast i8*%bm to i8*(i8*,i8*)**
%bo=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bn,align 8
%bp=bitcast i8*%bl to i8**
%bq=load i8*,i8**%bp,align 8
%br=load i8*,i8**%d,align 8
%bs=tail call fastcc i8*%bo(i8*inreg%bq,i8*inreg%br)
ret i8*%bs
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination14compileMonoLetE_1492(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%d,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%b,%o]
store i8*null,i8**%d,align 8
%p=icmp eq i8*%n,null
br i1%p,label%q,label%A
q:
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=bitcast i8*%r to i8**
store i8*null,i8**%u,align 8
%v=load i8*,i8**%c,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
ret i8*%r
A:
%B=bitcast i8*%n to i8**
%C=load i8*,i8**%B,align 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%C,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
%I=getelementptr inbounds i8,i8*%n,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%e,align 8
%L=load i8*,i8**%c,align 8
%M=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%L,i8*inreg%H)
store i8*%M,i8**%f,align 8
%N=getelementptr inbounds i8,i8*%M,i64 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%g,align 8
%Q=load i8*,i8**%d,align 8
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
%T=getelementptr inbounds i8,i8*%Q,i64 4
%U=bitcast i8*%T to i32*
%V=load i32,i32*%U,align 4
store i8*null,i8**%d,align 8
%W=getelementptr inbounds i8,i8*%Q,i64 8
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%h,align 8
%Z=call i8*@sml_alloc(i32 inreg 28)#0
%aa=bitcast i8*%Z to i32*
%ab=getelementptr inbounds i8,i8*%Z,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177304,i32*%ac,align 4
store i8*%Z,i8**%d,align 8
store i32%S,i32*%aa,align 4
%ad=getelementptr inbounds i8,i8*%Z,i64 4
%ae=bitcast i8*%ad to i32*
store i32%V,i32*%ae,align 4
%af=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 8
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aj=getelementptr inbounds i8,i8*%Z,i64 16
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%Z,i64 24
%am=bitcast i8*%al to i32*
store i32 6,i32*%am,align 4
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
%aq=load i8*,i8**%d,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%an,i64 8
%at=bitcast i8*%as to i8**
store i8*null,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%an,i64 16
%av=bitcast i8*%au to i32*
store i32 3,i32*%av,align 4
%aw=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%an)
store i8*%aw,i8**%g,align 8
%ax=load i8*,i8**%c,align 8
%ay=getelementptr inbounds i8,i8*%ax,i64 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%h,align 8
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
%aE=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aB,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 3,i32*%aK,align 4
%aL=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%aB)
store i8*%aL,i8**%g,align 8
%aM=load i8*,i8**%c,align 8
%aN=bitcast i8*%aM to i32*
%aO=load i32,i32*%aN,align 4
%aP=getelementptr inbounds i8,i8*%aM,i64 16
%aQ=bitcast i8*%aP to i8**
%aR=load i8*,i8**%aQ,align 8
store i8*%aR,i8**%h,align 8
%aS=getelementptr inbounds i8,i8*%aM,i64 24
%aT=bitcast i8*%aS to i8**
%aU=load i8*,i8**%aT,align 8
store i8*%aU,i8**%c,align 8
%aV=call i8*@sml_alloc(i32 inreg 36)#0
%aW=bitcast i8*%aV to i32*
%aX=getelementptr inbounds i8,i8*%aV,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177312,i32*%aY,align 4
%aZ=getelementptr inbounds i8,i8*%aV,i64 4
%a0=bitcast i8*%aZ to i32*
store i32 0,i32*%a0,align 1
store i32%aO,i32*%aW,align 4
%a1=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a2=getelementptr inbounds i8,i8*%aV,i64 8
%a3=bitcast i8*%a2 to i8**
store i8*%a1,i8**%a3,align 8
%a4=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a5=getelementptr inbounds i8,i8*%aV,i64 16
%a6=bitcast i8*%a5 to i8**
store i8*%a4,i8**%a6,align 8
%a7=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a8=getelementptr inbounds i8,i8*%aV,i64 24
%a9=bitcast i8*%a8 to i8**
store i8*%a7,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%aV,i64 32
%bb=bitcast i8*%ba to i32*
store i32 14,i32*%bb,align 4
%bc=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bd=call fastcc i8*@_SMLLLN17PolyTyElimination14compileMonoLetE_1492(i8*inreg%aV,i8*inreg%bc)
%be=bitcast i8*%bd to i8**
%bf=load i8*,i8**%be,align 8
store i8*%bf,i8**%c,align 8
%bg=getelementptr inbounds i8,i8*%bd,i64 8
%bh=bitcast i8*%bg to i8**
%bi=load i8*,i8**%bh,align 8
store i8*%bi,i8**%e,align 8
%bj=call i8*@sml_alloc(i32 inreg 20)#0
%bk=getelementptr inbounds i8,i8*%bj,i64 -4
%bl=bitcast i8*%bk to i32*
store i32 1342177296,i32*%bl,align 4
store i8*%bj,i8**%g,align 8
%bm=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bn=bitcast i8*%bj to i8**
store i8*%bm,i8**%bn,align 8
%bo=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bp=getelementptr inbounds i8,i8*%bj,i64 8
%bq=bitcast i8*%bp to i8**
store i8*%bo,i8**%bq,align 8
%br=getelementptr inbounds i8,i8*%bj,i64 16
%bs=bitcast i8*%br to i32*
store i32 3,i32*%bs,align 4
%bt=call i8*@sml_alloc(i32 inreg 20)#0
%bu=getelementptr inbounds i8,i8*%bt,i64 -4
%bv=bitcast i8*%bu to i32*
store i32 1342177296,i32*%bv,align 4
store i8*%bt,i8**%d,align 8
%bw=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bx=bitcast i8*%bt to i8**
store i8*%bw,i8**%bx,align 8
%by=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bz=getelementptr inbounds i8,i8*%bt,i64 8
%bA=bitcast i8*%bz to i8**
store i8*%by,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bt,i64 16
%bC=bitcast i8*%bB to i32*
store i32 3,i32*%bC,align 4
%bD=call i8*@sml_alloc(i32 inreg 20)#0
%bE=getelementptr inbounds i8,i8*%bD,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177296,i32*%bF,align 4
%bG=load i8*,i8**%d,align 8
%bH=bitcast i8*%bD to i8**
store i8*%bG,i8**%bH,align 8
%bI=load i8*,i8**%e,align 8
%bJ=getelementptr inbounds i8,i8*%bD,i64 8
%bK=bitcast i8*%bJ to i8**
store i8*%bI,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bD,i64 16
%bM=bitcast i8*%bL to i32*
store i32 3,i32*%bM,align 4
ret i8*%bD
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15compileRecbindsE_1493(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=call i8*@sml_alloc(i32 inreg 12)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177288,i32*%t,align 4
store i8*%r,i8**%f,align 8
%u=load i8*,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL8recbinds_1591 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL8recbinds_1591 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
%J=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%K=call fastcc i8*%o(i8*inreg%J,i8*inreg%y)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
%Q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%R=call fastcc i8*%N(i8*inreg%P,i8*inreg%Q)
store i8*%R,i8**%d,align 8
%S=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
%Y=call fastcc i8*%V(i8*inreg%X,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@df,i64 0,i32 2)to i8*))
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
%ae=load i8*,i8**%d,align 8
%af=call fastcc i8*%ab(i8*inreg%ad,i8*inreg%ae)
%ag=call fastcc i8*@_SMLFN12TypedCalcCon10makeVarEnvE(i8*inreg%af)
store i8*%ag,i8**%e,align 8
%ah=load i8*,i8**%c,align 8
%ai=getelementptr inbounds i8,i8*%ah,i64 8
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%f,align 8
%al=call i8*@sml_alloc(i32 inreg 20)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177296,i32*%an,align 4
%ao=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ar=getelementptr inbounds i8,i8*%al,i64 8
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%al,i64 16
%au=bitcast i8*%at to i32*
store i32 3,i32*%au,align 4
%av=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%al)
store i8*%av,i8**%e,align 8
%aw=load i8*,i8**%c,align 8
%ax=bitcast i8*%aw to i32*
%ay=load i32,i32*%ax,align 4
%az=getelementptr inbounds i8,i8*%aw,i64 16
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
store i8*%aB,i8**%f,align 8
store i8*null,i8**%c,align 8
%aC=getelementptr inbounds i8,i8*%aw,i64 24
%aD=bitcast i8*%aC to i8**
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%g,align 8
%aF=call i8*@sml_alloc(i32 inreg 36)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177312,i32*%aH,align 4
store i8*%aF,i8**%c,align 8
%aI=getelementptr inbounds i8,i8*%aF,i64 4
%aJ=bitcast i8*%aI to i32*
store i32 0,i32*%aJ,align 1
%aK=bitcast i8*%aF to i32*
store i32%ay,i32*%aK,align 4
%aL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aM=getelementptr inbounds i8,i8*%aF,i64 8
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aP=getelementptr inbounds i8,i8*%aF,i64 16
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aS=getelementptr inbounds i8,i8*%aF,i64 24
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aF,i64 32
%aV=bitcast i8*%aU to i32*
store i32 14,i32*%aV,align 4
%aW=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aX=getelementptr inbounds i8,i8*%aW,i64 16
%aY=bitcast i8*%aX to i8*(i8*,i8*)**
%aZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aY,align 8
%a0=bitcast i8*%aW to i8**
%a1=load i8*,i8**%a0,align 8
store i8*%a1,i8**%e,align 8
%a2=call i8*@sml_alloc(i32 inreg 12)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177288,i32*%a4,align 4
store i8*%a2,i8**%f,align 8
%a5=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a6=bitcast i8*%a2 to i8**
store i8*%a5,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%a2,i64 8
%a8=bitcast i8*%a7 to i32*
store i32 1,i32*%a8,align 4
%a9=call i8*@sml_alloc(i32 inreg 28)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177304,i32*%bb,align 4
%bc=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bd=bitcast i8*%a9 to i8**
store i8*%bc,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a9,i64 8
%bf=bitcast i8*%be to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15compileRecbindsE_1594 to void(...)*),void(...)**%bf,align 8
%bg=getelementptr inbounds i8,i8*%a9,i64 16
%bh=bitcast i8*%bg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15compileRecbindsE_1594 to void(...)*),void(...)**%bh,align 8
%bi=getelementptr inbounds i8,i8*%a9,i64 24
%bj=bitcast i8*%bi to i32*
store i32 -2147483647,i32*%bj,align 4
%bk=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bl=call fastcc i8*%aZ(i8*inreg%bk,i8*inreg%a9)
%bm=getelementptr inbounds i8,i8*%bl,i64 16
%bn=bitcast i8*%bm to i8*(i8*,i8*)**
%bo=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bn,align 8
%bp=bitcast i8*%bl to i8**
%bq=load i8*,i8**%bp,align 8
%br=load i8*,i8**%d,align 8
%bs=tail call fastcc i8*%bo(i8*inreg%bq,i8*inreg%br)
ret i8*%bs
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15compileDeclListE_1494(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%d,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%b,%p]
store i8*null,i8**%d,align 8
%q=icmp eq i8*%o,null
br i1%q,label%r,label%B
r:
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=bitcast i8*%s to i8**
store i8*null,i8**%v,align 8
%w=load i8*,i8**%c,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
ret i8*%s
B:
%C=bitcast i8*%o to i8**
%D=load i8*,i8**%C,align 8
%E=getelementptr inbounds i8,i8*%o,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%d,align 8
%H=bitcast i8*%D to i32*
%I=load i32,i32*%H,align 4
switch i32%I,label%J[
i32 1,label%iJ
i32 2,label%gP
i32 3,label%gK
i32 4,label%go
i32 5,label%gj
i32 0,label%ge
i32 6,label%f9
i32 7,label%fN
i32 8,label%du
i32 9,label%cQ
i32 10,label%ax
i32 11,label%ab
]
J:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%K=load i8*,i8**@_SMLZ5Match,align 8
store i8*%K,i8**%c,align 8
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
store i8*%L,i8**%d,align 8
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@dm,i64 0,i32 2,i64 0),i8**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=call i8*@sml_alloc(i32 inreg 60)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177336,i32*%W,align 4
%X=getelementptr inbounds i8,i8*%U,i64 56
%Y=bitcast i8*%X to i32*
store i32 1,i32*%Y,align 4
%Z=load i8*,i8**%d,align 8
%aa=bitcast i8*%U to i8**
store i8*%Z,i8**%aa,align 8
call void@sml_raise(i8*inreg%U)#1
unreachable
ab:
%ac=getelementptr inbounds i8,i8*%D,i64 8
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
%af=bitcast i8*%ae to i8**
%ag=load i8*,i8**%af,align 8
%ah=getelementptr inbounds i8,i8*%ae,i64 8
%ai=bitcast i8*%ah to i8**
%aj=load i8*,i8**%ai,align 8
store i8*%aj,i8**%e,align 8
%ak=load i8*,i8**%c,align 8
%al=call fastcc i8*@_SMLLLN17PolyTyElimination15compileRecbindsE_1493(i8*inreg%ak,i8*inreg%ag)
store i8*%al,i8**%f,align 8
%am=call i8*@sml_alloc(i32 inreg 20)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177296,i32*%ao,align 4
%ap=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%as=getelementptr inbounds i8,i8*%am,i64 8
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%am,i64 16
%av=bitcast i8*%au to i32*
store i32 3,i32*%av,align 4
%aw=call fastcc i8*@_SMLFN12TypedCalcCon8TPVALRECE(i8*inreg%am)
br label%i5
ax:
%ay=getelementptr inbounds i8,i8*%D,i64 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
%aB=bitcast i8*%aA to i8**
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%e,align 8
%aD=getelementptr inbounds i8,i8*%aA,i64 8
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
store i8*%aF,i8**%f,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 16
%aH=bitcast i8*%aG to i8**
%aI=load i8*,i8**%aH,align 8
store i8*%aI,i8**%g,align 8
%aJ=getelementptr inbounds i8,i8*%aA,i64 24
%aK=bitcast i8*%aJ to i8**
%aL=load i8*,i8**%aK,align 8
store i8*%aL,i8**%h,align 8
%aM=call i8*@sml_alloc(i32 inreg 20)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177296,i32*%aO,align 4
%aP=load i8*,i8**%e,align 8
%aQ=bitcast i8*%aM to i8**
store i8*%aP,i8**%aQ,align 8
%aR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aS=getelementptr inbounds i8,i8*%aM,i64 8
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aM,i64 16
%aV=bitcast i8*%aU to i32*
store i32 3,i32*%aV,align 4
%aW=load i8*,i8**%c,align 8
%aX=call fastcc i8*@_SMLLLN17PolyTyElimination13compileBtvEnvE_1341(i8*inreg%aW,i8*inreg%aM)
%aY=bitcast i8*%aX to i8**
%aZ=load i8*,i8**%aY,align 8
store i8*%aZ,i8**%f,align 8
%a0=getelementptr inbounds i8,i8*%aX,i64 8
%a1=bitcast i8*%a0 to i8**
%a2=load i8*,i8**%a1,align 8
store i8*%a2,i8**%i,align 8
%a3=load i32*,i32**bitcast(i8**@_SMLZN7Control17verbosePolyTyElimE to i32**),align 8
%a4=load i32,i32*%a3,align 4
%a5=icmp slt i32%a4,1
br i1%a5,label%bi,label%a6
a6:
%a7=call i8*@sml_alloc(i32 inreg 20)#0
%a8=getelementptr inbounds i8,i8*%a7,i64 -4
%a9=bitcast i8*%a8 to i32*
store i32 1342177296,i32*%a9,align 4
%ba=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bb=bitcast i8*%a7 to i8**
store i8*%ba,i8**%bb,align 8
%bc=load i8*,i8**%i,align 8
%bd=getelementptr inbounds i8,i8*%a7,i64 8
%be=bitcast i8*%bd to i8**
store i8*%bc,i8**%be,align 8
%bf=getelementptr inbounds i8,i8*%a7,i64 16
%bg=bitcast i8*%bf to i32*
store i32 3,i32*%bg,align 4
call fastcc void@_SMLLLN17PolyTyElimination9benchmarkE_1446(i8*inreg%a7)
%bh=load i8*,i8**%i,align 8
br label%bj
bi:
store i8*null,i8**%e,align 8
br label%bj
bj:
%bk=phi i8*[%a2,%bi],[%bh,%a6]
%bl=icmp eq i8*%bk,null
br i1%bl,label%bm,label%bX
bm:
store i8*null,i8**%i,align 8
%bn=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bo=getelementptr inbounds i8,i8*%bn,i64 16
%bp=bitcast i8*%bo to i8*(i8*,i8*)**
%bq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bp,align 8
%br=bitcast i8*%bn to i8**
%bs=load i8*,i8**%br,align 8
store i8*%bs,i8**%e,align 8
%bt=call i8*@sml_alloc(i32 inreg 20)#0
%bu=getelementptr inbounds i8,i8*%bt,i64 -4
%bv=bitcast i8*%bu to i32*
store i32 1342177296,i32*%bv,align 4
store i8*%bt,i8**%i,align 8
%bw=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bx=bitcast i8*%bt to i8**
store i8*%bw,i8**%bx,align 8
%by=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bz=getelementptr inbounds i8,i8*%bt,i64 8
%bA=bitcast i8*%bz to i8**
store i8*%by,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bt,i64 16
%bC=bitcast i8*%bB to i32*
store i32 3,i32*%bC,align 4
%bD=call i8*@sml_alloc(i32 inreg 28)#0
%bE=getelementptr inbounds i8,i8*%bD,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177304,i32*%bF,align 4
%bG=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bH=bitcast i8*%bD to i8**
store i8*%bG,i8**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bD,i64 8
%bJ=bitcast i8*%bI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15compileDeclListE_1604 to void(...)*),void(...)**%bJ,align 8
%bK=getelementptr inbounds i8,i8*%bD,i64 16
%bL=bitcast i8*%bK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15compileDeclListE_1604 to void(...)*),void(...)**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bD,i64 24
%bN=bitcast i8*%bM to i32*
store i32 -2147483647,i32*%bN,align 4
%bO=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bP=call fastcc i8*%bq(i8*inreg%bO,i8*inreg%bD)
%bQ=getelementptr inbounds i8,i8*%bP,i64 16
%bR=bitcast i8*%bQ to i8*(i8*,i8*)**
%bS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bR,align 8
%bT=bitcast i8*%bP to i8**
%bU=load i8*,i8**%bT,align 8
%bV=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bW=call fastcc i8*%bS(i8*inreg%bU,i8*inreg%bV)
br label%jr
bX:
%bY=bitcast i8*%bk to i8**
%bZ=load i8*,i8**%bY,align 8
%b0=bitcast i8*%bZ to i8**
%b1=load i8*,i8**%b0,align 8
store i8*%b1,i8**%e,align 8
%b2=getelementptr inbounds i8,i8*%bZ,i64 8
%b3=bitcast i8*%b2 to i8**
%b4=load i8*,i8**%b3,align 8
store i8*%b4,i8**%i,align 8
%b5=call fastcc i8*@_SMLFN14BoundTypeVarID3Map7isEmptyE(i32 inreg 1,i32 inreg 8)
%b6=getelementptr inbounds i8,i8*%b5,i64 16
%b7=bitcast i8*%b6 to i8*(i8*,i8*)**
%b8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b7,align 8
%b9=bitcast i8*%b5 to i8**
%ca=load i8*,i8**%b9,align 8
%cb=load i8*,i8**%e,align 8
%cc=call fastcc i8*%b8(i8*inreg%ca,i8*inreg%cb)
%cd=bitcast i8*%cc to i32*
%ce=load i32,i32*%cd,align 4
%cf=icmp eq i32%ce,0
br i1%cf,label%cv,label%cg
cg:
store i8*null,i8**%e,align 8
store i8*null,i8**%i,align 8
%ch=load i8*,i8**%h,align 8
%ci=load i8*,i8**%f,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%f,align 8
%cj=call fastcc i8*@_SMLLLN17PolyTyElimination15compileRecbindsE_1493(i8*inreg%ci,i8*inreg%ch)
store i8*%cj,i8**%e,align 8
%ck=call i8*@sml_alloc(i32 inreg 20)#0
%cl=getelementptr inbounds i8,i8*%ck,i64 -4
%cm=bitcast i8*%cl to i32*
store i32 1342177296,i32*%cm,align 4
%cn=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%co=bitcast i8*%ck to i8**
store i8*%cn,i8**%co,align 8
%cp=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cq=getelementptr inbounds i8,i8*%ck,i64 8
%cr=bitcast i8*%cq to i8**
store i8*%cp,i8**%cr,align 8
%cs=getelementptr inbounds i8,i8*%ck,i64 16
%ct=bitcast i8*%cs to i32*
store i32 3,i32*%ct,align 4
%cu=call fastcc i8*@_SMLFN12TypedCalcCon8TPVALRECE(i8*inreg%ck)
br label%i5
cv:
%cw=load i8*,i8**%h,align 8
%cx=load i8*,i8**%f,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%f,align 8
%cy=call fastcc i8*@_SMLLLN17PolyTyElimination15compileRecbindsE_1493(i8*inreg%cx,i8*inreg%cw)
store i8*%cy,i8**%f,align 8
%cz=call i8*@sml_alloc(i32 inreg 36)#0
%cA=getelementptr inbounds i8,i8*%cz,i64 -4
%cB=bitcast i8*%cA to i32*
store i32 1342177312,i32*%cB,align 4
%cC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cD=bitcast i8*%cz to i8**
store i8*%cC,i8**%cD,align 8
%cE=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cF=getelementptr inbounds i8,i8*%cz,i64 8
%cG=bitcast i8*%cF to i8**
store i8*%cE,i8**%cG,align 8
%cH=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cI=getelementptr inbounds i8,i8*%cz,i64 16
%cJ=bitcast i8*%cI to i8**
store i8*%cH,i8**%cJ,align 8
%cK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cL=getelementptr inbounds i8,i8*%cz,i64 24
%cM=bitcast i8*%cL to i8**
store i8*%cK,i8**%cM,align 8
%cN=getelementptr inbounds i8,i8*%cz,i64 32
%cO=bitcast i8*%cN to i32*
store i32 15,i32*%cO,align 4
%cP=call fastcc i8*@_SMLFN12TypedCalcCon12TPVALPOLYRECE(i8*inreg%cz)
br label%i5
cQ:
%cR=getelementptr inbounds i8,i8*%D,i64 8
%cS=bitcast i8*%cR to i8**
%cT=load i8*,i8**%cS,align 8
%cU=bitcast i8*%cT to i8**
%cV=load i8*,i8**%cU,align 8
%cW=bitcast i8*%cV to i8**
%cX=load i8*,i8**%cW,align 8
%cY=getelementptr inbounds i8,i8*%cV,i64 8
%cZ=bitcast i8*%cY to i8**
%c0=load i8*,i8**%cZ,align 8
store i8*%c0,i8**%e,align 8
%c1=getelementptr inbounds i8,i8*%cT,i64 8
%c2=bitcast i8*%c1 to i8**
%c3=load i8*,i8**%c2,align 8
store i8*%c3,i8**%f,align 8
%c4=load i8*,i8**%c,align 8
%c5=call fastcc i8*@_SMLLLN17PolyTyElimination14compileVarInfoE_1458(i8*inreg%c4,i8*inreg%cX)
store i8*%c5,i8**%g,align 8
%c6=load i8*,i8**%c,align 8
%c7=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%c8=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%c6,i8*inreg%c7)
store i8*%c8,i8**%e,align 8
%c9=call i8*@sml_alloc(i32 inreg 20)#0
%da=getelementptr inbounds i8,i8*%c9,i64 -4
%db=bitcast i8*%da to i32*
store i32 1342177296,i32*%db,align 4
store i8*%c9,i8**%h,align 8
%dc=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dd=bitcast i8*%c9 to i8**
store i8*%dc,i8**%dd,align 8
%de=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%df=getelementptr inbounds i8,i8*%c9,i64 8
%dg=bitcast i8*%df to i8**
store i8*%de,i8**%dg,align 8
%dh=getelementptr inbounds i8,i8*%c9,i64 16
%di=bitcast i8*%dh to i32*
store i32 3,i32*%di,align 4
%dj=call i8*@sml_alloc(i32 inreg 20)#0
%dk=getelementptr inbounds i8,i8*%dj,i64 -4
%dl=bitcast i8*%dk to i32*
store i32 1342177296,i32*%dl,align 4
%dm=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dn=bitcast i8*%dj to i8**
store i8*%dm,i8**%dn,align 8
%do=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dp=getelementptr inbounds i8,i8*%dj,i64 8
%dq=bitcast i8*%dp to i8**
store i8*%do,i8**%dq,align 8
%dr=getelementptr inbounds i8,i8*%dj,i64 16
%ds=bitcast i8*%dr to i32*
store i32 3,i32*%ds,align 4
%dt=call fastcc i8*@_SMLFN12TypedCalcCon5TPVALE(i8*inreg%dj)
br label%i5
du:
%dv=getelementptr inbounds i8,i8*%D,i64 8
%dw=bitcast i8*%dv to i8**
%dx=load i8*,i8**%dw,align 8
%dy=bitcast i8*%dx to i8**
%dz=load i8*,i8**%dy,align 8
store i8*%dz,i8**%e,align 8
%dA=getelementptr inbounds i8,i8*%dx,i64 8
%dB=bitcast i8*%dA to i8**
%dC=load i8*,i8**%dB,align 8
store i8*%dC,i8**%f,align 8
%dD=getelementptr inbounds i8,i8*%dx,i64 16
%dE=bitcast i8*%dD to i8**
%dF=load i8*,i8**%dE,align 8
store i8*%dF,i8**%g,align 8
%dG=getelementptr inbounds i8,i8*%dx,i64 24
%dH=bitcast i8*%dG to i8**
%dI=load i8*,i8**%dH,align 8
store i8*%dI,i8**%h,align 8
%dJ=call i8*@sml_alloc(i32 inreg 20)#0
%dK=getelementptr inbounds i8,i8*%dJ,i64 -4
%dL=bitcast i8*%dK to i32*
store i32 1342177296,i32*%dL,align 4
%dM=load i8*,i8**%e,align 8
%dN=bitcast i8*%dJ to i8**
store i8*%dM,i8**%dN,align 8
%dO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dP=getelementptr inbounds i8,i8*%dJ,i64 8
%dQ=bitcast i8*%dP to i8**
store i8*%dO,i8**%dQ,align 8
%dR=getelementptr inbounds i8,i8*%dJ,i64 16
%dS=bitcast i8*%dR to i32*
store i32 3,i32*%dS,align 4
%dT=load i8*,i8**%c,align 8
%dU=call fastcc i8*@_SMLLLN17PolyTyElimination13compileBtvEnvE_1341(i8*inreg%dT,i8*inreg%dJ)
%dV=bitcast i8*%dU to i8**
%dW=load i8*,i8**%dV,align 8
store i8*%dW,i8**%f,align 8
%dX=getelementptr inbounds i8,i8*%dU,i64 8
%dY=bitcast i8*%dX to i8**
%dZ=load i8*,i8**%dY,align 8
store i8*%dZ,i8**%i,align 8
%d0=load i32*,i32**bitcast(i8**@_SMLZN7Control17verbosePolyTyElimE to i32**),align 8
%d1=load i32,i32*%d0,align 4
%d2=icmp slt i32%d1,1
br i1%d2,label%ef,label%d3
d3:
%d4=call i8*@sml_alloc(i32 inreg 20)#0
%d5=getelementptr inbounds i8,i8*%d4,i64 -4
%d6=bitcast i8*%d5 to i32*
store i32 1342177296,i32*%d6,align 4
%d7=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%d8=bitcast i8*%d4 to i8**
store i8*%d7,i8**%d8,align 8
%d9=load i8*,i8**%i,align 8
%ea=getelementptr inbounds i8,i8*%d4,i64 8
%eb=bitcast i8*%ea to i8**
store i8*%d9,i8**%eb,align 8
%ec=getelementptr inbounds i8,i8*%d4,i64 16
%ed=bitcast i8*%ec to i32*
store i32 3,i32*%ed,align 4
call fastcc void@_SMLLLN17PolyTyElimination9benchmarkE_1446(i8*inreg%d4)
%ee=load i8*,i8**%i,align 8
br label%eg
ef:
store i8*null,i8**%e,align 8
br label%eg
eg:
%eh=phi i8*[%dZ,%ef],[%ee,%d3]
%ei=icmp eq i8*%eh,null
br i1%ei,label%ej,label%eU
ej:
store i8*null,i8**%i,align 8
%ek=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%el=getelementptr inbounds i8,i8*%ek,i64 16
%em=bitcast i8*%el to i8*(i8*,i8*)**
%en=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%em,align 8
%eo=bitcast i8*%ek to i8**
%ep=load i8*,i8**%eo,align 8
store i8*%ep,i8**%e,align 8
%eq=call i8*@sml_alloc(i32 inreg 20)#0
%er=getelementptr inbounds i8,i8*%eq,i64 -4
%es=bitcast i8*%er to i32*
store i32 1342177296,i32*%es,align 4
store i8*%eq,i8**%i,align 8
%et=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%eu=bitcast i8*%eq to i8**
store i8*%et,i8**%eu,align 8
%ev=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ew=getelementptr inbounds i8,i8*%eq,i64 8
%ex=bitcast i8*%ew to i8**
store i8*%ev,i8**%ex,align 8
%ey=getelementptr inbounds i8,i8*%eq,i64 16
%ez=bitcast i8*%ey to i32*
store i32 3,i32*%ez,align 4
%eA=call i8*@sml_alloc(i32 inreg 28)#0
%eB=getelementptr inbounds i8,i8*%eA,i64 -4
%eC=bitcast i8*%eB to i32*
store i32 1342177304,i32*%eC,align 4
%eD=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%eE=bitcast i8*%eA to i8**
store i8*%eD,i8**%eE,align 8
%eF=getelementptr inbounds i8,i8*%eA,i64 8
%eG=bitcast i8*%eF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15compileDeclListE_1603 to void(...)*),void(...)**%eG,align 8
%eH=getelementptr inbounds i8,i8*%eA,i64 16
%eI=bitcast i8*%eH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination15compileDeclListE_1603 to void(...)*),void(...)**%eI,align 8
%eJ=getelementptr inbounds i8,i8*%eA,i64 24
%eK=bitcast i8*%eJ to i32*
store i32 -2147483647,i32*%eK,align 4
%eL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%eM=call fastcc i8*%en(i8*inreg%eL,i8*inreg%eA)
%eN=getelementptr inbounds i8,i8*%eM,i64 16
%eO=bitcast i8*%eN to i8*(i8*,i8*)**
%eP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eO,align 8
%eQ=bitcast i8*%eM to i8**
%eR=load i8*,i8**%eQ,align 8
%eS=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%eT=call fastcc i8*%eP(i8*inreg%eR,i8*inreg%eS)
br label%jr
eU:
%eV=bitcast i8*%eh to i8**
%eW=load i8*,i8**%eV,align 8
%eX=bitcast i8*%eW to i8**
%eY=load i8*,i8**%eX,align 8
store i8*%eY,i8**%e,align 8
%eZ=getelementptr inbounds i8,i8*%eW,i64 8
%e0=bitcast i8*%eZ to i8**
%e1=load i8*,i8**%e0,align 8
store i8*%e1,i8**%i,align 8
%e2=call fastcc i8*@_SMLFN14BoundTypeVarID3Map7isEmptyE(i32 inreg 1,i32 inreg 8)
%e3=getelementptr inbounds i8,i8*%e2,i64 16
%e4=bitcast i8*%e3 to i8*(i8*,i8*)**
%e5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%e4,align 8
%e6=bitcast i8*%e2 to i8**
%e7=load i8*,i8**%e6,align 8
%e8=load i8*,i8**%e,align 8
%e9=call fastcc i8*%e5(i8*inreg%e7,i8*inreg%e8)
%fa=bitcast i8*%e9 to i32*
%fb=load i32,i32*%fa,align 4
%fc=icmp eq i32%fb,0
br i1%fc,label%fs,label%fd
fd:
store i8*null,i8**%e,align 8
store i8*null,i8**%i,align 8
%fe=load i8*,i8**%h,align 8
%ff=load i8*,i8**%f,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%f,align 8
%fg=call fastcc i8*@_SMLLLN17PolyTyElimination18compileFunRecbindsE_1491(i8*inreg%ff,i8*inreg%fe)
store i8*%fg,i8**%e,align 8
%fh=call i8*@sml_alloc(i32 inreg 20)#0
%fi=getelementptr inbounds i8,i8*%fh,i64 -4
%fj=bitcast i8*%fi to i32*
store i32 1342177296,i32*%fj,align 4
%fk=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fl=bitcast i8*%fh to i8**
store i8*%fk,i8**%fl,align 8
%fm=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fn=getelementptr inbounds i8,i8*%fh,i64 8
%fo=bitcast i8*%fn to i8**
store i8*%fm,i8**%fo,align 8
%fp=getelementptr inbounds i8,i8*%fh,i64 16
%fq=bitcast i8*%fp to i32*
store i32 3,i32*%fq,align 4
%fr=call fastcc i8*@_SMLFN12TypedCalcCon9TPFUNDECLE(i8*inreg%fh)
br label%i5
fs:
%ft=load i8*,i8**%h,align 8
%fu=load i8*,i8**%f,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%f,align 8
%fv=call fastcc i8*@_SMLLLN17PolyTyElimination18compileFunRecbindsE_1491(i8*inreg%fu,i8*inreg%ft)
store i8*%fv,i8**%f,align 8
%fw=call i8*@sml_alloc(i32 inreg 36)#0
%fx=getelementptr inbounds i8,i8*%fw,i64 -4
%fy=bitcast i8*%fx to i32*
store i32 1342177312,i32*%fy,align 4
%fz=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fA=bitcast i8*%fw to i8**
store i8*%fz,i8**%fA,align 8
%fB=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%fC=getelementptr inbounds i8,i8*%fw,i64 8
%fD=bitcast i8*%fC to i8**
store i8*%fB,i8**%fD,align 8
%fE=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fF=getelementptr inbounds i8,i8*%fw,i64 16
%fG=bitcast i8*%fF to i8**
store i8*%fE,i8**%fG,align 8
%fH=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fI=getelementptr inbounds i8,i8*%fw,i64 24
%fJ=bitcast i8*%fI to i8**
store i8*%fH,i8**%fJ,align 8
%fK=getelementptr inbounds i8,i8*%fw,i64 32
%fL=bitcast i8*%fK to i32*
store i32 15,i32*%fL,align 4
%fM=call fastcc i8*@_SMLFN12TypedCalcCon13TPPOLYFUNDECLE(i8*inreg%fw)
br label%i5
fN:
%fO=getelementptr inbounds i8,i8*%D,i64 8
%fP=bitcast i8*%fO to i8**
%fQ=load i8*,i8**%fP,align 8
%fR=bitcast i8*%fQ to i8**
%fS=load i8*,i8**%fR,align 8
%fT=getelementptr inbounds i8,i8*%fQ,i64 8
%fU=bitcast i8*%fT to i8**
%fV=load i8*,i8**%fU,align 8
store i8*%fV,i8**%e,align 8
%fW=load i8*,i8**%c,align 8
%fX=call fastcc i8*@_SMLLLN17PolyTyElimination18compileFunRecbindsE_1491(i8*inreg%fW,i8*inreg%fS)
store i8*%fX,i8**%f,align 8
%fY=call i8*@sml_alloc(i32 inreg 20)#0
%fZ=getelementptr inbounds i8,i8*%fY,i64 -4
%f0=bitcast i8*%fZ to i32*
store i32 1342177296,i32*%f0,align 4
%f1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%f2=bitcast i8*%fY to i8**
store i8*%f1,i8**%f2,align 8
%f3=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%f4=getelementptr inbounds i8,i8*%fY,i64 8
%f5=bitcast i8*%f4 to i8**
store i8*%f3,i8**%f5,align 8
%f6=getelementptr inbounds i8,i8*%fY,i64 16
%f7=bitcast i8*%f6 to i32*
store i32 3,i32*%f7,align 4
%f8=call fastcc i8*@_SMLFN12TypedCalcCon9TPFUNDECLE(i8*inreg%fY)
br label%i5
f9:
%ga=getelementptr inbounds i8,i8*%D,i64 8
%gb=bitcast i8*%ga to i8**
%gc=load i8*,i8**%gb,align 8
%gd=call fastcc i8*@_SMLFN12TypedCalcCon11TPEXTERNVARE(i8*inreg%gc)
br label%i5
ge:
%gf=getelementptr inbounds i8,i8*%D,i64 8
%gg=bitcast i8*%gf to i8**
%gh=load i8*,i8**%gg,align 8
%gi=call fastcc i8*@_SMLFN12TypedCalcCon12TPBUILTINEXNE(i8*inreg%gh)
br label%i5
gj:
%gk=getelementptr inbounds i8,i8*%D,i64 8
%gl=bitcast i8*%gk to i8**
%gm=load i8*,i8**%gl,align 8
%gn=call fastcc i8*@_SMLFN12TypedCalcCon11TPEXTERNEXNE(i8*inreg%gm)
br label%i5
go:
%gp=getelementptr inbounds i8,i8*%D,i64 8
%gq=bitcast i8*%gp to i8**
%gr=load i8*,i8**%gq,align 8
%gs=bitcast i8*%gr to i8**
%gt=load i8*,i8**%gs,align 8
%gu=getelementptr inbounds i8,i8*%gr,i64 8
%gv=bitcast i8*%gu to i8**
%gw=load i8*,i8**%gv,align 8
store i8*%gw,i8**%e,align 8
%gx=load i8*,i8**%c,align 8
%gy=call fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1489(i8*inreg%gx,i8*inreg%gt)
store i8*%gy,i8**%f,align 8
%gz=call i8*@sml_alloc(i32 inreg 20)#0
%gA=getelementptr inbounds i8,i8*%gz,i64 -4
%gB=bitcast i8*%gA to i32*
store i32 1342177296,i32*%gB,align 4
%gC=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gD=bitcast i8*%gz to i8**
store i8*%gC,i8**%gD,align 8
%gE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%gF=getelementptr inbounds i8,i8*%gz,i64 8
%gG=bitcast i8*%gF to i8**
store i8*%gE,i8**%gG,align 8
%gH=getelementptr inbounds i8,i8*%gz,i64 16
%gI=bitcast i8*%gH to i32*
store i32 3,i32*%gI,align 4
%gJ=call fastcc i8*@_SMLFN12TypedCalcCon11TPEXPORTVARE(i8*inreg%gz)
br label%i5
gK:
%gL=getelementptr inbounds i8,i8*%D,i64 8
%gM=bitcast i8*%gL to i8**
%gN=load i8*,i8**%gM,align 8
%gO=call fastcc i8*@_SMLFN12TypedCalcCon11TPEXPORTEXNE(i8*inreg%gN)
br label%i5
gP:
%gQ=getelementptr inbounds i8,i8*%D,i64 8
%gR=bitcast i8*%gQ to i8**
%gS=load i8*,i8**%gR,align 8
%gT=bitcast i8*%gS to i8**
%gU=load i8*,i8**%gT,align 8
%gV=bitcast i8*%gU to i8**
%gW=load i8*,i8**%gV,align 8
%gX=getelementptr inbounds i8,i8*%gU,i64 8
%gY=bitcast i8*%gX to i8**
%gZ=load i8*,i8**%gY,align 8
store i8*%gZ,i8**%e,align 8
%g0=getelementptr inbounds i8,i8*%gS,i64 8
%g1=bitcast i8*%g0 to i8**
%g2=load i8*,i8**%g1,align 8
store i8*%g2,i8**%f,align 8
%g3=load i8*,i8**%c,align 8
%g4=call fastcc i8*@_SMLLLN17PolyTyElimination14compileExnInfoE_1463(i8*inreg%g3,i8*inreg%gW)
store i8*%g4,i8**%g,align 8
%g5=call fastcc i8*@_SMLFN5VarID3Map4findE(i32 inreg 1,i32 inreg 8)
%g6=getelementptr inbounds i8,i8*%g5,i64 16
%g7=bitcast i8*%g6 to i8*(i8*,i8*)**
%g8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%g7,align 8
%g9=bitcast i8*%g5 to i8**
%ha=load i8*,i8**%g9,align 8
store i8*%ha,i8**%i,align 8
%hb=load i8*,i8**%c,align 8
%hc=getelementptr inbounds i8,i8*%hb,i64 8
%hd=bitcast i8*%hc to i8**
%he=load i8*,i8**%hd,align 8
%hf=getelementptr inbounds i8,i8*%he,i64 32
%hg=bitcast i8*%hf to i8**
%hh=load i8*,i8**%hg,align 8
store i8*%hh,i8**%h,align 8
%hi=bitcast i8**%e to i32**
%hj=load i32*,i32**%hi,align 8
%hk=load i32,i32*%hj,align 4
%hl=call i8*@sml_alloc(i32 inreg 20)#0
%hm=getelementptr inbounds i8,i8*%hl,i64 -4
%hn=bitcast i8*%hm to i32*
store i32 1342177296,i32*%hn,align 4
%ho=getelementptr inbounds i8,i8*%hl,i64 12
%hp=bitcast i8*%ho to i32*
store i32 0,i32*%hp,align 1
%hq=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hr=bitcast i8*%hl to i8**
store i8*%hq,i8**%hr,align 8
%hs=getelementptr inbounds i8,i8*%hl,i64 8
%ht=bitcast i8*%hs to i32*
store i32%hk,i32*%ht,align 4
%hu=getelementptr inbounds i8,i8*%hl,i64 16
%hv=bitcast i8*%hu to i32*
store i32 1,i32*%hv,align 4
%hw=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%hx=call fastcc i8*%g8(i8*inreg%hw,i8*inreg%hl)
%hy=icmp eq i8*%hx,null
br i1%hy,label%hz,label%hV
hz:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
%hA=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%hA,i8**%c,align 8
%hB=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dl,i64 0,i32 2)to i8*))
store i8*%hB,i8**%d,align 8
%hC=call i8*@sml_alloc(i32 inreg 28)#0
%hD=getelementptr inbounds i8,i8*%hC,i64 -4
%hE=bitcast i8*%hD to i32*
store i32 1342177304,i32*%hE,align 4
store i8*%hC,i8**%e,align 8
%hF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%hG=bitcast i8*%hC to i8**
store i8*%hF,i8**%hG,align 8
%hH=getelementptr inbounds i8,i8*%hC,i64 8
%hI=bitcast i8*%hH to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@di,i64 0,i32 2,i64 0),i8**%hI,align 8
%hJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hK=getelementptr inbounds i8,i8*%hC,i64 16
%hL=bitcast i8*%hK to i8**
store i8*%hJ,i8**%hL,align 8
%hM=getelementptr inbounds i8,i8*%hC,i64 24
%hN=bitcast i8*%hM to i32*
store i32 7,i32*%hN,align 4
%hO=call i8*@sml_alloc(i32 inreg 60)#0
%hP=getelementptr inbounds i8,i8*%hO,i64 -4
%hQ=bitcast i8*%hP to i32*
store i32 1342177336,i32*%hQ,align 4
%hR=getelementptr inbounds i8,i8*%hO,i64 56
%hS=bitcast i8*%hR to i32*
store i32 1,i32*%hS,align 4
%hT=load i8*,i8**%e,align 8
%hU=bitcast i8*%hO to i8**
store i8*%hT,i8**%hU,align 8
call void@sml_raise(i8*inreg%hO)#1
unreachable
hV:
%hW=bitcast i8*%hx to i8**
%hX=load i8*,i8**%hW,align 8
%hY=getelementptr inbounds i8,i8*%hX,i64 16
%hZ=bitcast i8*%hY to i8**
%h0=load i8*,i8**%hZ,align 8
store i8*%h0,i8**%h,align 8
%h1=load i8*,i8**%e,align 8
%h2=bitcast i8*%h1 to i32*
%h3=load i32,i32*%h2,align 4
%h4=getelementptr inbounds i8,i8*%h1,i64 4
%h5=bitcast i8*%h4 to i32*
%h6=load i32,i32*%h5,align 4
%h7=getelementptr inbounds i8,i8*%h1,i64 8
%h8=bitcast i8*%h7 to i8**
%h9=load i8*,i8**%h8,align 8
store i8*%h9,i8**%e,align 8
%ia=call i8*@sml_alloc(i32 inreg 28)#0
%ib=bitcast i8*%ia to i32*
%ic=getelementptr inbounds i8,i8*%ia,i64 -4
%id=bitcast i8*%ic to i32*
store i32 1342177304,i32*%id,align 4
store i32%h3,i32*%ib,align 4
%ie=getelementptr inbounds i8,i8*%ia,i64 4
%if=bitcast i8*%ie to i32*
store i32%h6,i32*%if,align 4
%ig=load i8*,i8**%e,align 8
%ih=getelementptr inbounds i8,i8*%ia,i64 8
%ii=bitcast i8*%ih to i8**
store i8*%ig,i8**%ii,align 8
%ij=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ik=getelementptr inbounds i8,i8*%ia,i64 16
%il=bitcast i8*%ik to i8**
store i8*%ij,i8**%il,align 8
%im=getelementptr inbounds i8,i8*%ia,i64 24
%in=bitcast i8*%im to i32*
store i32 6,i32*%in,align 4
store i8*%ia,i8**%e,align 8
%io=call i8*@sml_alloc(i32 inreg 20)#0
%ip=getelementptr inbounds i8,i8*%io,i64 -4
%iq=bitcast i8*%ip to i32*
store i32 1342177296,i32*%iq,align 4
store i8*%io,i8**%h,align 8
%ir=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%is=bitcast i8*%io to i8**
store i8*%ir,i8**%is,align 8
%it=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%iu=getelementptr inbounds i8,i8*%io,i64 8
%iv=bitcast i8*%iu to i8**
store i8*%it,i8**%iv,align 8
%iw=getelementptr inbounds i8,i8*%io,i64 16
%ix=bitcast i8*%iw to i32*
store i32 3,i32*%ix,align 4
%iy=call i8*@sml_alloc(i32 inreg 20)#0
%iz=getelementptr inbounds i8,i8*%iy,i64 -4
%iA=bitcast i8*%iz to i32*
store i32 1342177296,i32*%iA,align 4
%iB=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%iC=bitcast i8*%iy to i8**
store i8*%iB,i8**%iC,align 8
%iD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%iE=getelementptr inbounds i8,i8*%iy,i64 8
%iF=bitcast i8*%iE to i8**
store i8*%iD,i8**%iF,align 8
%iG=getelementptr inbounds i8,i8*%iy,i64 16
%iH=bitcast i8*%iG to i32*
store i32 3,i32*%iH,align 4
%iI=call fastcc i8*@_SMLFN12TypedCalcCon9TPEXNTAGDE(i8*inreg%iy)
br label%i5
iJ:
%iK=getelementptr inbounds i8,i8*%D,i64 8
%iL=bitcast i8*%iK to i8**
%iM=load i8*,i8**%iL,align 8
%iN=bitcast i8*%iM to i8**
%iO=load i8*,i8**%iN,align 8
%iP=getelementptr inbounds i8,i8*%iM,i64 8
%iQ=bitcast i8*%iP to i8**
%iR=load i8*,i8**%iQ,align 8
store i8*%iR,i8**%e,align 8
%iS=load i8*,i8**%c,align 8
%iT=call fastcc i8*@_SMLLLN17PolyTyElimination14compileExnInfoE_1463(i8*inreg%iS,i8*inreg%iO)
store i8*%iT,i8**%f,align 8
%iU=call i8*@sml_alloc(i32 inreg 20)#0
%iV=getelementptr inbounds i8,i8*%iU,i64 -4
%iW=bitcast i8*%iV to i32*
store i32 1342177296,i32*%iW,align 4
%iX=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%iY=bitcast i8*%iU to i8**
store i8*%iX,i8**%iY,align 8
%iZ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%i0=getelementptr inbounds i8,i8*%iU,i64 8
%i1=bitcast i8*%i0 to i8**
store i8*%iZ,i8**%i1,align 8
%i2=getelementptr inbounds i8,i8*%iU,i64 16
%i3=bitcast i8*%i2 to i32*
store i32 3,i32*%i3,align 4
%i4=call fastcc i8*@_SMLFN12TypedCalcCon5TPEXDE(i8*inreg%iU)
br label%i5
i5:
%i6=phi i8*[%aw,%ab],[%cu,%cg],[%cP,%cv],[%dt,%cQ],[%fr,%fd],[%fM,%fs],[%f8,%fN],[%gd,%f9],[%gi,%ge],[%gn,%gj],[%gJ,%go],[%gO,%gK],[%iI,%hV],[%i4,%iJ]
%i7=bitcast i8*%i6 to i8**
%i8=load i8*,i8**%i7,align 8
store i8*%i8,i8**%e,align 8
%i9=getelementptr inbounds i8,i8*%i6,i64 8
%ja=bitcast i8*%i9 to i8**
%jb=load i8*,i8**%ja,align 8
store i8*%jb,i8**%f,align 8
%jc=call i8*@sml_alloc(i32 inreg 20)#0
%jd=getelementptr inbounds i8,i8*%jc,i64 -4
%je=bitcast i8*%jd to i32*
store i32 1342177296,i32*%je,align 4
store i8*%jc,i8**%g,align 8
%jf=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%jg=bitcast i8*%jc to i8**
store i8*%jf,i8**%jg,align 8
%jh=getelementptr inbounds i8,i8*%jc,i64 8
%ji=bitcast i8*%jh to i8**
store i8*null,i8**%ji,align 8
%jj=getelementptr inbounds i8,i8*%jc,i64 16
%jk=bitcast i8*%jj to i32*
store i32 3,i32*%jk,align 4
%jl=call i8*@sml_alloc(i32 inreg 20)#0
%jm=getelementptr inbounds i8,i8*%jl,i64 -4
%jn=bitcast i8*%jm to i32*
store i32 1342177296,i32*%jn,align 4
%jo=load i8*,i8**%g,align 8
%jp=bitcast i8*%jl to i8**
store i8*%jo,i8**%jp,align 8
%jq=load i8*,i8**%f,align 8
br label%j8
jr:
%js=phi i8*[%eT,%ej],[%bW,%bm]
store i8*%js,i8**%e,align 8
%jt=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ju=getelementptr inbounds i8,i8*%jt,i64 16
%jv=bitcast i8*%ju to i8*(i8*,i8*)**
%jw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jv,align 8
%jx=bitcast i8*%jt to i8**
%jy=load i8*,i8**%jx,align 8
%jz=call fastcc i8*%jw(i8*inreg%jy,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dg,i64 0,i32 2)to i8*))
%jA=getelementptr inbounds i8,i8*%jz,i64 16
%jB=bitcast i8*%jA to i8*(i8*,i8*)**
%jC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jB,align 8
%jD=bitcast i8*%jz to i8**
%jE=load i8*,i8**%jD,align 8
%jF=load i8*,i8**%e,align 8
%jG=call fastcc i8*%jC(i8*inreg%jE,i8*inreg%jF)
store i8*%jG,i8**%f,align 8
%jH=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jI=getelementptr inbounds i8,i8*%jH,i64 16
%jJ=bitcast i8*%jI to i8*(i8*,i8*)**
%jK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jJ,align 8
%jL=bitcast i8*%jH to i8**
%jM=load i8*,i8**%jL,align 8
%jN=call fastcc i8*%jK(i8*inreg%jM,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dh,i64 0,i32 2)to i8*))
%jO=getelementptr inbounds i8,i8*%jN,i64 16
%jP=bitcast i8*%jO to i8*(i8*,i8*)**
%jQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jP,align 8
%jR=bitcast i8*%jN to i8**
%jS=load i8*,i8**%jR,align 8
%jT=load i8*,i8**@_SMLZN12TypedCalcCon8emptyEnvE,align 8
%jU=call fastcc i8*%jQ(i8*inreg%jS,i8*inreg%jT)
%jV=getelementptr inbounds i8,i8*%jU,i64 16
%jW=bitcast i8*%jV to i8*(i8*,i8*)**
%jX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jW,align 8
%jY=bitcast i8*%jU to i8**
%jZ=load i8*,i8**%jY,align 8
%j0=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%j1=call fastcc i8*%jX(i8*inreg%jZ,i8*inreg%j0)
store i8*%j1,i8**%e,align 8
%j2=call i8*@sml_alloc(i32 inreg 20)#0
%j3=getelementptr inbounds i8,i8*%j2,i64 -4
%j4=bitcast i8*%j3 to i32*
store i32 1342177296,i32*%j4,align 4
%j5=load i8*,i8**%f,align 8
%j6=bitcast i8*%j2 to i8**
store i8*%j5,i8**%j6,align 8
%j7=load i8*,i8**%e,align 8
br label%j8
j8:
%j9=phi i8*[%j2,%jr],[%jl,%i5]
%ka=phi i8*[%j7,%jr],[%jq,%i5]
%kb=phi i8*[%j5,%jr],[%jo,%i5]
%kc=getelementptr inbounds i8,i8*%j9,i64 8
%kd=bitcast i8*%kc to i8**
store i8*%ka,i8**%kd,align 8
%ke=getelementptr inbounds i8,i8*%j9,i64 16
%kf=bitcast i8*%ke to i32*
store i32 3,i32*%kf,align 4
store i8*%kb,i8**%e,align 8
store i8*%ka,i8**%f,align 8
%kg=load i8*,i8**%c,align 8
%kh=getelementptr inbounds i8,i8*%kg,i64 8
%ki=bitcast i8*%kh to i8**
%kj=load i8*,i8**%ki,align 8
store i8*%kj,i8**%g,align 8
%kk=call i8*@sml_alloc(i32 inreg 20)#0
%kl=getelementptr inbounds i8,i8*%kk,i64 -4
%km=bitcast i8*%kl to i32*
store i32 1342177296,i32*%km,align 4
%kn=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ko=bitcast i8*%kk to i8**
store i8*%kn,i8**%ko,align 8
%kp=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%kq=getelementptr inbounds i8,i8*%kk,i64 8
%kr=bitcast i8*%kq to i8**
store i8*%kp,i8**%kr,align 8
%ks=getelementptr inbounds i8,i8*%kk,i64 16
%kt=bitcast i8*%ks to i32*
store i32 3,i32*%kt,align 4
%ku=call fastcc i8*@_SMLFN12TypedCalcCon9extendEnvE(i8*inreg%kk)
store i8*%ku,i8**%f,align 8
%kv=load i8*,i8**%c,align 8
%kw=bitcast i8*%kv to i32*
%kx=load i32,i32*%kw,align 4
%ky=getelementptr inbounds i8,i8*%kv,i64 16
%kz=bitcast i8*%ky to i8**
%kA=load i8*,i8**%kz,align 8
store i8*%kA,i8**%g,align 8
%kB=getelementptr inbounds i8,i8*%kv,i64 24
%kC=bitcast i8*%kB to i8**
%kD=load i8*,i8**%kC,align 8
store i8*%kD,i8**%c,align 8
%kE=call i8*@sml_alloc(i32 inreg 36)#0
%kF=bitcast i8*%kE to i32*
%kG=getelementptr inbounds i8,i8*%kE,i64 -4
%kH=bitcast i8*%kG to i32*
store i32 1342177312,i32*%kH,align 4
%kI=getelementptr inbounds i8,i8*%kE,i64 4
%kJ=bitcast i8*%kI to i32*
store i32 0,i32*%kJ,align 1
store i32%kx,i32*%kF,align 4
%kK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%kL=getelementptr inbounds i8,i8*%kE,i64 8
%kM=bitcast i8*%kL to i8**
store i8*%kK,i8**%kM,align 8
%kN=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%kO=getelementptr inbounds i8,i8*%kE,i64 16
%kP=bitcast i8*%kO to i8**
store i8*%kN,i8**%kP,align 8
%kQ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%kR=getelementptr inbounds i8,i8*%kE,i64 24
%kS=bitcast i8*%kR to i8**
store i8*%kQ,i8**%kS,align 8
%kT=getelementptr inbounds i8,i8*%kE,i64 32
%kU=bitcast i8*%kT to i32*
store i32 14,i32*%kU,align 4
%kV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%kW=call fastcc i8*@_SMLLLN17PolyTyElimination15compileDeclListE_1494(i8*inreg%kE,i8*inreg%kV)
%kX=bitcast i8*%kW to i8**
%kY=load i8*,i8**%kX,align 8
store i8*%kY,i8**%c,align 8
%kZ=getelementptr inbounds i8,i8*%kW,i64 8
%k0=bitcast i8*%kZ to i8**
%k1=load i8*,i8**%k0,align 8
store i8*%k1,i8**%d,align 8
%k2=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%k3=getelementptr inbounds i8,i8*%k2,i64 16
%k4=bitcast i8*%k3 to i8*(i8*,i8*)**
%k5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k4,align 8
%k6=bitcast i8*%k2 to i8**
%k7=load i8*,i8**%k6,align 8
store i8*%k7,i8**%f,align 8
%k8=call i8*@sml_alloc(i32 inreg 20)#0
%k9=getelementptr inbounds i8,i8*%k8,i64 -4
%la=bitcast i8*%k9 to i32*
store i32 1342177296,i32*%la,align 4
%lb=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%lc=bitcast i8*%k8 to i8**
store i8*%lb,i8**%lc,align 8
%ld=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%le=getelementptr inbounds i8,i8*%k8,i64 8
%lf=bitcast i8*%le to i8**
store i8*%ld,i8**%lf,align 8
%lg=getelementptr inbounds i8,i8*%k8,i64 16
%lh=bitcast i8*%lg to i32*
store i32 3,i32*%lh,align 4
%li=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%lj=call fastcc i8*%k5(i8*inreg%li,i8*inreg%k8)
store i8*%lj,i8**%c,align 8
%lk=call i8*@sml_alloc(i32 inreg 20)#0
%ll=getelementptr inbounds i8,i8*%lk,i64 -4
%lm=bitcast i8*%ll to i32*
store i32 1342177296,i32*%lm,align 4
%ln=load i8*,i8**%c,align 8
%lo=bitcast i8*%lk to i8**
store i8*%ln,i8**%lo,align 8
%lp=load i8*,i8**%d,align 8
%lq=getelementptr inbounds i8,i8*%lk,i64 8
%lr=bitcast i8*%lq to i8**
store i8*%lp,i8**%lr,align 8
%ls=getelementptr inbounds i8,i8*%lk,i64 16
%lt=bitcast i8*%ls to i32*
store i32 3,i32*%lt,align 4
ret i8*%lk
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10compileExpE_1495(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10compileExpE_1606 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination10compileExpE_1606 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc void@_SMLLLN17PolyTyElimination7compileE_1609(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i8*@_SMLFN9TypedCalc21formatWithType__tpdeclE(i8*inreg%h)
%k=call fastcc i8*@_SMLFN3Bug11prettyPrintE(i8*inreg%j)
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=and i32%n,268435455
%p=icmp eq i32%o,1
br i1%p,label%q,label%r
q:
ret void
r:
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%k)
tail call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@do,i64 0,i32 2,i64 0))
ret void
}
define internal fastcc i32@_SMLLLN17PolyTyElimination7compileE_1612(i8*inreg%a,i32 inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%c,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%f,label%h
f:
%g=bitcast i8*%a to i8**
br label%k
h:
call void@sml_check(i32 inreg%d)
%i=bitcast i8**%c to i8***
%j=load i8**,i8***%i,align 8
br label%k
k:
%l=phi i8**[%j,%h],[%g,%f]
%m=load i8*,i8**%l,align 8
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 4)#0
%t=bitcast i8*%s to i32*
%u=getelementptr inbounds i8,i8*%s,i64 -4
%v=bitcast i8*%u to i32*
store i32 4,i32*%v,align 4
store i32%b,i32*%t,align 4
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=call fastcc i8*%p(i8*inreg%w,i8*inreg%s)
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i32*
%A=load i32,i32*%z,align 4
ret i32%A
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7compileE_1613(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 16
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177296,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%o,i64 12
%s=bitcast i8*%r to i32*
store i32 0,i32*%s,align 1
%t=load i8*,i8**%b,align 8
%u=bitcast i8*%o to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i32*
store i32%k,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 1,i32*%y,align 4
%z=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Set3addE(i8*inreg%o)
ret i8*%z
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7compileE_1616(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=icmp eq i8*%m,null
br i1%q,label%M,label%r
r:
%s=bitcast i8*%m to i32*
%t=load i32,i32*%s,align 4
switch i32%t,label%u[
i32 0,label%aE
i32 1,label%O
i32 2,label%M
]
u:
call void@sml_matchcomp_bug()
%v=load i8*,i8**@_SMLZ5Match,align 8
store i8*%v,i8**%b,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%c,align 8
%z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@ds,i64 0,i32 2,i64 0),i8**%C,align 8
%D=getelementptr inbounds i8,i8*%w,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 60)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177336,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%F,i64 56
%J=bitcast i8*%I to i32*
store i32 1,i32*%J,align 4
%K=load i8*,i8**%c,align 8
%L=bitcast i8*%F to i8**
store i8*%K,i8**%L,align 8
call void@sml_raise(i8*inreg%F)#1
unreachable
M:
%N=load i8*,i8**@_SMLZN14BoundTypeVarID3Set5emptyE,align 8
store i8*%N,i8**%c,align 8
br label%aG
O:
%P=getelementptr inbounds i8,i8*%m,i64 8
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%c,align 8
%U=getelementptr inbounds i8,i8*%R,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=call fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_952(i8*inreg%W)
store i8*%X,i8**%d,align 8
%Y=call fastcc i8*@_SMLFN14BoundTypeVarID3Map6foldliE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
%ae=call fastcc i8*%ab(i8*inreg%ad,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dr,i64 0,i32 2)to i8*))
%af=getelementptr inbounds i8,i8*%ae,i64 16
%ag=bitcast i8*%af to i8*(i8*,i8*)**
%ah=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ag,align 8
%ai=bitcast i8*%ae to i8**
%aj=load i8*,i8**%ai,align 8
%ak=load i8*,i8**@_SMLZN14BoundTypeVarID3Set5emptyE,align 8
%al=call fastcc i8*%ah(i8*inreg%aj,i8*inreg%ak)
%am=getelementptr inbounds i8,i8*%al,i64 16
%an=bitcast i8*%am to i8*(i8*,i8*)**
%ao=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%an,align 8
%ap=bitcast i8*%al to i8**
%aq=load i8*,i8**%ap,align 8
%ar=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%as=call fastcc i8*%ao(i8*inreg%aq,i8*inreg%ar)
store i8*%as,i8**%d,align 8
%at=call i8*@sml_alloc(i32 inreg 20)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177296,i32*%av,align 4
%aw=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ax=bitcast i8*%at to i8**
store i8*%aw,i8**%ax,align 8
%ay=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%az=getelementptr inbounds i8,i8*%at,i64 8
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%at,i64 16
%aC=bitcast i8*%aB to i32*
store i32 3,i32*%aC,align 4
%aD=call fastcc i8*@_SMLFN14BoundTypeVarID3Set5unionE(i8*inreg%at)
store i8*%aD,i8**%c,align 8
br label%aG
aE:
%aF=load i8*,i8**@_SMLZN14BoundTypeVarID3Set5emptyE,align 8
store i8*%aF,i8**%c,align 8
br label%aG
aG:
%aH=call i8*@sml_alloc(i32 inreg 20)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177296,i32*%aJ,align 4
%aK=load i8*,i8**%c,align 8
%aL=bitcast i8*%aH to i8**
store i8*%aK,i8**%aL,align 8
%aM=load i8*,i8**%b,align 8
%aN=getelementptr inbounds i8,i8*%aH,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aH,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 3,i32*%aQ,align 4
%aR=tail call fastcc i8*@_SMLFN14BoundTypeVarID3Set5unionE(i8*inreg%aH)
ret i8*%aR
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7compileE_1619(i8*inreg%a)#2 gc"smlsharp"personality i32(...)*@sml_personality{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=getelementptr inbounds i8,i8*%p,i64 8
%t=bitcast i8*%s to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177288,i32*%y,align 4
store i8*%w,i8**%d,align 8
%z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i32*
store i32 1,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 28)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177304,i32*%F,align 4
%G=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i32(i8*,i32)*@_SMLLLN17PolyTyElimination7compileE_1612 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%D,i64 16
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17PolyTyElimination7compileE_1785 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%D,i64 24
%N=bitcast i8*%M to i32*
store i32 -2147483647,i32*%N,align 4
%O=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Set3mapE(i8*inreg%D)
to label%P unwind label%aL
P:
%Q=getelementptr inbounds i8,i8*%O,i64 16
%R=bitcast i8*%Q to i8*(i8*,i8*)**
%S=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%R,align 8
%T=bitcast i8*%O to i8**
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%b,align 8
%V=invoke fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
to label%W unwind label%aL
W:
%X=getelementptr inbounds i8,i8*%V,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
%aa=bitcast i8*%V to i8**
%ab=load i8*,i8**%aa,align 8
%ac=invoke fastcc i8*%Z(i8*inreg%ab,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dt,i64 0,i32 2)to i8*))
to label%ad unwind label%aL
ad:
%ae=getelementptr inbounds i8,i8*%ac,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ac to i8**
%ai=load i8*,i8**%ah,align 8
%aj=load i8*,i8**@_SMLZN14BoundTypeVarID3Set5emptyE,align 8
%ak=invoke fastcc i8*%ag(i8*inreg%ai,i8*inreg%aj)
to label%al unwind label%aL
al:
%am=getelementptr inbounds i8,i8*%ak,i64 16
%an=bitcast i8*%am to i8*(i8*,i8*)**
%ao=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%an,align 8
%ap=bitcast i8*%ak to i8**
%aq=load i8*,i8**%ap,align 8
%ar=load i8*,i8**%c,align 8
%as=invoke fastcc i8*%ao(i8*inreg%aq,i8*inreg%ar)
to label%at unwind label%aL
at:
%au=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%av=invoke fastcc i8*%S(i8*inreg%au,i8*inreg%as)
to label%aw unwind label%aL
aw:
store i8*%av,i8**%b,align 8
%ax=call i8*@sml_alloc(i32 inreg 28)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177304,i32*%az,align 4
%aA=getelementptr inbounds i8,i8*%ax,i64 12
%aB=bitcast i8*%aA to i32*
store i32 0,i32*%aB,align 1
%aC=load i8*,i8**%b,align 8
%aD=bitcast i8*%ax to i8**
store i8*%aC,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%ax,i64 8
%aF=bitcast i8*%aE to i32*
store i32%r,i32*%aF,align 4
%aG=load i8*,i8**%c,align 8
%aH=getelementptr inbounds i8,i8*%ax,i64 16
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%ax,i64 24
%aK=bitcast i8*%aJ to i32*
store i32 5,i32*%aK,align 4
ret i8*%ax
aL:
%aM=landingpad{i8*,i8*}
catch i8*null
%aN=extractvalue{i8*,i8*}%aM,1
%aO=bitcast i8*%aN to i8**
%aP=load i8*,i8**%aO,align 8
store i8*null,i8**%c,align 8
store i8*%aP,i8**%b,align 8
%aQ=bitcast i8*%aP to i8**
%aR=load i8*,i8**%aQ,align 8
%aS=icmp eq i8*%aR,bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL1307,i64 0,i32 2)to i8*)
br i1%aS,label%aT,label%a8
aT:
%aU=load i8*,i8**@_SMLZN14BoundTypeVarID3Set5emptyE,align 8
store i8*%aU,i8**%b,align 8
%aV=call i8*@sml_alloc(i32 inreg 28)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177304,i32*%aX,align 4
%aY=getelementptr inbounds i8,i8*%aV,i64 12
%aZ=bitcast i8*%aY to i32*
store i32 0,i32*%aZ,align 1
%a0=load i8*,i8**%b,align 8
%a1=bitcast i8*%aV to i8**
store i8*%a0,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aV,i64 8
%a3=bitcast i8*%a2 to i32*
store i32%r,i32*%a3,align 4
%a4=getelementptr inbounds i8,i8*%aV,i64 16
%a5=bitcast i8*%a4 to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@du,i64 0,i32 2)to i8*),i8**%a5,align 8
%a6=getelementptr inbounds i8,i8*%aV,i64 24
%a7=bitcast i8*%a6 to i32*
store i32 5,i32*%a7,align 4
ret i8*%aV
a8:
%a9=call i8*@sml_alloc(i32 inreg 60)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177336,i32*%bb,align 4
%bc=getelementptr inbounds i8,i8*%a9,i64 56
%bd=bitcast i8*%bc to i32*
store i32 1,i32*%bd,align 4
%be=load i8*,i8**%b,align 8
%bf=bitcast i8*%a9 to i8**
store i8*%be,i8**%bf,align 8
call void@sml_raise(i8*inreg%a9)#1
unreachable
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7compileE_1622(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 16
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLL7instMap_1625(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call fastcc i8*@_SMLFN14BoundTypeVarID3Map6insertE(i32 inreg 1,i32 inreg 8)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%e,align 8
%x=bitcast i8**%d to i8***
%y=load i8**,i8***%x,align 8
%z=load i8*,i8**%y,align 8
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%d,align 8
%F=call i8*@sml_alloc(i32 inreg 4)#0
%G=bitcast i8*%F to i32*
%H=getelementptr inbounds i8,i8*%F,i64 -4
%I=bitcast i8*%H to i32*
store i32 4,i32*%I,align 4
store i32%n,i32*%G,align 4
%J=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%K=call fastcc i8*%C(i8*inreg%J,i8*inreg%F)
store i8*%K,i8**%d,align 8
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=getelementptr inbounds i8,i8*%L,i64 12
%P=bitcast i8*%O to i32*
store i32 0,i32*%P,align 1
%Q=load i8*,i8**%c,align 8
%R=bitcast i8*%L to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 8
%T=bitcast i8*%S to i32*
store i32%n,i32*%T,align 4
%U=load i8*,i8**%d,align 8
%V=getelementptr inbounds i8,i8*%L,i64 16
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%L,i64 24
%Y=bitcast i8*%X to i32*
store i32 5,i32*%Y,align 4
%Z=load i8*,i8**%e,align 8
%aa=tail call fastcc i8*%u(i8*inreg%Z,i8*inreg%L)
ret i8*%aa
}
define internal fastcc i8*@_SMLLL8btvKinds_1626(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=icmp eq i8*%a,null
br i1%c,label%h,label%d
d:
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=icmp eq i32%f,1
br i1%g,label%p,label%h
h:
%i=call i8*@sml_alloc(i32 inreg 12)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177288,i32*%k,align 4
%l=load i8*,i8**%b,align 8
%m=bitcast i8*%i to i8**
store i8*%l,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%i,i64 8
%o=bitcast i8*%n to i32*
store i32 1,i32*%o,align 4
ret i8*%i
p:
ret i8*null
}
define internal fastcc i8*@_SMLLL5subst_1628(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 8
%e=bitcast i8*%d to i8**
%f=load i8*,i8**%e,align 8
%g=icmp eq i8*%f,null
br i1%g,label%l,label%h
h:
%i=bitcast i8*%f to i32*
%j=load i32,i32*%i,align 4
%k=icmp eq i32%j,1
br i1%k,label%u,label%l
l:
%m=tail call i8*@sml_alloc(i32 inreg 12)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177288,i32*%p,align 4
store i32 1,i32*%n,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32%c,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%m,i64 8
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 4
ret i8*%m
u:
%v=getelementptr inbounds i8,i8*%f,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
ret i8*%x
}
define internal fastcc i8*@_SMLLL7instEnv_1631(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=icmp eq i8*%m,null
br i1%o,label%K,label%p
p:
%q=bitcast i8*%m to i32*
%r=load i32,i32*%q,align 4
switch i32%r,label%s[
i32 0,label%bZ
i32 1,label%X
i32 2,label%K
]
s:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%t=load i8*,i8**@_SMLZ5Match,align 8
store i8*%t,i8**%c,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%d,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@dB,i64 0,i32 2,i64 0),i8**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 60)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177336,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%D,i64 56
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=load i8*,i8**%d,align 8
%J=bitcast i8*%D to i8**
store i8*%I,i8**%J,align 8
call void@sml_raise(i8*inreg%D)#1
unreachable
K:
store i8*null,i8**%e,align 8
%L=load i8*,i8**@_SMLZN11DynamicKind7topKindE,align 8
store i8*%L,i8**%c,align 8
%M=call i8*@sml_alloc(i32 inreg 20)#0
%N=bitcast i8*%M to i32*
%O=getelementptr inbounds i8,i8*%M,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
%Q=getelementptr inbounds i8,i8*%M,i64 4
%R=bitcast i8*%Q to i32*
store i32 0,i32*%R,align 1
store i32 2,i32*%N,align 4
%S=load i8*,i8**%c,align 8
%T=getelementptr inbounds i8,i8*%M,i64 8
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 16
%W=bitcast i8*%V to i32*
store i32 2,i32*%W,align 4
ret i8*%M
X:
%Y=getelementptr inbounds i8,i8*%m,i64 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%c,align 8
%ad=getelementptr inbounds i8,i8*%aa,i64 8
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%d,align 8
%ag=call fastcc i8*@_SMLFN14BoundTypeVarID3Set5foldlE(i32 inreg 1,i32 inreg 8)
%ah=getelementptr inbounds i8,i8*%ag,i64 16
%ai=bitcast i8*%ah to i8*(i8*,i8*)**
%aj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ai,align 8
%ak=bitcast i8*%ag to i8**
%al=load i8*,i8**%ak,align 8
store i8*%al,i8**%f,align 8
%am=bitcast i8**%e to i8***
%an=load i8**,i8***%am,align 8
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%e,align 8
%ap=call i8*@sml_alloc(i32 inreg 12)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177288,i32*%ar,align 4
store i8*%ap,i8**%g,align 8
%as=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%at=bitcast i8*%ap to i8**
store i8*%as,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%ap,i64 8
%av=bitcast i8*%au to i32*
store i32 1,i32*%av,align 4
%aw=call i8*@sml_alloc(i32 inreg 28)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177304,i32*%ay,align 4
%az=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%aw,i64 8
%aC=bitcast i8*%aB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7instMap_1625 to void(...)*),void(...)**%aC,align 8
%aD=getelementptr inbounds i8,i8*%aw,i64 16
%aE=bitcast i8*%aD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7instMap_1625 to void(...)*),void(...)**%aE,align 8
%aF=getelementptr inbounds i8,i8*%aw,i64 24
%aG=bitcast i8*%aF to i32*
store i32 -2147483647,i32*%aG,align 4
%aH=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aI=call fastcc i8*%aj(i8*inreg%aH,i8*inreg%aw)
%aJ=getelementptr inbounds i8,i8*%aI,i64 16
%aK=bitcast i8*%aJ to i8*(i8*,i8*)**
%aL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aK,align 8
%aM=bitcast i8*%aI to i8**
%aN=load i8*,i8**%aM,align 8
store i8*%aN,i8**%e,align 8
%aO=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%aP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aQ=call fastcc i8*%aL(i8*inreg%aP,i8*inreg%aO)
%aR=getelementptr inbounds i8,i8*%aQ,i64 16
%aS=bitcast i8*%aR to i8*(i8*,i8*)**
%aT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aS,align 8
%aU=bitcast i8*%aQ to i8**
%aV=load i8*,i8**%aU,align 8
%aW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aX=call fastcc i8*%aT(i8*inreg%aV,i8*inreg%aW)
store i8*%aX,i8**%c,align 8
%aY=call fastcc i8*@_SMLFN14BoundTypeVarID3Map10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aZ=getelementptr inbounds i8,i8*%aY,i64 16
%a0=bitcast i8*%aZ to i8*(i8*,i8*)**
%a1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a0,align 8
%a2=bitcast i8*%aY to i8**
%a3=load i8*,i8**%a2,align 8
%a4=call fastcc i8*%a1(i8*inreg%a3,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dz,i64 0,i32 2)to i8*))
%a5=getelementptr inbounds i8,i8*%a4,i64 16
%a6=bitcast i8*%a5 to i8*(i8*,i8*)**
%a7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a6,align 8
%a8=bitcast i8*%a4 to i8**
%a9=load i8*,i8**%a8,align 8
%ba=load i8*,i8**%c,align 8
%bb=call fastcc i8*%a7(i8*inreg%a9,i8*inreg%ba)
store i8*%bb,i8**%e,align 8
%bc=call fastcc i8*@_SMLFN14BoundTypeVarID3Map4mapiE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bd=getelementptr inbounds i8,i8*%bc,i64 16
%be=bitcast i8*%bd to i8*(i8*,i8*)**
%bf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%be,align 8
%bg=bitcast i8*%bc to i8**
%bh=load i8*,i8**%bg,align 8
%bi=call fastcc i8*%bf(i8*inreg%bh,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dA,i64 0,i32 2)to i8*))
%bj=getelementptr inbounds i8,i8*%bi,i64 16
%bk=bitcast i8*%bj to i8*(i8*,i8*)**
%bl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bk,align 8
%bm=bitcast i8*%bi to i8**
%bn=load i8*,i8**%bm,align 8
%bo=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bp=call fastcc i8*%bl(i8*inreg%bn,i8*inreg%bo)
%bq=call fastcc i8*@_SMLFN11TypesBasics10substBTvarE(i8*inreg%bp)
%br=getelementptr inbounds i8,i8*%bq,i64 16
%bs=bitcast i8*%br to i8*(i8*,i8*)**
%bt=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bs,align 8
%bu=bitcast i8*%bq to i8**
%bv=load i8*,i8**%bu,align 8
%bw=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bx=call fastcc i8*%bt(i8*inreg%bv,i8*inreg%bw)
store i8*%bx,i8**%c,align 8
%by=call fastcc i8*@_SMLFN14BoundTypeVarID3Map7isEmptyE(i32 inreg 1,i32 inreg 8)
%bz=getelementptr inbounds i8,i8*%by,i64 16
%bA=bitcast i8*%bz to i8*(i8*,i8*)**
%bB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bA,align 8
%bC=bitcast i8*%by to i8**
%bD=load i8*,i8**%bC,align 8
%bE=load i8*,i8**%e,align 8
%bF=call fastcc i8*%bB(i8*inreg%bD,i8*inreg%bE)
%bG=bitcast i8*%bF to i32*
%bH=load i32,i32*%bG,align 4
%bI=icmp eq i32%bH,0
br i1%bI,label%bV,label%bJ
bJ:
store i8*null,i8**%e,align 8
%bK=call i8*@sml_alloc(i32 inreg 20)#0
%bL=bitcast i8*%bK to i32*
%bM=getelementptr inbounds i8,i8*%bK,i64 -4
%bN=bitcast i8*%bM to i32*
store i32 1342177296,i32*%bN,align 4
%bO=getelementptr inbounds i8,i8*%bK,i64 4
%bP=bitcast i8*%bO to i32*
store i32 0,i32*%bP,align 1
store i32 1,i32*%bL,align 4
%bQ=load i8*,i8**%c,align 8
%bR=getelementptr inbounds i8,i8*%bK,i64 8
%bS=bitcast i8*%bR to i8**
store i8*%bQ,i8**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bK,i64 16
%bU=bitcast i8*%bT to i32*
store i32 2,i32*%bU,align 4
ret i8*%bK
bV:
%bW=load i8*,i8**%e,align 8
%bX=load i8*,i8**%c,align 8
%bY=tail call fastcc i8*@_SMLLLN17PolyTyElimination6instOfE_1329(i8*inreg%bW,i8*inreg%bX)
ret i8*%bY
bZ:
store i8*null,i8**%e,align 8
%b0=getelementptr inbounds i8,i8*%m,i64 8
%b1=bitcast i8*%b0 to i8**
%b2=load i8*,i8**%b1,align 8
store i8*%b2,i8**%c,align 8
%b3=call i8*@sml_alloc(i32 inreg 20)#0
%b4=bitcast i8*%b3 to i32*
%b5=getelementptr inbounds i8,i8*%b3,i64 -4
%b6=bitcast i8*%b5 to i32*
store i32 1342177296,i32*%b6,align 4
%b7=getelementptr inbounds i8,i8*%b3,i64 4
%b8=bitcast i8*%b7 to i32*
store i32 0,i32*%b8,align 1
store i32 2,i32*%b4,align 4
%b9=load i8*,i8**%c,align 8
%ca=getelementptr inbounds i8,i8*%b3,i64 8
%cb=bitcast i8*%ca to i8**
store i8*%b9,i8**%cb,align 8
%cc=getelementptr inbounds i8,i8*%b3,i64 16
%cd=bitcast i8*%cc to i32*
store i32 2,i32*%cd,align 4
ret i8*%b3
}
define internal fastcc i32@_SMLLL7instEnv_1632(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=icmp eq i32%d,0
br i1%e,label%n,label%f
f:
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%a to i32*
%k=load i32,i32*%j,align 4
%l=icmp eq i32%k,%i
%m=zext i1%l to i32
ret i32%m
n:
ret i32 0
}
define internal fastcc i8*@_SMLLL7instEnv_1637(i8*inreg%a)#2 gc"smlsharp"personality i32(...)*@sml_personality{
Y:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%c,align 8
%o=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=call i8*@sml_alloc(i32 inreg 12)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
store i8*%u,i8**%e,align 8
%x=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i32*
store i32 1,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
%E=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7instEnv_1631 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7instEnv_1631 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%B,i64 24
%L=bitcast i8*%K to i32*
store i32 -2147483647,i32*%L,align 4
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=call fastcc i8*%r(i8*inreg%M,i8*inreg%B)
%O=getelementptr inbounds i8,i8*%N,i64 16
%P=bitcast i8*%O to i8*(i8*,i8*)**
%Q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%P,align 8
%R=bitcast i8*%N to i8**
%S=load i8*,i8**%R,align 8
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=call fastcc i8*%Q(i8*inreg%S,i8*inreg%T)
%V=bitcast i8**%b to i8***
br label%W
W:
%X=phi i8*[%fk,%fi],[%U,%Y]
store i8*%X,i8**%b,align 8
%Z=load atomic i32,i32*@sml_check_flag unordered,align 4
%aa=icmp eq i32%Z,0
br i1%aa,label%ad,label%ab
ab:
call void@sml_check(i32 inreg%Z)
%ac=load i8*,i8**%b,align 8
br label%ad
ad:
%ae=phi i8*[%ac,%ab],[%X,%W]
%af=icmp eq i8*%ae,null
br i1%af,label%ag,label%ai
ag:
%ah=phi i8*[null,%ad],[%ak,%ai]
ret i8*%ah
ai:
%aj=bitcast i8*%ae to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%c,align 8
%al=getelementptr inbounds i8,i8*%ae,i64 8
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
%ao=icmp eq i8*%an,null
br i1%ao,label%ag,label%ap
ap:
%aq=bitcast i8*%an to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%b,align 8
%as=getelementptr inbounds i8,i8*%an,i64 8
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%d,align 8
%av=call i8*@sml_alloc(i32 inreg 20)#0
%aw=getelementptr inbounds i8,i8*%av,i64 -4
%ax=bitcast i8*%aw to i32*
store i32 1342177296,i32*%ax,align 4
%ay=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%az=bitcast i8*%av to i8**
store i8*%ay,i8**%az,align 8
%aA=load i8*,i8**%b,align 8
%aB=getelementptr inbounds i8,i8*%av,i64 8
%aC=bitcast i8*%aB to i8**
store i8*%aA,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%av,i64 16
%aE=bitcast i8*%aD to i32*
store i32 3,i32*%aE,align 4
store i8*%av,i8**%b,align 8
br label%aF
aF:
%aG=phi i8*[%av,%ap],[%cE,%cD]
%aH=phi i8*[%ay,%ap],[%cF,%cD]
%aI=load atomic i32,i32*@sml_check_flag unordered,align 4
%aJ=icmp eq i32%aI,0
br i1%aJ,label%aO,label%aK
aK:
call void@sml_check(i32 inreg%aI)
%aL=load i8**,i8***%V,align 8
%aM=load i8*,i8**%aL,align 8
%aN=bitcast i8**%aL to i8*
br label%aO
aO:
%aP=phi i8*[%aN,%aK],[%aG,%aF]
%aQ=phi i8*[%aM,%aK],[%aH,%aF]
%aR=icmp eq i8*%aQ,null
br i1%aR,label%bd,label%aS
aS:
%aT=bitcast i8*%aQ to i32*
%aU=load i32,i32*%aT,align 4
switch i32%aU,label%aV[
i32 1,label%cG
i32 2,label%bh
i32 0,label%bd
]
aV:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%aW=load i8*,i8**@_SMLZ5Match,align 8
store i8*%aW,i8**%b,align 8
%aX=call i8*@sml_alloc(i32 inreg 20)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177296,i32*%aZ,align 4
store i8*%aX,i8**%c,align 8
%a0=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%a1=bitcast i8*%aX to i8**
store i8*%a0,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aX,i64 8
%a3=bitcast i8*%a2 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@dD,i64 0,i32 2,i64 0),i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aX,i64 16
%a5=bitcast i8*%a4 to i32*
store i32 3,i32*%a5,align 4
%a6=call i8*@sml_alloc(i32 inreg 60)#0
%a7=getelementptr inbounds i8,i8*%a6,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32 1342177336,i32*%a8,align 4
%a9=getelementptr inbounds i8,i8*%a6,i64 56
%ba=bitcast i8*%a9 to i32*
store i32 1,i32*%ba,align 4
%bb=load i8*,i8**%c,align 8
%bc=bitcast i8*%a6 to i8**
store i8*%bb,i8**%bc,align 8
call void@sml_raise(i8*inreg%a6)#1
unreachable
bd:
store i8*null,i8**%b,align 8
%be=getelementptr inbounds i8,i8*%aP,i64 8
%bf=bitcast i8*%be to i8**
%bg=load i8*,i8**%bf,align 8
br label%fi
bh:
%bi=getelementptr inbounds i8,i8*%aQ,i64 8
%bj=bitcast i8*%bi to i8**
%bk=load i8*,i8**%bj,align 8
store i8*%bk,i8**%c,align 8
store i8*null,i8**%b,align 8
%bl=getelementptr inbounds i8,i8*%aP,i64 8
%bm=bitcast i8*%bl to i8**
%bn=load i8*,i8**%bm,align 8
%bo=icmp eq i8*%bn,null
br i1%bo,label%bK,label%bp
bp:
%bq=bitcast i8*%bn to i32*
%br=load i32,i32*%bq,align 4
switch i32%br,label%bs[
i32 1,label%cb
i32 2,label%bL
i32 0,label%bK
]
bs:
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
call void@sml_matchcomp_bug()
%bt=load i8*,i8**@_SMLZ5Match,align 8
store i8*%bt,i8**%b,align 8
%bu=call i8*@sml_alloc(i32 inreg 20)#0
%bv=getelementptr inbounds i8,i8*%bu,i64 -4
%bw=bitcast i8*%bv to i32*
store i32 1342177296,i32*%bw,align 4
store i8*%bu,i8**%c,align 8
%bx=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%by=bitcast i8*%bu to i8**
store i8*%bx,i8**%by,align 8
%bz=getelementptr inbounds i8,i8*%bu,i64 8
%bA=bitcast i8*%bz to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@dD,i64 0,i32 2,i64 0),i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bu,i64 16
%bC=bitcast i8*%bB to i32*
store i32 3,i32*%bC,align 4
%bD=call i8*@sml_alloc(i32 inreg 60)#0
%bE=getelementptr inbounds i8,i8*%bD,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177336,i32*%bF,align 4
%bG=getelementptr inbounds i8,i8*%bD,i64 56
%bH=bitcast i8*%bG to i32*
store i32 1,i32*%bH,align 4
%bI=load i8*,i8**%c,align 8
%bJ=bitcast i8*%bD to i8**
store i8*%bI,i8**%bJ,align 8
call void@sml_raise(i8*inreg%bD)#1
unreachable
bK:
store i8*null,i8**%c,align 8
br label%fi
bL:
%bM=getelementptr inbounds i8,i8*%bn,i64 8
%bN=bitcast i8*%bM to i8**
%bO=load i8*,i8**%bN,align 8
store i8*%bO,i8**%b,align 8
%bP=call i8*@sml_alloc(i32 inreg 20)#0
%bQ=getelementptr inbounds i8,i8*%bP,i64 -4
%bR=bitcast i8*%bQ to i32*
store i32 1342177296,i32*%bR,align 4
%bS=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bT=bitcast i8*%bP to i8**
store i8*%bS,i8**%bT,align 8
%bU=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bV=getelementptr inbounds i8,i8*%bP,i64 8
%bW=bitcast i8*%bV to i8**
store i8*%bU,i8**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bP,i64 16
%bY=bitcast i8*%bX to i32*
store i32 3,i32*%bY,align 4
%bZ=call fastcc i8*@_SMLFN16DynamicKindUtils7lubKindE(i8*inreg%bP)
store i8*%bZ,i8**%b,align 8
%b0=call i8*@sml_alloc(i32 inreg 20)#0
%b1=bitcast i8*%b0 to i32*
%b2=getelementptr inbounds i8,i8*%b0,i64 -4
%b3=bitcast i8*%b2 to i32*
store i32 1342177296,i32*%b3,align 4
%b4=getelementptr inbounds i8,i8*%b0,i64 4
%b5=bitcast i8*%b4 to i32*
store i32 0,i32*%b5,align 1
store i32 2,i32*%b1,align 4
%b6=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%b7=getelementptr inbounds i8,i8*%b0,i64 8
%b8=bitcast i8*%b7 to i8**
store i8*%b6,i8**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b0,i64 16
%ca=bitcast i8*%b9 to i32*
store i32 2,i32*%ca,align 4
br label%fi
cb:
%cc=getelementptr inbounds i8,i8*%bn,i64 8
%cd=bitcast i8*%cc to i8**
%ce=load i8*,i8**%cd,align 8
store i8*%ce,i8**%b,align 8
%cf=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%cg=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ch=call fastcc i8*@_SMLLLN17PolyTyElimination6instOfE_1329(i8*inreg%cf,i8*inreg%cg)
store i8*%ch,i8**%b,align 8
%ci=call i8*@sml_alloc(i32 inreg 20)#0
%cj=getelementptr inbounds i8,i8*%ci,i64 -4
%ck=bitcast i8*%cj to i32*
store i32 1342177296,i32*%ck,align 4
store i8*%ci,i8**%e,align 8
%cl=getelementptr inbounds i8,i8*%ci,i64 4
%cm=bitcast i8*%cl to i32*
store i32 0,i32*%cm,align 1
%cn=bitcast i8*%ci to i32*
store i32 2,i32*%cn,align 4
%co=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cp=getelementptr inbounds i8,i8*%ci,i64 8
%cq=bitcast i8*%cp to i8**
store i8*%co,i8**%cq,align 8
%cr=getelementptr inbounds i8,i8*%ci,i64 16
%cs=bitcast i8*%cr to i32*
store i32 2,i32*%cs,align 4
%ct=call i8*@sml_alloc(i32 inreg 20)#0
%cu=getelementptr inbounds i8,i8*%ct,i64 -4
%cv=bitcast i8*%cu to i32*
store i32 1342177296,i32*%cv,align 4
%cw=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cx=bitcast i8*%ct to i8**
store i8*%cw,i8**%cx,align 8
%cy=load i8*,i8**%b,align 8
%cz=getelementptr inbounds i8,i8*%ct,i64 8
%cA=bitcast i8*%cz to i8**
store i8*%cy,i8**%cA,align 8
%cB=getelementptr inbounds i8,i8*%ct,i64 16
%cC=bitcast i8*%cB to i32*
store i32 3,i32*%cC,align 4
store i8*%ct,i8**%b,align 8
br label%cD
cD:
%cE=phi i8*[%ct,%cb],[%ds,%da],[%e8,%e1]
%cF=phi i8*[%cw,%cb],[%dv,%da],[%fb,%e1]
br label%aF
cG:
%cH=getelementptr inbounds i8,i8*%aQ,i64 8
%cI=bitcast i8*%cH to i8**
%cJ=load i8*,i8**%cI,align 8
store i8*%cJ,i8**%c,align 8
store i8*null,i8**%b,align 8
%cK=getelementptr inbounds i8,i8*%aP,i64 8
%cL=bitcast i8*%cK to i8**
%cM=load i8*,i8**%cL,align 8
%cN=icmp eq i8*%cM,null
br i1%cN,label%c9,label%cO
cO:
%cP=bitcast i8*%cM to i32*
%cQ=load i32,i32*%cP,align 4
switch i32%cQ,label%cR[
i32 1,label%dC
i32 2,label%da
i32 0,label%c9
]
cR:
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
call void@sml_matchcomp_bug()
%cS=load i8*,i8**@_SMLZ5Match,align 8
store i8*%cS,i8**%b,align 8
%cT=call i8*@sml_alloc(i32 inreg 20)#0
%cU=getelementptr inbounds i8,i8*%cT,i64 -4
%cV=bitcast i8*%cU to i32*
store i32 1342177296,i32*%cV,align 4
store i8*%cT,i8**%c,align 8
%cW=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%cX=bitcast i8*%cT to i8**
store i8*%cW,i8**%cX,align 8
%cY=getelementptr inbounds i8,i8*%cT,i64 8
%cZ=bitcast i8*%cY to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@dD,i64 0,i32 2,i64 0),i8**%cZ,align 8
%c0=getelementptr inbounds i8,i8*%cT,i64 16
%c1=bitcast i8*%c0 to i32*
store i32 3,i32*%c1,align 4
%c2=call i8*@sml_alloc(i32 inreg 60)#0
%c3=getelementptr inbounds i8,i8*%c2,i64 -4
%c4=bitcast i8*%c3 to i32*
store i32 1342177336,i32*%c4,align 4
%c5=getelementptr inbounds i8,i8*%c2,i64 56
%c6=bitcast i8*%c5 to i32*
store i32 1,i32*%c6,align 4
%c7=load i8*,i8**%c,align 8
%c8=bitcast i8*%c2 to i8**
store i8*%c7,i8**%c8,align 8
call void@sml_raise(i8*inreg%c2)#1
unreachable
c9:
store i8*null,i8**%c,align 8
br label%fi
da:
%db=getelementptr inbounds i8,i8*%cM,i64 8
%dc=bitcast i8*%db to i8**
%dd=load i8*,i8**%dc,align 8
store i8*%dd,i8**%b,align 8
%de=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%df=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dg=call fastcc i8*@_SMLLLN17PolyTyElimination6instOfE_1329(i8*inreg%de,i8*inreg%df)
store i8*%dg,i8**%c,align 8
%dh=call i8*@sml_alloc(i32 inreg 20)#0
%di=getelementptr inbounds i8,i8*%dh,i64 -4
%dj=bitcast i8*%di to i32*
store i32 1342177296,i32*%dj,align 4
store i8*%dh,i8**%e,align 8
%dk=getelementptr inbounds i8,i8*%dh,i64 4
%dl=bitcast i8*%dk to i32*
store i32 0,i32*%dl,align 1
%dm=bitcast i8*%dh to i32*
store i32 2,i32*%dm,align 4
%dn=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%do=getelementptr inbounds i8,i8*%dh,i64 8
%dp=bitcast i8*%do to i8**
store i8*%dn,i8**%dp,align 8
%dq=getelementptr inbounds i8,i8*%dh,i64 16
%dr=bitcast i8*%dq to i32*
store i32 2,i32*%dr,align 4
%ds=call i8*@sml_alloc(i32 inreg 20)#0
%dt=getelementptr inbounds i8,i8*%ds,i64 -4
%du=bitcast i8*%dt to i32*
store i32 1342177296,i32*%du,align 4
%dv=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dw=bitcast i8*%ds to i8**
store i8*%dv,i8**%dw,align 8
%dx=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dy=getelementptr inbounds i8,i8*%ds,i64 8
%dz=bitcast i8*%dy to i8**
store i8*%dx,i8**%dz,align 8
%dA=getelementptr inbounds i8,i8*%ds,i64 16
%dB=bitcast i8*%dA to i32*
store i32 3,i32*%dB,align 4
store i8*%ds,i8**%b,align 8
br label%cD
dC:
%dD=getelementptr inbounds i8,i8*%cM,i64 8
%dE=bitcast i8*%dD to i8**
%dF=load i8*,i8**%dE,align 8
store i8*%dF,i8**%b,align 8
%dG=call i8*@sml_alloc(i32 inreg 20)#0
%dH=getelementptr inbounds i8,i8*%dG,i64 -4
%dI=bitcast i8*%dH to i32*
store i32 1342177296,i32*%dI,align 4
store i8*%dG,i8**%e,align 8
%dJ=load i8*,i8**%c,align 8
%dK=bitcast i8*%dG to i8**
store i8*%dJ,i8**%dK,align 8
%dL=load i8*,i8**%b,align 8
%dM=getelementptr inbounds i8,i8*%dG,i64 8
%dN=bitcast i8*%dM to i8**
store i8*%dL,i8**%dN,align 8
%dO=getelementptr inbounds i8,i8*%dG,i64 16
%dP=bitcast i8*%dO to i32*
store i32 3,i32*%dP,align 4
%dQ=call i8*@sml_alloc(i32 inreg 8)#0
%dR=getelementptr inbounds i8,i8*%dQ,i64 -4
%dS=bitcast i8*%dR to i32*
store i32 805306376,i32*%dS,align 4
store i8*%dQ,i8**%f,align 8
%dT=bitcast i8*%dQ to i64*
store i64 0,i64*%dT,align 1
%dU=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
to label%dV unwind label%eu
dV:
%dW=load i8*,i8**%f,align 8
%dX=bitcast i8*%dW to i8**
call void@sml_write(i8*inreg%dW,i8**inreg%dX,i8*inreg%dU)#0
%dY=load i8*,i8**%e,align 8
%dZ=load i8*,i8**%f,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%d0=invoke fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_672(i8*inreg%dZ,i8*inreg%dY)
to label%d1 unwind label%eu
d1:
store i8*%d0,i8**%e,align 8
%d2=invoke fastcc i8*@_SMLFN14BoundTypeVarID3Map6foldliE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
to label%d3 unwind label%eu
d3:
%d4=getelementptr inbounds i8,i8*%d2,i64 16
%d5=bitcast i8*%d4 to i8*(i8*,i8*)**
%d6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d5,align 8
%d7=bitcast i8*%d2 to i8**
%d8=load i8*,i8**%d7,align 8
%d9=invoke fastcc i8*%d6(i8*inreg%d8,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dC,i64 0,i32 2)to i8*))
to label%ea unwind label%eu
ea:
%eb=getelementptr inbounds i8,i8*%d9,i64 16
%ec=bitcast i8*%eb to i8*(i8*,i8*)**
%ed=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ec,align 8
%ee=bitcast i8*%d9 to i8**
%ef=load i8*,i8**%ee,align 8
store i8*%ef,i8**%f,align 8
%eg=call i8*@sml_alloc(i32 inreg 4)#0
%eh=bitcast i8*%eg to i32*
%ei=getelementptr inbounds i8,i8*%eg,i64 -4
%ej=bitcast i8*%ei to i32*
store i32 4,i32*%ej,align 4
store i32 1,i32*%eh,align 4
%ek=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%el=invoke fastcc i8*%ed(i8*inreg%ek,i8*inreg%eg)
to label%em unwind label%eu
em:
%en=getelementptr inbounds i8,i8*%el,i64 16
%eo=bitcast i8*%en to i8*(i8*,i8*)**
%ep=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eo,align 8
%eq=bitcast i8*%el to i8**
%er=load i8*,i8**%eq,align 8
%es=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%et=invoke fastcc i8*%ep(i8*inreg%er,i8*inreg%es)
to label%eL unwind label%eu
eu:
%ev=landingpad{i8*,i8*}
catch i8*null
%ew=extractvalue{i8*,i8*}%ev,1
%ex=bitcast i8*%ew to i8**
%ey=load i8*,i8**%ex,align 8
store i8*null,i8**%f,align 8
store i8*%ey,i8**%e,align 8
%ez=bitcast i8*%ey to i8**
%eA=load i8*,i8**%ez,align 8
%eB=icmp eq i8*%eA,bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL652,i64 0,i32 2)to i8*)
br i1%eB,label%eC,label%eD
eC:
store i8*null,i8**%e,align 8
br label%e1
eD:
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%b,align 8
%eE=call i8*@sml_alloc(i32 inreg 60)#0
%eF=getelementptr inbounds i8,i8*%eE,i64 -4
%eG=bitcast i8*%eF to i32*
store i32 1342177336,i32*%eG,align 4
%eH=getelementptr inbounds i8,i8*%eE,i64 56
%eI=bitcast i8*%eH to i32*
store i32 1,i32*%eI,align 4
%eJ=load i8*,i8**%e,align 8
%eK=bitcast i8*%eE to i8**
store i8*%eJ,i8**%eK,align 8
call void@sml_raise(i8*inreg%eE)#1
unreachable
eL:
%eM=bitcast i8*%et to i32*
%eN=load i32,i32*%eM,align 4
%eO=icmp eq i32%eN,0
br i1%eO,label%e1,label%eP
eP:
store i8*null,i8**%b,align 8
%eQ=call i8*@sml_alloc(i32 inreg 20)#0
%eR=bitcast i8*%eQ to i32*
%eS=getelementptr inbounds i8,i8*%eQ,i64 -4
%eT=bitcast i8*%eS to i32*
store i32 1342177296,i32*%eT,align 4
%eU=getelementptr inbounds i8,i8*%eQ,i64 4
%eV=bitcast i8*%eU to i32*
store i32 0,i32*%eV,align 1
store i32 1,i32*%eR,align 4
%eW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%eX=getelementptr inbounds i8,i8*%eQ,i64 8
%eY=bitcast i8*%eX to i8**
store i8*%eW,i8**%eY,align 8
%eZ=getelementptr inbounds i8,i8*%eQ,i64 16
%e0=bitcast i8*%eZ to i32*
store i32 2,i32*%e0,align 4
br label%fi
e1:
%e2=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%e3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%e4=call fastcc i8*@_SMLLLN17PolyTyElimination6instOfE_1329(i8*inreg%e2,i8*inreg%e3)
store i8*%e4,i8**%c,align 8
%e5=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%e6=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%e7=call fastcc i8*@_SMLLLN17PolyTyElimination6instOfE_1329(i8*inreg%e5,i8*inreg%e6)
store i8*%e7,i8**%b,align 8
%e8=call i8*@sml_alloc(i32 inreg 20)#0
%e9=getelementptr inbounds i8,i8*%e8,i64 -4
%fa=bitcast i8*%e9 to i32*
store i32 1342177296,i32*%fa,align 4
%fb=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%fc=bitcast i8*%e8 to i8**
store i8*%fb,i8**%fc,align 8
%fd=load i8*,i8**%b,align 8
%fe=getelementptr inbounds i8,i8*%e8,i64 8
%ff=bitcast i8*%fe to i8**
store i8*%fd,i8**%ff,align 8
%fg=getelementptr inbounds i8,i8*%e8,i64 16
%fh=bitcast i8*%fg to i32*
store i32 3,i32*%fh,align 4
store i8*%e8,i8**%b,align 8
br label%cD
fi:
%fj=phi i8*[%b0,%bL],[%eQ,%eP],[%aQ,%bK],[%aQ,%c9],[%bg,%bd]
store i8*%fj,i8**%b,align 8
%fk=call i8*@sml_alloc(i32 inreg 20)#0
%fl=getelementptr inbounds i8,i8*%fk,i64 -4
%fm=bitcast i8*%fl to i32*
store i32 1342177296,i32*%fm,align 4
%fn=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%fo=bitcast i8*%fk to i8**
store i8*%fn,i8**%fo,align 8
%fp=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fq=getelementptr inbounds i8,i8*%fk,i64 8
%fr=bitcast i8*%fq to i8**
store i8*%fp,i8**%fr,align 8
%fs=getelementptr inbounds i8,i8*%fk,i64 16
%ft=bitcast i8*%fs to i32*
store i32 3,i32*%ft,align 4
br label%W
}
define fastcc i8*@_SMLFN17PolyTyElimination7compileE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call i8*@sml_alloc(i32 inreg 8)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 805306376,i32*%l,align 4
store i8*%j,i8**%c,align 8
%m=bitcast i8*%j to i64*
store i64 0,i64*%m,align 1
%n=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%o to i8**
call void@sml_write(i8*inreg%o,i8**inreg%p,i8*inreg%n)#0
%q=load i8*,i8**@_SMLZN12TypedCalcCon8emptyEnvE,align 8
store i8*%q,i8**%d,align 8
%r=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 0,i32 inreg 4)
store i8*%r,i8**%e,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=load i8*,i8**%b,align 8
%D=load i8*,i8**%c,align 8
store i8*null,i8**%b,align 8
%E=call fastcc i8*@_SMLLLN17PolyTyElimination15analyzeDeclListE_1100(i8*inreg%D,i8*inreg%s,i8*inreg%C)
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%b,align 8
%H=load i32*,i32**bitcast(i8**@_SMLZN7Control17verbosePolyTyElimE to i32**),align 8
%I=load i32,i32*%H,align 4
%J=icmp slt i32%I,2
br i1%J,label%Z,label%K
K:
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[37x i8]}>,<{[4x i8],i32,[37x i8]}>*@dn,i64 0,i32 2,i64 0))
%L=call fastcc i8*@_SMLFN4List3appE(i32 inreg 1,i32 inreg 8)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=call fastcc i8*%O(i8*inreg%Q,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dp,i64 0,i32 2)to i8*))
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=load i8*,i8**%b,align 8
%Y=call fastcc i8*%U(i8*inreg%W,i8*inreg%X)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[35x i8]}>,<{[4x i8],i32,[35x i8]}>*@dq,i64 0,i32 2,i64 0))
br label%Z
Z:
%aa=bitcast i8**%c to i8***
%ab=load i8**,i8***%aa,align 8
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%c,align 8
%ad=call fastcc i8*@_SMLFN9UnionFind4findE(i32 inreg 1,i32 inreg 8)
store i8*%ad,i8**%d,align 8
%ae=call fastcc i8*@_SMLFN14BoundTypeVarID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%af=getelementptr inbounds i8,i8*%ae,i64 16
%ag=bitcast i8*%af to i8*(i8*,i8*)**
%ah=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ag,align 8
%ai=bitcast i8*%ae to i8**
%aj=load i8*,i8**%ai,align 8
%ak=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%al=call fastcc i8*%ah(i8*inreg%aj,i8*inreg%ak)
%am=getelementptr inbounds i8,i8*%al,i64 16
%an=bitcast i8*%am to i8*(i8*,i8*)**
%ao=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%an,align 8
%ap=bitcast i8*%al to i8**
%aq=load i8*,i8**%ap,align 8
%ar=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%as=call fastcc i8*%ao(i8*inreg%aq,i8*inreg%ar)
%at=call fastcc i8*@_SMLLLN17PolyTyElimination8traverseE_1322(i32 inreg 0,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dv,i64 0,i32 2)to i8*),i8*inreg%as)
store i8*%at,i8**%c,align 8
%au=load i32*,i32**bitcast(i8**@_SMLZN7Control17verbosePolyTyElimE to i32**),align 8
%av=load i32,i32*%au,align 4
%aw=icmp slt i32%av,2
br i1%aw,label%aP,label%ax
ax:
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@dw,i64 0,i32 2,i64 0))
%ay=call fastcc i8*@_SMLFN14BoundTypeVarID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%az=getelementptr inbounds i8,i8*%ay,i64 16
%aA=bitcast i8*%az to i8*(i8*,i8*)**
%aB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aA,align 8
%aC=bitcast i8*%ay to i8**
%aD=load i8*,i8**%aC,align 8
%aE=call fastcc i8*%aB(i8*inreg%aD,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dx,i64 0,i32 2)to i8*))
%aF=getelementptr inbounds i8,i8*%aE,i64 16
%aG=bitcast i8*%aF to i8*(i8*,i8*)**
%aH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aG,align 8
%aI=bitcast i8*%aE to i8**
%aJ=load i8*,i8**%aI,align 8
%aK=load i8*,i8**%c,align 8
%aL=call fastcc i8*%aH(i8*inreg%aJ,i8*inreg%aK)
%aM=call fastcc i8*@_SMLFN14PolyTyInstance19format__instancesMapE(i8*inreg%aL)
%aN=call fastcc i8*@_SMLFN3Bug11prettyPrintE(i8*inreg%aM)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%aN)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[37x i8]}>,<{[4x i8],i32,[37x i8]}>*@dy,i64 0,i32 2,i64 0))
%aO=load i8*,i8**%c,align 8
br label%aP
aP:
%aQ=phi i8*[%at,%Z],[%aO,%ax]
store i8*null,i8**%c,align 8
%aR=call fastcc i8*@_SMLLLN17PolyTyElimination8traverseE_1322(i32 inreg 8,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dE,i64 0,i32 2)to i8*),i8*inreg%aQ)
store i8*%aR,i8**%c,align 8
%aS=load i32*,i32**bitcast(i8**@_SMLZN7Control17verbosePolyTyElimE to i32**),align 8
%aT=load i32,i32*%aS,align 4
%aU=icmp slt i32%aT,2
br i1%aU,label%a1,label%aV
aV:
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@dF,i64 0,i32 2,i64 0))
%aW=load i8*,i8**%c,align 8
%aX=call fastcc i8*@_SMLFN14PolyTyInstance14format__instMapE(i8*inreg%aW)
%aY=call fastcc i8*@_SMLFN3Bug11prettyPrintE(i8*inreg%aX)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%aY)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[37x i8]}>,<{[4x i8],i32,[37x i8]}>*@dG,i64 0,i32 2,i64 0))
%aZ=load i32*,i32**bitcast(i8**@_SMLZN7Control17verbosePolyTyElimE to i32**),align 8
%a0=load i32,i32*%aZ,align 4
br label%a1
a1:
%a2=phi i32[%aT,%aP],[%a0,%aV]
%a3=icmp slt i32%a2,1
br i1%a3,label%a5,label%a4
a4:
store i32 0,i32*@dW,align 8
store i32 0,i32*@dX,align 8
store i32 0,i32*@dY,align 8
store i32 0,i32*@dZ,align 8
store i32 0,i32*@d0,align 8
store i32 0,i32*@d1,align 8
store i32 0,i32*@d2,align 8
store i32 0,i32*@d3,align 8
store i32 0,i32*@d4,align 8
store i32 0,i32*@d5,align 8
store i32 0,i32*@d6,align 8
br label%a5
a5:
%a6=call fastcc i32@_SMLFN9DummyTyID8generateE(i32 inreg 0)
%a7=load i8*,i8**@_SMLZN12TypedCalcCon8emptyEnvE,align 8
store i8*%a7,i8**%d,align 8
%a8=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
store i8*%a8,i8**%e,align 8
%a9=call i8*@sml_alloc(i32 inreg 36)#0
%ba=bitcast i8*%a9 to i32*
%bb=getelementptr inbounds i8,i8*%a9,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177312,i32*%bc,align 4
%bd=getelementptr inbounds i8,i8*%a9,i64 4
%be=bitcast i8*%bd to i32*
store i32 0,i32*%be,align 1
store i32%a6,i32*%ba,align 4
%bf=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bg=getelementptr inbounds i8,i8*%a9,i64 8
%bh=bitcast i8*%bg to i8**
store i8*%bf,i8**%bh,align 8
%bi=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bj=getelementptr inbounds i8,i8*%a9,i64 16
%bk=bitcast i8*%bj to i8**
store i8*%bi,i8**%bk,align 8
%bl=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bm=getelementptr inbounds i8,i8*%a9,i64 24
%bn=bitcast i8*%bm to i8**
store i8*%bl,i8**%bn,align 8
%bo=getelementptr inbounds i8,i8*%a9,i64 32
%bp=bitcast i8*%bo to i32*
store i32 14,i32*%bp,align 4
%bq=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%br=call fastcc i8*@_SMLLLN17PolyTyElimination15compileDeclListE_1494(i8*inreg%a9,i8*inreg%bq)
%bs=bitcast i8*%br to i8**
%bt=load i8*,i8**%bs,align 8
store i8*%bt,i8**%b,align 8
%bu=load i32*,i32**bitcast(i8**@_SMLZN7Control17verbosePolyTyElimE to i32**),align 8
%bv=load i32,i32*%bu,align 4
%bw=icmp slt i32%bv,1
br i1%bw,label%dN,label%bx
bx:
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[26x i8]}>,<{[4x i8],i32,[26x i8]}>*@dH,i64 0,i32 2,i64 0))
%by=load i32,i32*@dW,align 8
%bz=load i32,i32*@dX,align 8
%bA=add nsw i32%bz,%by
%bB=load i32,i32*@d6,align 8
%bC=add nsw i32%bA,%bB
%bD=load i32,i32*@d5,align 8
%bE=add nsw i32%bC,%bD
%bF=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%bE)
store i8*%bF,i8**%c,align 8
%bG=call i8*@sml_alloc(i32 inreg 20)#0
%bH=getelementptr inbounds i8,i8*%bG,i64 -4
%bI=bitcast i8*%bH to i32*
store i32 1342177296,i32*%bI,align 4
%bJ=bitcast i8*%bG to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[32x i8]}>,<{[4x i8],i32,[32x i8]}>*@dI,i64 0,i32 2,i64 0),i8**%bJ,align 8
%bK=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bL=getelementptr inbounds i8,i8*%bG,i64 8
%bM=bitcast i8*%bL to i8**
store i8*%bK,i8**%bM,align 8
%bN=getelementptr inbounds i8,i8*%bG,i64 16
%bO=bitcast i8*%bN to i32*
store i32 3,i32*%bO,align 4
%bP=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%bG)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%bP)
%bQ=load i32,i32*@dW,align 8
%bR=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%bQ)
store i8*%bR,i8**%c,align 8
%bS=call i8*@sml_alloc(i32 inreg 20)#0
%bT=getelementptr inbounds i8,i8*%bS,i64 -4
%bU=bitcast i8*%bT to i32*
store i32 1342177296,i32*%bU,align 4
%bV=bitcast i8*%bS to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[15x i8]}>,<{[4x i8],i32,[15x i8]}>*@dJ,i64 0,i32 2,i64 0),i8**%bV,align 8
%bW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bX=getelementptr inbounds i8,i8*%bS,i64 8
%bY=bitcast i8*%bX to i8**
store i8*%bW,i8**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bS,i64 16
%b0=bitcast i8*%bZ to i32*
store i32 3,i32*%b0,align 4
%b1=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%bS)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%b1)
%b2=load i32,i32*@dY,align 8
%b3=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%b2)
store i8*%b3,i8**%c,align 8
%b4=call i8*@sml_alloc(i32 inreg 20)#0
%b5=getelementptr inbounds i8,i8*%b4,i64 -4
%b6=bitcast i8*%b5 to i32*
store i32 1342177296,i32*%b6,align 4
%b7=bitcast i8*%b4 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@dK,i64 0,i32 2,i64 0),i8**%b7,align 8
%b8=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b9=getelementptr inbounds i8,i8*%b4,i64 8
%ca=bitcast i8*%b9 to i8**
store i8*%b8,i8**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b4,i64 16
%cc=bitcast i8*%cb to i32*
store i32 3,i32*%cc,align 4
%cd=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%b4)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%cd)
%ce=load i32,i32*@dZ,align 8
%cf=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%ce)
store i8*%cf,i8**%c,align 8
%cg=call i8*@sml_alloc(i32 inreg 20)#0
%ch=getelementptr inbounds i8,i8*%cg,i64 -4
%ci=bitcast i8*%ch to i32*
store i32 1342177296,i32*%ci,align 4
%cj=bitcast i8*%cg to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[16x i8]}>,<{[4x i8],i32,[16x i8]}>*@dL,i64 0,i32 2,i64 0),i8**%cj,align 8
%ck=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cl=getelementptr inbounds i8,i8*%cg,i64 8
%cm=bitcast i8*%cl to i8**
store i8*%ck,i8**%cm,align 8
%cn=getelementptr inbounds i8,i8*%cg,i64 16
%co=bitcast i8*%cn to i32*
store i32 3,i32*%co,align 4
%cp=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%cg)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%cp)
%cq=load i32,i32*@d0,align 8
%cr=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%cq)
store i8*%cr,i8**%c,align 8
%cs=call i8*@sml_alloc(i32 inreg 20)#0
%ct=getelementptr inbounds i8,i8*%cs,i64 -4
%cu=bitcast i8*%ct to i32*
store i32 1342177296,i32*%cu,align 4
%cv=bitcast i8*%cs to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@dM,i64 0,i32 2,i64 0),i8**%cv,align 8
%cw=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cx=getelementptr inbounds i8,i8*%cs,i64 8
%cy=bitcast i8*%cx to i8**
store i8*%cw,i8**%cy,align 8
%cz=getelementptr inbounds i8,i8*%cs,i64 16
%cA=bitcast i8*%cz to i32*
store i32 3,i32*%cA,align 4
%cB=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%cs)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%cB)
%cC=load i32,i32*@d1,align 8
%cD=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%cC)
store i8*%cD,i8**%c,align 8
%cE=call i8*@sml_alloc(i32 inreg 20)#0
%cF=getelementptr inbounds i8,i8*%cE,i64 -4
%cG=bitcast i8*%cF to i32*
store i32 1342177296,i32*%cG,align 4
%cH=bitcast i8*%cE to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@dN,i64 0,i32 2,i64 0),i8**%cH,align 8
%cI=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cJ=getelementptr inbounds i8,i8*%cE,i64 8
%cK=bitcast i8*%cJ to i8**
store i8*%cI,i8**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cE,i64 16
%cM=bitcast i8*%cL to i32*
store i32 3,i32*%cM,align 4
%cN=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%cE)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%cN)
%cO=load i32,i32*@d2,align 8
%cP=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%cO)
store i8*%cP,i8**%c,align 8
%cQ=call i8*@sml_alloc(i32 inreg 20)#0
%cR=getelementptr inbounds i8,i8*%cQ,i64 -4
%cS=bitcast i8*%cR to i32*
store i32 1342177296,i32*%cS,align 4
%cT=bitcast i8*%cQ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@dO,i64 0,i32 2,i64 0),i8**%cT,align 8
%cU=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cV=getelementptr inbounds i8,i8*%cQ,i64 8
%cW=bitcast i8*%cV to i8**
store i8*%cU,i8**%cW,align 8
%cX=getelementptr inbounds i8,i8*%cQ,i64 16
%cY=bitcast i8*%cX to i32*
store i32 3,i32*%cY,align 4
%cZ=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%cQ)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%cZ)
%c0=load i32,i32*@d3,align 8
%c1=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%c0)
store i8*%c1,i8**%c,align 8
%c2=call i8*@sml_alloc(i32 inreg 20)#0
%c3=getelementptr inbounds i8,i8*%c2,i64 -4
%c4=bitcast i8*%c3 to i32*
store i32 1342177296,i32*%c4,align 4
%c5=bitcast i8*%c2 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@dP,i64 0,i32 2,i64 0),i8**%c5,align 8
%c6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%c7=getelementptr inbounds i8,i8*%c2,i64 8
%c8=bitcast i8*%c7 to i8**
store i8*%c6,i8**%c8,align 8
%c9=getelementptr inbounds i8,i8*%c2,i64 16
%da=bitcast i8*%c9 to i32*
store i32 3,i32*%da,align 4
%db=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%c2)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%db)
%dc=load i32,i32*@d4,align 8
%dd=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%dc)
store i8*%dd,i8**%c,align 8
%de=call i8*@sml_alloc(i32 inreg 20)#0
%df=getelementptr inbounds i8,i8*%de,i64 -4
%dg=bitcast i8*%df to i32*
store i32 1342177296,i32*%dg,align 4
%dh=bitcast i8*%de to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@dQ,i64 0,i32 2,i64 0),i8**%dh,align 8
%di=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dj=getelementptr inbounds i8,i8*%de,i64 8
%dk=bitcast i8*%dj to i8**
store i8*%di,i8**%dk,align 8
%dl=getelementptr inbounds i8,i8*%de,i64 16
%dm=bitcast i8*%dl to i32*
store i32 3,i32*%dm,align 4
%dn=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%de)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%dn)
%do=load i32,i32*@d5,align 8
%dp=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%do)
store i8*%dp,i8**%c,align 8
%dq=call i8*@sml_alloc(i32 inreg 20)#0
%dr=getelementptr inbounds i8,i8*%dq,i64 -4
%ds=bitcast i8*%dr to i32*
store i32 1342177296,i32*%ds,align 4
%dt=bitcast i8*%dq to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@dR,i64 0,i32 2,i64 0),i8**%dt,align 8
%du=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dv=getelementptr inbounds i8,i8*%dq,i64 8
%dw=bitcast i8*%dv to i8**
store i8*%du,i8**%dw,align 8
%dx=getelementptr inbounds i8,i8*%dq,i64 16
%dy=bitcast i8*%dx to i32*
store i32 3,i32*%dy,align 4
%dz=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%dq)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%dz)
%dA=load i32,i32*@d6,align 8
%dB=call fastcc i8*@_SMLFN5Int328toStringE(i32 inreg%dA)
store i8*%dB,i8**%c,align 8
%dC=call i8*@sml_alloc(i32 inreg 20)#0
%dD=getelementptr inbounds i8,i8*%dC,i64 -4
%dE=bitcast i8*%dD to i32*
store i32 1342177296,i32*%dE,align 4
%dF=bitcast i8*%dC to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[17x i8]}>,<{[4x i8],i32,[17x i8]}>*@dS,i64 0,i32 2,i64 0),i8**%dF,align 8
%dG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dH=getelementptr inbounds i8,i8*%dC,i64 8
%dI=bitcast i8*%dH to i8**
store i8*%dG,i8**%dI,align 8
%dJ=getelementptr inbounds i8,i8*%dC,i64 16
%dK=bitcast i8*%dJ to i32*
store i32 3,i32*%dK,align 4
%dL=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%dC)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg%dL)
call fastcc void@_SMLFN6TextIO5printE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[26x i8]}>,<{[4x i8],i32,[26x i8]}>*@dT,i64 0,i32 2,i64 0))
%dM=load i8*,i8**%b,align 8
br label%dN
dN:
%dO=phi i8*[%bt,%a5],[%dM,%bx]
ret i8*%dO
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination5touchE_1656(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination5touchE_637(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination5touchE_1657(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLLN17PolyTyElimination5touchE_639(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10equalUnionE_1661(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17PolyTyElimination10equalUnionE_655(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10equalUnionE_1662(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination10equalUnionE_657(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination9equalListE_1663(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17PolyTyElimination9equalListE_661(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLL6subst3_1666(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLL6subst3_856(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLL6subst3_1667(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLL6subst3_860(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_1668(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17PolyTyElimination7equalTyE_867(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLL5subst_1669(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLL5subst_871(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_1670(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_873(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_1671(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLLN17PolyTyElimination7equalTyE_875(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_1672(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17PolyTyElimination7equalTyE_876(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18equalOverloadMatchE_1673(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17PolyTyElimination18equalOverloadMatchE_893(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18equalOverloadMatchE_1674(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination18equalOverloadMatchE_900(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination9equalKindE_1675(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17PolyTyElimination9equalKindE_915(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_1677(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination7equalTyE_673(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18equalOprimSelectorE_1680(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination18equalOprimSelectorE_676(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15equalConstraintE_1681(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination15equalConstraintE_677(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination5equalE_1684(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLLN17PolyTyElimination5equalE_930(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_1688(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination11getIdsUnionE_945(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_1691(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_993(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_1692(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_998(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_1693(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_1014(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination19getIdsOverloadMatchE_1694(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination19getIdsOverloadMatchE_1017(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_1695(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination8getIdsTyE_952(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination19getIdsOprimSelectorE_1697(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination19getIdsOprimSelectorE_954(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10getIdsKindE_1698(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination10getIdsKindE_955(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination16getIdsConstraintE_1699(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination16getIdsConstraintE_956(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination6exportE_1700(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLLN17PolyTyElimination6exportE_1021(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination13analyzeBtvEnvE_1712(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination13analyzeBtvEnvE_1063(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzePatE_1714(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1717(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1718(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1719(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
%e=getelementptr inbounds i8,i8*%d,i64 8
%f=bitcast i8*%e to i8**
%g=load i8*,i8**%f,align 8
ret i8*%g
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1720(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1721(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1722(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1723(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1724(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1260(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination10analyzeExpE_1725(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLLN17PolyTyElimination10analyzeExpE_1266(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLL8matchTys_1726(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLL8matchTys_1727(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLL8matchTys_1279(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination16analyzeMatchListE_1728(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination16analyzeMatchListE_1281(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18analyzeFunRecbindsE_1729(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15analyzeRecbindsE_1730(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLL3get_1738(i8*inreg%a,i8*inreg%b)#5 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLL3get_1316(i8*inreg%b)
unreachable
}
define internal fastcc i8*@_SMLLL7getById_1739(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLL7getById_1313(i8*inreg%a,i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination6instOfE_1741(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i32@_SMLLLN17PolyTyElimination6instOfE_1324(i8*inreg%a,i32 inreg%d)
%f=tail call i8*@sml_alloc(i32 inreg 4)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 4,i32*%i,align 4
store i32%e,i32*%g,align 4
ret i8*%f
}
define internal fastcc i8*@_SMLLL5subst_1745(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLL5subst_1424(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLL6envTmp_1746(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLL3env_1747(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination13compileBtvEnvE_1748(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17PolyTyElimination13compileBtvEnvE_1432(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18compileCodeEntryTyE_1749(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLLN17PolyTyElimination18compileCodeEntryTyE_1435(i8*inreg%a,i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLL13dynamicKindOf_1758(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLL13dynamicKindOf_1438(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination9benchmarkE_1759(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination9benchmarkE_1440(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination9benchmarkE_1760(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination9benchmarkE_1442(i8*inreg%b)
ret i8*null
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination9benchmarkE_1761(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=load i32,i32*@d5,align 8
%d=add nsw i32%c,1
store i32%d,i32*@d5,align 8
%e=tail call i8*@sml_alloc(i32 inreg 4)#0
%f=bitcast i8*%e to i32*
%g=getelementptr inbounds i8,i8*%e,i64 -4
%h=bitcast i8*%g to i32*
store i32 4,i32*%h,align 4
store i32 0,i32*%f,align 4
ret i8*%e
}
define internal fastcc i8*@_SMLLL10oldInstMap_1772(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLL10oldInstMap_1578(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination18compileFunRecbindsE_1773(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15compileRecbindsE_1774(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15compileDeclListE_1775(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination15compileDeclListE_1776(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination15compileDeclListE_1597(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7compileE_1784(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLLN17PolyTyElimination7compileE_1609(i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7compileE_1785(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i32@_SMLLLN17PolyTyElimination7compileE_1612(i8*inreg%a,i32 inreg%d)
%f=tail call i8*@sml_alloc(i32 inreg 4)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 4,i32*%i,align 4
store i32%e,i32*%g,align 4
ret i8*%f
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7compileE_1786(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination7compileE_1613(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7compileE_1787(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination7compileE_1616(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7compileE_1788(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17PolyTyElimination7compileE_1619(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7compileE_1789(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 16
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLL8btvKinds_1790(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLL8btvKinds_1626(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLL5subst_1791(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLL5subst_1628(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLL7instEnv_1792(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
q:
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i32*
%e=load i32,i32*%d,align 4
%f=icmp eq i32%e,0
br i1%f,label%o,label%g
g:
%h=getelementptr inbounds i8,i8*%b,i64 4
%i=bitcast i8*%h to i32*
%j=load i32,i32*%i,align 4
%k=bitcast i8*%b to i32*
%l=load i32,i32*%k,align 4
%m=icmp eq i32%l,%j
%n=zext i1%m to i32
br label%o
o:
%p=phi i32[%n,%g],[0,%q]
%r=tail call i8*@sml_alloc(i32 inreg 4)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 4,i32*%u,align 4
store i32%p,i32*%s,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLL7instEnv_1793(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLL7instEnv_1637(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17PolyTyElimination7compileE_1794(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17PolyTyElimination7compileE(i8*inreg%b)
ret i8*%c
}
declare void@llvm.memset.p0i8.i64(i8*,i8,i64,i1)#0
attributes#0={nounwind}
attributes#1={noreturn}
attributes#2={uwtable}
attributes#3={noreturn nounwind}
attributes#4={nounwind uwtable}
attributes#5={noreturn uwtable}
